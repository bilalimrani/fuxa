(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["main"], {

/***/ "../package.json":
/*!***********************!*\
  !*** ../package.json ***!
  \***********************/
/*! exports provided: name, version, keywords, author, description, repository, scripts, dependencies, devDependencies, default */
/***/ (function (module) {

            module.exports = { "name": "fuxa", "version": "1.1.01-487", "keywords": [], "author": "frangoteam <4frango@gmail.com>", "description": "Web-based Process Visualization (SCADA/HMI) software", "repository": { "type": "git", "url": "https://github.com/frangoteam/FUXA.git" }, "scripts": { "ng": "ng", "start": "ng serve", "demo": "ng serve -c demo", "client": "ng serve -c client", "build": "ng build", "test": "ng test", "lint": "ng lint", "e2e": "ng e2e" }, "dependencies": { "@angular/animations": "7.2.15", "@angular/cdk": "7.3.7", "@angular/common": "7.2.0", "@angular/compiler": "7.2.0", "@angular/core": "7.2.0", "@angular/forms": "7.2.0", "@angular/http": "7.2.0", "@angular/material": "7.3.7", "@angular/platform-browser": "7.2.0", "@angular/platform-browser-dynamic": "7.2.0", "@angular/router": "7.2.0", "@ngx-translate/core": "11.0.1", "@ngx-translate/http-loader": "4.0.0", "angular-gridster2": "7.2.0", "angular2-draggable": "^2.3.2", "bcryptjs": "^2.4.3", "body-parser": "^1.19.0", "core-js": "^2.5.4", "file-saver": "2.0.5", "hammerjs": "^2.0.8", "material-design-icons": "^3.0.1", "ng5-slider": "^1.2.0", "ngx-color-picker": "^11.0.0", "ngx-toastr": "10.1.0", "panzoom": "^9.4.2", "rxjs": "~6.3.3", "socket.io-client": "^2.4.0", "uplot": "1.6.15", "tslib": "^1.9.0", "zone.js": "~0.8.26" }, "devDependencies": { "@angular-devkit/build-angular": "~0.13.0", "@angular/cli": "~7.3.10", "@angular/compiler-cli": "~7.2.0", "@angular/language-service": "~7.2.0", "@types/node": "~8.9.4", "@types/jasmine": "~2.8.8", "@types/jasminewd2": "~2.0.3", "codelyzer": "~4.5.0", "jasmine-core": "~2.99.1", "jasmine-spec-reporter": "~4.2.1", "karma": "~4.0.0", "karma-chrome-launcher": "~2.2.0", "karma-coverage-istanbul-reporter": "~2.0.1", "karma-jasmine": "~1.1.2", "karma-jasmine-html-reporter": "^0.2.2", "protractor": "~5.4.0", "ts-node": "~7.0.0", "tslint": "~5.11.0", "typescript": "~3.2.2" } };

            /***/
}),

/***/ "./$$_lazy_route_resource lazy recursive":
/*!******************************************************!*\
  !*** ./$$_lazy_route_resource lazy namespace object ***!
  \******************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            function webpackEmptyAsyncContext(req) {
                // Here Promise.resolve().then() is used instead of new Promise() to prevent
                // uncaught exception popping up in devtools
                return Promise.resolve().then(function () {
                    var e = new Error("Cannot find module '" + req + "'");
                    e.code = 'MODULE_NOT_FOUND';
                    throw e;
                });
            }
            webpackEmptyAsyncContext.keys = function () { return []; };
            webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
            module.exports = webpackEmptyAsyncContext;
            webpackEmptyAsyncContext.id = "./$$_lazy_route_resource lazy recursive";

            /***/
}),

/***/ "./app/_config/theme.config.ts":
/*!*************************************!*\
  !*** ./app/_config/theme.config.ts ***!
  \*************************************/
/*! exports provided: THEMES */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "THEMES", function () { return THEMES; });
            var THEMES = {
                default: {
                    headerBackground: 'hsl(0, 0%, 100%)',
                    headerColor: 'rgba(33,33,33,0.92)',
                    headerBorder: '#f9f9f9',
                    toolboxBackground: '#FBFBFB',
                    toolboxColor: '#000000',
                    toolboxBorder: '#F1F3F4',
                    toolboxPanelBackgroung: '#f9f9f9',
                    toolboxButton: '#545454',
                    sidenavBackgroung: '#f9f9f9',
                    toolboxItemActiveBackgroung: '#3059af',
                    toolboxItemActiveColor: '#FFFFFF',
                    toolboxFlyColor: '#000000',
                    footZoomBackground: '#E4E4E4',
                    footZoomBackgroundHover: '#CDCDCD',
                    footZoomColor: '#000000',
                    svgEditRulersBackground: '#f9f9f9',
                    svgEditRulersColor: '#000000',
                    svgEditWorkareaBackground: '#e4e4e4',
                    svgEditWorkareaContextMenu: '#e4e4e4',
                    svgEditWorkareaContextColor: '#000000',
                    formInputBackground: '#f1f3f4',
                    formExtInputBackground: '#fdfdfd',
                    formInputColor: '#000000',
                    formInputReadonlyBackground: '#f1f3f4',
                    formInputBorderFocus: '#ccc',
                    formInputBackgroundFocus: '#FFFFFF',
                    formSliderBackground: '#f1f3f4',
                    formSeparatorColor: '#e0e0e0',
                    formBorder: '#F1F3F4',
                    setupSeparatorColor: '#ccc',
                    workPanelBackground: '#FFFFFF',
                    mapBorderColor: '#3C3C3C',
                    formExtBackground: '#f1f3f4',
                    formInputExtBackground: '#FFFFFF',
                },
                dark: {
                    headerBackground: '#333333',
                    headerColor: 'rgba(255,255,255,1)',
                    headerBorder: '#252526',
                    toolboxBackground: '#252526',
                    toolboxColor: '#FFFFFF',
                    toolboxBorder: 'rgba(33,33,33,0.92)',
                    toolboxPanelBackgroung: '#252526',
                    toolboxButton: '##313131',
                    sidenavBackgroung: '#252526',
                    toolboxItemActiveBackgroung: '#3059af',
                    toolboxItemActiveColor: '#FFFFFF',
                    toolboxFlyColor: '#FFFFFF',
                    footZoomBackground: '#212121',
                    footZoomBackgroundHover: '#161616',
                    footZoomColor: '#FFFFFF',
                    svgEditRulersBackground: '#2f2f2f',
                    svgEditRulersColor: '#A4A4A4',
                    svgEditWorkareaBackground: '#434343',
                    svgEditWorkareaContextMenu: '#212121',
                    svgEditWorkareaContextColor: '#FFFFFF',
                    formInputBackground: '#37373D',
                    formExtInputBackground: '#2d2d2d',
                    formInputColor: '#FFFFFF',
                    formInputReadonlyBackground: '#37373D',
                    formInputBorderFocus: '#1177BB',
                    formInputBackgroundFocus: '#37373D',
                    formSliderBackground: '#37373D',
                    formSeparatorColor: '#37373D',
                    formBorder: 'rgba(33,33,33,0.92)',
                    setupSeparatorColor: '#808080',
                    workPanelBackground: '#424242',
                    mapBorderColor: '#333333',
                    formExtBackground: '#37373D',
                    formInputExtBackground: '#424242',
                }
            };


            /***/
}),

/***/ "./app/_directives/dialog-draggable.directive.ts":
/*!*******************************************************!*\
  !*** ./app/_directives/dialog-draggable.directive.ts ***!
  \*******************************************************/
/*! exports provided: DialogDraggableDirective */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DialogDraggableDirective", function () { return DialogDraggableDirective; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "../node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "../node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators_takeUntil__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators/takeUntil */ "../node_modules/rxjs-compat/_esm5/operators/takeUntil.js");
/* harmony import */ var rxjs_add_observable_fromEvent__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/add/observable/fromEvent */ "../node_modules/rxjs-compat/_esm5/add/observable/fromEvent.js");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };





            var DialogDraggableDirective = /** @class */ (function () {
                function DialogDraggableDirective(matDialogRef, container) {
                    this.matDialogRef = matDialogRef;
                    this.container = container;
                }
                DialogDraggableDirective.prototype.ngOnInit = function () {
                };
                DialogDraggableDirective.prototype.ngAfterViewInit = function () {
                    var dialogType = this.matDialogRef.componentInstance.constructor;
                    // const cachedValue = this.positionCache.get(dialogType);
                    this.offset = this._getOffset();
                    // this._updatePosition(this.offset.y, this.offset.x);
                    // this.matDialogRef.beforeClose().pipe(take(1))
                    //   .subscribe(() => this.positionCache.set(dialogType, this.offset));
                };
                DialogDraggableDirective.prototype.onMouseDown = function (event) {
                    var _this = this;
                    this.offset = this._getOffset();
                    this.mouseStart = { x: event.pageX, y: event.pageY };
                    var mouseup$ = rxjs__WEBPACK_IMPORTED_MODULE_2__["Observable"].fromEvent(document, 'mouseup');
                    // this._subscription = mouseup$.subscribe(() => this.onMouseup());
                    var mousemove$ = rxjs__WEBPACK_IMPORTED_MODULE_2__["Observable"].fromEvent(document, 'mousemove')
                        .pipe(Object(rxjs_operators_takeUntil__WEBPACK_IMPORTED_MODULE_3__["takeUntil"])(mouseup$))
                        .subscribe(function (e) { return _this.onMouseMove(e); });
                    // this._subscription.add(mousemove$);
                };
                DialogDraggableDirective.prototype.onMouseMove = function (event) {
                    this.mouseDelta = { x: (event.pageX - this.mouseStart.x), y: (event.pageY - this.mouseStart.y) };
                    this._updatePosition(this.offset.y + this.mouseDelta.y, this.offset.x + this.mouseDelta.x);
                };
                DialogDraggableDirective.prototype.onMouseup = function () {
                    // if (this._subscription) {
                    //   this._subscription.unsubscribe();
                    //   this._subscription = undefined;
                    // }
                    if (this.mouseDelta) {
                        this.offset.x += this.mouseDelta.x;
                        this.offset.y += this.mouseDelta.y;
                    }
                };
                DialogDraggableDirective.prototype._updatePosition = function (top, left) {
                    this.matDialogRef.updatePosition({
                        top: top + 'px',
                        left: left + 'px'
                    });
                };
                DialogDraggableDirective.prototype._getOffset = function () {
                    var box = this.container['_elementRef'].nativeElement.getBoundingClientRect();
                    return {
                        x: box.left + pageXOffset,
                        y: box.top + pageYOffset
                    };
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('mousedown', ['$event']),
                    __metadata("design:type", Function),
                    __metadata("design:paramtypes", [MouseEvent]),
                    __metadata("design:returntype", void 0)
                ], DialogDraggableDirective.prototype, "onMouseDown", null);
                DialogDraggableDirective = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
                        selector: '[mat-dialog-draggable]'
                    }),
                    __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialogRef"],
                    _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialogContainer"]])
                ], DialogDraggableDirective);
                return DialogDraggableDirective;
            }());



            /***/
}),

/***/ "./app/_directives/lazyFor.directive.ts":
/*!**********************************************!*\
  !*** ./app/_directives/lazyFor.directive.ts ***!
  \**********************************************/
/*! exports provided: LazyForDirective */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LazyForDirective", function () { return LazyForDirective; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };

            var LazyForDirective = /** @class */ (function () {
                function LazyForDirective(vcr, tpl, iterableDiffers) {
                    this.vcr = vcr;
                    this.tpl = tpl;
                    this.iterableDiffers = iterableDiffers;
                    this.list = [];
                    this.initialized = false;
                    this.firstUpdate = true;
                    this.lastChangeTriggeredByScroll = false;
                }
                Object.defineProperty(LazyForDirective.prototype, "lazyForOf", {
                    set: function (list) {
                        this.list = list;
                        if (list) {
                            this.differ = this.iterableDiffers.find(list).create();
                            if (this.initialized) {
                                this.update();
                            }
                        }
                    },
                    enumerable: true,
                    configurable: true
                });
                LazyForDirective.prototype.ngOnInit = function () {
                    var _this = this;
                    this.templateElem = this.vcr.element.nativeElement;
                    this.lazyForContainer = this.templateElem.parentElement;
                    //Adding an event listener will trigger ngDoCheck whenever the event fires so we don't actually need to call
                    //update here.
                    this.lazyForContainer.addEventListener('scroll', function () {
                        _this.lastChangeTriggeredByScroll = true;
                    });
                    this.initialized = true;
                };
                LazyForDirective.prototype.ngDoCheck = function () {
                    if (this.differ && Array.isArray(this.list)) {
                        if (this.lastChangeTriggeredByScroll) {
                            this.update();
                            this.lastChangeTriggeredByScroll = false;
                        }
                        else {
                            var changes = this.differ.diff(this.list);
                            if (changes !== null) {
                                this.update();
                            }
                        }
                    }
                };
                /**
                 * List update
                 *
                 * @returns {void}
                 */
                LazyForDirective.prototype.update = function () {
                    //Can't run the first update unless there is an element in the list
                    if (this.list.length === 0) {
                        this.vcr.clear();
                        if (!this.firstUpdate) {
                            this.beforeListElem.style.height = '0';
                            this.afterListElem.style.height = '0';
                        }
                        return;
                    }
                    if (this.firstUpdate) {
                        this.onFirstUpdate();
                    }
                    var listHeight = this.lazyForContainer.clientHeight;
                    var scrollTop = this.lazyForContainer.scrollTop;
                    //The height of anything inside the container but above the lazyFor content
                    var fixedHeaderHeight = (this.beforeListElem.getBoundingClientRect().top - this.beforeListElem.scrollTop) -
                        (this.lazyForContainer.getBoundingClientRect().top - this.lazyForContainer.scrollTop);
                    //This needs to run after the scrollTop is retrieved.
                    this.vcr.clear();
                    var listStartI = Math.floor((scrollTop - fixedHeaderHeight) / this.itemHeight);
                    listStartI = this.limitToRange(listStartI, 0, this.list.length);
                    var listEndI = Math.ceil((scrollTop - fixedHeaderHeight + listHeight) / this.itemHeight);
                    listEndI = this.limitToRange(listEndI, -1, this.list.length - 1);
                    for (var i = listStartI; i <= listEndI; i++) {
                        this.vcr.createEmbeddedView(this.tpl, {
                            $implicit: this.list[i],
                            index: i
                        });
                    }
                    this.beforeListElem.style.height = listStartI * this.itemHeight + "px";
                    this.afterListElem.style.height = (this.list.length - listEndI - 1) * this.itemHeight + "px";
                };
                /**
                 * First update.
                 *
                 * @returns {void}
                 */
                LazyForDirective.prototype.onFirstUpdate = function () {
                    var sampleItemElem;
                    if (this.itemHeight === undefined || this.itemTagName === undefined) {
                        this.vcr.createEmbeddedView(this.tpl, {
                            $implicit: this.list[0],
                            index: 0
                        });
                        sampleItemElem = this.templateElem.nextSibling;
                    }
                    if (this.itemHeight === undefined) {
                        this.itemHeight = sampleItemElem.clientHeight;
                    }
                    if (this.itemTagName === undefined) {
                        this.itemTagName = sampleItemElem.tagName;
                    }
                    this.beforeListElem = document.createElement(this.itemTagName);
                    this.templateElem.parentElement.insertBefore(this.beforeListElem, this.templateElem);
                    this.afterListElem = document.createElement(this.itemTagName);
                    this.templateElem.parentElement.insertBefore(this.afterListElem, this.templateElem.nextSibling);
                    // If you want to use <li> elements
                    if (this.itemTagName.toLowerCase() === 'li') {
                        this.beforeListElem.style.listStyleType = 'none';
                        this.afterListElem.style.listStyleType = 'none';
                    }
                    this.firstUpdate = false;
                };
                /**
                 * Limit To Range
                 *
                 * @param {number} num - Element number.
                 * @param {number} min - Min element number.
                 * @param {number} max - Max element number.
                 *
                 * @returns {number}
                 */
                LazyForDirective.prototype.limitToRange = function (num, min, max) {
                    return Math.max(Math.min(num, max), min);
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Array),
                    __metadata("design:paramtypes", [Array])
                ], LazyForDirective.prototype, "lazyForOf", null);
                LazyForDirective = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
                        selector: '[lazyFor]'
                    }),
                    __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"],
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["TemplateRef"],
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["IterableDiffers"]])
                ], LazyForDirective);
                return LazyForDirective;
            }());



            /***/
}),

/***/ "./app/_directives/modal-position.cache.ts":
/*!*************************************************!*\
  !*** ./app/_directives/modal-position.cache.ts ***!
  \*************************************************/
/*! exports provided: ModalPositionCache */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModalPositionCache", function () { return ModalPositionCache; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };

            var ModalPositionCache = /** @class */ (function () {
                function ModalPositionCache() {
                    this._cache = new Map();
                }
                ModalPositionCache.prototype.set = function (dialog, position) {
                    this._cache.set(dialog, position);
                };
                ModalPositionCache.prototype.get = function (dialog) {
                    return this._cache.get(dialog);
                };
                ModalPositionCache = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])()
                ], ModalPositionCache);
                return ModalPositionCache;
            }());



            /***/
}),

/***/ "./app/_directives/ngx-draggable.directive.ts":
/*!****************************************************!*\
  !*** ./app/_directives/ngx-draggable.directive.ts ***!
  \****************************************************/
/*! exports provided: DraggableDirective */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DraggableDirective", function () { return DraggableDirective; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };

            var DraggableDirective = /** @class */ (function () {
                function DraggableDirective(el, renderer) {
                    this.el = el;
                    this.renderer = renderer;
                    this.dx = 0;
                    this.dy = 0;
                    this.canDrag = '';
                    this.active = false;
                    this.mustBePosition = ['absolute', 'fixed', 'relative'];
                }
                Object.defineProperty(DraggableDirective.prototype, "draggable", {
                    set: function (val) {
                        if (val === undefined || val === null || val === '')
                            return;
                        this.canDrag = val;
                    },
                    enumerable: true,
                    configurable: true
                });
                DraggableDirective.prototype.ngOnInit = function () {
                    this.renderer.setElementAttribute(this.el.nativeElement, 'draggable', 'true');
                };
                DraggableDirective.prototype.ngAfterViewInit = function () {
                    try {
                        var position = window.getComputedStyle(this.el.nativeElement).position;
                        if (this.mustBePosition.indexOf(position) === -1) {
                            console.warn(this.el.nativeElement, 'Must be having position attribute set to ' + this.mustBePosition.join('|'));
                        }
                    }
                    catch (ex) {
                        console.error(ex);
                    }
                };
                DraggableDirective.prototype.ngOnDestroy = function () {
                    this.renderer.setElementAttribute(this.el.nativeElement, 'draggable', 'false');
                };
                DraggableDirective.prototype.onDragStart = function (event) {
                    event.dataTransfer.setData("text/plain", event.target.id);
                    this.active = false;
                    if (this.draggableHeight && this.draggableHeight < event.offsetY) {
                        return;
                    }
                    this.active = true;
                    this.dx = event.x - this.el.nativeElement.offsetLeft;
                    this.dy = event.y - this.el.nativeElement.offsetTop;
                };
                DraggableDirective.prototype.onDrag = function (event) {
                    if (!this.active) {
                        return;
                    }
                    this.doTranslation(event.x, event.y);
                };
                DraggableDirective.prototype.onDragEnd = function (event) {
                    if (!this.active) {
                        return;
                    }
                    this.dx = 0;
                    this.dy = 0;
                };
                DraggableDirective.prototype.doTranslation = function (x, y) {
                    if (!x || !y)
                        return;
                    this.renderer.setElementStyle(this.el.nativeElement, 'top', (y - this.dy) + 'px');
                    this.renderer.setElementStyle(this.el.nativeElement, 'left', (x - this.dx) + 'px');
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])('draggable'),
                    __metadata("design:type", Object),
                    __metadata("design:paramtypes", [Object])
                ], DraggableDirective.prototype, "draggable", null);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Number)
                ], DraggableDirective.prototype, "draggableHeight", void 0);
                DraggableDirective = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
                        selector: '[draggable]',
                        host: {
                            '(dragstart)': 'onDragStart($event)',
                            '(dragend)': 'onDragEnd($event)',
                            '(drag)': 'onDrag($event)'
                        }
                    }),
                    __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer"]])
                ], DraggableDirective);
                return DraggableDirective;
            }());



            /***/
}),

/***/ "./app/_directives/number.directive.ts":
/*!*********************************************!*\
  !*** ./app/_directives/number.directive.ts ***!
  \*********************************************/
/*! exports provided: NumberOnlyDirective */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NumberOnlyDirective", function () { return NumberOnlyDirective; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };

            var NumberOnlyDirective = /** @class */ (function () {
                function NumberOnlyDirective(el) {
                    this.el = el;
                    // Allow decimal numbers and negative values
                    this.regex = new RegExp(/^-?[0-9]+(\.[0-9]*){0,1}$/g); ///^-?[0-9]+(\.[0-9]*){0,1}$/g);
                    // Allow key codes for special events. Reflect :
                    // Backspace, tab, end, home
                    this.specialKeys = ['Backspace', 'Delete', 'Tab', 'End', 'Home', 'ArrowLeft', 'ArrowRight'];
                }
                NumberOnlyDirective.prototype.onKeyDown = function (event) {
                    // Allow Backspace, tab, end, and home keys
                    if (this.specialKeys.indexOf(event.key) !== -1) {
                        event.stopPropagation();
                        return;
                    }
                    var current = this.el.nativeElement.value;
                    var next = '';
                    if (event.key === '-') {
                        event.preventDefault();
                        if (!current.startsWith('-')) {
                            next = event.key + current;
                            this.el.nativeElement.value = next;
                        }
                    }
                    else {
                        next = current.concat(event.key);
                    }
                    if (next && !String(next).match(this.regex)) {
                        event.preventDefault();
                        if (this.el.nativeElement.value === '') {
                            this.el.nativeElement.value = '1';
                        }
                    }
                    event.stopPropagation();
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('keydown', ['$event']),
                    __metadata("design:type", Function),
                    __metadata("design:paramtypes", [KeyboardEvent]),
                    __metadata("design:returntype", void 0)
                ], NumberOnlyDirective.prototype, "onKeyDown", null);
                NumberOnlyDirective = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
                        selector: '[numberOnly]'
                    }),
                    __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]])
                ], NumberOnlyDirective);
                return NumberOnlyDirective;
            }());



            /***/
}),

/***/ "./app/_helpers/auth-interceptor.ts":
/*!******************************************!*\
  !*** ./app/_helpers/auth-interceptor.ts ***!
  \******************************************/
/*! exports provided: AuthInterceptor, httpInterceptorProviders */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthInterceptor", function () { return AuthInterceptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "httpInterceptorProviders", function () { return httpInterceptorProviders; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "../node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "../node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _services_auth_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../_services/auth.service */ "./app/_services/auth.service.ts");
/* harmony import */ var _services_project_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../_services/project.service */ "./app/_services/project.service.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };






            var TOKEN_HEADER_KEY = 'x-access-token';
            var USER_HEADER_KEY = 'x-auth-user';
            var AuthInterceptor = /** @class */ (function () {
                function AuthInterceptor(injector) {
                    this.injector = injector;
                }
                AuthInterceptor.prototype.intercept = function (req, next) {
                    var _this = this;
                    var authService = this.injector.get(_services_auth_service__WEBPACK_IMPORTED_MODULE_3__["AuthService"]);
                    if (authService.getUserToken) {
                        var token = authService.getUserToken();
                        if (token != null) {
                            var user = authService.getUser();
                            if (user) {
                                var locuser = { user: user.username, groups: user.groups };
                                req = req.clone({ headers: req.headers.set(USER_HEADER_KEY, JSON.stringify(locuser)) });
                            }
                            req = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, token) });
                        }
                    }
                    // if (!req.headers.has('Content-Type')) {
                    //     req = req.clone({ headers: req.headers.set('Content-Type', 'application/json') });
                    // }
                    // req = req.clone({ headers: req.headers.set('Accept', 'application/json') });
                    return next.handle(req).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["tap"])(function (event) {
                    }, function (err) {
                        if (err instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpErrorResponse"]) {
                            if (err.status === 403) {
                                // redirect to the login route or show a modal
                                authService.signOut();
                                var projectService = _this.injector.get(_services_project_service__WEBPACK_IMPORTED_MODULE_4__["ProjectService"]);
                                projectService.reload();
                            }
                        }
                    }));
                };
                AuthInterceptor = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])(),
                    __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"]])
                ], AuthInterceptor);
                return AuthInterceptor;
            }());

            var httpInterceptorProviders = [
                { provide: _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HTTP_INTERCEPTORS"], useClass: AuthInterceptor, multi: true }
            ];


            /***/
}),

/***/ "./app/_helpers/custom-http.ts":
/*!*************************************!*\
  !*** ./app/_helpers/custom-http.ts ***!
  \*************************************/
/*! exports provided: CustomHttp, customHttpFactory, customHttpProvider */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CustomHttp", function () { return CustomHttp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "customHttpFactory", function () { return customHttpFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "customHttpProvider", function () { return customHttpProvider; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/http */ "../node_modules/@angular/http/fesm5/http.js");
/* harmony import */ var _app_config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../app.config */ "./app/app.config.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "../node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_add_operator_catch__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/add/operator/catch */ "../node_modules/rxjs-compat/_esm5/add/operator/catch.js");
/* harmony import */ var rxjs_add_operator_map__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs/add/operator/map */ "../node_modules/rxjs-compat/_esm5/add/operator/map.js");
/* harmony import */ var rxjs_add_observable_throw__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs/add/observable/throw */ "../node_modules/rxjs-compat/_esm5/add/observable/throw.js");
            var __extends = (undefined && undefined.__extends) || (function () {
                var extendStatics = function (d, b) {
                    extendStatics = Object.setPrototypeOf ||
                        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
                    return extendStatics(d, b);
                };
                return function (d, b) {
                    extendStatics(d, b);
                    function __() { this.constructor = d; }
                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
                };
            })();
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };







            var CustomHttp = /** @class */ (function (_super) {
                __extends(CustomHttp, _super);
                function CustomHttp(backend, defaultOptions) {
                    return _super.call(this, backend, defaultOptions) || this;
                }
                CustomHttp.prototype.get = function (url, options) {
                    // return super.get(appConfig.apiUrl + url).catch(this.handleError);
                    return _super.prototype.get.call(this, _app_config__WEBPACK_IMPORTED_MODULE_2__["appConfig"].apiUrl + url, this.addJwt(options)).catch(this.handleError);
                };
                CustomHttp.prototype.post = function (url, body, options) {
                    // return super.post(appConfig.apiUrl + url, body).catch(this.handleError);
                    return _super.prototype.post.call(this, _app_config__WEBPACK_IMPORTED_MODULE_2__["appConfig"].apiUrl + url, body, this.addJwt(options)).catch(this.handleError);
                };
                CustomHttp.prototype.put = function (url, body, options) {
                    return _super.prototype.put.call(this, _app_config__WEBPACK_IMPORTED_MODULE_2__["appConfig"].apiUrl + url, body, this.addJwt(options)).catch(this.handleError);
                };
                CustomHttp.prototype.delete = function (url, options) {
                    return _super.prototype.delete.call(this, _app_config__WEBPACK_IMPORTED_MODULE_2__["appConfig"].apiUrl + url, this.addJwt(options)).catch(this.handleError);
                };
                // private helper methods
                CustomHttp.prototype.addJwt = function (options) {
                    // ensure request options and headers are not null
                    options = options || new _angular_http__WEBPACK_IMPORTED_MODULE_1__["RequestOptions"]();
                    options.headers = options.headers || new _angular_http__WEBPACK_IMPORTED_MODULE_1__["Headers"]();
                    // add authorization header with jwt token
                    var currentUser = JSON.parse(localStorage.getItem('currentUser'));
                    if (currentUser && currentUser.token) {
                        options.headers.append('Authorization', 'Bearer ' + currentUser.token);
                    }
                    return options;
                };
                CustomHttp.prototype.handleError = function (error) {
                    if (error.status === 401) {
                        // 401 unauthorized response so log user out of client
                        window.location.href = '/login';
                    }
                    return rxjs__WEBPACK_IMPORTED_MODULE_3__["Observable"].throw(error._body);
                };
                CustomHttp = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
                    __metadata("design:paramtypes", [_angular_http__WEBPACK_IMPORTED_MODULE_1__["ConnectionBackend"], _angular_http__WEBPACK_IMPORTED_MODULE_1__["RequestOptions"]])
                ], CustomHttp);
                return CustomHttp;
            }(_angular_http__WEBPACK_IMPORTED_MODULE_1__["Http"]));

            function customHttpFactory(xhrBackend, requestOptions) {
                return new CustomHttp(xhrBackend, requestOptions);
            }
            var customHttpProvider = {
                provide: _angular_http__WEBPACK_IMPORTED_MODULE_1__["Http"],
                useFactory: customHttpFactory,
                deps: [_angular_http__WEBPACK_IMPORTED_MODULE_1__["XHRBackend"], _angular_http__WEBPACK_IMPORTED_MODULE_1__["RequestOptions"]]
            };


            /***/
}),

/***/ "./app/_helpers/define.ts":
/*!********************************!*\
  !*** ./app/_helpers/define.ts ***!
  \********************************/
/*! exports provided: Define */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Define", function () { return Define; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };

            var Define = /** @class */ (function () {
                function Define() {
                }
                Define.materialIcons = [
                    // Action
                    'accessibility', 'accessible', 'account_balance', 'account_box', 'account_circle', 'alarm', 'alarm_add', 'alarm_off',
                    'alarm_on', 'all_out', 'android', 'announcement', 'aspect_ratio', 'assessment', 'assignment', 'assignment_ind', 'assignment_late',
                    'assignment_return', 'assignment_returned', 'assignment_turned_in', 'autorenew', 'backup', 'book', 'bookmark', 'bookmark_border', 'bug_report', 'build',
                    'cached', 'camera_enhance', 'change_history', 'check_circle', 'check_circle_outline', 'chrome_reader_mode', 'class', 'code',
                    'compare_arrows', 'copyright', 'credit_card', 'dashboard', 'delete', 'delete_outline', 'description', 'dns',
                    'done', 'done_all', 'done_outline', 'donut_large', 'donut_small', 'eject', 'euro_symbol', 'event', 'event_seat', 'exit_to_app',
                    'explore', 'extension', 'face', 'favorite', 'favorite_border', 'feedback', 'find_in_page', 'find_replace', 'fingerprint', 'flight_land', 'flight_takeoff',
                    'flip_to_back', 'flip_to_front', 'gavel', 'get_app', 'gif', 'grade', 'group_work', 'help', 'help_outline', 'highlight_off', 'history',
                    'home', 'hourglass_empty', 'hourglass_full', 'important_devices', 'info', 'input', 'invert_colors', 'label',
                    'language', 'launch', 'list', 'lock', 'lock_open', 'loyalty', 'markunread_mailbox', 'motorcycle', 'note_add', 'offline_pin',
                    'opacity', 'open_in_browser', 'open_with', 'pageview', 'pan_tool', 'perm_camera_mic', 'perm_contact_calendar', 'perm_data_setting', 'perm_device_information', 'perm_identity', 'perm_media',
                    'perm_phone_msg', 'perm_scan_wifi', 'pets', 'picture_in_picture', 'play_for_work', 'polymer', 'power_settings_new', 'print', 'query_builder',
                    'question_answer', 'receipt', 'record_voice_over', 'reorder', 'report_problem', 'restore_page', 'room', 'rowing', 'search', 'settings',
                    'settings_applications', 'settings_backup_restore', 'settings_bluetooth', 'settings_brightness', 'settings_cell', 'settings_ethernet',
                    'settings_input_antenna', 'settings_input_component', 'settings_input_hdmi', 'settings_input_svideo',
                    'settings_overscan', 'settings_phone', 'settings_power', 'settings_remote', 'settings_voice', 'shop', 'shopping_basket', 'shopping_cart', 'speaker_notes', 'spellcheck',
                    'stars', 'store', 'subject', 'supervisor_account', 'swap_horiz', 'swap_horizontal_circle', 'swap_vert', 'swap_vertical_circle', 'tab',
                    'tab_unselected', 'theaters', 'thumb_down', 'thumb_up', 'thumbs_up_down', 'timeline', 'toc', 'toll', 'touch_app', 'track_changes',
                    'trending_down', 'trending_flat', 'trending_up', 'verified_user', 'view_agenda', 'view_array', 'view_carousel', 'view_column', 'view_day',
                    'view_list', 'view_module', 'view_quilt', 'view_stream', 'view_week', 'visibility', 'visibility_off', 'watch_later', 'work',
                    'zoom_in', 'zoom_out',
                    // Alert
                    'add_alert', 'error', 'error_outline', 'warning',
                    // Av
                    'airplay', 'av_timer',
                    'fast_forward', 'fast_rewind', 'featured_play_list', 'featured_video', 'fiber_manual_record', 'fiber_new', 'fiber_pin', 'fiber_smart_record', 'games',
                    'library_add', 'library_books', 'mic', 'mic_none', 'mic_off', 'new_releases', 'not_interested', 'note', 'pause', 'pause_circle_filled',
                    'pause_circle_outline', 'play_arrow', 'play_circle_filled', 'play_circle_outline', 'playlist_add', 'playlist_add_check', 'playlist_play', 'queue', 'queue_play_next', 'radio',
                    'recent_actors', 'remove_from_queue', 'repeat', 'repeat_one', 'shuffle', 'skip_next', 'skip_previous', 'slow_motion_video', 'snooze', 'sort_by_alpha',
                    'stop', 'subscriptions', 'subtitles', 'surround_sound', 'video_label', 'volume_down', 'volume_mute', 'volume_off', 'volume_up', 'web', 'web_asset',
                    // Communication
                    'business', 'call', 'call_end', 'call_made', 'call_merge', 'call_missed', 'call_missed_outgoing', 'call_received',
                    'call_split', 'cancel_presentation', 'chat ', 'chat_bubble', 'chat_bubble_outline', 'clear_all', 'comment', 'contact_mail', 'contact_phone', 'contacts',
                    'dialer_sip', 'dialpad', 'email', 'forum', 'import_contacts', 'import_export', 'invert_colors_off', 'list_alt',
                    'live_help', 'location_off', 'location_on', 'mail_outline', 'message', 'no_sim', 'pause_presentation', 'person_add_disabled', 'phonelink_erase', 'phonelink_lock',
                    'phonelink_ring', 'phonelink_setup', 'portable_wifi_off', 'present_to_all', 'print_disabled', 'ring_volume', 'rss_feed', 'screen_share', 'sentiment_satisfied_alt', 'speaker_phone', 'stay_current_landscape',
                    'stay_current_portrait', 'stop_screen_share', 'swap_calls', 'textsms', 'voicemail', 'vpn_key',
                    // Content
                    'add', 'add_box', 'add_circle', 'add_circle_outline',
                    'archive', 'backspace', 'block', 'clear', 'create', 'delete_sweep', 'drafts', 'filter_list', 'flag',
                    'font_download', 'forward', 'gesture', 'inbox', 'link', 'link_off', 'low_priority', 'move_to_inbox', 'next_week',
                    'redo', 'remove', 'remove_circle', 'remove_circle_outline', 'reply', 'reply_all', 'report', 'report_off', 'save', 'save_alt',
                    'select_all', 'send', 'sort', 'text_format', 'unarchive', 'undo', 'weekend',
                    // Device
                    'access_alarm', 'access_time', 'add_alarm', 'add_to_home_screen', 'airplanemode_active', 'airplanemode_inactive', 'battery_alert', 'battery_full', 'battery_unknown',
                    'bluetooth', 'bluetooth_connected', 'bluetooth_disabled', 'bluetooth_searching', 'brightness_auto', 'brightness_high', 'brightness_low', 'brightness_medium', 'data_usage',
                    'developer_mode', 'devices', 'dvr', 'gps_fixed', 'gps_not_fixed', 'gps_off', 'graphic_eq', 'network_cell', 'network_wifi', 'nfc',
                    'screen_rotation', 'screen_lock_rotation', 'sd_storage', 'settings_system_daydream', 'signal_cellular_no_sim',
                    'signal_cellular_null', 'signal_cellular_off', 'signal_wifi_4_bar_lock', 'signal_wifi_off', 'storage', 'usb', 'wallpaper', 'widgets', 'wifi_tethering',
                    // Editor
                    'attach_file', 'attach_money', 'border_all', 'border_bottom', 'border_clear', 'border_color', 'border_horizontal', 'border_inner', 'border_left', 'border_outer',
                    'border_right', 'border_style', 'border_top', 'border_vertical', 'bubble_chart', 'drag_handle', 'format_align_center', 'format_align_justify', 'format_align_left', 'format_align_right',
                    'format_bold', 'format_clear', 'format_color_fill', 'format_color_reset', 'format_color_text', 'format_indent_decrease', 'format_indent_increase', 'format_italic', 'format_line_spacing',
                    'format_list_bulleted', 'format_list_numbered', 'format_list_numbered_rtl', 'format_paint', 'format_quote', 'format_shapes', 'format_size', 'format_strikethrough', 'format_underlined',
                    'functions', 'highlight', 'insert_chart', 'insert_chart_outlined', 'insert_comment', 'insert_drive_file', 'insert_emoticon', 'insert_photo', 'linear_scale', 'merge_type', 'mode_comment',
                    'monetization_on', 'money_off', 'multiline_chart', 'notes', 'pie_chart', 'publish', 'short_text', 'show_chart', 'space_bar', 'strikethrough_s', 'table_chart',
                    'title', 'vertical_align_bottom', 'vertical_align_center', 'vertical_align_top', 'wrap_text',
                    // File
                    'attachment', 'cloud', 'cloud_circle', 'cloud_done', 'cloud_download', 'cloud_off', 'cloud_queue', 'cloud_upload', 'create_new_folder', 'folder', 'folder_open', 'folder_shared',
                    // Hardware
                    'cast', 'cast_connected', 'cast_for_education', 'computer', 'desktop_mac', 'desktop_windows', 'developer_board', 'device_hub', 'devices_other', 'dock', 'gamepad',
                    'headset', 'headset_mic', 'keyboard', 'keyboard_arrow_down', 'keyboard_arrow_left', 'keyboard_arrow_right', 'keyboard_arrow_up', 'keyboard_backspace', 'keyboard_capslock', 'keyboard_hide',
                    'keyboard_return', 'keyboard_tab', 'keyboard_voice', 'laptop', 'laptop_chromebook', 'laptop_windows', 'memory', 'mouse', 'power_input', 'router', 'scanner', 'security', 'sim_card',
                    'speaker', 'speaker_group', 'tablet_android', 'toys', 'tv', 'videogame_asset', 'watch',
                    // Image
                    'add_a_photo', 'add_to_photos', 'adjust', 'assistant', 'audiotrack', 'blur_circular', 'blur_linear', 'blur_on', 'brightness_1', 'brightness_2', 'brightness_3',
                    'brightness_5', 'brightness_6', 'brightness_7', 'broken_image', 'brush', 'burst_mode', 'camera', 'camera_alt', 'camera_front', 'camera_rear', 'center_focus_strong', 'center_focus_weak',
                    'collections', 'collections_bookmark', 'color_lens', 'colorize', 'compare', 'control_point_duplicate', 'crop', 'crop_7_5', 'crop_16_9', 'crop_5_4', 'crop_3_2', 'crop_din', 'crop_free',
                    'crop_original', 'crop_rotate', 'dehaze', 'details', 'edit', 'exposure', 'exposure_neg_1', 'exposure_neg_2', 'exposure_plus_1', 'exposure_plus_2', 'exposure_zero', 'filter',
                    'filter_1', 'filter_2', 'filter_3', 'filter_4', 'filter_5', 'filter_6', 'filter_7', 'filter_8', 'filter_9', 'filter_b_and_w', 'filter_drama', 'filter_frames', 'filter_hdr', 'filter_none',
                    'filter_tilt_shift', 'filter_vintage', 'flare', 'flash_auto', 'flash_off', 'flash_on', 'flip', 'gradient', 'grain', 'grid_off', 'grid_on', 'hdr_strong', 'hdr_weak', 'healing',
                    'image_aspect_ratio', 'iso', 'leak_add', 'leak_remove', 'looks', 'looks_one', 'looks_two', 'looks_3', 'looks_4', 'looks_5', 'looks_6', 'loupe', 'movie_creation',
                    'movie_filter', 'music_note', 'nature', 'nature_people', 'panorama_fish_eye', 'panorama_horizontal', 'panorama_vertical', 'panorama_wide_angle', 'photo_filter',
                    'photo_size_select_small', 'picture_as_pdf', 'portrait', 'remove_red_eye', 'rotate_left', 'rotate_right', 'slideshow', 'straighten', 'style', 'switch_camera', 'texture',
                    'timelapse', 'timer', 'timer_off', 'tonality', 'transform', 'tune', 'view_comfy', 'view_compact', 'vignette', 'wb_incandescent', 'wb_iridescent', 'wb_sunny',
                    // Maps
                    'beenhere', 'directions', 'directions_bike', 'directions_boat', 'directions_bus', 'directions_car', 'directions_railway', 'directions_run',
                    'directions_subway', 'directions_walk', 'edit_attributes', 'ev_station', 'flight', 'hotel', 'layers', 'layers_clear', 'local_activity', 'local_atm', 'local_bar', 'local_cafe',
                    'local_car_wash', 'local_dining', 'local_drink', 'local_florist', 'local_gas_station', 'local_hospital', 'local_laundry_service', 'local_library', 'local_mall', 'local_parking',
                    'local_pharmacy', 'local_pizza', 'local_printshop', 'local_shipping', 'local_taxi', 'map', 'navigation', 'near_me', 'person_pin', 'person_pin_circle', 'pin_drop', 'rate_review',
                    'restaurant', 'restaurant_menu', 'satellite', 'store_mall_directory', 'streetview', 'subway', 'traffic', 'train', 'tram', 'transfer_within_a_station', 'zoom_out_map',
                    // Navigation
                    'apps', 'arrow_back', 'arrow_downward', 'arrow_drop_down', 'arrow_drop_down_circle', 'arrow_drop_up', 'arrow_forward',
                    'arrow_upward', 'cancel', 'check', 'chevron_left', 'chevron_right', 'close', 'expand_less', 'expand_more', 'first_page', 'fullscreen', 'fullscreen_exit', 'last_page', 'menu', 'more_horiz',
                    'more_vert', 'refresh', 'subdirectory_arrow_left', 'subdirectory_arrow_right', 'unfold_less', 'unfold_more',
                    // Notification
                    'adb', 'airline_seat_flat', 'airline_seat_flat_angled', 'airline_seat_recline_extra', 'airline_seat_recline_normal', 'disc_full', 'more', 'network_check', 'network_locked', 'no_encryption',
                    'power', 'power_off', 'priority_high', 'sd_card', 'sms', 'sms_failed', 'sync', 'sync_disabled', 'sync_problem', 'system_update', 'vibration', 'vpn_lock', 'wc', 'wifi', 'wifi_off',
                    // Places
                    'ac_unit', 'airport_shuttle', 'all_inclusive', 'beach_access', 'business_center', 'casino', 'child_care', 'child_friendly', 'fitness_center', 'golf_course', 'hot_tub', 'kitchen',
                    'pool', 'room_service', 'rv_hookup', 'smoke_free', 'smoking_rooms', 'spa',
                    // Social
                    'cake', 'domain', 'group', 'group_add', 'location_city', 'mood', 'mood_bad', 'notifications', 'notifications_active', 'notifications_none', 'notifications_off', 'notifications_paused',
                    'pages', 'party_mode', 'people_outline', 'person', 'person_add', 'person_outline', 'public', 'school', 'sentiment_dissatisfied', 'sentiment_satisfied', 'sentiment_very_dissatisfied',
                    'sentiment_very_satisfied', 'share', 'thumb_down_alt', 'thumb_up_alt', 'whatshot',
                    // Toggle
                    'check_box', 'check_box_outline_blank', 'indeterminate_check_box', 'radio_button_checked', 'radio_button_unchecked', 'star', 'star_border', 'star_half'
                ];
                Define.fonts = ['Sans-serif', 'Roboto-Thin', 'Roboto-Light', 'Roboto-Regular', 'Roboto-Medium', 'Roboto-Bold', 'Quicksand-Regular', 'Quicksand-Medium', 'Quicksand-Bold'];
                Define = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])()
                ], Define);
                return Define;
            }());



            /***/
}),

/***/ "./app/_helpers/dictionary.ts":
/*!************************************!*\
  !*** ./app/_helpers/dictionary.ts ***!
  \************************************/
/*! exports provided: Dictionary */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Dictionary", function () { return Dictionary; });
            var Dictionary = /** @class */ (function () {
                function Dictionary() {
                    this.items = {};
                    this.count = 0;
                }
                Dictionary.prototype.ContainsKey = function (key) {
                    return this.items.hasOwnProperty(key);
                };
                Dictionary.prototype.Count = function () {
                    return this.count;
                };
                Dictionary.prototype.Add = function (key, value) {
                    if (!this.items.hasOwnProperty(key))
                        this.count++;
                    this.items[key] = value;
                };
                Dictionary.prototype.Remove = function (key) {
                    var val = this.items[key];
                    delete this.items[key];
                    this.count--;
                    return val;
                };
                Dictionary.prototype.Item = function (key) {
                    return this.items[key];
                };
                Dictionary.prototype.Keys = function () {
                    var keySet = [];
                    for (var prop in this.items) {
                        if (this.items.hasOwnProperty(prop)) {
                            keySet.push(prop);
                        }
                    }
                    return keySet;
                };
                Dictionary.prototype.Values = function () {
                    var values = [];
                    for (var prop in this.items) {
                        if (this.items.hasOwnProperty(prop)) {
                            values.push(this.items[prop]);
                        }
                    }
                    return values;
                };
                return Dictionary;
            }());



            /***/
}),

/***/ "./app/_helpers/endpointapi.ts":
/*!*************************************!*\
  !*** ./app/_helpers/endpointapi.ts ***!
  \*************************************/
/*! exports provided: EndPointApi */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EndPointApi", function () { return EndPointApi; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../environments/environment */ "./environments/environment.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };


            var EndPointApi = /** @class */ (function () {
                function EndPointApi() {
                }
                EndPointApi.getURL = function () {
                    if (!this.url) {
                        if (_environments_environment__WEBPACK_IMPORTED_MODULE_1__["environment"].apiEndpoint) {
                            this.url = _environments_environment__WEBPACK_IMPORTED_MODULE_1__["environment"].apiEndpoint;
                        }
                        else {
                            var origin_1 = location.origin;
                            var path = location.origin.split('/')[2];
                            var protocoll = location.origin.split(':')[0];
                            var temp = path.split(':')[0];
                            if (temp.length > 1 && _environments_environment__WEBPACK_IMPORTED_MODULE_1__["environment"].apiPort) {
                                path = temp + ':' + _environments_environment__WEBPACK_IMPORTED_MODULE_1__["environment"].apiPort;
                            }
                            this.url = protocoll + '://' + path;
                        }
                    }
                    return this.url;
                };
                EndPointApi.getRemoteURL = function (destIp) {
                    var protocoll = location.origin.split(':')[0];
                    var path = destIp + ':' + _environments_environment__WEBPACK_IMPORTED_MODULE_1__["environment"].apiPort;
                    return protocoll + '://' + path + '/api';
                };
                EndPointApi.url = null;
                EndPointApi = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])()
                ], EndPointApi);
                return EndPointApi;
            }());



            /***/
}),

/***/ "./app/_helpers/utils.ts":
/*!*******************************!*\
  !*** ./app/_helpers/utils.ts ***!
  \*******************************/
/*! exports provided: Utils, EnumToArrayPipe, EscapeHtmlPipe */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Utils", function () { return Utils; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EnumToArrayPipe", function () { return EnumToArrayPipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EscapeHtmlPipe", function () { return EscapeHtmlPipe; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/platform-browser */ "../node_modules/@angular/platform-browser/fesm5/platform-browser.js");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };


            var Utils = /** @class */ (function () {
                function Utils() {
                }
                Utils_1 = Utils;
                Utils.searchTreeStartWith = function (element, matchingStart) {
                    if (element.id.startsWith(matchingStart)) {
                        return element;
                    }
                    else if (element.children != null) {
                        var i;
                        var result = null;
                        for (i = 0; result == null && i < element.children.length; i++) {
                            result = Utils_1.searchTreeStartWith(element.children[i], matchingStart);
                        }
                        return result;
                    }
                    return null;
                };
                Utils.isNullOrUndefined = function (ele) {
                    return (ele === null || ele === undefined) ? true : false;
                };
                // returns keys of enum
                Utils.enumKeys = function (p) {
                    var keys = Object.keys(p);
                    return keys;
                };
                // returns values of enum
                Utils.enumValues = function (p) {
                    var keys = Object.keys(p);
                    return keys.map(function (el) { return Object(p)[el]; });
                };
                Utils.getGUID = function (prefix) {
                    if (prefix === void 0) { prefix = ''; }
                    var uuid = "", i, random;
                    for (i = 0; i < 16; i++) {
                        random = Math.random() * 16 | 0;
                        if (i == 8) {
                            uuid += "-";
                        }
                        uuid += (i == 12 ? 4 : (i == 16 ? (random & 3 | 8) : random)).toString(16);
                    }
                    return prefix + uuid;
                };
                ;
                Utils.getShortGUID = function (prefix) {
                    if (prefix === void 0) { prefix = ''; }
                    var uuid = "", i, random;
                    for (i = 0; i < 12; i++) {
                        random = Math.random() * 16 | 0;
                        if (i == 8) {
                            uuid += "-";
                        }
                        uuid += (i == 4 ? 4 : (i == 6 ? (random & 3 | 8) : random)).toString(12);
                    }
                    return prefix + uuid;
                };
                Utils.getNextName = function (prefix, inuse) {
                    var index = 1;
                    var result = prefix + index;
                    while (inuse.indexOf(result) >= 0) {
                        index++;
                        result = prefix + index;
                    }
                    return result;
                };
                Utils.isObject = function (value) {
                    return typeof (value) == 'object' && value !== null;
                };
                Utils.getType = function (value) {
                    return typeof value;
                };
                Utils.getTextHeight = function (font) {
                    // re-use canvas object for better performance
                    var canvas = document.createElement("canvas");
                    var context = canvas.getContext("2d");
                    context.font = font;
                    var metrics = context.measureText('M');
                    return metrics.width;
                };
                Utils.getDomTextHeight = function (size, font) {
                    var text = document.createElement("span");
                    document.body.appendChild(text);
                    text.style.font = font;
                    text.style.fontSize = size + "px";
                    text.style.height = 'auto';
                    text.style.width = 'auto';
                    text.style.position = 'absolute';
                    text.style.whiteSpace = 'no-wrap';
                    text.innerHTML = 'M';
                    var height = Math.ceil(text.clientHeight);
                    document.body.removeChild(text);
                    return height;
                };
                Utils.getEnumKey = function (etype, ekey) {
                    return Object.keys(etype).find(function (key) { return etype[key] === ekey; });
                };
                Utils.isJson = function (item) {
                    try {
                        var obj = JSON.parse(item);
                        if (obj && Object.keys(obj).length) {
                            return true;
                        }
                    }
                    catch (e) {
                    }
                    return false;
                };
                Utils.Boolify = function (arg) {
                    var BoolArray = [true, false, 'true', 'false', 1, 0];
                    if (BoolArray.indexOf(arg) === -1) {
                        return null;
                    }
                    else {
                        return (arg == true || arg == 'true' || arg == 1) ? true : false;
                    }
                };
                var Utils_1;
                Utils.defaultColor = ['#FFFFFF', '#000000', '#EEECE1', '#1F497D', '#4F81BD', '#C0504D', '#9BBB59', '#8064A2', '#4BACC6',
                    '#F79646', '#C00000', '#FF0000', '#FFC000', '#FFD04A', '#FFFF00', '#92D050', '#0AC97D', '#00B050', '#00B0F0', '#4484EF', '#3358C0',
                    '#002060', '#7030A0', '#D8D8D8', '#BFBFBF', '#A5A5A5', '#7F7F7F', '#595959', '#3F3F3F', '#262626'];
                Utils.lineColor = ['#4484ef', '#ef0909', '#00b050', '#ffd04a', '#7030a0', '#a5a5a5', '#c0504d', '#000000'];
                Utils = Utils_1 = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])()
                ], Utils);
                return Utils;
            }());

            var EnumToArrayPipe = /** @class */ (function () {
                function EnumToArrayPipe() {
                }
                EnumToArrayPipe.prototype.transform = function (value, args) {
                    var result = [];
                    var keys = Object.keys(value);
                    var values = Object.values(value);
                    for (var i = 0; i < keys.length; i++) {
                        result.push({ key: keys[i], value: values[i] });
                    }
                    return result;
                    //or if you want to order the result:
                    //return result.sort((a, b) => a.value < b.value ? -1 : 1);
                };
                EnumToArrayPipe = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({
                        name: 'enumToArray'
                    })
                ], EnumToArrayPipe);
                return EnumToArrayPipe;
            }());

            var EscapeHtmlPipe = /** @class */ (function () {
                function EscapeHtmlPipe(sanitizer) {
                    this.sanitizer = sanitizer;
                }
                EscapeHtmlPipe.prototype.transform = function (content) {
                    return this.sanitizer.bypassSecurityTrustHtml(content);
                };
                EscapeHtmlPipe = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({ name: 'keepHtml', pure: false }),
                    __metadata("design:paramtypes", [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__["DomSanitizer"]])
                ], EscapeHtmlPipe);
                return EscapeHtmlPipe;
            }());



            /***/
}),

/***/ "./app/_helpers/windowref.ts":
/*!***********************************!*\
  !*** ./app/_helpers/windowref.ts ***!
  \***********************************/
/*! exports provided: WindowRef */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WindowRef", function () { return WindowRef; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };

            function _window() {
                // return the global native browser window object
                return window;
            }
            var WindowRef = /** @class */ (function () {
                function WindowRef() {
                }
                Object.defineProperty(WindowRef.prototype, "nativeWindow", {
                    get: function () {
                        return _window();
                    },
                    enumerable: true,
                    configurable: true
                });
                WindowRef = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])()
                ], WindowRef);
                return WindowRef;
            }());



            /***/
}),

/***/ "./app/_models/alarm.ts":
/*!******************************!*\
  !*** ./app/_models/alarm.ts ***!
  \******************************/
/*! exports provided: Alarm, AlarmProperty, AlarmSubProperty, AlarmAckMode, AlarmEvent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Alarm", function () { return Alarm; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AlarmProperty", function () { return AlarmProperty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AlarmSubProperty", function () { return AlarmSubProperty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AlarmAckMode", function () { return AlarmAckMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AlarmEvent", function () { return AlarmEvent; });
            var Alarm = /** @class */ (function () {
                function Alarm() {
                }
                return Alarm;
            }());

            var AlarmProperty = /** @class */ (function () {
                function AlarmProperty() {
                }
                return AlarmProperty;
            }());

            var AlarmSubProperty = /** @class */ (function () {
                function AlarmSubProperty() {
                }
                return AlarmSubProperty;
            }());

            var AlarmAckMode;
            (function (AlarmAckMode) {
                AlarmAckMode["float"] = "alarm.ack-float";
                AlarmAckMode["ackactive"] = "alarm.ack-active";
                AlarmAckMode["ackpassive"] = "alarm.ack-passive";
            })(AlarmAckMode || (AlarmAckMode = {}));
            var AlarmEvent = /** @class */ (function () {
                function AlarmEvent() {
                }
                return AlarmEvent;
            }());



            /***/
}),

/***/ "./app/_models/chart.ts":
/*!******************************!*\
  !*** ./app/_models/chart.ts ***!
  \******************************/
/*! exports provided: Chart, ChartLine, ChartViewType, ChartRangeType, ChartLegendMode, ChartRangeConverter */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Chart", function () { return Chart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChartLine", function () { return ChartLine; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChartViewType", function () { return ChartViewType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChartRangeType", function () { return ChartRangeType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChartLegendMode", function () { return ChartLegendMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChartRangeConverter", function () { return ChartRangeConverter; });
            var Chart = /** @class */ (function () {
                function Chart() {
                }
                return Chart;
            }());

            var ChartLine = /** @class */ (function () {
                function ChartLine() {
                }
                return ChartLine;
            }());

            var ChartViewType;
            (function (ChartViewType) {
                ChartViewType["realtime1"] = "chart.viewtype-realtime1";
                ChartViewType["history"] = "chart.viewtype-history";
            })(ChartViewType || (ChartViewType = {}));
            var ChartRangeType;
            (function (ChartRangeType) {
                ChartRangeType["last8h"] = "chart.rangetype-last8h";
                ChartRangeType["last1d"] = "chart.rangetype-last1d";
                ChartRangeType["last3d"] = "chart.rangetype-last3d";
                ChartRangeType["last1w"] = "chart.rangetype-last1w";
            })(ChartRangeType || (ChartRangeType = {}));
            var ChartLegendMode;
            (function (ChartLegendMode) {
                ChartLegendMode["always"] = "chart.legend-always";
                ChartLegendMode["follow"] = "chart.legend-follow";
                ChartLegendMode["bottom"] = "chart.legend-bottom";
                // onmouseover = 'chart.legend-onmouseover',
                ChartLegendMode["never"] = "chart.legend-never";
            })(ChartLegendMode || (ChartLegendMode = {}));
            var ChartRangeConverter = /** @class */ (function () {
                function ChartRangeConverter() {
                }
                ChartRangeConverter.ChartRangeToHours = function (crt) {
                    var types = Object.keys(ChartRangeType);
                    if (crt === types[0]) { // ChartRangeType.last8h) {
                        return 8;
                    }
                    else if (crt === types[1]) { // ChartRangeType.last1d) {
                        return 24;
                    }
                    else if (crt === types[2]) { // ChartRangeType.last3d) {
                        return 24 * 3;
                    }
                    else if (crt === types[3]) { // ChartRangeType.last1w) {
                        return 24 * 7;
                    }
                    return 0;
                };
                return ChartRangeConverter;
            }());



            /***/
}),

/***/ "./app/_models/device.ts":
/*!*******************************!*\
  !*** ./app/_models/device.ts ***!
  \*******************************/
/*! exports provided: Device, Tag, DeviceNetProperty, DeviceSecurity, DeviceType, TagType, ModbusTagType, MessageSecurityMode, SecurityPolicy, BACnetObjectType, DEVICE_PREFIX, TAG_PREFIX, DevicesUtils */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Device", function () { return Device; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tag", function () { return Tag; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeviceNetProperty", function () { return DeviceNetProperty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeviceSecurity", function () { return DeviceSecurity; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeviceType", function () { return DeviceType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TagType", function () { return TagType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModbusTagType", function () { return ModbusTagType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MessageSecurityMode", function () { return MessageSecurityMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SecurityPolicy", function () { return SecurityPolicy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BACnetObjectType", function () { return BACnetObjectType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DEVICE_PREFIX", function () { return DEVICE_PREFIX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TAG_PREFIX", function () { return TAG_PREFIX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DevicesUtils", function () { return DevicesUtils; });
            var Device = /** @class */ (function () {
                function Device(_id) {
                    this.id = _id;
                }
                return Device;
            }());

            var Tag = /** @class */ (function () {
                function Tag(_id) {
                    this.id = _id;
                }
                return Tag;
            }());

            var DeviceNetProperty = /** @class */ (function () {
                function DeviceNetProperty() {
                }
                return DeviceNetProperty;
            }());

            var DeviceSecurity = /** @class */ (function () {
                function DeviceSecurity() {
                }
                return DeviceSecurity;
            }());

            var DeviceType;
            (function (DeviceType) {
                DeviceType["FuxaServer"] = "FuxaServer";
                DeviceType["SiemensS7"] = "SiemensS7";
                DeviceType["OPCUA"] = "OPCUA";
                DeviceType["BACnet"] = "BACnet";
                DeviceType["ModbusRTU"] = "ModbusRTU";
                DeviceType["ModbusTCP"] = "ModbusTCP";
                DeviceType["WebAPI"] = "WebAPI";
                DeviceType["MQTTclient"] = "MQTTclient";
                DeviceType["WebStudio"] = "WebStudio";
                DeviceType["internal"] = "internal";
                // Template: 'template'
            })(DeviceType || (DeviceType = {}));
            var TagType;
            (function (TagType) {
                TagType["Bool"] = "Bool";
                TagType["Byte"] = "Byte";
                TagType["Int"] = "Int";
                TagType["Word"] = "Word";
                TagType["DInt"] = "DInt";
                TagType["DWord"] = "DWord";
                TagType["Real"] = "Real";
            })(TagType || (TagType = {}));
            var ModbusTagType;
            (function (ModbusTagType) {
                ModbusTagType["Bool"] = "Bool";
                ModbusTagType["Int16"] = "Int16";
                ModbusTagType["UInt16"] = "UInt16";
                ModbusTagType["Int32"] = "Int32";
                ModbusTagType["UInt32"] = "UInt32";
                ModbusTagType["Float32"] = "Float32";
                ModbusTagType["Float64"] = "Float64";
                ModbusTagType["Int16LE"] = "Int16LE";
                ModbusTagType["UInt16LE"] = "UInt16LE";
                ModbusTagType["Int32LE"] = "Int32LE";
                ModbusTagType["UInt32LE"] = "UInt32LE";
                ModbusTagType["Float32LE"] = "Float32LE";
                ModbusTagType["Float64LE"] = "Float64LE";
                // String = 'String'
            })(ModbusTagType || (ModbusTagType = {}));
            var MessageSecurityMode;
            (function (MessageSecurityMode) {
                /** The MessageSecurityMode is invalid */
                MessageSecurityMode[MessageSecurityMode["INVALID"] = 0] = "INVALID";
                /** No security is applied. */
                MessageSecurityMode["NONE"] = "1";
                /** All messages are signed but not encrypted. */
                MessageSecurityMode["SIGN"] = "2";
                /** All messages are signed and encrypted. */
                MessageSecurityMode["SIGNANDENCRYPT"] = "3"; //'SIGNANDENCRYPT'
            })(MessageSecurityMode || (MessageSecurityMode = {}));
            var SecurityPolicy;
            (function (SecurityPolicy) {
                /** see http://opcfoundation.org/UA/SecurityPolicy#None */
                SecurityPolicy["None"] = "None";
                /** see http://opcfoundation.org/UA/SecurityPolicy#Basic128 */
                SecurityPolicy["Basic128"] = "Basic128";
                /** see http://opcfoundation.org/UA/SecurityPolicy#Basic128Rsa15 */
                SecurityPolicy["Basic128Rsa15"] = "Basic128Rsa15";
                /** see http://opcfoundation.org/UA/SecurityPolicy#Basic192 */
                SecurityPolicy["Basic192"] = "Basic192";
                /** see http://opcfoundation.org/UA/SecurityPolicy#Basic192Rsa15 */
                SecurityPolicy["Basic192Rsa15"] = "Basic192Rsa15";
                /** see http://opcfoundation.org/UA/SecurityPolicy#Basic256 */
                SecurityPolicy["Basic256"] = "Basic256";
                /** see http://opcfoundation.org/UA/SecurityPolicy#Basic256Rsa15 */
                SecurityPolicy["Basic256Rsa15"] = "Basic256Rsa15";
                /** see http://opcfoundation.org/UA/SecurityPolicy#Basic256Sha25 */
                SecurityPolicy["Basic256Sha256"] = "Basic256Sha256";
                /** see 'http://opcfoundation.org/UA/SecurityPolicy#Aes256_Sha256_RsaPss' */
                SecurityPolicy["Aes256_Sha256_RsaPss"] = "Aes256_Sha256_RsaPss";
                /** see ''http://opcfoundation.org/UA/SecurityPolicy#Aes128_Sha256_RsaOaep'' */
                SecurityPolicy["Aes128_Sha256_RsaOaep"] = "Aes128_Sha256_RsaOaep";
            })(SecurityPolicy || (SecurityPolicy = {}));
            var BACnetObjectType;
            (function (BACnetObjectType) {
                BACnetObjectType["ANALOG_INPUT"] = "Analog Input";
                BACnetObjectType["ANALOG_OUTPUT"] = "Analog Output";
                BACnetObjectType["ANALOG_VALUE"] = "Analog Value";
                BACnetObjectType["BINARY_INPUT"] = "Binary Input";
                BACnetObjectType["BINARY_OUTPUT"] = "Binary Output";
                BACnetObjectType["BINARY_VALUE"] = "Binary Value";
                BACnetObjectType["CALENDAR"] = "";
                BACnetObjectType["COMMAND"] = "";
                BACnetObjectType["DEVICE"] = ""; // 8
            })(BACnetObjectType || (BACnetObjectType = {}));
            var DEVICE_PREFIX = 'd_';
            var TAG_PREFIX = 't_';
            var DevicesUtils = /** @class */ (function () {
                function DevicesUtils() {
                }
                DevicesUtils.getDeviceFromTagId = function (devices, id) {
                    for (var i = 0; i < devices.length; i++) {
                        if (devices[i].tags[id]) {
                            return devices[i];
                        }
                    }
                    return null;
                };
                DevicesUtils.getTagFromTagId = function (devices, id) {
                    for (var i = 0; i < devices.length; i++) {
                        if (devices[i].tags[id]) {
                            return devices[i].tags[id];
                        }
                    }
                    return null;
                };
                DevicesUtils.getTagFromTagAddress = function (device, address) {
                    return Object.values(device.tags).find(function (tag) { return tag.address === address; });
                };
                return DevicesUtils;
            }());



            /***/
}),

/***/ "./app/_models/hmi.ts":
/*!****************************!*\
  !*** ./app/_models/hmi.ts ***!
  \****************************/
/*! exports provided: Hmi, View, ViewType, LayoutSettings, NavigationSettings, NaviModeType, NaviItemType, NaviItem, HeaderSettings, NotificationModeType, ZoomModeType, InputModeType, HeaderBarModeType, DocProfile, MyItem, GaugeSettings, GaugeProperty, GaugeEvent, GaugeActionsType, GaugeAction, GaugeActionBlink, GaugeStatus, GaugeActionStatus, GaugeEventType, GaugeEventActionType, GaugeRangeProperty, Variable, VariableRange, Alarm, WindowLink, SelElement, Event, DaqQuery, DaqResult, HelpData, Size, DateFormatType, TimeFormatType, CardWidget, CardWidgetType */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Hmi", function () { return Hmi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "View", function () { return View; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewType", function () { return ViewType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LayoutSettings", function () { return LayoutSettings; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NavigationSettings", function () { return NavigationSettings; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NaviModeType", function () { return NaviModeType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NaviItemType", function () { return NaviItemType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NaviItem", function () { return NaviItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HeaderSettings", function () { return HeaderSettings; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NotificationModeType", function () { return NotificationModeType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ZoomModeType", function () { return ZoomModeType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InputModeType", function () { return InputModeType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HeaderBarModeType", function () { return HeaderBarModeType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DocProfile", function () { return DocProfile; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MyItem", function () { return MyItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GaugeSettings", function () { return GaugeSettings; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GaugeProperty", function () { return GaugeProperty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GaugeEvent", function () { return GaugeEvent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GaugeActionsType", function () { return GaugeActionsType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GaugeAction", function () { return GaugeAction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GaugeActionBlink", function () { return GaugeActionBlink; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GaugeStatus", function () { return GaugeStatus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GaugeActionStatus", function () { return GaugeActionStatus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GaugeEventType", function () { return GaugeEventType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GaugeEventActionType", function () { return GaugeEventActionType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GaugeRangeProperty", function () { return GaugeRangeProperty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Variable", function () { return Variable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VariableRange", function () { return VariableRange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Alarm", function () { return Alarm; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WindowLink", function () { return WindowLink; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SelElement", function () { return SelElement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Event", function () { return Event; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DaqQuery", function () { return DaqQuery; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DaqResult", function () { return DaqResult; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HelpData", function () { return HelpData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Size", function () { return Size; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DateFormatType", function () { return DateFormatType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TimeFormatType", function () { return TimeFormatType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CardWidget", function () { return CardWidget; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CardWidgetType", function () { return CardWidgetType; });
/* harmony import */ var _device__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./device */ "./app/_models/device.ts");
            var __extends = (undefined && undefined.__extends) || (function () {
                var extendStatics = function (d, b) {
                    extendStatics = Object.setPrototypeOf ||
                        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
                    return extendStatics(d, b);
                };
                return function (d, b) {
                    extendStatics(d, b);
                    function __() { this.constructor = d; }
                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
                };
            })();

            var Hmi = /** @class */ (function () {
                function Hmi() {
                    /** Layout for navigation menu, header bar, ...  */
                    this.layout = new LayoutSettings();
                    /** Views list of hmi project */
                    this.views = [];
                }
                return Hmi;
            }());

            var View = /** @class */ (function () {
                function View() {
                    /** View id, random number */
                    this.id = '';
                    /** View name used as reference in configuration */
                    this.name = '';
                    /** View profile size, background color */
                    this.profile = new DocProfile();
                    /** Gauges settings list used in the view  */
                    this.items = {};
                    /** Variables (Tags) list used in the view */
                    this.variables = {};
                    /** Svg code content of the view  */
                    this.svgcontent = '';
                }
                return View;
            }());

            var ViewType;
            (function (ViewType) {
                ViewType["svg"] = "editor.view-svg";
                ViewType["cards"] = "editor.view-cards";
            })(ViewType || (ViewType = {}));
            var LayoutSettings = /** @class */ (function () {
                function LayoutSettings() {
                    /** Start view (home) */
                    this.start = '';
                    /** Left side navigation menu settings */
                    this.navigation = new NavigationSettings();
                    /** On top header settings */
                    this.header = new HeaderSettings();
                    /** Show development blue button (Home, Lab, Editor) */
                    this.showdev = true;
                    /** Show input dialog for input field */
                    this.inputdialog = 'false';
                    /** Hide navigation Header and sidebarmenu */
                    this.hidenavigation = false;
                    /** GUI Theme */
                    this.theme = '';
                }
                return LayoutSettings;
            }());

            var NavigationSettings = /** @class */ (function () {
                function NavigationSettings() {
                    this.mode = Object.keys(NaviModeType).find(function (key) { return NaviModeType[key] === NaviModeType.over; });
                    this.type = Object.keys(NaviItemType).find(function (key) { return NaviItemType[key] === NaviItemType.block; });
                }
                return NavigationSettings;
            }());

            var NaviModeType;
            (function (NaviModeType) {
                NaviModeType["void"] = "item.navsmode-none";
                NaviModeType["push"] = "item.navsmode-push";
                NaviModeType["over"] = "item.navsmode-over";
                NaviModeType["fix"] = "item.navsmode-fix";
            })(NaviModeType || (NaviModeType = {}));
            var NaviItemType;
            (function (NaviItemType) {
                NaviItemType["icon"] = "item.navtype-icons";
                NaviItemType["text"] = "item.navtype-text";
                NaviItemType["block"] = "item.navtype-icons-text-block";
                NaviItemType["inline"] = "item.navtype-icons-text-inline";
            })(NaviItemType || (NaviItemType = {}));
            var NaviItem = /** @class */ (function () {
                function NaviItem() {
                }
                return NaviItem;
            }());

            var HeaderSettings = /** @class */ (function () {
                function HeaderSettings() {
                    this.bkcolor = '#ffffff';
                    this.fgcolor = '#000000';
                }
                return HeaderSettings;
            }());

            var NotificationModeType;
            (function (NotificationModeType) {
                NotificationModeType["hide"] = "item.notifymode-hide";
                NotificationModeType["fix"] = "item.notifymode-fix";
                NotificationModeType["float"] = "item.notifymode-float";
            })(NotificationModeType || (NotificationModeType = {}));
            var ZoomModeType;
            (function (ZoomModeType) {
                ZoomModeType["disabled"] = "item.zoommode-disabled";
                ZoomModeType["enabled"] = "item.zoommode-enabled";
            })(ZoomModeType || (ZoomModeType = {}));
            var InputModeType;
            (function (InputModeType) {
                InputModeType["false"] = "item.inputmode-disabled";
                InputModeType["true"] = "item.inputmode-enabled";
            })(InputModeType || (InputModeType = {}));
            var HeaderBarModeType;
            (function (HeaderBarModeType) {
                HeaderBarModeType["true"] = "item.headerbarmode-hide";
                HeaderBarModeType["false"] = "item.headerbarmode-show";
            })(HeaderBarModeType || (HeaderBarModeType = {}));
            var DocProfile = /** @class */ (function () {
                function DocProfile() {
                    this.width = 640;
                    this.height = 480;
                    this.bkcolor = '';
                    this.margin = 10;
                }
                return DocProfile;
            }());

            var MyItem = /** @class */ (function () {
                function MyItem() {
                }
                return MyItem;
            }());

            var GaugeSettings = /** @class */ (function () {
                function GaugeSettings(id, type) {
                    this.id = id;
                    this.type = type;
                    this.name = '';
                    this.property = null; // set to GaugeProperty after upgrate
                    this.label = '';
                }
                return GaugeSettings;
            }());

            var GaugeProperty = /** @class */ (function () {
                function GaugeProperty() {
                    this.events = [];
                    this.actions = [];
                }
                return GaugeProperty;
            }());

            var GaugeEvent = /** @class */ (function () {
                function GaugeEvent() {
                    this.actoptions = {};
                }
                return GaugeEvent;
            }());

            var GaugeActionsType;
            (function (GaugeActionsType) {
                GaugeActionsType["hide"] = "shapes.action-hide";
                GaugeActionsType["show"] = "shapes.action-show";
                GaugeActionsType["blink"] = "shapes.action-blink";
                GaugeActionsType["stop"] = "shapes.action-stop";
                GaugeActionsType["clockwise"] = "shapes.action-clockwise";
                GaugeActionsType["anticlockwise"] = "shapes.action-anticlockwise";
                GaugeActionsType["downup"] = "shapes.action-downup";
            })(GaugeActionsType || (GaugeActionsType = {}));
            var GaugeAction = /** @class */ (function () {
                function GaugeAction() {
                    this.options = {};
                }
                return GaugeAction;
            }());

            var GaugeActionBlink = /** @class */ (function () {
                function GaugeActionBlink() {
                    this.strokeA = null;
                    this.strokeB = null;
                    this.fillA = null;
                    this.fillB = null;
                    this.interval = 1000;
                }
                return GaugeActionBlink;
            }());

            var GaugeStatus = /** @class */ (function () {
                function GaugeStatus() {
                    this.variablesValue = {};
                    this.onlyChange = false; // to process value only by change
                    this.takeValue = false; // to process value by check change with gauge value
                }
                return GaugeStatus;
            }());

            var GaugeActionStatus = /** @class */ (function () {
                function GaugeActionStatus(type) {
                    this.timer = null;
                    this.animr = null;
                    this.type = type;
                }
                return GaugeActionStatus;
            }());

            var GaugeEventType;
            (function (GaugeEventType) {
                GaugeEventType["click"] = "shapes.event-click";
            })(GaugeEventType || (GaugeEventType = {}));
            var GaugeEventActionType;
            (function (GaugeEventActionType) {
                GaugeEventActionType["onpage"] = "shapes.event-onpage";
                GaugeEventActionType["onwindow"] = "shapes.event-onwindow";
                GaugeEventActionType["ondialog"] = "shapes.event-ondialog";
                GaugeEventActionType["oniframe"] = "shapes.event-oniframe";
                GaugeEventActionType["oncard"] = "shapes.event-oncard";
                GaugeEventActionType["onSetValue"] = "shapes.event-onsetvalue";
                GaugeEventActionType["onToggleValue"] = "shapes.event-ontogglevalue";
                GaugeEventActionType["onSetInput"] = "shapes.event-onsetinput";
                GaugeEventActionType["onclose"] = "shapes.event-onclose";
            })(GaugeEventActionType || (GaugeEventActionType = {}));
            var GaugeRangeProperty = /** @class */ (function () {
                function GaugeRangeProperty() {
                }
                return GaugeRangeProperty;
            }());

            var Variable = /** @class */ (function () {
                function Variable(id, source, name) {
                    this.id = id;
                    this.name = name;
                    this.source = source;
                }
                return Variable;
            }());

            var VariableRange = /** @class */ (function () {
                function VariableRange() {
                }
                return VariableRange;
            }());

            var Alarm = /** @class */ (function (_super) {
                __extends(Alarm, _super);
                function Alarm() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                return Alarm;
            }(_device__WEBPACK_IMPORTED_MODULE_0__["Tag"]));

            var WindowLink = /** @class */ (function () {
                function WindowLink() {
                    this.name = '';
                    this.title = '';
                }
                return WindowLink;
            }());

            var SelElement = /** @class */ (function () {
                function SelElement() {
                    this.type = '';
                    this.ele = null;
                }
                return SelElement;
            }());

            var Event = /** @class */ (function () {
                function Event() {
                    this.id = '';
                    this.value = null;
                    this.dbg = '';
                }
                return Event;
            }());

            var DaqQuery = /** @class */ (function () {
                function DaqQuery() {
                }
                return DaqQuery;
            }());

            var DaqResult = /** @class */ (function () {
                function DaqResult() {
                }
                return DaqResult;
            }());

            var HelpData = /** @class */ (function () {
                function HelpData() {
                }
                return HelpData;
            }());

            var Size = /** @class */ (function () {
                function Size(h, w) {
                    this.height = h;
                    this.width = w;
                }
                return Size;
            }());

            var DateFormatType;
            (function (DateFormatType) {
                DateFormatType["YYYY_MM_DD"] = "1998/03/25";
                DateFormatType["MM_DD_YYYY"] = "03/25/1998";
                DateFormatType["DD_MM_YYYY"] = "25/03/1998";
                DateFormatType["MM_DD_YY"] = "03/25/98";
                DateFormatType["DD_MM_YY"] = "25/03/98";
            })(DateFormatType || (DateFormatType = {}));
            var TimeFormatType;
            (function (TimeFormatType) {
                TimeFormatType["hh_mm_ss"] = "16:58:10";
                TimeFormatType["hh_mm_ss_AA"] = "04:58:10 PM";
            })(TimeFormatType || (TimeFormatType = {}));
            var CardWidget = /** @class */ (function () {
                function CardWidget(type, data) {
                    this.zoom = 1;
                    this.type = type;
                    this.data = data;
                }
                return CardWidget;
            }());

            var CardWidgetType;
            (function (CardWidgetType) {
                CardWidgetType["view"] = "card.widget-view";
                CardWidgetType["alarms"] = "card.widget-alarms";
                CardWidgetType["table"] = "card.widget-table";
            })(CardWidgetType || (CardWidgetType = {}));


            /***/
}),

/***/ "./app/_models/project.ts":
/*!********************************!*\
  !*** ./app/_models/project.ts ***!
  \********************************/
/*! exports provided: ProjectData, ProjectDataCmdType */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProjectData", function () { return ProjectData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProjectDataCmdType", function () { return ProjectDataCmdType; });
/* harmony import */ var _device__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./device */ "./app/_models/device.ts");
/* harmony import */ var _hmi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hmi */ "./app/_models/hmi.ts");
/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../_helpers/utils */ "./app/_helpers/utils.ts");



            var ProjectData = /** @class */ (function () {
                function ProjectData() {
                    this.version = "1.01";
                    /** FUXA Server */
                    this.server = new _device__WEBPACK_IMPORTED_MODULE_0__["Device"](_helpers_utils__WEBPACK_IMPORTED_MODULE_2__["Utils"].getGUID(_device__WEBPACK_IMPORTED_MODULE_0__["DEVICE_PREFIX"]));
                    /** Hmi resource, layout, SVG, etc. */
                    this.hmi = new _hmi__WEBPACK_IMPORTED_MODULE_1__["Hmi"]();
                    /** Devices, connection, Tags, etc. */
                    this.devices = {};
                    /** Charts, Tags, colors, etc. */
                    this.charts = [];
                    /** Alarms, Tags, logic, level, colors, etc.  */
                    this.alarms = [];
                    /** not used yet */
                    this.texts = [];
                    /** Plugins, name, version */
                    this.plugin = [];
                }
                return ProjectData;
            }());

            var ProjectDataCmdType;
            (function (ProjectDataCmdType) {
                ProjectDataCmdType["SetDevice"] = "set-device";
                ProjectDataCmdType["DelDevice"] = "del-device";
                ProjectDataCmdType["SetView"] = "set-view";
                ProjectDataCmdType["DelView"] = "del-view";
                ProjectDataCmdType["HmiLayout"] = "layout";
                ProjectDataCmdType["Charts"] = "charts";
                ProjectDataCmdType["SetText"] = "set-text";
                ProjectDataCmdType["DelText"] = "del-text";
                ProjectDataCmdType["SetAlarm"] = "set-alarm";
                ProjectDataCmdType["DelAlarm"] = "del-alarm";
            })(ProjectDataCmdType || (ProjectDataCmdType = {}));


            /***/
}),

/***/ "./app/_models/settings.ts":
/*!*********************************!*\
  !*** ./app/_models/settings.ts ***!
  \*********************************/
/*! exports provided: AppSettings */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppSettings", function () { return AppSettings; });
            var AppSettings = /** @class */ (function () {
                function AppSettings() {
                    /** Editor language */
                    this.language = 'en';
                    /** Web server port */
                    this.uiPort = 8080;
                    /** Security access to enable user and authentication */
                    this.secureEnabled = false;
                    /** Expiration of authanticated token (15m)*/
                    this.tokenExpiresIn = '1h';
                }
                return AppSettings;
            }());



            /***/
}),

/***/ "./app/_models/text.ts":
/*!*****************************!*\
  !*** ./app/_models/text.ts ***!
  \*****************************/
/*! exports provided: Text */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Text", function () { return Text; });
            var Text = /** @class */ (function () {
                function Text() {
                }
                return Text;
            }());



            /***/
}),

/***/ "./app/_models/user.ts":
/*!*****************************!*\
  !*** ./app/_models/user.ts ***!
  \*****************************/
/*! exports provided: User, UserGroups */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "User", function () { return User; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserGroups", function () { return UserGroups; });
            var User = /** @class */ (function () {
                function User() {
                }
                return User;
            }());

            var UserGroups = /** @class */ (function () {
                function UserGroups() {
                }
                UserGroups.GroupsToValue = function (grps, extended) {
                    var result = 0;
                    if (grps) {
                        for (var i = 0; i < grps.length; i++) {
                            result += grps[i].id;
                        }
                    }
                    var shift = (extended) ? this.EXTENSION : 0;
                    return result << shift;
                };
                UserGroups.ValueToGroups = function (value, extended) {
                    var result = [];
                    var shift = (extended) ? this.EXTENSION : 0;
                    for (var i = 0; i < this.Groups.length; i++) {
                        if ((value >> shift) & this.Groups[i].id) {
                            result.push(this.Groups[i]);
                        }
                    }
                    return result;
                };
                UserGroups.GroupToLabel = function (value) {
                    var result = '';
                    for (var i = 0; i < this.Groups.length; i++) {
                        if (value & this.Groups[i].id) {
                            if (result) {
                                result += ',';
                            }
                            result += this.Groups[i].label;
                        }
                    }
                    return result;
                };
                UserGroups.ADMINMASK = [-1, 255];
                UserGroups.EXTENSION = 8;
                UserGroups.Groups = [{ id: 1, label: 'Viewer' },
                { id: 2, label: 'Operator' },
                { id: 4, label: 'Engineer' },
                { id: 8, label: 'Supervisor' },
                { id: 16, label: 'Manager' },
                { id: 32, label: 'Administrator' },
                { id: 64, label: 'G' },
                { id: 128, label: 'H' }];
                return UserGroups;
            }());



            /***/
}),

/***/ "./app/_services/app.service.ts":
/*!**************************************!*\
  !*** ./app/_services/app.service.ts ***!
  \**************************************/
/*! exports provided: AppService */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppService", function () { return AppService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../environments/environment */ "./environments/environment.ts");
/* harmony import */ var _settings_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./settings.service */ "./app/_services/settings.service.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };



            var AppService = /** @class */ (function () {
                function AppService(settingsService) {
                    this.settingsService = settingsService;
                    this.onShowModeChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
                }
                AppService_1 = AppService;
                AppService.prototype.setShowMode = function (mode) {
                    if (mode === 'editor' && this.settingsService.isEditModeLocked()) {
                        this.settingsService.notifyEditorLocked();
                        return this.showMode;
                    }
                    else {
                        this.showMode = mode;
                        this.onShowModeChanged.emit(this.showMode);
                        return this.showMode;
                    }
                };
                AppService.prototype.lockEditMode = function () {
                    this.settingsService.lockEditMode();
                };
                AppService.prototype.unlockEditMode = function () {
                    this.settingsService.unlockEditMode();
                };
                Object.defineProperty(AppService.prototype, "isDemoApp", {
                    get: function () {
                        return (_environments_environment__WEBPACK_IMPORTED_MODULE_1__["environment"].type === AppService_1.APP_DEMO);
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(AppService.prototype, "isClientApp", {
                    get: function () {
                        return (_environments_environment__WEBPACK_IMPORTED_MODULE_1__["environment"].type === AppService_1.APP_CLIENT);
                    },
                    enumerable: true,
                    configurable: true
                });
                var AppService_1;
                AppService.APP_DEMO = 'demo';
                AppService.APP_CLIENT = 'client';
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"])
                ], AppService.prototype, "onShowModeChanged", void 0);
                AppService = AppService_1 = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
                    __metadata("design:paramtypes", [_settings_service__WEBPACK_IMPORTED_MODULE_2__["SettingsService"]])
                ], AppService);
                return AppService;
            }());



            /***/
}),

/***/ "./app/_services/auth.service.ts":
/*!***************************************!*\
  !*** ./app/_services/auth.service.ts ***!
  \***************************************/
/*! exports provided: AuthService, UserProfile */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthService", function () { return AuthService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserProfile", function () { return UserProfile; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ "../node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "../node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _models_user__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../_models/user */ "./app/_models/user.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../environments/environment */ "./environments/environment.ts");
/* harmony import */ var _helpers_endpointapi__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../_helpers/endpointapi */ "./app/_helpers/endpointapi.ts");
            var __extends = (undefined && undefined.__extends) || (function () {
                var extendStatics = function (d, b) {
                    extendStatics = Object.setPrototypeOf ||
                        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
                    return extendStatics(d, b);
                };
                return function (d, b) {
                    extendStatics(d, b);
                    function __() { this.constructor = d; }
                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
                };
            })();
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };






            var AuthService = /** @class */ (function () {
                function AuthService(http) {
                    this.http = http;
                    this.endPointConfig = _helpers_endpointapi__WEBPACK_IMPORTED_MODULE_5__["EndPointApi"].getURL();
                    var user = JSON.parse(localStorage.getItem('currentUser'));
                    if (user) {
                        this.currentUser = user;
                    }
                }
                AuthService.prototype.signIn = function (username, password) {
                    var _this = this;
                    return new rxjs__WEBPACK_IMPORTED_MODULE_2__["Observable"](function (observer) {
                        if (_environments_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].serverEnabled) {
                            var header = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]({ 'Content-Type': 'application/json' });
                            return _this.http.post(_this.endPointConfig + '/api/signin', { username: username, password: password }).subscribe(function (result) {
                                if (result) {
                                    _this.currentUser = result.data;
                                    _this.saveUserToken(_this.currentUser);
                                }
                                observer.next();
                            }, function (err) {
                                console.error(err);
                                observer.error(err);
                            });
                        }
                        else {
                            observer.next();
                        }
                    });
                };
                AuthService.prototype.signOut = function () {
                    this.removeUser();
                };
                AuthService.prototype.getUser = function () {
                    return this.currentUser;
                };
                AuthService.prototype.getUserToken = function () {
                    if (this.currentUser) {
                        return this.currentUser.token;
                    }
                    else {
                        return null;
                    }
                };
                AuthService.prototype.isAdmin = function () {
                    if (this.currentUser && _models_user__WEBPACK_IMPORTED_MODULE_3__["UserGroups"].ADMINMASK.indexOf(this.currentUser.groups) !== -1) {
                        return true;
                    }
                    return false;
                };
                // to check by page refresh
                AuthService.prototype.saveUserToken = function (user) {
                    localStorage.setItem('currentUser', JSON.stringify(user));
                };
                AuthService.prototype.removeUser = function () {
                    this.currentUser = null;
                    localStorage.removeItem('currentUser');
                };
                AuthService = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
                    __metadata("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]])
                ], AuthService);
                return AuthService;
            }());

            var UserProfile = /** @class */ (function (_super) {
                __extends(UserProfile, _super);
                function UserProfile() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                return UserProfile;
            }(_models_user__WEBPACK_IMPORTED_MODULE_3__["User"]));



            /***/
}),

/***/ "./app/_services/hmi.service.ts":
/*!**************************************!*\
  !*** ./app/_services/hmi.service.ts ***!
  \**************************************/
/*! exports provided: HmiService, IoEventTypes */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HmiService", function () { return HmiService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IoEventTypes", function () { return IoEventTypes; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var socket_io_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! socket.io-client */ "../node_modules/socket.io-client/lib/index.js");
/* harmony import */ var socket_io_client__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(socket_io_client__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../environments/environment */ "./environments/environment.ts");
/* harmony import */ var _models_device__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../_models/device */ "./app/_models/device.ts");
/* harmony import */ var _models_hmi__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../_models/hmi */ "./app/_models/hmi.ts");
/* harmony import */ var _services_project_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../_services/project.service */ "./app/_services/project.service.ts");
/* harmony import */ var _helpers_endpointapi__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../_helpers/endpointapi */ "./app/_helpers/endpointapi.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ngx-toastr */ "../node_modules/ngx-toastr/fesm5/ngx-toastr.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @ngx-translate/core */ "../node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };









            var HmiService = /** @class */ (function () {
                function HmiService(projectService, translateService, toastr) {
                    this.projectService = projectService;
                    this.translateService = translateService;
                    this.toastr = toastr;
                    this.onVariableChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
                    this.onDeviceChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
                    this.onDeviceBrowse = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
                    this.onDeviceNodeAttribute = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
                    this.onDaqResult = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
                    this.onDeviceProperty = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
                    this.onHostInterfaces = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
                    this.onAlarmsStatus = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
                    this.onDeviceWebApiRequest = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
                    this.viewSignalGaugeMap = new ViewSignalGaugeMap();
                    this.variables = {};
                    this.alarms = { highhigh: 0, high: 0, low: 0, info: 0 };
                    this.endPointConfig = _helpers_endpointapi__WEBPACK_IMPORTED_MODULE_6__["EndPointApi"].getURL(); //"http://localhost:8080";
                    this.bridge = null;
                    if (_environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].serverEnabled) {
                        this.initSocket();
                    }
                }
                HmiService_1 = HmiService;
                /**
                 * Set signal value in current frontend signal array
                 * Called from Test and value beckame from backend
                 * @param sig
                 */
                HmiService.prototype.setSignalValue = function (sig) {
                    // update the signals array value
                    // notify the gui
                    this.onVariableChanged.emit(sig);
                };
                /**
                 * Set signal value to backend
                 * Value input in frontend
                 * @param sigId
                 * @param value
                 */
                HmiService.prototype.putSignalValue = function (sigId, value) {
                    if (this.variables[sigId]) {
                        this.variables[sigId].value = value;
                        if (this.socket) {
                            var device = this.projectService.getDeviceFromTagId(sigId);
                            if (device) {
                                this.variables[sigId]['source'] = device.id;
                            }
                            if (device.type === _models_device__WEBPACK_IMPORTED_MODULE_3__["DeviceType"].internal) {
                                this.setSignalValue(this.variables[sigId]);
                            }
                            else {
                                this.socket.emit(IoEventTypes.DEVICE_VALUES, { cmd: 'set', var: this.variables[sigId] });
                            }
                        }
                        else if (this.bridge) {
                            this.bridge.setDeviceValue(this.variables[sigId]);
                            this.setSignalValue(this.variables[sigId]);
                        }
                        else if (!_environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].serverEnabled) {
                            // for demo, only frontend
                            this.setSignalValue(this.variables[sigId]);
                        }
                    }
                };
                HmiService.prototype.getAllSignals = function () {
                    return this.variables;
                };
                //#region Communication Socket.io and Bridge
                /**
                 * Init the bridge for client communication
                 * @param bridge
                 * @returns
                 */
                HmiService.prototype.initClient = function (bridge) {
                    var _this = this;
                    if (!bridge)
                        return false;
                    this.bridge = bridge;
                    if (this.bridge) {
                        this.bridge.onDeviceValues = function (tags) { return _this.onDeviceValues(tags); };
                        this.askDeviceValues();
                        return true;
                    }
                    return false;
                };
                HmiService.prototype.onDeviceValues = function (tags) {
                    for (var idx = 0; idx < tags.length; idx++) {
                        var varid = tags[idx].id;
                        if (!this.variables[varid]) {
                            this.variables[varid] = new _models_hmi__WEBPACK_IMPORTED_MODULE_4__["Variable"](varid, null, null);
                        }
                        this.variables[varid].value = tags[idx].value;
                        this.variables[varid].error = tags[idx].error;
                        this.setSignalValue(this.variables[varid]);
                    }
                };
                /**
                 * Init the socket and subsribe to device status and signal value change
                 */
                HmiService.prototype.initSocket = function () {
                    var _this = this;
                    // check to init socket io
                    if (!this.socket) {
                        this.socket = socket_io_client__WEBPACK_IMPORTED_MODULE_1__(this.endPointConfig);
                        // devicse status
                        this.socket.on(IoEventTypes.DEVICE_STATUS, function (message) {
                            _this.onDeviceChanged.emit(message);
                            if (message.status === 'connect-error') {
                                var name_1 = message.id;
                                var device = _this.projectService.getDeviceFromId(message.id);
                                if (device)
                                    name_1 = device.name;
                                var msg_1 = '';
                                _this.translateService.get('msg.device-connection-error', { value: name_1 }).subscribe(function (txt) { msg_1 = txt; });
                                _this.toastr.error(msg_1, '', {
                                    timeOut: 3000,
                                    closeButton: true,
                                });
                            }
                        });
                        // device property
                        this.socket.on(IoEventTypes.DEVICE_PROPERTY, function (message) {
                            _this.onDeviceProperty.emit(message);
                        });
                        // devices values
                        this.socket.on(IoEventTypes.DEVICE_VALUES, function (message) {
                            for (var idx = 0; idx < message.values.length; idx++) {
                                var varid = message.values[idx].id;
                                if (!_this.variables[varid]) {
                                    _this.variables[varid] = new _models_hmi__WEBPACK_IMPORTED_MODULE_4__["Variable"](varid, null, null);
                                }
                                _this.variables[varid].value = message.values[idx].value;
                                _this.setSignalValue(_this.variables[varid]);
                            }
                        });
                        // device browse
                        this.socket.on(IoEventTypes.DEVICE_BROWSE, function (message) {
                            _this.onDeviceBrowse.emit(message);
                        });
                        // device node attribute
                        this.socket.on(IoEventTypes.DEVICE_NODE_ATTRIBUTE, function (message) {
                            _this.onDeviceNodeAttribute.emit(message);
                        });
                        // daq values
                        this.socket.on(IoEventTypes.DAQ_RESULT, function (message) {
                            _this.onDaqResult.emit(message);
                        });
                        // alarms status
                        this.socket.on(IoEventTypes.ALARMS_STATUS, function (alarmsstatus) {
                            _this.onAlarmsStatus.emit(alarmsstatus);
                        });
                        this.socket.on(IoEventTypes.HOST_INTERFACES, function (message) {
                            _this.onHostInterfaces.emit(message);
                        });
                        this.socket.on(IoEventTypes.DEVICE_WEBAPI_REQUEST, function (message) {
                            _this.onDeviceWebApiRequest.emit(message);
                        });
                        this.askDeviceValues();
                        this.askAlarmsStatus();
                    }
                };
                /**
                 * Ask device status to backend
                 */
                HmiService.prototype.askDeviceStatus = function () {
                    if (this.socket) {
                        this.socket.emit('device-status', 'get');
                    }
                };
                /**
                 * Ask device status to backend
                 */
                HmiService.prototype.askDeviceProperty = function (endpoint, type) {
                    if (this.socket) {
                        var msg = { endpoint: endpoint, type: type };
                        this.socket.emit(IoEventTypes.DEVICE_PROPERTY, msg);
                    }
                };
                /**
                 * Ask device webapi result to test
                 */
                HmiService.prototype.askWebApiProperty = function (property) {
                    if (this.socket) {
                        var msg = { property: property };
                        this.socket.emit(IoEventTypes.DEVICE_WEBAPI_REQUEST, msg);
                    }
                };
                /**
                 * Ask host interface available
                 */
                HmiService.prototype.askHostInterface = function () {
                    if (this.socket) {
                        this.socket.emit(IoEventTypes.HOST_INTERFACES, 'get');
                    }
                };
                /**
                 * Ask device status to backend
                 */
                HmiService.prototype.askDeviceValues = function () {
                    if (this.socket) {
                        this.socket.emit(IoEventTypes.DEVICE_VALUES, 'get');
                    }
                    else if (this.bridge) {
                        this.bridge.getDeviceValues(null);
                    }
                };
                /**
                 * Ask alarms status to backend
                 */
                HmiService.prototype.askAlarmsStatus = function () {
                    if (this.socket) {
                        this.socket.emit(IoEventTypes.ALARMS_STATUS, 'get');
                    }
                };
                HmiService.prototype.emitMappedSignalsGauge = function (domViewId) {
                    var sigsToEmit = this.viewSignalGaugeMap.getSignalIds(domViewId);
                    for (var idx = 0; idx < sigsToEmit.length; idx++) {
                        if (this.variables[sigsToEmit[idx]]) {
                            this.setSignalValue(this.variables[sigsToEmit[idx]]);
                        }
                    }
                };
                /**
                 * Ask device browse to backend
                 */
                HmiService.prototype.askDeviceBrowse = function (deviceId, node) {
                    if (this.socket) {
                        var msg = { device: deviceId, node: node };
                        this.socket.emit(IoEventTypes.DEVICE_BROWSE, msg);
                    }
                };
                /**
                 * Ask device node attribute to backend
                 */
                HmiService.prototype.askNodeAttributes = function (deviceId, node) {
                    if (this.socket) {
                        var msg = { device: deviceId, node: node };
                        this.socket.emit(IoEventTypes.DEVICE_NODE_ATTRIBUTE, msg);
                    }
                };
                HmiService.prototype.queryDaqValues = function (msg) {
                    if (this.socket) {
                        this.socket.emit(IoEventTypes.DAQ_QUERY, msg);
                    }
                };
                //#endregion
                //#region Signals Gauges Mapping
                HmiService.prototype.addSignal = function (signalId, ga) {
                    // add to variable list
                    if (!this.variables[signalId]) {
                        var v = new _models_hmi__WEBPACK_IMPORTED_MODULE_4__["Variable"](signalId, null, null);
                        this.variables[signalId] = v;
                    }
                };
                /**
                 * map the dom view with signal and gauge settings
                 * @param domViewId
                 * @param signalId
                 * @param ga
                 */
                HmiService.prototype.addSignalGaugeToMap = function (domViewId, signalId, ga) {
                    this.viewSignalGaugeMap.add(domViewId, signalId, ga);
                    // add to variable list
                    if (!this.variables[signalId]) {
                        var v = new _models_hmi__WEBPACK_IMPORTED_MODULE_4__["Variable"](signalId, null, null);
                        this.variables[signalId] = v;
                    }
                };
                /**
                 * remove mapped dom view Gauges
                 * @param domViewId
                 * return the removed gauge settings id list with signal id binded
                 */
                HmiService.prototype.removeSignalGaugeFromMap = function (domViewId) {
                    var _this = this;
                    var sigsIdremoved = this.viewSignalGaugeMap.getSignalIds(domViewId);
                    var result = {};
                    sigsIdremoved.forEach(function (sigid) {
                        var gaugesSettings = _this.viewSignalGaugeMap.signalsGauges(domViewId, sigid);
                        if (gaugesSettings) {
                            result[sigid] = gaugesSettings.map(function (gs) { return gs.id; });
                        }
                    });
                    this.viewSignalGaugeMap.remove(domViewId);
                    return result;
                };
                /**
                 * get the gauges settings list of mapped dom view with the signal
                 * @param domViewId
                 * @param sigid
                 */
                HmiService.prototype.getMappedSignalsGauges = function (domViewId, sigid) {
                    return Object.values(this.viewSignalGaugeMap.signalsGauges(domViewId, sigid));
                };
                /**
                 * get all signals property mapped in all dom views
                 * @param fulltext a copy with item name and source
                 */
                HmiService.prototype.getMappedVariables = function (fulltext) {
                    var _this = this;
                    var result = [];
                    this.viewSignalGaugeMap.getAllSignalIds().forEach(function (sigid) {
                        if (_this.variables[sigid]) {
                            var toadd = _this.variables[sigid];
                            if (fulltext) {
                                toadd = Object.assign({}, _this.variables[sigid]);
                                var device = _this.projectService.getDeviceFromTagId(toadd.id);
                                if (device) {
                                    toadd['source'] = device.name;
                                    if (device.tags[toadd.id]) {
                                        toadd['name'] = _this.getTagLabel(device.tags[toadd.id]);
                                    }
                                }
                            }
                            result.push(toadd);
                        }
                    });
                    return result;
                };
                /**
                 * get singal property, complate the signal property with device tag property
                 * @param sigid
                 * @param fulltext
                 */
                HmiService.prototype.getMappedVariable = function (sigid, fulltext) {
                    if (!this.variables[sigid])
                        return null;
                    if (this.variables[sigid]) {
                        var result = this.variables[sigid];
                        if (fulltext) {
                            result = Object.assign({}, this.variables[sigid]);
                            var device = this.projectService.getDeviceFromTagId(result.id);
                            if (device) {
                                result['source'] = device.name;
                                if (device.tags[result.id]) {
                                    result['name'] = this.getTagLabel(device.tags[result.id]);
                                }
                            }
                        }
                        return result;
                    }
                };
                HmiService.prototype.getTagLabel = function (tag) {
                    if (tag.label) {
                        return tag.label;
                    }
                    else {
                        return tag.name;
                    }
                };
                //#endregion
                //#region Chart functions
                HmiService.prototype.getChart = function (id) {
                    return this.projectService.getChart(id);
                };
                HmiService.prototype.getChartSignal = function (id) {
                    var chart = this.projectService.getChart(id);
                    if (chart) {
                        var varsId_1 = [];
                        chart.lines.forEach(function (line) {
                            varsId_1.push(line.id);
                        });
                        return varsId_1;
                    }
                };
                //#endregion
                //#region Current Alarms functions
                HmiService.prototype.getAlarmsValues = function () {
                    return this.projectService.getAlarmsValues();
                };
                HmiService.prototype.setAlarmAck = function (alarmName) {
                    return this.projectService.setAlarmAck(alarmName);
                };
                //#endregion
                //#region My Static functions
                HmiService.toVariableId = function (src, name) {
                    return src + HmiService_1.separator + name;
                };
                var HmiService_1;
                HmiService.separator = '^~^';
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"])
                ], HmiService.prototype, "onVariableChanged", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"])
                ], HmiService.prototype, "onDeviceChanged", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"])
                ], HmiService.prototype, "onDeviceBrowse", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"])
                ], HmiService.prototype, "onDeviceNodeAttribute", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"])
                ], HmiService.prototype, "onDaqResult", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"])
                ], HmiService.prototype, "onDeviceProperty", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"])
                ], HmiService.prototype, "onHostInterfaces", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"])
                ], HmiService.prototype, "onAlarmsStatus", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"])
                ], HmiService.prototype, "onDeviceWebApiRequest", void 0);
                HmiService = HmiService_1 = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
                    __metadata("design:paramtypes", [_services_project_service__WEBPACK_IMPORTED_MODULE_5__["ProjectService"],
                    _ngx_translate_core__WEBPACK_IMPORTED_MODULE_8__["TranslateService"],
                    ngx_toastr__WEBPACK_IMPORTED_MODULE_7__["ToastrService"]])
                ], HmiService);
                return HmiService;
            }());

            var ViewSignalGaugeMap = /** @class */ (function () {
                function ViewSignalGaugeMap() {
                    this.views = {};
                }
                ViewSignalGaugeMap.prototype.add = function (domViewId, signalId, ga) {
                    if (!this.views[domViewId]) {
                        this.views[domViewId] = {};
                    }
                    if (!this.views[domViewId][signalId]) {
                        this.views[domViewId][signalId] = [];
                    }
                    this.views[domViewId][signalId].push(ga);
                    return true;
                };
                ViewSignalGaugeMap.prototype.remove = function (domViewId) {
                    delete this.views[domViewId];
                    return;
                };
                ViewSignalGaugeMap.prototype.signalsGauges = function (domViewId, sigid) {
                    return this.views[domViewId][sigid];
                };
                ViewSignalGaugeMap.prototype.getSignalIds = function (domViewId) {
                    var result = [];
                    if (this.views[domViewId]) {
                        result = Object.keys(this.views[domViewId]);
                    }
                    return result;
                };
                ViewSignalGaugeMap.prototype.getAllSignalIds = function () {
                    var result = [];
                    Object.values(this.views).forEach(function (evi) {
                        Object.keys(evi).forEach(function (key) {
                            if (result.indexOf(key) === -1) {
                                result.push(key);
                            }
                        });
                    });
                    return result;
                };
                return ViewSignalGaugeMap;
            }());
            var IoEventTypes;
            (function (IoEventTypes) {
                IoEventTypes["DEVICE_STATUS"] = "device-status";
                IoEventTypes["DEVICE_PROPERTY"] = "device-property";
                IoEventTypes["DEVICE_VALUES"] = "device-values";
                IoEventTypes["DEVICE_BROWSE"] = "device-browse";
                IoEventTypes["DEVICE_NODE_ATTRIBUTE"] = "device-node-attribute";
                IoEventTypes["DEVICE_WEBAPI_REQUEST"] = "device-webapi-request";
                IoEventTypes["DAQ_QUERY"] = "daq-query";
                IoEventTypes["DAQ_RESULT"] = "daq-result";
                IoEventTypes["DAQ_ERROR"] = "daq-error";
                IoEventTypes["ALARMS_STATUS"] = "alarms-status";
                IoEventTypes["HOST_INTERFACES"] = "host-interfaces";
            })(IoEventTypes || (IoEventTypes = {}));


            /***/
}),

/***/ "./app/_services/plugin.service.ts":
/*!*****************************************!*\
  !*** ./app/_services/plugin.service.ts ***!
  \*****************************************/
/*! exports provided: PluginService */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PluginService", function () { return PluginService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ "../node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "../node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _helpers_endpointapi__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../_helpers/endpointapi */ "./app/_helpers/endpointapi.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../environments/environment */ "./environments/environment.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-toastr */ "../node_modules/ngx-toastr/fesm5/ngx-toastr.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ngx-translate/core */ "../node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };







            var PluginService = /** @class */ (function () {
                function PluginService(http, translateService, toastr) {
                    this.http = http;
                    this.translateService = translateService;
                    this.toastr = toastr;
                    this.onPluginsChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
                    this.endPointConfig = _helpers_endpointapi__WEBPACK_IMPORTED_MODULE_3__["EndPointApi"].getURL();
                }
                PluginService.prototype.getPlugins = function () {
                    return this.http.get(this.endPointConfig + '/api/plugins');
                };
                PluginService.prototype.installPlugin = function (plugin) {
                    var _this = this;
                    return new rxjs__WEBPACK_IMPORTED_MODULE_2__["Observable"](function (observer) {
                        if (_environments_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].serverEnabled) {
                            var header = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]({ 'Content-Type': 'application/json' });
                            _this.http.post(_this.endPointConfig + '/api/plugins', { headers: header, params: plugin }).subscribe(function (result) {
                                observer.next();
                                _this.onPluginsChanged.emit();
                            }, function (err) {
                                console.error(err);
                                observer.error(err);
                            });
                        }
                        else {
                            observer.next();
                        }
                    });
                };
                PluginService.prototype.removePlugin = function (plugin) {
                    var _this = this;
                    return new rxjs__WEBPACK_IMPORTED_MODULE_2__["Observable"](function (observer) {
                        if (_environments_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].serverEnabled) {
                            var header = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]({ 'Content-Type': 'application/json' });
                            _this.http.delete(_this.endPointConfig + '/api/plugins', { headers: header, params: { param: plugin.name } }).subscribe(function (result) {
                                observer.next();
                                _this.onPluginsChanged.emit();
                            }, function (err) {
                                console.error(err);
                                observer.error(err);
                            });
                        }
                        else {
                            observer.next();
                        }
                    });
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"])
                ], PluginService.prototype, "onPluginsChanged", void 0);
                PluginService = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
                    __metadata("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"],
                    _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateService"],
                    ngx_toastr__WEBPACK_IMPORTED_MODULE_5__["ToastrService"]])
                ], PluginService);
                return PluginService;
            }());



            /***/
}),

/***/ "./app/_services/project.service.ts":
/*!******************************************!*\
  !*** ./app/_services/project.service.ts ***!
  \******************************************/
/*! exports provided: ProjectService, ServerSettings, SaveMode */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProjectService", function () { return ProjectService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ServerSettings", function () { return ServerSettings; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SaveMode", function () { return SaveMode; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "../node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../environments/environment */ "./environments/environment.ts");
/* harmony import */ var _models_project__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../_models/project */ "./app/_models/project.ts");
/* harmony import */ var _models_device__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../_models/device */ "./app/_models/device.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-toastr */ "../node_modules/ngx-toastr/fesm5/ngx-toastr.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ngx-translate/core */ "../node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js");
/* harmony import */ var _rcgi_resource_storage_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./rcgi/resource-storage.service */ "./app/_services/rcgi/resource-storage.service.ts");
/* harmony import */ var _rcgi_resdemo_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./rcgi/resdemo.service */ "./app/_services/rcgi/resdemo.service.ts");
/* harmony import */ var _rcgi_resclient_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./rcgi/resclient.service */ "./app/_services/rcgi/resclient.service.ts");
/* harmony import */ var _rcgi_reswebapi_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./rcgi/reswebapi.service */ "./app/_services/rcgi/reswebapi.service.ts");
/* harmony import */ var _app_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./app.service */ "./app/_services/app.service.ts");
/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../_helpers/utils */ "./app/_helpers/utils.ts");
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! file-saver */ "../node_modules/file-saver/dist/FileSaver.min.js");
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(file_saver__WEBPACK_IMPORTED_MODULE_13__);
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };














            var ProjectService = /** @class */ (function () {
                function ProjectService(resewbApiService, resDemoService, resClientService, appService, translateService, toastr) {
                    var _this = this;
                    this.resewbApiService = resewbApiService;
                    this.resDemoService = resDemoService;
                    this.resClientService = resClientService;
                    this.appService = appService;
                    this.translateService = translateService;
                    this.toastr = toastr;
                    this.onSaveCurrent = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
                    this.onLoadHmi = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
                    this.projectData = new _models_project__WEBPACK_IMPORTED_MODULE_3__["ProjectData"](); // Project data
                    this.AppId = '';
                    this.projectOld = '';
                    this.ready = false;
                    this.storage = resewbApiService;
                    if (appService.isDemoApp) {
                        this.storage = resDemoService;
                    }
                    else if (appService.isClientApp) {
                        this.storage = resClientService;
                    }
                    // console.log("mode:", environment.type);
                    this.storage.getAppId = function () { return _this.getAppId(); };
                    this.storage.onRefreshProject = function () { return _this.onRefreshProject(); };
                    this.storage.checkServer().subscribe(function (result) {
                        if (result) {
                            _this.serverSettings = result;
                            _this.load();
                        }
                    }, function (error) {
                        console.error('project.service err: ' + error);
                        _this.load();
                        _this.notifyServerError();
                    });
                }
                ProjectService.prototype.getAppId = function () {
                    return this.AppId;
                };
                ProjectService.prototype.init = function (bridge) {
                    this.storage.init(bridge);
                    if (this.appService.isClientApp) {
                    }
                    this.reload();
                };
                ProjectService.prototype.onRefreshProject = function () {
                    var _this = this;
                    this.storage.getStorageProject().subscribe(function (prj) {
                        if (prj) {
                            _this.projectData = prj;
                            // copy to check before save
                            _this.projectOld = JSON.parse(JSON.stringify(_this.projectData));
                            _this.ready = true;
                            _this.notifyToLoadHmi();
                        }
                        else {
                            var msg_1 = '';
                            _this.translateService.get('msg.get-project-void').subscribe(function (txt) { msg_1 = txt; });
                            console.warn(msg_1);
                            // this.notifySaveError(msg);
                        }
                    }, function (err) {
                        console.error('FUXA onRefreshProject error', err);
                    });
                    return true;
                };
                //#region Load and Save
                /**
                 * Load Project from Server if enable.
                 * From Local Storage, from 'assets' if demo or create a local project
                 */
                ProjectService.prototype.load = function () {
                    var _this = this;
                    this.storage.getStorageProject().subscribe(function (prj) {
                        if (!prj && _this.appService.isDemoApp) {
                            console.log('create demo');
                            _this.setNewProject();
                        }
                        else if (_this.appService.isClientApp) {
                            if (!prj && _this.storage.isReady) {
                                _this.setNewProject();
                            }
                            else {
                                _this.projectData = prj;
                            }
                            _this.ready = true;
                            _this.notifyToLoadHmi();
                        }
                        else {
                            _this.projectData = prj;
                            // copy to check before save
                            _this.projectOld = JSON.parse(JSON.stringify(_this.projectData));
                            _this.ready = true;
                            _this.notifyToLoadHmi();
                        }
                    }, function (err) {
                        console.error('FUXA load error', err);
                    });
                };
                /**
                 * Save Project
                 */
                ProjectService.prototype.save = function () {
                    var _this = this;
                    // check project change don't work some svg object change the order and this to check isn't easy...boooo
                    this.storage.setServerProject(this.projectData).subscribe(function (result) {
                        _this.load();
                        var msg = '';
                        _this.translateService.get('msg.project-save-success').subscribe(function (txt) { msg = txt; });
                        _this.toastr.success(msg);
                    }, function (err) {
                        console.error(err);
                        var msg = '';
                        _this.translateService.get('msg.project-save-error').subscribe(function (txt) { msg = txt; });
                        _this.toastr.error(msg, '', {
                            timeOut: 3000,
                            closeButton: true,
                            disableTimeOut: true
                        });
                    });
                    return true;
                };
                ProjectService.prototype.saveAs = function () {
                    var filename = 'fuxa-project.json';
                    var date = new Date();
                    var content = JSON.stringify(this.convertToSave(this.getProject()));
                    var blob = new Blob([content], { type: 'text/plain;charset=utf-8' });
                    file_saver__WEBPACK_IMPORTED_MODULE_13__["saveAs"](blob, filename);
                };
                ProjectService.prototype.reload = function () {
                    this.load();
                };
                /**
                 * Remove Tag value to save without value
                 * Value was added by HmiService from socketIo event
                 * @param prj
                 */
                ProjectService.prototype.convertToSave = function (prj) {
                    var result = JSON.parse(JSON.stringify(prj));
                    if (this.appService.isClientApp) {
                        var sprj = _rcgi_resource_storage_service__WEBPACK_IMPORTED_MODULE_7__["ResourceStorageService"].sanitizeProject(prj);
                        result = JSON.parse(JSON.stringify(sprj));
                    }
                    for (var devid in result.devices) {
                        for (var tagid in result.devices[devid].tags) {
                            delete result.devices[devid].tags[tagid].value;
                        }
                    }
                    return result;
                };
                //#endregion
                //#region Device to Save
                /**
                 * Add or update Device to Project.
                 * Save to Server
                 * @param device
                 * @param old
                 */
                ProjectService.prototype.setDevice = function (device, old, security) {
                    var _this = this;
                    if (this.projectData.devices) {
                        this.projectData.devices[device.id] = device;
                        this.storage.setDeviceSecurity(device.id, security).subscribe(function () {
                            _this.storage.setServerProjectData(_models_project__WEBPACK_IMPORTED_MODULE_3__["ProjectDataCmdType"].SetDevice, device, _this.projectData).subscribe(function (result) {
                                if (old && old.id !== device.id) {
                                    _this.removeDevice(old);
                                }
                            }, function (err) {
                                console.error(err);
                                _this.notifySaveError(err);
                            });
                        }, function (err) {
                            console.error(err);
                            _this.notifySaveError(err);
                        });
                    }
                };
                ProjectService.prototype.setDeviceTags = function (device) {
                    var _this = this;
                    this.projectData.devices[device.id] = device;
                    this.storage.setServerProjectData(_models_project__WEBPACK_IMPORTED_MODULE_3__["ProjectDataCmdType"].SetDevice, device, this.projectData).subscribe(function (result) {
                    }, function (err) {
                        console.error(err);
                        _this.notifySaveError(err);
                    });
                };
                /**
                 * Remove Device from Project.
                 * Save to Server
                 * @param device
                 */
                ProjectService.prototype.removeDevice = function (device) {
                    var _this = this;
                    delete this.projectData.devices[device.id];
                    this.storage.setServerProjectData(_models_project__WEBPACK_IMPORTED_MODULE_3__["ProjectDataCmdType"].DelDevice, device, this.projectData).subscribe(function (result) {
                    }, function (err) {
                        console.error(err);
                        _this.notifySaveError(err);
                    });
                    this.storage.setDeviceSecurity(device.id, '').subscribe(function () {
                    }, function (err) {
                        console.error(err);
                        _this.notifySaveError(err);
                    });
                };
                ProjectService.prototype.getDeviceSecurity = function (id) {
                    return this.storage.getDeviceSecurity(id);
                };
                //#endregion
                //#region View to Save
                /**
                 * Add or update View to Project.
                 * Save to Server
                 * @param view
                 */
                ProjectService.prototype.setView = function (view) {
                    var _this = this;
                    var v = null;
                    for (var i = 0; i < this.projectData.hmi.views.length; i++) {
                        if (this.projectData.hmi.views[i].id === view.id) {
                            v = this.projectData.hmi.views[i];
                        }
                    }
                    if (v) {
                        v = view;
                    }
                    else {
                        this.projectData.hmi.views.push(view);
                    }
                    this.storage.setServerProjectData(_models_project__WEBPACK_IMPORTED_MODULE_3__["ProjectDataCmdType"].SetView, view, this.projectData).subscribe(function (result) {
                    }, function (err) {
                        console.error(err);
                        _this.notifySaveError(err);
                    });
                };
                /**
                 * Remove the View from Project
                 * Delete from Server
                 * @param view
                 */
                ProjectService.prototype.removeView = function (view) {
                    var _this = this;
                    for (var i = 0; i < this.projectData.hmi.views.length; i++) {
                        if (this.projectData.hmi.views[i].id === view.id) {
                            this.projectData.hmi.views.splice(i, 1);
                            break;
                        }
                    }
                    this.storage.setServerProjectData(_models_project__WEBPACK_IMPORTED_MODULE_3__["ProjectDataCmdType"].DelView, view, this.projectData).subscribe(function (result) {
                    }, function (err) {
                        console.error(err);
                        _this.notifySaveError(err);
                    });
                };
                //#endregion
                //#region Hmi, Layout resource json struct
                /**
                 * get hmi resource
                 */
                ProjectService.prototype.getHmi = function () {
                    return (this.ready && this.projectData) ? this.projectData.hmi : null;
                };
                ProjectService.prototype.setLayout = function (layout) {
                    this.projectData.hmi.layout = layout;
                    this.saveLayout();
                };
                ProjectService.prototype.setLayoutTheme = function (theme) {
                    this.projectData.hmi.layout.theme = theme;
                    this.saveLayout();
                };
                ProjectService.prototype.getLayoutTheme = function () {
                    if (this.projectData.hmi.layout) {
                        return this.projectData.hmi.layout.theme;
                    }
                    return null;
                };
                ProjectService.prototype.saveLayout = function () {
                    var _this = this;
                    this.storage.setServerProjectData(_models_project__WEBPACK_IMPORTED_MODULE_3__["ProjectDataCmdType"].HmiLayout, this.projectData.hmi.layout, this.projectData).subscribe(function (result) {
                    }, function (err) {
                        console.error(err);
                        _this.notifySaveError(err);
                    });
                };
                //#endregion
                //#region Charts resource
                /**
                 * get charts resource
                 */
                ProjectService.prototype.getCharts = function () {
                    return (this.projectData) ? (this.projectData.charts) ? this.projectData.charts : [] : null;
                };
                ProjectService.prototype.getChart = function (id) {
                    for (var i = 0; i < this.projectData.charts.length; i++) {
                        if (this.projectData.charts[i].id === id) {
                            return this.projectData.charts[i];
                        }
                    }
                };
                /**
                 * save the charts to project
                 * @param charts
                 */
                ProjectService.prototype.setCharts = function (charts) {
                    var _this = this;
                    this.projectData.charts = charts;
                    this.storage.setServerProjectData(_models_project__WEBPACK_IMPORTED_MODULE_3__["ProjectDataCmdType"].Charts, charts, this.projectData).subscribe(function (result) {
                    }, function (err) {
                        console.error(err);
                        _this.notifySaveError(err);
                    });
                };
                //#endregion
                //#region Alarms resource    
                /**
                 * get alarms resource
                 */
                ProjectService.prototype.getAlarms = function () {
                    return (this.projectData) ? (this.projectData.alarms) ? this.projectData.alarms : [] : null;
                };
                /**
                 * save the alarm to project
                 * @param text
                 */
                ProjectService.prototype.setAlarm = function (alarm, old) {
                    var _this = this;
                    return new rxjs__WEBPACK_IMPORTED_MODULE_1__["Observable"](function (observer) {
                        if (!_this.projectData.alarms) {
                            _this.projectData.alarms = [];
                        }
                        var exist = _this.projectData.alarms.find(function (tx) { return tx.name === alarm.name; });
                        if (exist) {
                            exist.property = alarm.property;
                            exist.highhigh = alarm.highhigh;
                            exist.high = alarm.high;
                            exist.low = alarm.low;
                            exist.info = alarm.info;
                            exist.value = alarm.value;
                        }
                        else {
                            _this.projectData.alarms.push(alarm);
                        }
                        _this.storage.setServerProjectData(_models_project__WEBPACK_IMPORTED_MODULE_3__["ProjectDataCmdType"].SetAlarm, alarm, _this.projectData).subscribe(function (result) {
                            if (old && old.name && old.name !== alarm.name) {
                                _this.removeAlarm(old).subscribe(function (result) {
                                    observer.next();
                                });
                            }
                            else {
                                observer.next();
                            }
                        }, function (err) {
                            console.error(err);
                            _this.notifySaveError(err);
                            observer.error(err);
                        });
                    });
                };
                /**
                 * remove the text from project
                 * @param text
                 */
                ProjectService.prototype.removeAlarm = function (alarm) {
                    var _this = this;
                    return new rxjs__WEBPACK_IMPORTED_MODULE_1__["Observable"](function (observer) {
                        if (_this.projectData.alarms) {
                            for (var i = 0; i < _this.projectData.alarms.length; i++) {
                                if (_this.projectData.alarms[i].name === alarm.name) {
                                    _this.projectData.alarms.splice(i, 1);
                                    break;
                                }
                            }
                        }
                        _this.storage.setServerProjectData(_models_project__WEBPACK_IMPORTED_MODULE_3__["ProjectDataCmdType"].DelAlarm, alarm, _this.projectData).subscribe(function (result) {
                            observer.next();
                        }, function (err) {
                            console.error(err);
                            _this.notifySaveError(err);
                            observer.error(err);
                        });
                    });
                };
                ProjectService.prototype.getAlarmsValues = function () {
                    return this.storage.getAlarmsValues();
                };
                ProjectService.prototype.setAlarmAck = function (name) {
                    return this.storage.setAlarmAck(name);
                };
                //#endregion
                //#region Texts resource
                /**
                 * get texts resource
                 */
                ProjectService.prototype.getTexts = function () {
                    return (this.projectData) ? (this.projectData.texts) ? this.projectData.texts : [] : null;
                };
                /**
                 * save the text to project
                 * @param text
                 */
                ProjectService.prototype.setText = function (text, old) {
                    var _this = this;
                    if (!this.projectData.texts) {
                        this.projectData.texts = [];
                    }
                    var exist = this.projectData.texts.find(function (tx) { return tx.name === text.name; });
                    if (exist) {
                        exist.group = text.group;
                        exist.value = text.value;
                    }
                    else {
                        this.projectData.texts.push(text);
                    }
                    this.storage.setServerProjectData(_models_project__WEBPACK_IMPORTED_MODULE_3__["ProjectDataCmdType"].SetText, text, this.projectData).subscribe(function (result) {
                        if (old && old.name && old.name !== text.name) {
                            _this.removeText(old);
                        }
                    }, function (err) {
                        console.error(err);
                        _this.notifySaveError(err);
                    });
                };
                /**
                 * remove the text from project
                 * @param text
                 */
                ProjectService.prototype.removeText = function (text) {
                    var _this = this;
                    if (this.projectData.texts) {
                        for (var i = 0; i < this.projectData.texts.length; i++) {
                            if (this.projectData.texts[i].name === text.name) {
                                this.projectData.texts.splice(i, 1);
                                break;
                            }
                        }
                    }
                    this.storage.setServerProjectData(_models_project__WEBPACK_IMPORTED_MODULE_3__["ProjectDataCmdType"].DelText, text, this.projectData).subscribe(function (result) {
                    }, function (err) {
                        console.error(err);
                        _this.notifySaveError(err);
                    });
                };
                //#endregion
                //#region Notify
                ProjectService.prototype.notifyToLoadHmi = function () {
                    this.onLoadHmi.emit(true);
                };
                ProjectService.prototype.notifySaveError = function (err) {
                    console.error('FUXA notifySaveError error', err);
                    var msg = null;
                    this.translateService.get('msg.project-save-error').subscribe(function (txt) { msg = txt; });
                    if (err.status === 401) {
                        this.translateService.get('msg.project-save-unauthorized').subscribe(function (txt) { msg = txt; });
                    }
                    if (msg) {
                        this.toastr.error(msg, '', {
                            timeOut: 3000,
                            closeButton: true,
                            disableTimeOut: true
                        });
                    }
                };
                ProjectService.prototype.notifyServerError = function () {
                    console.error('FUXA notifyServerError error');
                    var msg = null;
                    this.translateService.get('msg.server-connection-error').subscribe(function (txt) { msg = txt; });
                    if (msg) {
                        this.toastr.error(msg, '', {
                            timeOut: 3000,
                            closeButton: true,
                            disableTimeOut: true
                        });
                    }
                };
                //#endregion
                /**
                 * Set Project data and save resource to backend
                 * Used from open and upload JSON Project file
                 * @param prj project data to save
                 */
                ProjectService.prototype.setProject = function (prj, notify) {
                    this.projectData = prj;
                    if (this.appService.isClientApp) {
                        this.projectData = _rcgi_resource_storage_service__WEBPACK_IMPORTED_MODULE_7__["ResourceStorageService"].defileProject(prj);
                    }
                    this.save();
                };
                ProjectService.prototype.setNewProject = function () {
                    this.projectData = new _models_project__WEBPACK_IMPORTED_MODULE_3__["ProjectData"]();
                    var server = new _models_device__WEBPACK_IMPORTED_MODULE_4__["Device"](_helpers_utils__WEBPACK_IMPORTED_MODULE_12__["Utils"].getGUID(_models_device__WEBPACK_IMPORTED_MODULE_4__["DEVICE_PREFIX"]));
                    server.name = 'FUXA';
                    server.id = '0';
                    server.type = _models_device__WEBPACK_IMPORTED_MODULE_4__["DeviceType"].FuxaServer;
                    server.property = new _models_device__WEBPACK_IMPORTED_MODULE_4__["DeviceNetProperty"]();
                    if (!this.appService.isClientApp) {
                        this.projectData.server = server;
                    }
                    else {
                        delete this.projectData.server;
                    }
                    this.save();
                };
                ProjectService.prototype.getProject = function () {
                    return this.projectData;
                };
                ProjectService.prototype.checkServer = function () {
                    return this.storage.checkServer();
                };
                ProjectService.prototype.getServer = function () {
                    return (this.projectData) ? this.projectData.server : null;
                };
                ProjectService.prototype.getDevices = function () {
                    return (this.projectData) ? this.projectData.devices : {};
                };
                ProjectService.prototype.getDeviceFromId = function (id) {
                    var _this = this;
                    var result;
                    Object.keys(this.projectData.devices).forEach(function (k) {
                        if (_this.projectData.devices[k].id === id) {
                            result = _this.projectData.devices[k];
                        }
                    });
                    return result;
                };
                ProjectService.prototype.getDeviceFromTagId = function (tagId) {
                    var devices = Object.values(this.projectData.devices);
                    for (var i = 0; i < devices.length; i++) {
                        if (devices[i].tags[tagId]) {
                            return devices[i];
                        }
                    }
                };
                /**
                 * Send Save Project to to editor component
                 * @param saveas
                 */
                ProjectService.prototype.saveProject = function (mode) {
                    if (mode === void 0) { mode = SaveMode.Save; }
                    this.onSaveCurrent.emit(mode);
                };
                ProjectService.prototype.isSecurityEnabled = function () {
                    if (_environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].serverEnabled) {
                        if (this.serverSettings && !this.serverSettings.secureEnabled) {
                            return false;
                        }
                        return true;
                    }
                    else {
                        return false;
                    }
                };
                ProjectService.prototype._deepEquals = function (x, y) {
                    if (JSON.stringify(x) === JSON.stringify(y)) {
                        return true; // if both x and y are null or undefined and exactly the same
                    }
                    else {
                        try {
                            for (var p in x) {
                                if (!x.hasOwnProperty(p)) {
                                    continue; // other properties were tested using x.constructor === y.constructor
                                }
                                if (!y.hasOwnProperty(p)) {
                                    return false; // allows to compare x[ p ] and y[ p ] when set to undefined
                                }
                                if (p === 'svgcontent') {
                                    // the xml have to be transform in json
                                    var parser = new DOMParser(); // initialize dom parser
                                    var aDOM = parser.parseFromString(x[p], "text/xml");
                                    var bDOM = parser.parseFromString(y[p], "text/xml");
                                    var a = this._xml2json(aDOM);
                                    var b = this._xml2json(bDOM);
                                    return this._deepEquals(a, b);
                                }
                                if (x[p] === y[p]) {
                                    continue; // if they have the same strict value or identity then they are equal
                                }
                                if (!this._deepEquals(x[p], y[p])) {
                                    return false;
                                }
                            }
                            for (var p in y) {
                                if (y.hasOwnProperty(p) && !x.hasOwnProperty(p)) {
                                    return false;
                                }
                            }
                        }
                        catch (ex) {
                            console.error(ex);
                            return false;
                        }
                        return true;
                    }
                };
                /**
                 * This function coverts a DOM Tree into JavaScript Object.
                 * @param srcDOM: DOM Tree to be converted.
                 */
                ProjectService.prototype._xml2json = function (xml) {
                    // Create the return object
                    var obj = {};
                    if (xml.nodeType == 1) { // element
                        // do attributes
                        if (xml.attributes.length > 0) {
                            obj["@attributes"] = {};
                            for (var j = 0; j < xml.attributes.length; j++) {
                                var attribute = xml.attributes.item(j);
                                obj["@attributes"][attribute.nodeName] = attribute.nodeValue;
                            }
                        }
                    }
                    else if (xml.nodeType == 3) { // text
                        obj = xml.nodeValue;
                    }
                    // do children
                    if (xml.hasChildNodes()) {
                        for (var i = 0; i < xml.childNodes.length; i++) {
                            var item = xml.childNodes.item(i);
                            var nodeName = item.nodeName;
                            if (typeof (obj[nodeName]) == "undefined") {
                                obj[nodeName] = this._xml2json(item);
                            }
                            else {
                                if (typeof (obj[nodeName].push) == "undefined") {
                                    var old = obj[nodeName];
                                    obj[nodeName] = [];
                                    obj[nodeName].push(old);
                                }
                                obj[nodeName].push(this._xml2json(item));
                            }
                        }
                    }
                    return obj;
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"])
                ], ProjectService.prototype, "onSaveCurrent", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"])
                ], ProjectService.prototype, "onLoadHmi", void 0);
                ProjectService = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
                    __metadata("design:paramtypes", [_rcgi_reswebapi_service__WEBPACK_IMPORTED_MODULE_10__["ResWebApiService"],
                    _rcgi_resdemo_service__WEBPACK_IMPORTED_MODULE_8__["ResDemoService"],
                    _rcgi_resclient_service__WEBPACK_IMPORTED_MODULE_9__["ResClientService"],
                    _app_service__WEBPACK_IMPORTED_MODULE_11__["AppService"],
                    _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateService"],
                    ngx_toastr__WEBPACK_IMPORTED_MODULE_5__["ToastrService"]])
                ], ProjectService);
                return ProjectService;
            }());

            var ServerSettings = /** @class */ (function () {
                function ServerSettings() {
                }
                return ServerSettings;
            }());

            var SaveMode;
            (function (SaveMode) {
                SaveMode[SaveMode["Current"] = 0] = "Current";
                SaveMode[SaveMode["Save"] = 1] = "Save";
                SaveMode[SaveMode["SaveAs"] = 2] = "SaveAs";
            })(SaveMode || (SaveMode = {}));


            /***/
}),

/***/ "./app/_services/rcgi/resclient.service.ts":
/*!*************************************************!*\
  !*** ./app/_services/rcgi/resclient.service.ts ***!
  \*************************************************/
/*! exports provided: ResClientService */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResClientService", function () { return ResClientService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ "../node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "../node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _models_project__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../_models/project */ "./app/_models/project.ts");
/* harmony import */ var _resource_storage_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./resource-storage.service */ "./app/_services/rcgi/resource-storage.service.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };





            var ResClientService = /** @class */ (function () {
                function ResClientService(http) {
                    this.http = http;
                    this.bridge = null;
                    this.id = null;
                }
                Object.defineProperty(ResClientService.prototype, "isReady", {
                    get: function () { return (this.bridge) ? true : false; },
                    enumerable: true,
                    configurable: true
                });
                ResClientService.prototype.init = function (bridge) {
                    this.id = this.getAppId();
                    if (!this.bindBridge(bridge)) {
                        return false;
                    }
                    return true;
                };
                ResClientService.prototype.bindBridge = function (bridge) {
                    if (!bridge)
                        return false;
                    this.bridge = bridge;
                    if (this.bridge) {
                        this.bridge.onRefreshProject = this.onRefreshProject;
                        return true;
                    }
                    return false;
                };
                ResClientService.prototype.getDemoProject = function () {
                    return this.http.get('./assets/project.demo.fuxap', {});
                };
                ResClientService.prototype.getStorageProject = function () {
                    var _this = this;
                    return new rxjs__WEBPACK_IMPORTED_MODULE_2__["Observable"](function (observer) {
                        if (_this.bridge) {
                            var sprj = _this.bridge.loadProject();
                            var prj = _resource_storage_service__WEBPACK_IMPORTED_MODULE_4__["ResourceStorageService"].defileProject(sprj);
                            observer.next(prj);
                        }
                        else {
                            var prj = localStorage.getItem(_this.getAppId());
                            if (prj) {
                                observer.next(JSON.parse(prj));
                            }
                            else {
                                observer.next();
                            }
                        }
                    });
                };
                ResClientService.prototype.setServerProject = function (prj) {
                    var _this = this;
                    return new rxjs__WEBPACK_IMPORTED_MODULE_2__["Observable"](function (observer) {
                        if (!prj) {
                            observer.next();
                        }
                        else if (_this.bridge) {
                            var sprj = _resource_storage_service__WEBPACK_IMPORTED_MODULE_4__["ResourceStorageService"].sanitizeProject(prj);
                            if (_this.bridge.saveProject(sprj, true)) {
                                observer.next();
                            }
                            else {
                                observer.error();
                            }
                        }
                        else {
                            _this.saveInLocalStorage(prj);
                            observer.next();
                        }
                    });
                };
                ResClientService.prototype.setServerProjectData = function (cmd, data, prj) {
                    var _this = this;
                    return new rxjs__WEBPACK_IMPORTED_MODULE_2__["Observable"](function (observer) {
                        if (!prj) {
                            observer.next();
                        }
                        else if (_this.bridge) {
                            var sprj = _resource_storage_service__WEBPACK_IMPORTED_MODULE_4__["ResourceStorageService"].sanitizeProject(prj);
                            if (_this.bridge.saveProject(sprj, false)) {
                                // if (this.isDataCmdForDevice(cmd)) {
                                //     let sdevice = ResourceStorageService.sanitizeDevice(data);
                                //     this.bridge.deviceChange(sdevice);
                                // }
                                observer.next();
                            }
                            else {
                                observer.error();
                            }
                        }
                        else {
                            _this.saveInLocalStorage(prj);
                            observer.next();
                        }
                    });
                };
                ResClientService.prototype.isDataCmdForDevice = function (cmd) {
                    return (cmd === _models_project__WEBPACK_IMPORTED_MODULE_3__["ProjectDataCmdType"].DelDevice || cmd === _models_project__WEBPACK_IMPORTED_MODULE_3__["ProjectDataCmdType"].SetDevice);
                };
                ResClientService.prototype.saveInLocalStorage = function (prj) {
                    if (this.getAppId()) {
                        localStorage.setItem(this.getAppId(), JSON.stringify(prj));
                    }
                };
                ResClientService.prototype.getDeviceSecurity = function (id) {
                    return new rxjs__WEBPACK_IMPORTED_MODULE_2__["Observable"](function (observer) {
                        observer.error('Not supported!');
                    });
                };
                ResClientService.prototype.setDeviceSecurity = function (name, value) {
                    return new rxjs__WEBPACK_IMPORTED_MODULE_2__["Observable"](function (observer) {
                        observer.next('Not supported!');
                    });
                };
                ResClientService.prototype.getAlarmsValues = function () {
                    return new rxjs__WEBPACK_IMPORTED_MODULE_2__["Observable"](function (observer) {
                        observer.error('Not supported!');
                    });
                };
                ResClientService.prototype.setAlarmAck = function (name) {
                    return new rxjs__WEBPACK_IMPORTED_MODULE_2__["Observable"](function (observer) {
                        observer.error('Not supported!');
                    });
                };
                ResClientService.prototype.checkServer = function () {
                    return new rxjs__WEBPACK_IMPORTED_MODULE_2__["Observable"](function (observer) {
                        observer.next();
                    });
                };
                ResClientService.prototype.getAppId = function () {
                    return _resource_storage_service__WEBPACK_IMPORTED_MODULE_4__["ResourceStorageService"].prjresource;
                };
                ResClientService = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
                    __metadata("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]])
                ], ResClientService);
                return ResClientService;
            }());



            /***/
}),

/***/ "./app/_services/rcgi/resdemo.service.ts":
/*!***********************************************!*\
  !*** ./app/_services/rcgi/resdemo.service.ts ***!
  \***********************************************/
/*! exports provided: ResDemoService */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResDemoService", function () { return ResDemoService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ "../node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "../node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _resource_storage_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./resource-storage.service */ "./app/_services/rcgi/resource-storage.service.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };




            var ResDemoService = /** @class */ (function () {
                function ResDemoService(http) {
                    this.http = http;
                }
                ResDemoService.prototype.init = function () {
                    return true;
                };
                ResDemoService.prototype.getDemoProject = function () {
                    return this.http.get('./assets/project.demo.fuxap', {});
                };
                ResDemoService.prototype.getStorageProject = function () {
                    var _this = this;
                    return new rxjs__WEBPACK_IMPORTED_MODULE_2__["Observable"](function (observer) {
                        var prj = localStorage.getItem(_this.getAppId());
                        if (prj) {
                            observer.next(JSON.parse(prj));
                        }
                        else {
                            // try root path
                            _this.getDemoProject().subscribe(function (demo) {
                                observer.next(demo);
                            }, function (err) {
                                observer.error(err);
                            });
                        }
                    });
                };
                ResDemoService.prototype.setServerProject = function (prj) {
                    var _this = this;
                    return new rxjs__WEBPACK_IMPORTED_MODULE_2__["Observable"](function (observer) {
                        localStorage.setItem(_this.getAppId(), JSON.stringify(prj));
                        observer.next();
                    });
                };
                ResDemoService.prototype.setServerProjectData = function (cmd, data) {
                    return new rxjs__WEBPACK_IMPORTED_MODULE_2__["Observable"](function (observer) {
                        observer.next('Not supported!');
                    });
                };
                ResDemoService.prototype.getDeviceSecurity = function (id) {
                    return new rxjs__WEBPACK_IMPORTED_MODULE_2__["Observable"](function (observer) {
                        observer.error('Not supported!');
                    });
                };
                ResDemoService.prototype.setDeviceSecurity = function (name, value) {
                    return new rxjs__WEBPACK_IMPORTED_MODULE_2__["Observable"](function (observer) {
                        observer.next('Not supported!');
                    });
                };
                ResDemoService.prototype.getAlarmsValues = function () {
                    return new rxjs__WEBPACK_IMPORTED_MODULE_2__["Observable"](function (observer) {
                        observer.error('Not supported!');
                    });
                };
                ResDemoService.prototype.setAlarmAck = function (name) {
                    return new rxjs__WEBPACK_IMPORTED_MODULE_2__["Observable"](function (observer) {
                        observer.error('Not supported!');
                    });
                };
                ResDemoService.prototype.checkServer = function () {
                    return new rxjs__WEBPACK_IMPORTED_MODULE_2__["Observable"](function (observer) {
                        observer.next();
                    });
                };
                ResDemoService.prototype.getAppId = function () {
                    return _resource_storage_service__WEBPACK_IMPORTED_MODULE_3__["ResourceStorageService"].prjresource;
                };
                ResDemoService = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
                    __metadata("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]])
                ], ResDemoService);
                return ResDemoService;
            }());



            /***/
}),

/***/ "./app/_services/rcgi/resource-storage.service.ts":
/*!********************************************************!*\
  !*** ./app/_services/rcgi/resource-storage.service.ts ***!
  \********************************************************/
/*! exports provided: ResourceStorageService */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResourceStorageService", function () { return ResourceStorageService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };

            var ResourceStorageService = /** @class */ (function () {
                function ResourceStorageService() {
                }
                ResourceStorageService.defileProject = function (source) {
                    if (!source)
                        return source;
                    var destination = JSON.parse(JSON.stringify(source));
                    var devices = {};
                    for (var i = 0; i < destination.devices.length; i++) {
                        var tags = {};
                        for (var x = 0; x < destination.devices[i].tags.length; x++) {
                            tags[destination.devices[i].tags[x].id] = destination.devices[i].tags[x];
                        }
                        destination.devices[i].tags = tags;
                        devices[destination.devices[i].id] = destination.devices[i];
                    }
                    destination.devices = devices;
                    return destination;
                };
                ResourceStorageService.sanitizeProject = function (source) {
                    var destination = JSON.parse(JSON.stringify(source));
                    destination.devices = Object.values(destination.devices);
                    for (var i = 0; i < destination.devices.length; i++) {
                        destination.devices[i].tags = Object.values(destination.devices[i].tags);
                        for (var x = 0; x < destination.devices[i].tags.length; x++) {
                            delete destination.devices[i].tags[x].value;
                        }
                    }
                    return destination;
                };
                ResourceStorageService.sanitizeDevice = function (source) {
                    var destination = JSON.parse(JSON.stringify(source));
                    destination.tags = Object.values(destination.tags);
                    return destination;
                };
                ResourceStorageService.prjresource = 'prj-data';
                ResourceStorageService = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])()
                ], ResourceStorageService);
                return ResourceStorageService;
            }());



            /***/
}),

/***/ "./app/_services/rcgi/reswebapi.service.ts":
/*!*************************************************!*\
  !*** ./app/_services/rcgi/reswebapi.service.ts ***!
  \*************************************************/
/*! exports provided: ResWebApiService */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResWebApiService", function () { return ResWebApiService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ "../node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "../node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _helpers_endpointapi__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../_helpers/endpointapi */ "./app/_helpers/endpointapi.ts");
/* harmony import */ var _resource_storage_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./resource-storage.service */ "./app/_services/rcgi/resource-storage.service.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };





            var ResWebApiService = /** @class */ (function () {
                function ResWebApiService(http) {
                    this.http = http;
                    this.endPointConfig = _helpers_endpointapi__WEBPACK_IMPORTED_MODULE_3__["EndPointApi"].getURL();
                }
                ResWebApiService.prototype.init = function () {
                    return true;
                };
                ResWebApiService.prototype.getDemoProject = function () {
                    return this.http.get('./assets/project.demo.fuxap', {});
                };
                ResWebApiService.prototype.getStorageProject = function () {
                    return this.http.get(this.endPointConfig + '/api/project', {});
                };
                ResWebApiService.prototype.setServerProject = function (prj) {
                    // let header = new HttpHeaders();
                    // header.append("Access-Control-Allow-Origin", "*");
                    // header.append("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept");
                    var header = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]({ 'Content-Type': 'application/json' });
                    return this.http.post(this.endPointConfig + '/api/project', prj, { headers: header });
                };
                ResWebApiService.prototype.setServerProjectData = function (cmd, data) {
                    var header = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]({ 'Content-Type': 'application/json' });
                    var params = { cmd: cmd, data: data };
                    return this.http.post(this.endPointConfig + '/api/projectData', params, { headers: header });
                };
                ResWebApiService.prototype.getDeviceSecurity = function (id) {
                    var header = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]({ 'Content-Type': 'application/json' });
                    var params = { query: 'security', name: id };
                    return this.http.get(this.endPointConfig + '/api/device', { headers: header, params: params });
                };
                ResWebApiService.prototype.setDeviceSecurity = function (id, value) {
                    var header = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]({ 'Content-Type': 'application/json' });
                    var params = { query: 'security', name: id, value: value };
                    return this.http.post(this.endPointConfig + '/api/device', { headers: header, params: params });
                };
                ResWebApiService.prototype.getAlarmsValues = function () {
                    return this.http.get(this.endPointConfig + '/api/alarms', {});
                };
                ResWebApiService.prototype.setAlarmAck = function (name) {
                    var _this = this;
                    return new rxjs__WEBPACK_IMPORTED_MODULE_2__["Observable"](function (observer) {
                        var header = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]({ 'Content-Type': 'application/json' });
                        _this.http.post(_this.endPointConfig + '/api/alarmack', { headers: header, params: name }).subscribe(function (result) {
                            observer.next();
                        }, function (err) {
                            observer.error(err);
                        });
                    });
                };
                ResWebApiService.prototype.checkServer = function () {
                    return this.http.get(this.endPointConfig + '/api/settings');
                };
                ResWebApiService.prototype.getAppId = function () {
                    return _resource_storage_service__WEBPACK_IMPORTED_MODULE_4__["ResourceStorageService"].prjresource;
                };
                ResWebApiService = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
                    __metadata("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]])
                ], ResWebApiService);
                return ResWebApiService;
            }());



            /***/
}),

/***/ "./app/_services/settings.service.ts":
/*!*******************************************!*\
  !*** ./app/_services/settings.service.ts ***!
  \*******************************************/
/*! exports provided: SettingsService */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SettingsService", function () { return SettingsService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ "../node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../environments/environment */ "./environments/environment.ts");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ngx-translate/core */ "../node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js");
/* harmony import */ var _helpers_endpointapi__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../_helpers/endpointapi */ "./app/_helpers/endpointapi.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-toastr */ "../node_modules/ngx-toastr/fesm5/ngx-toastr.js");
/* harmony import */ var _models_settings__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../_models/settings */ "./app/_models/settings.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };







            var SettingsService = /** @class */ (function () {
                function SettingsService(http, fuxaLanguage, translateService, toastr) {
                    this.http = http;
                    this.fuxaLanguage = fuxaLanguage;
                    this.translateService = translateService;
                    this.toastr = toastr;
                    this.appSettings = new _models_settings__WEBPACK_IMPORTED_MODULE_6__["AppSettings"]();
                    this.endPointConfig = _helpers_endpointapi__WEBPACK_IMPORTED_MODULE_4__["EndPointApi"].getURL();
                    this.editModeLocked = false;
                }
                SettingsService.prototype.init = function () {
                    var _this = this;
                    // this language will be used as a fallback when a translation isn't found in the current language
                    this.fuxaLanguage.setDefaultLang('en');
                    // the lang to use, if the lang isn't available, it will use the current loader to get them
                    this.fuxaLanguage.use('en');
                    // to load saved settings
                    if (_environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].serverEnabled) {
                        this.http.get(this.endPointConfig + '/api/settings').subscribe(function (result) {
                            _this.setSettings(result);
                        }, function (error) {
                            console.error('settings.service err: ' + error);
                        });
                    }
                    // this.setLanguage(this.appSettings.language);
                };
                SettingsService.prototype.getSettings = function () {
                    return this.appSettings;
                };
                SettingsService.prototype.setSettings = function (settings) {
                    var dirty = false;
                    if (settings.language && settings.language != this.appSettings.language) {
                        this.fuxaLanguage.use(settings.language);
                        this.appSettings.language = settings.language;
                        dirty = true;
                    }
                    if (settings.uiPort && settings.uiPort != this.appSettings.uiPort) {
                        this.appSettings.uiPort = settings.uiPort;
                        dirty = true;
                    }
                    if (settings.secureEnabled != this.appSettings.secureEnabled || settings.tokenExpiresIn != this.appSettings.tokenExpiresIn) {
                        this.appSettings.secureEnabled = settings.secureEnabled;
                        this.appSettings.tokenExpiresIn = settings.tokenExpiresIn;
                        dirty = true;
                    }
                    return dirty;
                };
                SettingsService.prototype.saveSettings = function () {
                    var _this = this;
                    if (_environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].serverEnabled) {
                        var header = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]({ 'Content-Type': 'application/json' });
                        this.http.post(this.endPointConfig + '/api/settings', this.appSettings, { headers: header }).subscribe(function (result) {
                        }, function (err) {
                            _this.notifySaveError(err);
                        });
                    }
                };
                SettingsService.prototype.notifySaveError = function (err) {
                    var msg = '';
                    this.translateService.get('msg.settings-save-error').subscribe(function (txt) { msg = txt; });
                    if (err.status === 401) {
                        this.translateService.get('msg.settings-save-unauthorized').subscribe(function (txt) { msg = txt; });
                    }
                    this.toastr.error(msg, '', {
                        timeOut: 3000,
                        closeButton: true,
                        disableTimeOut: true
                    });
                };
                //#region Editor Mode Check
                SettingsService.prototype.lockEditMode = function () {
                    this.editModeLocked = true;
                };
                SettingsService.prototype.unlockEditMode = function () {
                    this.editModeLocked = false;
                };
                SettingsService.prototype.isEditModeLocked = function () {
                    return this.editModeLocked;
                };
                SettingsService.prototype.notifyEditorLocked = function () {
                    var msg = '';
                    this.translateService.get('msg.editor-mode-locked').subscribe(function (txt) { msg = txt; });
                    this.toastr.warning(msg, '', {
                        timeOut: 3000,
                        closeButton: true,
                        disableTimeOut: false
                    });
                };
                SettingsService = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])({
                        providedIn: 'root'
                    }),
                    __metadata("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"],
                    _ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__["TranslateService"],
                    _ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__["TranslateService"],
                    ngx_toastr__WEBPACK_IMPORTED_MODULE_5__["ToastrService"]])
                ], SettingsService);
                return SettingsService;
            }());



            /***/
}),

/***/ "./app/_services/theme.service.ts":
/*!****************************************!*\
  !*** ./app/_services/theme.service.ts ***!
  \****************************************/
/*! exports provided: ThemeService */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ThemeService", function () { return ThemeService; });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common */ "../node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _config_theme_config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../_config/theme.config */ "./app/_config/theme.config.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };
            var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
                return function (target, key) { decorator(target, key, paramIndex); }
            };



            var ThemeService = /** @class */ (function () {
                function ThemeService(document) {
                    this.document = document;
                }
                ThemeService_1 = ThemeService;
                ThemeService.prototype.setTheme = function (name) {
                    var _this = this;
                    if (name === void 0) { name = ThemeService_1.ThemeType.Dark; }
                    if (!_config_theme_config__WEBPACK_IMPORTED_MODULE_2__["THEMES"][name]) {
                        name = ThemeService_1.ThemeType.Dark;
                    }
                    var theme = _config_theme_config__WEBPACK_IMPORTED_MODULE_2__["THEMES"][name];
                    Object.keys(theme).forEach(function (key) {
                        _this.document.documentElement.style.setProperty("--" + key, theme[key]);
                    });
                    var body = document.getElementsByTagName('body')[0];
                    body.classList.remove('dark-theme');
                    if (name === ThemeService_1.ThemeType.Dark) {
                        body.classList.add('dark-theme');
                    }
                };
                var ThemeService_1;
                ThemeService.ThemeType = { Dark: 'dark', Default: 'default' };
                ThemeService = ThemeService_1 = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
                        providedIn: "root"
                    }),
                    __param(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_common__WEBPACK_IMPORTED_MODULE_0__["DOCUMENT"])),
                    __metadata("design:paramtypes", [Document])
                ], ThemeService);
                return ThemeService;
            }());



            /***/
}),

/***/ "./app/_services/user.service.ts":
/*!***************************************!*\
  !*** ./app/_services/user.service.ts ***!
  \***************************************/
/*! exports provided: UserService */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserService", function () { return UserService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ "../node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "../node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _helpers_endpointapi__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../_helpers/endpointapi */ "./app/_helpers/endpointapi.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../environments/environment */ "./environments/environment.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-toastr */ "../node_modules/ngx-toastr/fesm5/ngx-toastr.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ngx-translate/core */ "../node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };







            var UserService = /** @class */ (function () {
                function UserService(http, translateService, toastr) {
                    this.http = http;
                    this.translateService = translateService;
                    this.toastr = toastr;
                    this.endPointConfig = _helpers_endpointapi__WEBPACK_IMPORTED_MODULE_3__["EndPointApi"].getURL();
                }
                UserService.prototype.getUsers = function (user) {
                    var header = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]({ 'Content-Type': 'application/json' });
                    var params = user;
                    return this.http.get(this.endPointConfig + '/api/users', { headers: header, params: params });
                };
                UserService.prototype.setUser = function (user) {
                    var _this = this;
                    return new rxjs__WEBPACK_IMPORTED_MODULE_2__["Observable"](function (observer) {
                        if (_environments_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].serverEnabled) {
                            var header = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]({ 'Content-Type': 'application/json' });
                            _this.http.post(_this.endPointConfig + '/api/users', { headers: header, params: user }).subscribe(function (result) {
                                observer.next();
                            }, function (err) {
                                console.error(err);
                                _this.notifySaveError();
                                observer.error(err);
                            });
                        }
                        else {
                            observer.next();
                        }
                    });
                };
                UserService.prototype.removeUser = function (user) {
                    var _this = this;
                    return new rxjs__WEBPACK_IMPORTED_MODULE_2__["Observable"](function (observer) {
                        if (_environments_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].serverEnabled) {
                            var header = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]({ 'Content-Type': 'application/json' });
                            _this.http.delete(_this.endPointConfig + '/api/users', { headers: header, params: { param: user.username } }).subscribe(function (result) {
                                observer.next();
                            }, function (err) {
                                console.error(err);
                                _this.notifySaveError();
                                observer.error(err);
                            });
                        }
                        else {
                            observer.next();
                        }
                    });
                };
                //#region Notify
                UserService.prototype.notifySaveError = function () {
                    var msg = '';
                    this.translateService.get('msg.users-save-error').subscribe(function (txt) { msg = txt; });
                    this.toastr.error(msg, '', {
                        timeOut: 3000,
                        closeButton: true,
                        disableTimeOut: true
                    });
                };
                UserService = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
                    __metadata("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"],
                    _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateService"],
                    ngx_toastr__WEBPACK_IMPORTED_MODULE_5__["ToastrService"]])
                ], UserService);
                return UserService;
            }());



            /***/
}),

/***/ "./app/alarms/alarm-list/alarm-list.component.css":
/*!********************************************************!*\
  !*** ./app/alarms/alarm-list/alarm-list.component.css ***!
  \********************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ".header-panel {\n    background-color: var(--headerBackground);\n    color: var(--headerColor);\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    height: 36px;\n    width: 100%;\n    text-align: center;\n    line-height: 36px;\n    border-bottom: 1px solid var(--headerBorder);\n}\n\n.work-panel {\n    position: absolute;\n    top: 37px;\n    left: 0px;\n    right: 0px;\n    bottom: 0px;\n}\n\n.container {\n    display: flex;\n    flex-direction: column;\n    min-width: 300px;\n    position: absolute;\n    bottom: 0px;\n    top: 0px;\n    left:0px;\n    right:0px;\n}\n\n.filter {\n    display: inline-block;\n    min-height: 60px;\n    padding: 8px 24px 0;\n}\n\n.filter .mat-form-field {\n    font-size: 14px;\n    width: 100%;\n}\n\n.table {\n    height: 705px;\n}\n\n.mat-table {\n    overflow: auto;\n    height: 100%;\n}\n\n.mat-row {\n    min-height: 40px;\n    height: 43px;\n}\n\n.mat-cell {\n    font-size: 13px;\n}\n\n.mat-header-row {\n    top: 0;\n    position: -webkit-sticky;\n    position: sticky;\n    z-index: 1;\n}\n\n.mat-header-cell {\n    font-size: 15px;\n}\n\n.mat-column-select {\n    overflow: visible;\n    flex: 0 0 100px;\n}\n\n.mat-column-name {\n    flex: 0 0 200px;\n}\n\n.mat-column-device {\n    flex: 0 0 350px;\n}\n\n.mat-column-highhigh {\n    flex: 0 0 200px;\n}\n\n.mat-column-high {\n    flex: 0 0 200px;\n}\n\n.mat-column-low {\n    flex: 0 0 200px;\n}\n\n.mat-column-info {\n    flex: 0 0 200px;\n}\n\n.mat-column-value {\n    flex: 0 0 800px;\n}\n\n.mat-column-remove {\n    flex: 0 0 60px;\n}\n\n.selectidthClass{\n    flex: 0 0 50px;\n }\n\n.message-error {\n    display: inline-block;\n    color:red;\n}\n\n.my-header-filter /deep/ .mat-sort-header-button {\n    display: block;\n    text-align: left;\n    margin-top: 5px;\n}\n\n.my-header-filter /deep/ .mat-sort-header-arrow {\n    top: -12px;\n    right: 20px;\n}\n\n.my-header-filter-input {\n    display: block; \n    margin-top: 4px;\n    margin-bottom: 6px;\n    padding: 3px 1px 3px 2px;\n    border-radius: 2px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWxhcm1zL2FsYXJtLWxpc3QvYWxhcm0tbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUNBQXlDO0lBQ3pDLHlCQUF5QjtJQUN6QixrQkFBa0I7SUFDbEIsUUFBUTtJQUNSLFNBQVM7SUFDVCxZQUFZO0lBQ1osV0FBVztJQUNYLGtCQUFrQjtJQUNsQixpQkFBaUI7SUFDakIsNENBQTRDO0FBQ2hEOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLFNBQVM7SUFDVCxTQUFTO0lBQ1QsVUFBVTtJQUNWLFdBQVc7QUFDZjs7QUFFQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsUUFBUTtJQUNSLFFBQVE7SUFDUixTQUFTO0FBQ2I7O0FBRUE7SUFDSSxxQkFBcUI7SUFDckIsZ0JBQWdCO0lBQ2hCLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGVBQWU7SUFDZixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksY0FBYztJQUNkLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxNQUFNO0lBQ04sd0JBQWdCO0lBQWhCLGdCQUFnQjtJQUNoQixVQUFVO0FBQ2Q7O0FBRUE7SUFDSSxlQUFlO0FBQ25COztBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxlQUFlO0FBQ25COztBQUdBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxlQUFlO0FBQ25COztBQUNBO0lBQ0ksZUFBZTtBQUNuQjs7QUFDQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxlQUFlO0FBQ25COztBQUVBO0lBQ0ksY0FBYztBQUNsQjs7QUFFQTtJQUNJLGNBQWM7Q0FDakI7O0FBRUQ7SUFDSSxxQkFBcUI7SUFDckIsU0FBUztBQUNiOztBQUVBO0lBQ0ksY0FBYztJQUNkLGdCQUFnQjtJQUNoQixlQUFlO0FBQ25COztBQUVBO0lBQ0ksVUFBVTtJQUNWLFdBQVc7QUFDZjs7QUFFQTtJQUNJLGNBQWM7SUFDZCxlQUFlO0lBQ2Ysa0JBQWtCO0lBQ2xCLHdCQUF3QjtJQUN4QixrQkFBa0I7QUFDdEIiLCJmaWxlIjoic3JjL2FwcC9hbGFybXMvYWxhcm0tbGlzdC9hbGFybS1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaGVhZGVyLXBhbmVsIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1oZWFkZXJCYWNrZ3JvdW5kKTtcbiAgICBjb2xvcjogdmFyKC0taGVhZGVyQ29sb3IpO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDBweDtcbiAgICBsZWZ0OiAwcHg7XG4gICAgaGVpZ2h0OiAzNnB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBsaW5lLWhlaWdodDogMzZweDtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgdmFyKC0taGVhZGVyQm9yZGVyKTtcbn1cblxuLndvcmstcGFuZWwge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDM3cHg7XG4gICAgbGVmdDogMHB4O1xuICAgIHJpZ2h0OiAwcHg7XG4gICAgYm90dG9tOiAwcHg7XG59XG5cbi5jb250YWluZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBtaW4td2lkdGg6IDMwMHB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IDBweDtcbiAgICB0b3A6IDBweDtcbiAgICBsZWZ0OjBweDtcbiAgICByaWdodDowcHg7XG59XG5cbi5maWx0ZXIge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBtaW4taGVpZ2h0OiA2MHB4O1xuICAgIHBhZGRpbmc6IDhweCAyNHB4IDA7XG59XG5cbi5maWx0ZXIgLm1hdC1mb3JtLWZpZWxkIHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgd2lkdGg6IDEwMCU7XG59XG5cbi50YWJsZSB7XG4gICAgaGVpZ2h0OiA3MDVweDtcbn1cblxuLm1hdC10YWJsZSB7XG4gICAgb3ZlcmZsb3c6IGF1dG87XG4gICAgaGVpZ2h0OiAxMDAlO1xufVxuXG4ubWF0LXJvdyB7XG4gICAgbWluLWhlaWdodDogNDBweDtcbiAgICBoZWlnaHQ6IDQzcHg7XG59XG5cbi5tYXQtY2VsbCB7XG4gICAgZm9udC1zaXplOiAxM3B4O1xufVxuXG4ubWF0LWhlYWRlci1yb3cge1xuICAgIHRvcDogMDtcbiAgICBwb3NpdGlvbjogc3RpY2t5O1xuICAgIHotaW5kZXg6IDE7XG59XG5cbi5tYXQtaGVhZGVyLWNlbGwge1xuICAgIGZvbnQtc2l6ZTogMTVweDtcbn1cblxuLm1hdC1jb2x1bW4tc2VsZWN0IHtcbiAgICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgICBmbGV4OiAwIDAgMTAwcHg7XG59XG5cbi5tYXQtY29sdW1uLW5hbWUge1xuICAgIGZsZXg6IDAgMCAyMDBweDtcbn1cblxuXG4ubWF0LWNvbHVtbi1kZXZpY2Uge1xuICAgIGZsZXg6IDAgMCAzNTBweDtcbn1cblxuLm1hdC1jb2x1bW4taGlnaGhpZ2gge1xuICAgIGZsZXg6IDAgMCAyMDBweDtcbn1cblxuLm1hdC1jb2x1bW4taGlnaCB7XG4gICAgZmxleDogMCAwIDIwMHB4O1xufVxuLm1hdC1jb2x1bW4tbG93IHtcbiAgICBmbGV4OiAwIDAgMjAwcHg7XG59XG4ubWF0LWNvbHVtbi1pbmZvIHtcbiAgICBmbGV4OiAwIDAgMjAwcHg7XG59XG5cbi5tYXQtY29sdW1uLXZhbHVlIHtcbiAgICBmbGV4OiAwIDAgODAwcHg7XG59XG5cbi5tYXQtY29sdW1uLXJlbW92ZSB7XG4gICAgZmxleDogMCAwIDYwcHg7XG59XG5cbi5zZWxlY3RpZHRoQ2xhc3N7XG4gICAgZmxleDogMCAwIDUwcHg7XG4gfVxuXG4ubWVzc2FnZS1lcnJvciB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGNvbG9yOnJlZDtcbn1cblxuLm15LWhlYWRlci1maWx0ZXIgL2RlZXAvIC5tYXQtc29ydC1oZWFkZXItYnV0dG9uIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIG1hcmdpbi10b3A6IDVweDtcbn1cblxuLm15LWhlYWRlci1maWx0ZXIgL2RlZXAvIC5tYXQtc29ydC1oZWFkZXItYXJyb3cge1xuICAgIHRvcDogLTEycHg7XG4gICAgcmlnaHQ6IDIwcHg7XG59XG5cbi5teS1oZWFkZXItZmlsdGVyLWlucHV0IHtcbiAgICBkaXNwbGF5OiBibG9jazsgXG4gICAgbWFyZ2luLXRvcDogNHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDZweDtcbiAgICBwYWRkaW5nOiAzcHggMXB4IDNweCAycHg7XG4gICAgYm9yZGVyLXJhZGl1czogMnB4O1xufSJdfQ== */"

            /***/
}),

/***/ "./app/alarms/alarm-list/alarm-list.component.html":
/*!*********************************************************!*\
  !*** ./app/alarms/alarm-list/alarm-list.component.html ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div class=\"header-panel\">\n    {{'alarms.list-title' | translate}}\n</div>\n<div class=\"work-panel\">\n    <!-- <div class=\"filter\">\n      <div class=\"my-form-field\" style=\"padding-right: 10px;\">\n          <span>{{'texts.list-filter-group' | translate}}</span>\n          <mat-select [(value)]=\"groupSelected\" style=\"width: 300px\" (selectionChange)=\"onGroupChange($event.source)\">\n              <mat-option *ngFor=\"let group of groups\" [value]=\"group\">\n                  {{ group }}\n              </mat-option>\n          </mat-select>\n      </div>\n      <div class=\"my-form-field\" style=\"padding-right: 10px;\">\n          <span>{{'texts.list-filter' | translate}}</span>\n          <input (keyup)=\"applyFilter($event.target.value)\" style=\"width: 450px\" type=\"text\">\n      </div>\n  </div> -->\n    <div class=\"container\">\n        <mat-table #table [dataSource]=\"dataSource\" matSort>\n            <!-- Checkbox Column -->\n            <ng-container matColumnDef=\"select\">\n                <mat-header-cell *matHeaderCellDef [ngClass]=\"'selectidthClass'\">\n                    <button mat-icon-button (click)=\"onAddAlarm()\" class=\"remove\">\n                        <mat-icon>add</mat-icon>\n                    </button>\n                </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\" [ngClass]=\"'selectidthClass'\">\n                    <button mat-icon-button (click)=\"onEditAlarm(element)\" class=\"remove\">\n                        <mat-icon>edit</mat-icon>\n                    </button>\n                </mat-cell>\n            </ng-container>\n\n            <!-- Name Column -->\n            <ng-container matColumnDef=\"name\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header> {{'alarms.list-name' | translate}} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\n            </ng-container>\n            <!-- Device Column -->\n            <ng-container matColumnDef=\"device\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header> {{'alarms.list-device' | translate}} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{getVariableLabel(element.property)}}</mat-cell>\n            </ng-container>\n            <!-- HighHigh Column -->\n            <ng-container matColumnDef=\"highhigh\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header> {{'alarms.list-highhigh' | translate}} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{getSubProperty(element.highhigh)}} </mat-cell>\n            </ng-container>\n            <!-- High Column -->\n            <ng-container matColumnDef=\"high\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header> {{'alarms.list-high' | translate}} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{getSubProperty(element.high)}} </mat-cell>\n            </ng-container>\n            <!-- Low Column -->\n            <ng-container matColumnDef=\"low\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header> {{'alarms.list-low' | translate}} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{getSubProperty(element.low)}} </mat-cell>\n            </ng-container>\n            <!-- Info Column -->\n            <ng-container matColumnDef=\"info\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header> {{'alarms.list-info' | translate}} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{getSubProperty(element.info)}} </mat-cell>\n            </ng-container>\n\n            <!-- Button remove Column -->\n            <ng-container matColumnDef=\"remove\">\n                <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <button mat-icon-button (click)=\"$event.stopPropagation();onRemoveAlarm(element)\" class=\"remove\">\n                        <mat-icon>clear</mat-icon>\n                    </button>\n                </mat-cell>\n            </ng-container>\n\n            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n            <mat-row *matRowDef=\"let row; columns: displayedColumns;\" class=\"my-mat-row\"></mat-row>\n        </mat-table>\n    </div>\n</div>\n<button mat-fab color=\"primary\" (click)=\"onAddAlarm()\" class=\"fab-add\">\n    <mat-icon class=\"\">add</mat-icon>\n</button>"

            /***/
}),

/***/ "./app/alarms/alarm-list/alarm-list.component.ts":
/*!*******************************************************!*\
  !*** ./app/alarms/alarm-list/alarm-list.component.ts ***!
  \*******************************************************/
/*! exports provided: AlarmListComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AlarmListComponent", function () { return AlarmListComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "../node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _services_project_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../_services/project.service */ "./app/_services/project.service.ts");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ngx-translate/core */ "../node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js");
/* harmony import */ var _alarm_property_alarm_property_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ..//alarm-property/alarm-property.component */ "./app/alarms/alarm-property/alarm-property.component.ts");
/* harmony import */ var _models_alarm__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../_models/alarm */ "./app/_models/alarm.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };






            var AlarmListComponent = /** @class */ (function () {
                function AlarmListComponent(dialog, translateService, projectService) {
                    this.dialog = dialog;
                    this.translateService = translateService;
                    this.projectService = projectService;
                    this.displayedColumns = ['select', 'name', 'device', 'highhigh', 'high', 'low', 'info', 'remove'];
                    this.dataSource = new _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatTableDataSource"]([]);
                    this.enabledText = "";
                }
                AlarmListComponent.prototype.ngOnInit = function () {
                    var _this = this;
                    this.loadAlarms();
                    this.subscriptionLoad = this.projectService.onLoadHmi.subscribe(function (res) {
                        _this.loadAlarms();
                    });
                    this.translateService.get('alarm.property-enabled').subscribe(function (txt) { _this.enabledText = txt; });
                };
                AlarmListComponent.prototype.ngAfterViewInit = function () {
                    this.dataSource.sort = this.sort;
                };
                AlarmListComponent.prototype.ngOnDestroy = function () {
                    try {
                        if (this.subscriptionLoad) {
                            this.subscriptionLoad.unsubscribe();
                        }
                    }
                    catch (e) {
                    }
                };
                AlarmListComponent.prototype.onAddAlarm = function () {
                    var alarm = new _models_alarm__WEBPACK_IMPORTED_MODULE_5__["Alarm"]();
                    this.editAlarm(alarm, 1);
                };
                AlarmListComponent.prototype.onEditAlarm = function (alarm, toAdd) {
                    this.editAlarm(alarm, 0);
                };
                AlarmListComponent.prototype.onRemoveAlarm = function (alarm) {
                    this.editAlarm(alarm, -1);
                };
                AlarmListComponent.prototype.editAlarm = function (alarm, toAdd) {
                    var _this = this;
                    var malarm = JSON.parse(JSON.stringify(alarm));
                    var dialogRef = this.dialog.open(_alarm_property_alarm_property_component__WEBPACK_IMPORTED_MODULE_4__["AlarmPropertyComponent"], {
                        data: {
                            alarm: malarm, editmode: toAdd, alarms: this.dataSource.data,
                            devices: Object.values(this.projectService.getDevices())
                        },
                        position: { top: '80px' }
                    });
                    dialogRef.afterClosed().subscribe(function (result) {
                        if (result) {
                            if (toAdd < 0) {
                                _this.projectService.removeAlarm(result).subscribe(function (result) {
                                    _this.loadAlarms();
                                });
                            }
                            else {
                                _this.projectService.setAlarm(result, alarm).subscribe(function (result) {
                                    _this.loadAlarms();
                                });
                            }
                        }
                    });
                };
                AlarmListComponent.prototype.getSubProperty = function (alrSubPro) {
                    if (alrSubPro && alrSubPro.enabled && alrSubPro.checkdelay > 0) {
                        return this.enabledText;
                    }
                    return "";
                };
                AlarmListComponent.prototype.getVariableLabel = function (varProp) {
                    if (!varProp.variableId) {
                        return '';
                    }
                    var device = this.projectService.getDeviceFromTagId(varProp.variableId);
                    return device.name + ' - ' + device.tags[varProp.variableId].name;
                };
                AlarmListComponent.prototype.loadAlarms = function () {
                    this.dataSource.data = this.projectService.getAlarms();
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatTable"]),
                    __metadata("design:type", _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatTable"])
                ], AlarmListComponent.prototype, "table", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatSort"]),
                    __metadata("design:type", _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatSort"])
                ], AlarmListComponent.prototype, "sort", void 0);
                AlarmListComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'app-alarm-list',
                        template: __webpack_require__(/*! ./alarm-list.component.html */ "./app/alarms/alarm-list/alarm-list.component.html"),
                        styles: [__webpack_require__(/*! ./alarm-list.component.css */ "./app/alarms/alarm-list/alarm-list.component.css")]
                    }),
                    __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialog"],
                    _ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__["TranslateService"],
                    _services_project_service__WEBPACK_IMPORTED_MODULE_2__["ProjectService"]])
                ], AlarmListComponent);
                return AlarmListComponent;
            }());



            /***/
}),

/***/ "./app/alarms/alarm-property/alarm-property.component.css":
/*!****************************************************************!*\
  !*** ./app/alarms/alarm-property/alarm-property.component.css ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "\n.alarm-sample {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\n.message-error {\n    display: inline-block;\n    /* background-color: red;; */\n    color:red;\n}\n\n::ng-deep .mat-tab-label {\n    height: 34px !important;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWxhcm1zL2FsYXJtLXByb3BlcnR5L2FsYXJtLXByb3BlcnR5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0ksbUJBQW1CO0lBQ25CLGdCQUFnQjtJQUNoQix1QkFBdUI7QUFDM0I7O0FBRUE7SUFDSSxxQkFBcUI7SUFDckIsNEJBQTRCO0lBQzVCLFNBQVM7QUFDYjs7QUFFQTtJQUNJLHVCQUF1QjtBQUMzQiIsImZpbGUiOiJzcmMvYXBwL2FsYXJtcy9hbGFybS1wcm9wZXJ0eS9hbGFybS1wcm9wZXJ0eS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4uYWxhcm0tc2FtcGxlIHtcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG59XG5cbi5tZXNzYWdlLWVycm9yIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgLyogYmFja2dyb3VuZC1jb2xvcjogcmVkOzsgKi9cbiAgICBjb2xvcjpyZWQ7XG59XG5cbjo6bmctZGVlcCAubWF0LXRhYi1sYWJlbCB7XG4gICAgaGVpZ2h0OiAzNHB4ICFpbXBvcnRhbnQ7XG59Il19 */"

            /***/
}),

/***/ "./app/alarms/alarm-property/alarm-property.component.html":
/*!*****************************************************************!*\
  !*** ./app/alarms/alarm-property/alarm-property.component.html ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div style=\"position: relative;\">\n    <h1 mat-dialog-title style=\"display:inline-block;cursor:move;\" mat-dialog-draggable>{{'alarm.property-title' | translate}}</h1>\n    <mat-icon (click)=\"onNoClick()\" style=\"float:right;margin-right:-10px;margin-top:-10px;color:gray;cursor:pointer;\">clear</mat-icon>\n    <div mat-dialog-content *ngIf=\"data.editmode < 0\">\n        {{'msg.alarm-remove' | translate}} '{{data.alarm.name}}' ?\n    </div>\n    <div mat-dialog-content *ngIf=\"data.editmode >= 0\">\n        <div style=\"display: block;width: 660px; padding-bottom: 20px;\">\n            <div style=\"display: block;\">\n                <flex-auth [name]=\"data.alarm.name\" [permission]=\"property.permission\" #flexauth></flex-auth>\n            </div>\n            <div mat-dialog-content style=\"overflow: hidden; width:100%\">\n                <flex-head [data]=\"data\" [property]=\"property\" #flexhead [withStaticValue]=\"false\"></flex-head>\n            </div>\n        </div>\n        <mat-autocomplete #textAuto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of existtexts\" [value]=\"option\">{{option}}</mat-option>\n        </mat-autocomplete>\n        <mat-autocomplete #groupAuto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of existgroups\" [value]=\"option\">{{option}}</mat-option>\n        </mat-autocomplete>\n        <mat-tab-group style=\"width: 100%;min-height: 300px;\">\n            <mat-tab label=\"{{'alarm.property-highhigh' | translate}}\">\n                <div style=\"overflow: hidden; padding-top: 25px;\">\n                    <div style=\"display: block;\">\n                        <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;margin-left: 20px;\">\n                            <span>{{'alarm.property-enabled' | translate}}</span>\n                            <mat-slide-toggle color=\"primary\" [(ngModel)]=\"data.alarm.highhigh.enabled\"></mat-slide-toggle>\n                        </div>\n                        <div class=\"my-form-field\" style=\"margin-bottom: 10px; float:right\">\n                            <span>{{'alarm.property-ackmode' | translate}}</span>\n                            <mat-select [(value)]=\"data.alarm.highhigh.ackmode\" style=\"width: 323px\">\n                                <mat-option *ngFor=\"let ev of ackMode | enumToArray\" [value]=\"ev.key\">\n                                    {{ ev.value }}\n                                </mat-option>\n                            </mat-select>\n                        </div>\n                    </div>\n                    <div style=\"display: inline-table;\">\n                        <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;padding-right: 13px;\">\n                            <span>{{'alarm.property-checkdelay' | translate}}</span>\n                            <input numberOnly [(ngModel)]=\"data.alarm.highhigh.checkdelay\" style=\"width: 145px\" type=\"text\">\n                        </div>\n                        <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;padding-right: 13px;\">\n                            <span>{{'alarm.property-min' | translate}}</span>\n                            <input numberOnly [(ngModel)]=\"data.alarm.highhigh.min\" style=\"width: 145px\" type=\"text\">\n                        </div>\n                        <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;padding-right: 13px;\">\n                            <span>{{'alarm.property-max' | translate}}</span>\n                            <input numberOnly [(ngModel)]=\"data.alarm.highhigh.max\" style=\"width: 145px\" type=\"text\">\n                        </div>\n                        <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;\">\n                            <span>{{'alarm.property-timedelay' | translate}}</span>\n                            <input numberOnly [(ngModel)]=\"data.alarm.highhigh.timedelay\" style=\"width: 158px\" type=\"text\">\n                        </div>\n                    </div>\n                    <div style=\"display: block;\">\n                        <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;padding-right: 13px;\">\n                            <span>{{'alarm.property-text' | translate}}</span>\n                            <input [(ngModel)]=\"data.alarm.highhigh.text\" [matAutocomplete]=\"textAuto\" style=\"width: 400px\" type=\"text\">\n                            <!-- <mat-autocomplete #highhighAuto=\"matAutocomplete\">\n                                <mat-option *ngFor=\"let option of existtexts\" [value]=\"option\">{{option}}</mat-option>\n                            </mat-autocomplete>       -->\n                        </div>\n                        <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;\">\n                            <span>{{'alarm.property-group' | translate}}</span>\n                            <input [(ngModel)]=\"data.alarm.highhigh.group\" [matAutocomplete]=\"groupAuto\" style=\"width: 233px\" type=\"text\">\n                            <!-- <mat-autocomplete #highhighAuto=\"matAutocomplete\">\n                                <mat-option *ngFor=\"let option of existgroups\" [value]=\"option\">{{option}}</mat-option>\n                            </mat-autocomplete>     -->\n                        </div>\n                    </div>\n                    <div style=\"display: block; height: 35px;margin-top: 15px;\" [style.background]=\"data.alarm.highhigh.bkcolor\" [style.color]=\"data.alarm.highhigh.color\">\n                        <div class=\"alarm-sample\" style=\"display: inline-block;padding-right: 13px;width: 403px;line-height: 35px;padding-left: 5px;\">\n                            <span>{{data.alarm.highhigh.text}}</span>\n                        </div>\n                        <div class=\"alarm-sample\" style=\"display: inline-block;width: 240px;line-height: 35px\">\n                            <span>{{data.alarm.highhigh.group}}</span>\n                        </div>\n                    </div>\n                </div>\n            </mat-tab>\n            <mat-tab label=\"{{'alarm.property-high' | translate}}\">\n                <div style=\"overflow: hidden; padding-top: 25px;\">\n                    <div style=\"display: block;\">\n                        <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;margin-left: 20px;\">\n                            <span>{{'alarm.property-enabled' | translate}}</span>\n                            <mat-slide-toggle color=\"primary\" [(ngModel)]=\"data.alarm.high.enabled\"></mat-slide-toggle>\n                        </div>\n                        <div class=\"my-form-field\" style=\"margin-bottom: 10px; float:right\">\n                            <span>{{'alarm.property-ackmode' | translate}}</span>\n                            <mat-select [(value)]=\"data.alarm.high.ackmode\" style=\"width: 323px\">\n                                <mat-option *ngFor=\"let ev of ackMode | enumToArray\" [value]=\"ev.key\">\n                                    {{ ev.value }}\n                                </mat-option>\n                            </mat-select>\n                        </div>\n                    </div>\n                    <div style=\"display: inline-table;\">\n                        <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;padding-right: 13px;\">\n                            <span>{{'alarm.property-checkdelay' | translate}}</span>\n                            <input numberOnly [(ngModel)]=\"data.alarm.high.checkdelay\" style=\"width: 145px\" type=\"text\">\n                        </div>\n                        <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;padding-right: 13px;\">\n                            <span>{{'alarm.property-min' | translate}}</span>\n                            <input numberOnly [(ngModel)]=\"data.alarm.high.min\" style=\"width: 145px\" type=\"text\">\n                        </div>\n                        <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;padding-right: 13px;\">\n                            <span>{{'alarm.property-max' | translate}}</span>\n                            <input numberOnly [(ngModel)]=\"data.alarm.high.max\" style=\"width: 145px\" type=\"text\">\n                        </div>\n                        <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;\">\n                            <span>{{'alarm.property-timedelay' | translate}}</span>\n                            <input numberOnly [(ngModel)]=\"data.alarm.high.timedelay\" style=\"width: 158px\" type=\"text\">\n                        </div>\n                    </div>\n                    <div style=\"display: block;\">\n                        <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;padding-right: 13px;\">\n                            <span>{{'alarm.property-text' | translate}}</span>\n                            <input [(ngModel)]=\"data.alarm.high.text\" [matAutocomplete]=\"textAuto\" style=\"width: 400px\" type=\"text\">                    \n                        </div>\n                        <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;\">\n                            <span>{{'alarm.property-group' | translate}}</span>\n                            <input [(ngModel)]=\"data.alarm.high.group\" [matAutocomplete]=\"groupAuto\" style=\"width: 233px\" type=\"text\">\n                        </div>\n                    </div>\n                    <div style=\"display: block; height: 35px;margin-top: 15px;\" [style.background]=\"data.alarm.high.bkcolor\" [style.color]=\"data.alarm.high.color\">\n                        <div class=\"alarm-sample\" style=\"display: inline-block;padding-right: 13px;width: 403px;line-height: 35px;padding-left: 5px;\">\n                            <span>{{data.alarm.high.text}}</span>\n                        </div>\n                        <div class=\"alarm-sample\" style=\"display: inline-block;width: 240px;line-height: 35px\">\n                            <span>{{data.alarm.high.group}}</span>\n                        </div>\n                    </div>\n                </div>\n            </mat-tab>\n            <mat-tab label=\"{{'alarm.property-low' | translate}}\">\n                <div style=\"overflow: hidden; padding-top: 25px;\">\n                    <div style=\"display: block;\">\n                        <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;margin-left: 20px;\">\n                            <span>{{'alarm.property-enabled' | translate}}</span>\n                            <mat-slide-toggle color=\"primary\" [(ngModel)]=\"data.alarm.low.enabled\"></mat-slide-toggle>\n                        </div>\n                        <div class=\"my-form-field\" style=\"margin-bottom: 10px; float:right\">\n                            <span>{{'alarm.property-ackmode' | translate}}</span>\n                            <mat-select [(value)]=\"data.alarm.low.ackmode\" style=\"width: 323px\">\n                                <mat-option *ngFor=\"let ev of ackMode | enumToArray\" [value]=\"ev.key\">\n                                    {{ ev.value }}\n                                </mat-option>\n                            </mat-select>\n                        </div>\n                    </div>\n                    <div style=\"display: inline-table;\">\n                        <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;padding-right: 13px;\">\n                            <span>{{'alarm.property-checkdelay' | translate}}</span>\n                            <input numberOnly [(ngModel)]=\"data.alarm.low.checkdelay\" style=\"width: 145px\" type=\"text\">\n                        </div>\n                        <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;padding-right: 13px;\">\n                            <span>{{'alarm.property-min' | translate}}</span>\n                            <input numberOnly [(ngModel)]=\"data.alarm.low.min\" style=\"width: 145px\" type=\"text\">\n                        </div>\n                        <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;padding-right: 13px;\">\n                            <span>{{'alarm.property-max' | translate}}</span>\n                            <input numberOnly [(ngModel)]=\"data.alarm.low.max\" style=\"width: 145px\" type=\"text\">\n                        </div>\n                        <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;\">\n                            <span>{{'alarm.property-timedelay' | translate}}</span>\n                            <input numberOnly [(ngModel)]=\"data.alarm.low.timedelay\" style=\"width: 158px\" type=\"text\">\n                        </div>\n                    </div>\n                    <div style=\"display: block;\">\n                        <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;padding-right: 13px;\">\n                            <span>{{'alarm.property-text' | translate}}</span>\n                            <input [(ngModel)]=\"data.alarm.low.text\" [matAutocomplete]=\"textAuto\" style=\"width: 400px\" type=\"text\">\n                        </div>\n                        <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;\">\n                            <span>{{'alarm.property-group' | translate}}</span>\n                            <input [(ngModel)]=\"data.alarm.low.group\" [matAutocomplete]=\"groupAuto\" style=\"width: 233px\" type=\"text\">\n                        </div>\n                    </div>\n                    <div style=\"display: block; height: 35px;margin-top: 15px;\" [style.background]=\"data.alarm.low.bkcolor\" [style.color]=\"data.alarm.low.color\">\n                        <div class=\"alarm-sample\" style=\"display: inline-block;padding-right: 13px;width: 403px;line-height: 35px;padding-left: 5px;\">\n                            <span>{{data.alarm.low.text}}</span>\n                        </div>\n                        <div class=\"alarm-sample\" style=\"display: inline-block;width: 240px;line-height: 35px\">\n                            <span>{{data.alarm.low.group}}</span>\n                        </div>\n                    </div>\n                </div>\n            </mat-tab>\n            <mat-tab label=\"{{'alarm.property-info' | translate}}\">\n                <div style=\"overflow: hidden; padding-top: 25px;\">\n                    <div style=\"display: block;\">\n                        <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;margin-left: 20px;\">\n                            <span>{{'alarm.property-enabled' | translate}}</span>\n                            <mat-slide-toggle color=\"primary\" [(ngModel)]=\"data.alarm.info.enabled\"></mat-slide-toggle>\n                        </div>\n                        <div class=\"my-form-field\" style=\"margin-bottom: 10px; float:right\">\n                            <span>{{'alarm.property-ackmode' | translate}}</span>\n                            <mat-select [(value)]=\"data.alarm.info.ackmode\" style=\"width: 323px\">\n                                <mat-option *ngFor=\"let ev of ackMode | enumToArray\" [value]=\"ev.key\">\n                                    {{ ev.value }}\n                                </mat-option>\n                            </mat-select>\n                        </div>\n                    </div>\n                    <div style=\"display: inline-table;\">\n                        <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;padding-right: 13px;\">\n                            <span>{{'alarm.property-checkdelay' | translate}}</span>\n                            <input numberOnly [(ngModel)]=\"data.alarm.info.checkdelay\" style=\"width: 145px\" type=\"text\">\n                        </div>\n                        <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;padding-right: 13px;\">\n                            <span>{{'alarm.property-min' | translate}}</span>\n                            <input numberOnly [(ngModel)]=\"data.alarm.info.min\" style=\"width: 145px\" type=\"text\">\n                        </div>\n                        <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;padding-right: 13px;\">\n                            <span>{{'alarm.property-max' | translate}}</span>\n                            <input numberOnly [(ngModel)]=\"data.alarm.info.max\" style=\"width: 145px\" type=\"text\">\n                        </div>\n                        <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;\">\n                            <span>{{'alarm.property-timedelay' | translate}}</span>\n                            <input numberOnly [(ngModel)]=\"data.alarm.info.timedelay\" style=\"width: 158px\" type=\"text\">\n                        </div>\n                    </div>\n                    <div style=\"display: block;\">\n                        <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;padding-right: 13px;\">\n                            <span>{{'alarm.property-text' | translate}}</span>\n                            <input [(ngModel)]=\"data.alarm.info.text\" [matAutocomplete]=\"textAuto\" style=\"width: 400px\" type=\"text\">\n                        </div>\n                        <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;\">\n                            <span>{{'alarm.property-group' | translate}}</span>\n                            <input [(ngModel)]=\"data.alarm.info.group\" [matAutocomplete]=\"groupAuto\" style=\"width: 233px\" type=\"text\">\n                        </div>\n                    </div>\n                    <div style=\"display: block; height: 35px;margin-top: 15px;\" [style.background]=\"data.alarm.info.bkcolor\" [style.color]=\"data.alarm.info.color\">\n                        <div class=\"alarm-sample\" style=\"display: inline-block;padding-right: 13px;width: 403px;line-height: 35px;padding-left: 5px;\">\n                            <span>{{data.alarm.info.text}}</span>\n                        </div>\n                        <div class=\"alarm-sample\" style=\"display: inline-block;width: 240px;line-height: 35px\">\n                            <span>{{data.alarm.info.group}}</span>\n                        </div>\n                    </div>\n                </div>\n            </mat-tab>\n        </mat-tab-group>\n        <div style=\"height: 20px\">\n            <div class=\"message-error\" *ngIf=\"errorExist\">\n                <span>{{'msg.alarmproperty-error-exist' | translate}}</span>\n            </div>\n            <div class=\"message-error\" *ngIf=\"errorMissingValue\">\n                <span>{{'msg.alarmproperty-missing-value' | translate}}</span>\n            </div>\n        </div>\n    </div>\n    <div mat-dialog-actions class=\"dialog-action\">\n        <button mat-raised-button (click)=\"onNoClick()\">{{'dlg.cancel' | translate}}</button>\n        <button mat-raised-button color=\"primary\" (click)=\"onOkClick()\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\n    </div>\n</div>"

            /***/
}),

/***/ "./app/alarms/alarm-property/alarm-property.component.ts":
/*!***************************************************************!*\
  !*** ./app/alarms/alarm-property/alarm-property.component.ts ***!
  \***************************************************************/
/*! exports provided: AlarmPropertyComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AlarmPropertyComponent", function () { return AlarmPropertyComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "../node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _gauges_gauge_property_flex_head_flex_head_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../gauges/gauge-property/flex-head/flex-head.component */ "./app/gauges/gauge-property/flex-head/flex-head.component.ts");
/* harmony import */ var _gauges_gauge_property_flex_auth_flex_auth_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../gauges/gauge-property/flex-auth/flex-auth.component */ "./app/gauges/gauge-property/flex-auth/flex-auth.component.ts");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ngx-translate/core */ "../node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js");
/* harmony import */ var _models_alarm__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../_models/alarm */ "./app/_models/alarm.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };
            var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
                return function (target, key) { decorator(target, key, paramIndex); }
            };






            var AlarmPropertyComponent = /** @class */ (function () {
                function AlarmPropertyComponent(dialogRef, translateService, data) {
                    var _this = this;
                    this.dialogRef = dialogRef;
                    this.translateService = translateService;
                    this.data = data;
                    this.ackMode = _models_alarm__WEBPACK_IMPORTED_MODULE_5__["AlarmAckMode"];
                    this.errorExist = false;
                    this.errorMissingValue = false;
                    this.existnames = [];
                    this.existtexts = [];
                    this.existgroups = [];
                    if (this.data.alarm.property) {
                        this.property = JSON.parse(JSON.stringify(this.data.alarm.property));
                    }
                    else {
                        this.property = new _models_alarm__WEBPACK_IMPORTED_MODULE_5__["AlarmProperty"]();
                    }
                    if (!this.data.alarm.highhigh) {
                        this.data.alarm.highhigh = new _models_alarm__WEBPACK_IMPORTED_MODULE_5__["AlarmSubProperty"]();
                        this.data.alarm.highhigh.bkcolor = "#FF4848";
                        this.data.alarm.highhigh.color = "#FFF";
                        this.data.alarm.highhigh.enabled = true;
                        this.data.alarm.highhigh.ackmode = Object.keys(_models_alarm__WEBPACK_IMPORTED_MODULE_5__["AlarmAckMode"])[Object.values(_models_alarm__WEBPACK_IMPORTED_MODULE_5__["AlarmAckMode"]).indexOf(_models_alarm__WEBPACK_IMPORTED_MODULE_5__["AlarmAckMode"].ackactive)];
                    }
                    if (!this.data.alarm.high) {
                        this.data.alarm.high = new _models_alarm__WEBPACK_IMPORTED_MODULE_5__["AlarmSubProperty"]();
                        this.data.alarm.high.bkcolor = "#F9CF59";
                        this.data.alarm.high.color = "#000";
                        this.data.alarm.high.enabled = true;
                        this.data.alarm.high.ackmode = Object.keys(_models_alarm__WEBPACK_IMPORTED_MODULE_5__["AlarmAckMode"])[Object.values(_models_alarm__WEBPACK_IMPORTED_MODULE_5__["AlarmAckMode"]).indexOf(_models_alarm__WEBPACK_IMPORTED_MODULE_5__["AlarmAckMode"].ackactive)];
                        // this.data.alarm.info = new AlarmSubProperty();
                    }
                    if (!this.data.alarm.low) {
                        this.data.alarm.low = new _models_alarm__WEBPACK_IMPORTED_MODULE_5__["AlarmSubProperty"]();
                        this.data.alarm.low.bkcolor = "#E5E5E5";
                        this.data.alarm.low.color = "#000";
                        this.data.alarm.low.enabled = true;
                        this.data.alarm.low.ackmode = Object.keys(_models_alarm__WEBPACK_IMPORTED_MODULE_5__["AlarmAckMode"])[Object.values(_models_alarm__WEBPACK_IMPORTED_MODULE_5__["AlarmAckMode"]).indexOf(_models_alarm__WEBPACK_IMPORTED_MODULE_5__["AlarmAckMode"].ackactive)];
                    }
                    if (!this.data.alarm.info) {
                        this.data.alarm.info = new _models_alarm__WEBPACK_IMPORTED_MODULE_5__["AlarmSubProperty"]();
                        this.data.alarm.info.bkcolor = "#22A7F2";
                        this.data.alarm.info.color = "#FFF";
                        this.data.alarm.info.enabled = true;
                        this.data.alarm.info.ackmode = Object.keys(_models_alarm__WEBPACK_IMPORTED_MODULE_5__["AlarmAckMode"])[Object.values(_models_alarm__WEBPACK_IMPORTED_MODULE_5__["AlarmAckMode"]).indexOf(_models_alarm__WEBPACK_IMPORTED_MODULE_5__["AlarmAckMode"].float)];
                    }
                    Object.keys(this.ackMode).forEach(function (key) {
                        _this.translateService.get(_this.ackMode[key]).subscribe(function (txt) { _this.ackMode[key] = txt; });
                    });
                    if (data.alarms) {
                        this.existnames = data.alarms.filter(function (a) { return a.name !== data.alarm.name; });
                        data.alarms.forEach(function (item) {
                            if (item.highhigh.text && _this.existtexts.indexOf(item.highhigh.text) === -1)
                                _this.existtexts.push(item.highhigh.text);
                            if (item.high.text && _this.existtexts.indexOf(item.high.text) === -1)
                                _this.existtexts.push(item.high.text);
                            if (item.low.text && _this.existtexts.indexOf(item.low.text) === -1)
                                _this.existtexts.push(item.low.text);
                            if (item.info.text && _this.existtexts.indexOf(item.info.text) === -1)
                                _this.existtexts.push(item.info.text);
                            if (item.highhigh.group && _this.existgroups.indexOf(item.highhigh.group) === -1)
                                _this.existgroups.push(item.highhigh.group);
                            if (item.high.group && _this.existgroups.indexOf(item.high.group) === -1)
                                _this.existgroups.push(item.high.group);
                            if (item.low.group && _this.existgroups.indexOf(item.low.group) === -1)
                                _this.existgroups.push(item.low.group);
                            if (item.info.group && _this.existgroups.indexOf(item.info.group) === -1)
                                _this.existgroups.push(item.info.group);
                        });
                    }
                }
                AlarmPropertyComponent.prototype.ngOnInit = function () {
                };
                AlarmPropertyComponent.prototype.onNoClick = function () {
                    this.dialogRef.close();
                };
                AlarmPropertyComponent.prototype.onOkClick = function () {
                    if (this.data.editmode < 0) {
                        this.dialogRef.close(this.data.alarm);
                    }
                    else if (this.checkValid()) {
                        this.data.alarm.property = this.property;
                        this.data.alarm.property.permission = this.flexAuth.permission;
                        this.data.alarm.name = this.flexAuth.name;
                        this.dialogRef.close(this.data.alarm);
                    }
                };
                AlarmPropertyComponent.prototype.checkValid = function () {
                    var _this = this;
                    this.errorMissingValue = !this.flexAuth.name;
                    this.errorExist = (this.existnames.find(function (a) { return a.name === _this.flexAuth.name; })) ? true : false;
                    return !(this.errorMissingValue || this.errorExist);
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('flexauth'),
                    __metadata("design:type", _gauges_gauge_property_flex_auth_flex_auth_component__WEBPACK_IMPORTED_MODULE_3__["FlexAuthComponent"])
                ], AlarmPropertyComponent.prototype, "flexAuth", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('flexhead'),
                    __metadata("design:type", _gauges_gauge_property_flex_head_flex_head_component__WEBPACK_IMPORTED_MODULE_2__["FlexHeadComponent"])
                ], AlarmPropertyComponent.prototype, "flexHead", void 0);
                AlarmPropertyComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'app-alarm-property',
                        template: __webpack_require__(/*! ./alarm-property.component.html */ "./app/alarms/alarm-property/alarm-property.component.html"),
                        styles: [__webpack_require__(/*! ./alarm-property.component.css */ "./app/alarms/alarm-property/alarm-property.component.css")]
                    }),
                    __param(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MAT_DIALOG_DATA"])),
                    __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialogRef"],
                    _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["TranslateService"], Object])
                ], AlarmPropertyComponent);
                return AlarmPropertyComponent;
            }());



            /***/
}),

/***/ "./app/alarms/alarm-view/alarm-view.component.css":
/*!********************************************************!*\
  !*** ./app/alarms/alarm-view/alarm-view.component.css ***!
  \********************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ".header-panel {\n    /* z-index: 9999 !important; */\n    position: fixed;\n    top: 0px;\n    left: 0px;\n    background-color: var(--headerBackground);\n    color: var(--headerColor);\n    height: 36px;\n    width: 100%;\n    text-align: center;\n    line-height: 36px;\n    border-bottom: 1px solid var(--headerBorder);\n}\n\n.work-panel {\n    position: absolute;\n    top: 37px;\n    left: 0px;\n    right: 0px;\n    bottom: 0px;\n    background-color: var(--workPanelBackground);\n}\n\n.filter {\n    display: inline-block;\n    min-height: 60px;\n    padding: 8px 24px 0;\n}\n\n.filter .mat-form-field {\n    font-size: 14px;\n    width: 100%;\n}\n\n.table {\n    height: 705px;\n}\n\n.mat-table {\n    overflow: auto;\n    min-width: 1560px;\n    /* margin: 5px; */\n    /* max-height: 500px; */\n}\n\n.mat-header-cell.mat-sort-header-sorted {\n    /* color: black; */\n}\n\n.mat-header-row {\n    top: 0;\n    position: relative;\n    z-index: 1;\n    /* background-color: rgba(76,76,76,1); */\n    /* color: white; */\n    min-height: 35px;\n}\n\n.mat-header-cell {\n    font-size: 14px;\n}\n\n.mat-row {\n    min-height: 34px;\n}\n\n.mat-column-ontime {\n    flex: 0 0 160px;\n}\n\n.mat-column-text {\n    flex: 0 0 400px;\n}\n\n.mat-column-type {\n    flex: 0 0 120px;\n}\n\n.mat-column-group {\n    flex: 0 0 250px;\n}\n\n.mat-column-status {\n    flex: 0 0 200px;\n}\n\n.mat-column-ack {\n    flex: 0 0 60px;\n}\n\n.header-tools {\n    position: fixed;\n    right: 30px;\n}\n\n.header-tools div {\n    display: inline-block;\n    padding-left: 10px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWxhcm1zL2FsYXJtLXZpZXcvYWxhcm0tdmlldy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksOEJBQThCO0lBQzlCLGVBQWU7SUFDZixRQUFRO0lBQ1IsU0FBUztJQUNULHlDQUF5QztJQUN6Qyx5QkFBeUI7SUFDekIsWUFBWTtJQUNaLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsaUJBQWlCO0lBQ2pCLDRDQUE0QztBQUNoRDs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixTQUFTO0lBQ1QsU0FBUztJQUNULFVBQVU7SUFDVixXQUFXO0lBQ1gsNENBQTRDO0FBQ2hEOztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLGdCQUFnQjtJQUNoQixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsV0FBVztBQUNmOztBQUVBO0lBQ0ksYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGNBQWM7SUFDZCxpQkFBaUI7SUFDakIsaUJBQWlCO0lBQ2pCLHVCQUF1QjtBQUMzQjs7QUFFQTtJQUNJLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLE1BQU07SUFDTixrQkFBa0I7SUFDbEIsVUFBVTtJQUNWLHdDQUF3QztJQUN4QyxrQkFBa0I7SUFDbEIsZ0JBQWdCO0FBQ3BCOztBQUNBO0lBQ0ksZUFBZTtBQUNuQjs7QUFDQTtJQUNJLGdCQUFnQjtBQUNwQjs7QUFDQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxlQUFlO0FBQ25COztBQUNBO0lBQ0ksZUFBZTtBQUNuQjs7QUFDQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxlQUFlO0FBQ25COztBQUVBO0lBQ0ksY0FBYztBQUNsQjs7QUFFQTtJQUNJLGVBQWU7SUFDZixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxxQkFBcUI7SUFDckIsa0JBQWtCO0FBQ3RCIiwiZmlsZSI6InNyYy9hcHAvYWxhcm1zL2FsYXJtLXZpZXcvYWxhcm0tdmlldy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmhlYWRlci1wYW5lbCB7XG4gICAgLyogei1pbmRleDogOTk5OSAhaW1wb3J0YW50OyAqL1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB0b3A6IDBweDtcbiAgICBsZWZ0OiAwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0taGVhZGVyQmFja2dyb3VuZCk7XG4gICAgY29sb3I6IHZhcigtLWhlYWRlckNvbG9yKTtcbiAgICBoZWlnaHQ6IDM2cHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGxpbmUtaGVpZ2h0OiAzNnB4O1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCB2YXIoLS1oZWFkZXJCb3JkZXIpO1xufVxuXG4ud29yay1wYW5lbCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMzdweDtcbiAgICBsZWZ0OiAwcHg7XG4gICAgcmlnaHQ6IDBweDtcbiAgICBib3R0b206IDBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS13b3JrUGFuZWxCYWNrZ3JvdW5kKTtcbn1cblxuLmZpbHRlciB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIG1pbi1oZWlnaHQ6IDYwcHg7XG4gICAgcGFkZGluZzogOHB4IDI0cHggMDtcbn1cblxuLmZpbHRlciAubWF0LWZvcm0tZmllbGQge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICB3aWR0aDogMTAwJTtcbn1cblxuLnRhYmxlIHtcbiAgICBoZWlnaHQ6IDcwNXB4O1xufVxuXG4ubWF0LXRhYmxlIHtcbiAgICBvdmVyZmxvdzogYXV0bztcbiAgICBtaW4td2lkdGg6IDE1NjBweDtcbiAgICAvKiBtYXJnaW46IDVweDsgKi9cbiAgICAvKiBtYXgtaGVpZ2h0OiA1MDBweDsgKi9cbn1cbiAgXG4ubWF0LWhlYWRlci1jZWxsLm1hdC1zb3J0LWhlYWRlci1zb3J0ZWQge1xuICAgIC8qIGNvbG9yOiBibGFjazsgKi9cbn1cblxuLm1hdC1oZWFkZXItcm93IHtcbiAgICB0b3A6IDA7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHotaW5kZXg6IDE7XG4gICAgLyogYmFja2dyb3VuZC1jb2xvcjogcmdiYSg3Niw3Niw3NiwxKTsgKi9cbiAgICAvKiBjb2xvcjogd2hpdGU7ICovXG4gICAgbWluLWhlaWdodDogMzVweDtcbn1cbi5tYXQtaGVhZGVyLWNlbGwge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbn1cbi5tYXQtcm93IHtcbiAgICBtaW4taGVpZ2h0OiAzNHB4O1xufVxuLm1hdC1jb2x1bW4tb250aW1lIHtcbiAgICBmbGV4OiAwIDAgMTYwcHg7XG59XG5cbi5tYXQtY29sdW1uLXRleHQge1xuICAgIGZsZXg6IDAgMCA0MDBweDtcbn1cbi5tYXQtY29sdW1uLXR5cGUge1xuICAgIGZsZXg6IDAgMCAxMjBweDtcbn1cbi5tYXQtY29sdW1uLWdyb3VwIHtcbiAgICBmbGV4OiAwIDAgMjUwcHg7XG59XG5cbi5tYXQtY29sdW1uLXN0YXR1cyB7XG4gICAgZmxleDogMCAwIDIwMHB4O1xufVxuXG4ubWF0LWNvbHVtbi1hY2sge1xuICAgIGZsZXg6IDAgMCA2MHB4O1xufVxuXG4uaGVhZGVyLXRvb2xzIHtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgcmlnaHQ6IDMwcHg7XG59XG5cbi5oZWFkZXItdG9vbHMgZGl2IHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xufSJdfQ== */"

            /***/
}),

/***/ "./app/alarms/alarm-view/alarm-view.component.html":
/*!*********************************************************!*\
  !*** ./app/alarms/alarm-view/alarm-view.component.html ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div class=\"header-panel\" *ngIf=\"fullview\">\n    {{'alarms.view-title' | translate}}\n</div>\n<div class=\"work-panel\" [ngStyle]=\"{'top': fullview ? '37px' : '0px'}\">\n    <mat-table #table [dataSource]=\"dataSource\" matSort>\n        <ng-container matColumnDef=\"ontime\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header> {{'alarms.view-ontime' | translate}} </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\" [style.color]=\"element.color\"> {{element.ontime | date: 'yyyy.MM.dd HH:mm:ss'}} </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"text\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header> {{'alarms.view-text' | translate}} </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\" [style.color]=\"element.color\"> {{element.text}} </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"type\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header> {{'alarms.view-type' | translate}} </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\" [style.color]=\"element.color\"> {{element.type}}</mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"group\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header> {{'alarms.view-group' | translate}} </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\" [style.color]=\"element.color\"> {{element.group}}</mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"status\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header> {{'alarms.view-status' | translate}} </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\" [style.color]=\"element.color\"> {{element.status}} </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"ack\">\n            <mat-header-cell *matHeaderCellDef>\n                <div class=\"header-tools\" *ngIf=\"!fullview\">\n                    <div (click)=\"$event.stopPropagation();onShowMode('expand')\" *ngIf=\"currentShowMode === 'collapse'\" style=\"cursor: pointer;\">\n                        <mat-icon>vertical_align_top</mat-icon>\n                    </div>\n                    <div (click)=\"$event.stopPropagation();onShowMode('collapse')\" *ngIf=\"currentShowMode === 'expand'\" style=\"cursor: pointer;\">\n                        <mat-icon>vertical_align_bottom</mat-icon>\n                    </div>\n                    <div (click)=\"onClose();$event.stopPropagation()\" style=\"cursor: pointer;\">\n                        <mat-icon>clear</mat-icon>\n                    </div>\n                </div>\n            </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\" [style.color]=\"element.color\">\n                <button mat-icon-button (click)=\"onAckAlarm(element)\" *ngIf=\"element.toack >= 0\" [disabled]=\"element.toack == 0\" class=\"remove\">\n                    <mat-icon>check_circle_outline</mat-icon>\n                </button>\n            </mat-cell>\n        </ng-container>\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n        <mat-row *matRowDef=\"let element; columns: displayedColumns;\" class=\"my-mat-row\" \n                        [style.background-color]=\"element.bkcolor\"></mat-row>\n    </mat-table>\n</div>"

            /***/
}),

/***/ "./app/alarms/alarm-view/alarm-view.component.ts":
/*!*******************************************************!*\
  !*** ./app/alarms/alarm-view/alarm-view.component.ts ***!
  \*******************************************************/
/*! exports provided: AlarmViewComponent, AlarmStatus, AlarmPriority */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AlarmViewComponent", function () { return AlarmViewComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AlarmStatus", function () { return AlarmStatus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AlarmPriority", function () { return AlarmPriority; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "../node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "../node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ "../node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _services_hmi_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../_services/hmi.service */ "./app/_services/hmi.service.ts");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ngx-translate/core */ "../node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };






            var AlarmViewComponent = /** @class */ (function () {
                function AlarmViewComponent(translateService, hmiService) {
                    this.translateService = translateService;
                    this.hmiService = hmiService;
                    this.displayedColumns = ['ontime', 'text', 'type', 'group', 'status', 'ack'];
                    this.dataSource = new _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatTableDataSource"]([]);
                    this.showheader = false;
                    this.currentShowMode = 'collapse';
                    this.statusText = AlarmStatus;
                    this.priorityText = AlarmPriority;
                    this.fullview = true;
                    this.showMode = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
                    this.rxjsPollingTimer = Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["timer"])(0, 2000);
                    this.destroy = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
                }
                AlarmViewComponent.prototype.ngOnInit = function () {
                    var _this = this;
                    Object.keys(this.statusText).forEach(function (key) {
                        _this.translateService.get(_this.statusText[key]).subscribe(function (txt) { _this.statusText[key] = txt; });
                    });
                    Object.keys(this.priorityText).forEach(function (key) {
                        _this.translateService.get(_this.priorityText[key]).subscribe(function (txt) { _this.priorityText[key] = txt; });
                    });
                };
                AlarmViewComponent.prototype.ngAfterViewInit = function () {
                    this.dataSource.sort = this.sort;
                };
                AlarmViewComponent.prototype.ngOnDestroy = function () {
                    this.stopAskAlarmsValues();
                };
                AlarmViewComponent.prototype.startAskAlarmsValues = function () {
                    this.startPolling();
                };
                AlarmViewComponent.prototype.stopAskAlarmsValues = function () {
                    this.stopPolling();
                };
                AlarmViewComponent.prototype.stopPolling = function () {
                    this.alarmsPolling = 0;
                    this.destroy.next();
                    this.destroy.complete();
                };
                AlarmViewComponent.prototype.startPolling = function () {
                    var _this = this;
                    try {
                        if (!this.alarmsPolling) {
                            this.alarmsPolling = 1;
                            this.destroy = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
                            this.rxjsPollingTimer.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["takeUntil"])(this.destroy), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["switchMap"])(function () {
                                return _this.hmiService.getAlarmsValues().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["catchError"])(function (er) { return _this.handleError(er); }));
                            })).subscribe(function (result) {
                                _this.updateAlarmsList(result);
                            });
                        }
                    }
                    catch (error) {
                    }
                };
                AlarmViewComponent.prototype.handleError = function (error) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["empty"])();
                };
                AlarmViewComponent.prototype.updateAlarmsList = function (alr) {
                    var _this = this;
                    alr.forEach(function (alr) {
                        alr.status = _this.getStatus(alr.status);
                        alr.type = _this.getPriority(alr.type);
                    });
                    this.dataSource.data = alr;
                };
                AlarmViewComponent.prototype.getStatus = function (status) {
                    return this.statusText[status];
                };
                AlarmViewComponent.prototype.getPriority = function (type) {
                    return this.priorityText[type];
                };
                AlarmViewComponent.prototype.onAckAlarm = function (alarm) {
                    this.hmiService.setAlarmAck(alarm.name).subscribe(function (result) {
                    }, function (error) {
                        console.error('Error setAlarmAck');
                    });
                };
                AlarmViewComponent.prototype.onShowMode = function (mode) {
                    this.currentShowMode = mode;
                    this.showMode.emit(this.currentShowMode);
                };
                AlarmViewComponent.prototype.onClose = function () {
                    this.currentShowMode = 'collapse';
                    this.showMode.emit('close');
                    this.stopAskAlarmsValues();
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Object)
                ], AlarmViewComponent.prototype, "fullview", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"])
                ], AlarmViewComponent.prototype, "showMode", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatTable"]),
                    __metadata("design:type", _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatTable"])
                ], AlarmViewComponent.prototype, "table", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatSort"]),
                    __metadata("design:type", _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatSort"])
                ], AlarmViewComponent.prototype, "sort", void 0);
                AlarmViewComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'app-alarm-view',
                        template: __webpack_require__(/*! ./alarm-view.component.html */ "./app/alarms/alarm-view/alarm-view.component.html"),
                        styles: [__webpack_require__(/*! ./alarm-view.component.css */ "./app/alarms/alarm-view/alarm-view.component.css")]
                    }),
                    __metadata("design:paramtypes", [_ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateService"],
                    _services_hmi_service__WEBPACK_IMPORTED_MODULE_4__["HmiService"]])
                ], AlarmViewComponent);
                return AlarmViewComponent;
            }());

            var AlarmStatus;
            (function (AlarmStatus) {
                AlarmStatus["N"] = "alarm.status-active";
                AlarmStatus["NF"] = "alarm.status-passive";
                AlarmStatus["NA"] = "alarm.status-active-ack";
            })(AlarmStatus || (AlarmStatus = {}));
            var AlarmPriority;
            (function (AlarmPriority) {
                AlarmPriority["highhigh"] = "alarm.property-highhigh";
                AlarmPriority["high"] = "alarm.property-high";
                AlarmPriority["low"] = "alarm.property-low";
                AlarmPriority["info"] = "alarm.property-info";
            })(AlarmPriority || (AlarmPriority = {}));


            /***/
}),

/***/ "./app/app.component.css":
/*!*******************************!*\
  !*** ./app/app.component.css ***!
  \*******************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "\n.container {\n    width: 100%;\n    height: 100% !important;\n    background-color:#FFFFFF\n}\n\n.work-void {\n    height: 100%;\n    width: 100%;\n}\n\n.work-editor {\n    background-color:#FFFFFF;\n    height: calc(100% - (46px));\n    min-width: 800px;\n}\n\n.work-home {\n    background-color:#FFFFFF;\n    height: 100%;\n    min-width: 800px;\n}\n\n.header {\n    /* height: 40px !important;     */\n}\n\n.footer {\n    height: 20px;\n    position:absolute;\n    bottom:0px;\n}\n\n.fab-button {\n    position: absolute;\n    bottom: 20px;\n    left: 10px;\n    color: rgba(255,255,255,1);\n    background-color: rgba(68,138,255, 0);\n    /* background-color: rgba(0,0,0,0.9); */\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0ksV0FBVztJQUNYLHVCQUF1QjtJQUN2QjtBQUNKOztBQUVBO0lBQ0ksWUFBWTtJQUNaLFdBQVc7QUFDZjs7QUFFQTtJQUNJLHdCQUF3QjtJQUN4QiwyQkFBMkI7SUFDM0IsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksd0JBQXdCO0lBQ3hCLFlBQVk7SUFDWixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxpQ0FBaUM7QUFDckM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osaUJBQWlCO0lBQ2pCLFVBQVU7QUFDZDs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1osVUFBVTtJQUNWLDBCQUEwQjtJQUMxQixxQ0FBcUM7SUFDckMsdUNBQXVDO0FBQzNDIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbi5jb250YWluZXIge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJSAhaW1wb3J0YW50O1xuICAgIGJhY2tncm91bmQtY29sb3I6I0ZGRkZGRlxufVxuXG4ud29yay12b2lkIHtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgd2lkdGg6IDEwMCU7XG59XG5cbi53b3JrLWVkaXRvciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjojRkZGRkZGO1xuICAgIGhlaWdodDogY2FsYygxMDAlIC0gKDQ2cHgpKTtcbiAgICBtaW4td2lkdGg6IDgwMHB4O1xufVxuXG4ud29yay1ob21lIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiNGRkZGRkY7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIG1pbi13aWR0aDogODAwcHg7XG59XG5cbi5oZWFkZXIge1xuICAgIC8qIGhlaWdodDogNDBweCAhaW1wb3J0YW50OyAgICAgKi9cbn1cblxuLmZvb3RlciB7XG4gICAgaGVpZ2h0OiAyMHB4O1xuICAgIHBvc2l0aW9uOmFic29sdXRlO1xuICAgIGJvdHRvbTowcHg7XG59XG5cbi5mYWItYnV0dG9uIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYm90dG9tOiAyMHB4O1xuICAgIGxlZnQ6IDEwcHg7XG4gICAgY29sb3I6IHJnYmEoMjU1LDI1NSwyNTUsMSk7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg2OCwxMzgsMjU1LCAwKTtcbiAgICAvKiBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsMCwwLDAuOSk7ICovXG59Il19 */"

            /***/
}),

/***/ "./app/app.component.html":
/*!********************************!*\
  !*** ./app/app.component.html ***!
  \********************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div id=\"main-container\" class=\"container\">\n    <app-header class=\"header\" [hidden]=\"isHidden()\"></app-header>\n    <div [ngClass]=\"getClass()\">\n        <router-outlet></router-outlet>\n        <ngx-fab-button *ngIf=\"showDevNavigation()\" #fabmenu icon=\"menu\" iconOpen=\"menu\" class=\"fab-button\" color=\"rgba(68,138,255, 1)\">\n            <ngx-fab-item-button color=\"rgba(68,138,255, 1)\" content=\"{{'app.editor' | translate}}\" (click)=\"onGoTo('editor')\" (touchend)=\"onGoTo('editor')\"></ngx-fab-item-button>\n            <ngx-fab-item-button color=\"rgba(68,138,255, 1)\" content=\"{{'app.lab' | translate}}\" (click)=\"onGoTo('lab')\" (touchend)=\"onGoTo('lab')\"></ngx-fab-item-button>\n            <ngx-fab-item-button color=\"rgba(68,138,255, 1)\" content=\"{{'app.home' | translate}}\" (click)=\"onGoTo('home')\" (touchend)=\"onGoTo('home')\"></ngx-fab-item-button>\n        </ngx-fab-button>\n    </div>\n</div>"

            /***/
}),

/***/ "./app/app.component.ts":
/*!******************************!*\
  !*** ./app/app.component.ts ***!
  \******************************/
/*! exports provided: AppComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppComponent", function () { return AppComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "../node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "../node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ngx-translate/core */ "../node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../environments/environment */ "./environments/environment.ts");
/* harmony import */ var _services_project_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./_services/project.service */ "./app/_services/project.service.ts");
/* harmony import */ var _services_settings_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./_services/settings.service */ "./app/_services/settings.service.ts");
/* harmony import */ var _models_user__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./_models/user */ "./app/_models/user.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };








            var AppComponent = /** @class */ (function () {
                function AppComponent(router, projectService, settingsService, translateService, location) {
                    this.router = router;
                    this.projectService = projectService;
                    this.settingsService = settingsService;
                    this.translateService = translateService;
                    this.title = 'app';
                    this.showdev = false;
                    this.location = location;
                }
                AppComponent.prototype.ngOnInit = function () {
                    console.log("FUXA v" + _environments_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].version);
                };
                AppComponent.prototype.ngAfterViewInit = function () {
                    var _this = this;
                    try {
                        this.settingsService.init();
                        var hmi = this.projectService.getHmi();
                        if (hmi) {
                            this.checkSettings();
                        }
                        this.subscriptionLoad = this.projectService.onLoadHmi.subscribe(function (load) {
                            _this.checkSettings();
                        }, function (error) {
                            console.error('Error loadHMI');
                        });
                        // define user groups text
                        this.translateService.get('general.usergroups').subscribe(function (txt) {
                            var grpLabels = txt.split(',');
                            if (grpLabels && grpLabels.length > 0) {
                                for (var i = 0; i < grpLabels.length && i < _models_user__WEBPACK_IMPORTED_MODULE_7__["UserGroups"].Groups.length; i++) {
                                    _models_user__WEBPACK_IMPORTED_MODULE_7__["UserGroups"].Groups[i].label = grpLabels[i];
                                }
                            }
                        });
                    }
                    catch (err) {
                        console.error(err);
                    }
                };
                AppComponent.prototype.ngOnDestroy = function () {
                    try {
                        if (this.subscriptionLoad) {
                            this.subscriptionLoad.unsubscribe();
                        }
                    }
                    catch (e) {
                    }
                };
                AppComponent.prototype.checkSettings = function () {
                    var hmi = this.projectService.getHmi();
                    if (hmi && hmi.layout && hmi.layout.showdev === false) {
                        this.showdev = false;
                    }
                    else {
                        this.showdev = true;
                    }
                };
                AppComponent.prototype.isHidden = function () {
                    var list = ['', '/lab', '/home'], route = this.location.path();
                    return (list.indexOf(route) > -1);
                };
                AppComponent.prototype.getClass = function () {
                    var route = this.location.path();
                    if (route.startsWith('/view')) {
                        return 'work-void';
                    }
                    return (this.isHidden()) ? 'work-home' : 'work-editor';
                };
                AppComponent.prototype.showDevNavigation = function () {
                    var route = this.location.path();
                    if (route.startsWith('/view')) {
                        return false;
                    }
                    return this.showdev;
                };
                AppComponent.prototype.onGoTo = function (goto) {
                    this.router.navigate([goto]);
                    this.fabmenu.toggle();
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('fabmenu'),
                    __metadata("design:type", Object)
                ], AppComponent.prototype, "fabmenu", void 0);
                AppComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'app-root',
                        template: __webpack_require__(/*! ./app.component.html */ "./app/app.component.html"),
                        styles: [__webpack_require__(/*! ./app.component.css */ "./app/app.component.css")]
                    }),
                    __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"],
                    _services_project_service__WEBPACK_IMPORTED_MODULE_5__["ProjectService"],
                    _services_settings_service__WEBPACK_IMPORTED_MODULE_6__["SettingsService"],
                    _ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__["TranslateService"],
                    _angular_common__WEBPACK_IMPORTED_MODULE_1__["Location"]])
                ], AppComponent);
                return AppComponent;
            }());



            /***/
}),

/***/ "./app/app.config.ts":
/*!***************************!*\
  !*** ./app/app.config.ts ***!
  \***************************/
/*! exports provided: appConfig */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "appConfig", function () { return appConfig; });
            var appConfig = {
                apiUrl: 'http://localhost:3000'
            };


            /***/
}),

/***/ "./app/app.module.ts":
/*!***************************!*\
  !*** ./app/app.module.ts ***!
  \***************************/
/*! exports provided: createTranslateLoader, AppModule */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createTranslateLoader", function () { return createTranslateLoader; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppModule", function () { return AppModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/platform-browser */ "../node_modules/@angular/platform-browser/fesm5/platform-browser.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "../node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common/http */ "../node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _material_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./material.module */ "./app/material.module.ts");
/* harmony import */ var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/platform-browser/animations */ "../node_modules/@angular/platform-browser/fesm5/animations.js");
/* harmony import */ var ngx_color_picker__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-color-picker */ "../node_modules/ngx-color-picker/fesm2015/ngx-color-picker.js");
/* harmony import */ var ng5_slider__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ng5-slider */ "../node_modules/ng5-slider/esm5/ng5-slider.js");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ngx-toastr */ "../node_modules/ngx-toastr/fesm5/ngx-toastr.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ngx-translate/core */ "../node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js");
/* harmony import */ var _ngx_translate_http_loader__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @ngx-translate/http-loader */ "../node_modules/@ngx-translate/http-loader/fesm5/ngx-translate-http-loader.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/material */ "../node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var angular2_draggable__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! angular2-draggable */ "../node_modules/angular2-draggable/fesm5/angular2-draggable.js");
/* harmony import */ var _app_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./app.component */ "./app/app.component.ts");
/* harmony import */ var _app_routing__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./app.routing */ "./app/app.routing.ts");
/* harmony import */ var _auth_guard__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./auth.guard */ "./app/auth.guard.ts");
/* harmony import */ var _home_home_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./home/home.component */ "./app/home/home.component.ts");
/* harmony import */ var _header_header_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./header/header.component */ "./app/header/header.component.ts");
/* harmony import */ var _iframe_iframe_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./iframe/iframe.component */ "./app/iframe/iframe.component.ts");
/* harmony import */ var _view_view_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./view/view.component */ "./app/view/view.component.ts");
/* harmony import */ var _sidenav_sidenav_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./sidenav/sidenav.component */ "./app/sidenav/sidenav.component.ts");
/* harmony import */ var _editor_editor_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./editor/editor.component */ "./app/editor/editor.component.ts");
/* harmony import */ var _editor_layout_property_layout_property_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./editor/layout-property/layout-property.component */ "./app/editor/layout-property/layout-property.component.ts");
/* harmony import */ var _editor_plugins_plugins_component__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./editor/plugins/plugins.component */ "./app/editor/plugins/plugins.component.ts");
/* harmony import */ var _editor_app_settings_app_settings_component__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./editor/app-settings/app-settings.component */ "./app/editor/app-settings/app-settings.component.ts");
/* harmony import */ var _editor_setup_setup_component__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./editor/setup/setup.component */ "./app/editor/setup/setup.component.ts");
/* harmony import */ var _editor_chart_config_chart_config_component__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./editor/chart-config/chart-config.component */ "./app/editor/chart-config/chart-config.component.ts");
/* harmony import */ var _editor_card_config_card_config_component__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./editor/card-config/card-config.component */ "./app/editor/card-config/card-config.component.ts");
/* harmony import */ var _alarms_alarm_view_alarm_view_component__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./alarms/alarm-view/alarm-view.component */ "./app/alarms/alarm-view/alarm-view.component.ts");
/* harmony import */ var _alarms_alarm_list_alarm_list_component__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./alarms/alarm-list/alarm-list.component */ "./app/alarms/alarm-list/alarm-list.component.ts");
/* harmony import */ var _alarms_alarm_property_alarm_property_component__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./alarms/alarm-property/alarm-property.component */ "./app/alarms/alarm-property/alarm-property.component.ts");
/* harmony import */ var _text_list_text_list_component__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./text-list/text-list.component */ "./app/text-list/text-list.component.ts");
/* harmony import */ var _lab_lab_component__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./lab/lab.component */ "./app/lab/lab.component.ts");
/* harmony import */ var _device_device_component__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./device/device.component */ "./app/device/device.component.ts");
/* harmony import */ var _device_device_property_device_property_component__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./device/device-property/device-property.component */ "./app/device/device-property/device-property.component.ts");
/* harmony import */ var _device_tag_property_tag_property_component__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./device/tag-property/tag-property.component */ "./app/device/tag-property/tag-property.component.ts");
/* harmony import */ var _device_topic_property_topic_property_component__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./device/topic-property/topic-property.component */ "./app/device/topic-property/topic-property.component.ts");
/* harmony import */ var _device_device_list_device_list_component__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./device/device-list/device-list.component */ "./app/device/device-list/device-list.component.ts");
/* harmony import */ var _device_device_map_device_map_component__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./device/device-map/device-map.component */ "./app/device/device-map/device-map.component.ts");
/* harmony import */ var _fuxa_view_fuxa_view_component__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./fuxa-view/fuxa-view.component */ "./app/fuxa-view/fuxa-view.component.ts");
/* harmony import */ var _cards_view_cards_view_component__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./cards-view/cards-view.component */ "./app/cards-view/cards-view.component.ts");
/* harmony import */ var _tester_tester_component__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./tester/tester.component */ "./app/tester/tester.component.ts");
/* harmony import */ var _helpers_custom_http__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./_helpers/custom-http */ "./app/_helpers/custom-http.ts");
/* harmony import */ var _tester_tester_service__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./tester/tester.service */ "./app/tester/tester.service.ts");
/* harmony import */ var _services_user_service__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./_services/user.service */ "./app/_services/user.service.ts");
/* harmony import */ var _services_settings_service__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./_services/settings.service */ "./app/_services/settings.service.ts");
/* harmony import */ var _services_plugin_service__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./_services/plugin.service */ "./app/_services/plugin.service.ts");
/* harmony import */ var _services_auth_service__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./_services/auth.service */ "./app/_services/auth.service.ts");
/* harmony import */ var _services_rcgi_reswebapi_service__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./_services/rcgi/reswebapi.service */ "./app/_services/rcgi/reswebapi.service.ts");
/* harmony import */ var _services_rcgi_resdemo_service__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./_services/rcgi/resdemo.service */ "./app/_services/rcgi/resdemo.service.ts");
/* harmony import */ var _services_rcgi_resclient_service__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./_services/rcgi/resclient.service */ "./app/_services/rcgi/resclient.service.ts");
/* harmony import */ var _services_project_service__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./_services/project.service */ "./app/_services/project.service.ts");
/* harmony import */ var _services_hmi_service__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./_services/hmi.service */ "./app/_services/hmi.service.ts");
/* harmony import */ var _services_app_service__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./_services/app.service */ "./app/_services/app.service.ts");
/* harmony import */ var _help_tutorial_tutorial_component__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./help/tutorial/tutorial.component */ "./app/help/tutorial/tutorial.component.ts");
/* harmony import */ var _helpers_windowref__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./_helpers/windowref */ "./app/_helpers/windowref.ts");
/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./_helpers/utils */ "./app/_helpers/utils.ts");
/* harmony import */ var _helpers_define__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./_helpers/define */ "./app/_helpers/define.ts");
/* harmony import */ var _helpers_dictionary__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./_helpers/dictionary */ "./app/_helpers/dictionary.ts");
/* harmony import */ var _gui_helpers_fab_button_ngx_fab_button_component__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./gui-helpers/fab-button/ngx-fab-button.component */ "./app/gui-helpers/fab-button/ngx-fab-button.component.ts");
/* harmony import */ var _gui_helpers_fab_button_ngx_fab_item_button_component__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./gui-helpers/fab-button/ngx-fab-item-button.component */ "./app/gui-helpers/fab-button/ngx-fab-item-button.component.ts");
/* harmony import */ var _gui_helpers_treetable_treetable_component__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./gui-helpers/treetable/treetable.component */ "./app/gui-helpers/treetable/treetable.component.ts");
/* harmony import */ var _gui_helpers_confirm_dialog_confirm_dialog_component__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./gui-helpers/confirm-dialog/confirm-dialog.component */ "./app/gui-helpers/confirm-dialog/confirm-dialog.component.ts");
/* harmony import */ var _gui_helpers_sel_options_sel_options_component__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./gui-helpers/sel-options/sel-options.component */ "./app/gui-helpers/sel-options/sel-options.component.ts");
/* harmony import */ var _gui_helpers_ngx_switch_ngx_switch_component__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./gui-helpers/ngx-switch/ngx-switch.component */ "./app/gui-helpers/ngx-switch/ngx-switch.component.ts");
/* harmony import */ var _directives_dialog_draggable_directive__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./_directives/dialog-draggable.directive */ "./app/_directives/dialog-draggable.directive.ts");
/* harmony import */ var _directives_modal_position_cache__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./_directives/modal-position.cache */ "./app/_directives/modal-position.cache.ts");
/* harmony import */ var _directives_ngx_draggable_directive__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./_directives/ngx-draggable.directive */ "./app/_directives/ngx-draggable.directive.ts");
/* harmony import */ var _directives_number_directive__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./_directives/number.directive */ "./app/_directives/number.directive.ts");
/* harmony import */ var _directives_lazyFor_directive__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./_directives/lazyFor.directive */ "./app/_directives/lazyFor.directive.ts");
/* harmony import */ var _gauges_gauges_component__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./gauges/gauges.component */ "./app/gauges/gauges.component.ts");
/* harmony import */ var _gauges_gauge_base_gauge_base_component__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./gauges/gauge-base/gauge-base.component */ "./app/gauges/gauge-base/gauge-base.component.ts");
/* harmony import */ var _gauges_controls_value_value_component__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./gauges/controls/value/value.component */ "./app/gauges/controls/value/value.component.ts");
/* harmony import */ var _gauges_gauge_property_flex_variables_mapping_flex_variables_mapping_component__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./gauges/gauge-property/flex-variables-mapping/flex-variables-mapping.component */ "./app/gauges/gauge-property/flex-variables-mapping/flex-variables-mapping.component.ts");
/* harmony import */ var _gauges_gauge_property_flex_variable_map_flex_variable_map_component__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ./gauges/gauge-property/flex-variable-map/flex-variable-map.component */ "./app/gauges/gauge-property/flex-variable-map/flex-variable-map.component.ts");
/* harmony import */ var _gauges_gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ./gauges/gauge-property/gauge-property.component */ "./app/gauges/gauge-property/gauge-property.component.ts");
/* harmony import */ var _gauges_controls_html_chart_chart_property_chart_property_component__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ./gauges/controls/html-chart/chart-property/chart-property.component */ "./app/gauges/controls/html-chart/chart-property/chart-property.component.ts");
/* harmony import */ var _gauges_gauge_property_flex_input_flex_input_component__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ./gauges/gauge-property/flex-input/flex-input.component */ "./app/gauges/gauge-property/flex-input/flex-input.component.ts");
/* harmony import */ var _gauges_gauge_property_flex_auth_flex_auth_component__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ./gauges/gauge-property/flex-auth/flex-auth.component */ "./app/gauges/gauge-property/flex-auth/flex-auth.component.ts");
/* harmony import */ var _gauges_gauge_property_flex_head_flex_head_component__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ./gauges/gauge-property/flex-head/flex-head.component */ "./app/gauges/gauge-property/flex-head/flex-head.component.ts");
/* harmony import */ var _gauges_gauge_property_flex_event_flex_event_component__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ./gauges/gauge-property/flex-event/flex-event.component */ "./app/gauges/gauge-property/flex-event/flex-event.component.ts");
/* harmony import */ var _gauges_gauge_property_flex_action_flex_action_component__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ./gauges/gauge-property/flex-action/flex-action.component */ "./app/gauges/gauge-property/flex-action/flex-action.component.ts");
/* harmony import */ var _gauges_gauge_property_flex_variable_flex_variable_component__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ./gauges/gauge-property/flex-variable/flex-variable.component */ "./app/gauges/gauge-property/flex-variable/flex-variable.component.ts");
/* harmony import */ var _gui_helpers_mat_select_search_mat_select_search_module__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! ./gui-helpers/mat-select-search/mat-select-search.module */ "./app/gui-helpers/mat-select-search/mat-select-search.module.ts");
/* harmony import */ var _gauges_controls_html_input_html_input_component__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! ./gauges/controls/html-input/html-input.component */ "./app/gauges/controls/html-input/html-input.component.ts");
/* harmony import */ var _gauges_controls_html_button_html_button_component__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! ./gauges/controls/html-button/html-button.component */ "./app/gauges/controls/html-button/html-button.component.ts");
/* harmony import */ var _gauges_controls_html_select_html_select_component__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! ./gauges/controls/html-select/html-select.component */ "./app/gauges/controls/html-select/html-select.component.ts");
/* harmony import */ var _gauges_controls_html_chart_html_chart_component__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! ./gauges/controls/html-chart/html-chart.component */ "./app/gauges/controls/html-chart/html-chart.component.ts");
/* harmony import */ var _gauges_controls_html_bag_html_bag_component__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(/*! ./gauges/controls/html-bag/html-bag.component */ "./app/gauges/controls/html-bag/html-bag.component.ts");
/* harmony import */ var _gauges_controls_html_switch_html_switch_component__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(/*! ./gauges/controls/html-switch/html-switch.component */ "./app/gauges/controls/html-switch/html-switch.component.ts");
/* harmony import */ var _gauges_controls_gauge_progress_gauge_progress_component__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(/*! ./gauges/controls/gauge-progress/gauge-progress.component */ "./app/gauges/controls/gauge-progress/gauge-progress.component.ts");
/* harmony import */ var _gauges_controls_gauge_semaphore_gauge_semaphore_component__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(/*! ./gauges/controls/gauge-semaphore/gauge-semaphore.component */ "./app/gauges/controls/gauge-semaphore/gauge-semaphore.component.ts");
/* harmony import */ var _users_users_component__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(/*! ./users/users.component */ "./app/users/users.component.ts");
/* harmony import */ var _login_login_component__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(/*! ./login/login.component */ "./app/login/login.component.ts");
/* harmony import */ var _gauges_shapes_shapes_component__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(/*! ./gauges/shapes/shapes.component */ "./app/gauges/shapes/shapes.component.ts");
/* harmony import */ var _gauges_shapes_proc_eng_proc_eng_component__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(/*! ./gauges/shapes/proc-eng/proc-eng.component */ "./app/gauges/shapes/proc-eng/proc-eng.component.ts");
/* harmony import */ var _gauges_shapes_ape_shapes_ape_shapes_component__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(/*! ./gauges/shapes/ape-shapes/ape-shapes.component */ "./app/gauges/shapes/ape-shapes/ape-shapes.component.ts");
/* harmony import */ var _gui_helpers_ngx_gauge_ngx_gauge_component__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(/*! ./gui-helpers/ngx-gauge/ngx-gauge.component */ "./app/gui-helpers/ngx-gauge/ngx-gauge.component.ts");
/* harmony import */ var _gui_helpers_ngx_nouislider_ngx_nouislider_component__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(/*! ./gui-helpers/ngx-nouislider/ngx-nouislider.component */ "./app/gui-helpers/ngx-nouislider/ngx-nouislider.component.ts");
/* harmony import */ var _gauges_controls_html_bag_bag_property_bag_property_component__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(/*! ./gauges/controls/html-bag/bag-property/bag-property.component */ "./app/gauges/controls/html-bag/bag-property/bag-property.component.ts");
/* harmony import */ var _gauges_controls_pipe_pipe_property_pipe_property_component__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(/*! ./gauges/controls/pipe/pipe-property/pipe-property.component */ "./app/gauges/controls/pipe/pipe-property/pipe-property.component.ts");
/* harmony import */ var _gauges_controls_pipe_pipe_component__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(/*! ./gauges/controls/pipe/pipe.component */ "./app/gauges/controls/pipe/pipe.component.ts");
/* harmony import */ var _gauges_controls_slider_slider_component__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(/*! ./gauges/controls/slider/slider.component */ "./app/gauges/controls/slider/slider.component.ts");
/* harmony import */ var _gauges_controls_slider_slider_property_slider_property_component__WEBPACK_IMPORTED_MODULE_103__ = __webpack_require__(/*! ./gauges/controls/slider/slider-property/slider-property.component */ "./app/gauges/controls/slider/slider-property/slider-property.component.ts");
/* harmony import */ var _gauges_controls_html_switch_html_switch_property_html_switch_property_component__WEBPACK_IMPORTED_MODULE_104__ = __webpack_require__(/*! ./gauges/controls/html-switch/html-switch-property/html-switch-property.component */ "./app/gauges/controls/html-switch/html-switch-property/html-switch-property.component.ts");
/* harmony import */ var _gui_helpers_ngx_uplot_ngx_uplot_component__WEBPACK_IMPORTED_MODULE_105__ = __webpack_require__(/*! ./gui-helpers/ngx-uplot/ngx-uplot.component */ "./app/gui-helpers/ngx-uplot/ngx-uplot.component.ts");
/* harmony import */ var _gauges_controls_html_chart_chart_uplot_chart_uplot_component__WEBPACK_IMPORTED_MODULE_106__ = __webpack_require__(/*! ./gauges/controls/html-chart/chart-uplot/chart-uplot.component */ "./app/gauges/controls/html-chart/chart-uplot/chart-uplot.component.ts");
/* harmony import */ var angular_gridster2__WEBPACK_IMPORTED_MODULE_107__ = __webpack_require__(/*! angular-gridster2 */ "../node_modules/angular-gridster2/fesm5/angular-gridster2.js");
/* harmony import */ var _helpers_auth_interceptor__WEBPACK_IMPORTED_MODULE_108__ = __webpack_require__(/*! ./_helpers/auth-interceptor */ "./app/_helpers/auth-interceptor.ts");
            // the start/root module that tells Angular how to assemble the application.
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };















































































































            function createTranslateLoader(http) {
                return new _ngx_translate_http_loader__WEBPACK_IMPORTED_MODULE_10__["TranslateHttpLoader"](http, './assets/i18n/', '.json');
            }
            var AppModule = /** @class */ (function () {
                function AppModule() {
                }
                AppModule = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
                        declarations: [
                            _home_home_component__WEBPACK_IMPORTED_MODULE_16__["HomeComponent"],
                            _editor_editor_component__WEBPACK_IMPORTED_MODULE_21__["EditorComponent"],
                            _header_header_component__WEBPACK_IMPORTED_MODULE_17__["HeaderComponent"],
                            _sidenav_sidenav_component__WEBPACK_IMPORTED_MODULE_20__["SidenavComponent"],
                            _iframe_iframe_component__WEBPACK_IMPORTED_MODULE_18__["IframeComponent"],
                            _app_component__WEBPACK_IMPORTED_MODULE_13__["AppComponent"],
                            _lab_lab_component__WEBPACK_IMPORTED_MODULE_32__["LabComponent"],
                            _device_device_component__WEBPACK_IMPORTED_MODULE_33__["DeviceComponent"],
                            _device_device_component__WEBPACK_IMPORTED_MODULE_33__["DeviceTagDialog"],
                            _device_tag_property_tag_property_component__WEBPACK_IMPORTED_MODULE_35__["TagPropertyComponent"],
                            _device_topic_property_topic_property_component__WEBPACK_IMPORTED_MODULE_36__["TopicPropertyComponent"],
                            _device_device_property_device_property_component__WEBPACK_IMPORTED_MODULE_34__["DevicePropertyComponent"],
                            _editor_layout_property_layout_property_component__WEBPACK_IMPORTED_MODULE_22__["LayoutPropertyComponent"],
                            _editor_plugins_plugins_component__WEBPACK_IMPORTED_MODULE_23__["PluginsComponent"],
                            _editor_app_settings_app_settings_component__WEBPACK_IMPORTED_MODULE_24__["AppSettingsComponent"],
                            _editor_setup_setup_component__WEBPACK_IMPORTED_MODULE_25__["SetupComponent"],
                            _editor_layout_property_layout_property_component__WEBPACK_IMPORTED_MODULE_22__["DialogMenuItem"],
                            _device_device_list_device_list_component__WEBPACK_IMPORTED_MODULE_37__["DeviceListComponent"],
                            _device_device_list_device_list_component__WEBPACK_IMPORTED_MODULE_37__["DialogTagName"],
                            _device_device_map_device_map_component__WEBPACK_IMPORTED_MODULE_38__["DeviceMapComponent"],
                            _fuxa_view_fuxa_view_component__WEBPACK_IMPORTED_MODULE_39__["FuxaViewComponent"],
                            _editor_editor_component__WEBPACK_IMPORTED_MODULE_21__["DialogDocProperty"],
                            _editor_editor_component__WEBPACK_IMPORTED_MODULE_21__["DialogDocName"],
                            _editor_editor_component__WEBPACK_IMPORTED_MODULE_21__["DialogNewDoc"],
                            _editor_editor_component__WEBPACK_IMPORTED_MODULE_21__["DialogLinkProperty"],
                            _gui_helpers_confirm_dialog_confirm_dialog_component__WEBPACK_IMPORTED_MODULE_62__["ConfirmDialogComponent"],
                            _header_header_component__WEBPACK_IMPORTED_MODULE_17__["DialogInfo"],
                            _gauges_gauge_base_gauge_base_component__WEBPACK_IMPORTED_MODULE_71__["GaugeBaseComponent"],
                            _gauges_controls_html_input_html_input_component__WEBPACK_IMPORTED_MODULE_84__["HtmlInputComponent"],
                            _gauges_controls_html_button_html_button_component__WEBPACK_IMPORTED_MODULE_85__["HtmlButtonComponent"],
                            _gauges_controls_html_select_html_select_component__WEBPACK_IMPORTED_MODULE_86__["HtmlSelectComponent"],
                            _gauges_controls_html_chart_html_chart_component__WEBPACK_IMPORTED_MODULE_87__["HtmlChartComponent"],
                            _gauges_controls_html_bag_html_bag_component__WEBPACK_IMPORTED_MODULE_88__["HtmlBagComponent"],
                            _gauges_controls_gauge_progress_gauge_progress_component__WEBPACK_IMPORTED_MODULE_90__["GaugeProgressComponent"],
                            _gauges_controls_gauge_semaphore_gauge_semaphore_component__WEBPACK_IMPORTED_MODULE_91__["GaugeSemaphoreComponent"],
                            _gauges_gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_75__["GaugePropertyComponent"],
                            _gauges_gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_75__["DialogGaugePermission"],
                            _gauges_controls_html_chart_chart_property_chart_property_component__WEBPACK_IMPORTED_MODULE_76__["ChartPropertyComponent"],
                            _gauges_controls_html_bag_bag_property_bag_property_component__WEBPACK_IMPORTED_MODULE_99__["BagPropertyComponent"],
                            _gauges_controls_pipe_pipe_property_pipe_property_component__WEBPACK_IMPORTED_MODULE_100__["PipePropertyComponent"],
                            _gauges_controls_slider_slider_property_slider_property_component__WEBPACK_IMPORTED_MODULE_103__["SliderPropertyComponent"],
                            _gauges_controls_html_switch_html_switch_property_html_switch_property_component__WEBPACK_IMPORTED_MODULE_104__["HtmlSwitchPropertyComponent"],
                            _gauges_shapes_shapes_component__WEBPACK_IMPORTED_MODULE_94__["ShapesComponent"],
                            _gauges_shapes_proc_eng_proc_eng_component__WEBPACK_IMPORTED_MODULE_95__["ProcEngComponent"],
                            _gauges_shapes_ape_shapes_ape_shapes_component__WEBPACK_IMPORTED_MODULE_96__["ApeShapesComponent"],
                            _tester_tester_component__WEBPACK_IMPORTED_MODULE_41__["TesterComponent"],
                            _help_tutorial_tutorial_component__WEBPACK_IMPORTED_MODULE_54__["TutorialComponent"],
                            _gauges_gauge_property_flex_input_flex_input_component__WEBPACK_IMPORTED_MODULE_77__["FlexInputComponent"],
                            _gauges_gauge_property_flex_auth_flex_auth_component__WEBPACK_IMPORTED_MODULE_78__["FlexAuthComponent"],
                            _gauges_gauge_property_flex_head_flex_head_component__WEBPACK_IMPORTED_MODULE_79__["FlexHeadComponent"],
                            _gauges_gauge_property_flex_event_flex_event_component__WEBPACK_IMPORTED_MODULE_80__["FlexEventComponent"],
                            _gauges_gauge_property_flex_action_flex_action_component__WEBPACK_IMPORTED_MODULE_81__["FlexActionComponent"],
                            _gauges_gauge_property_flex_variable_flex_variable_component__WEBPACK_IMPORTED_MODULE_82__["FlexVariableComponent"],
                            _gauges_gauge_property_flex_variables_mapping_flex_variables_mapping_component__WEBPACK_IMPORTED_MODULE_73__["FlexVariablesMappingComponent"],
                            _gauges_gauge_property_flex_variable_map_flex_variable_map_component__WEBPACK_IMPORTED_MODULE_74__["FlexVariableMapComponent"],
                            _gauges_controls_value_value_component__WEBPACK_IMPORTED_MODULE_72__["ValueComponent"],
                            _directives_dialog_draggable_directive__WEBPACK_IMPORTED_MODULE_65__["DialogDraggableDirective"],
                            _helpers_utils__WEBPACK_IMPORTED_MODULE_56__["EnumToArrayPipe"],
                            _helpers_utils__WEBPACK_IMPORTED_MODULE_56__["EscapeHtmlPipe"],
                            _directives_ngx_draggable_directive__WEBPACK_IMPORTED_MODULE_67__["DraggableDirective"],
                            _directives_number_directive__WEBPACK_IMPORTED_MODULE_68__["NumberOnlyDirective"],
                            _gui_helpers_fab_button_ngx_fab_button_component__WEBPACK_IMPORTED_MODULE_59__["NgxFabButtonComponent"],
                            _gui_helpers_fab_button_ngx_fab_item_button_component__WEBPACK_IMPORTED_MODULE_60__["NgxFabItemButtonComponent"],
                            _gui_helpers_treetable_treetable_component__WEBPACK_IMPORTED_MODULE_61__["TreetableComponent"],
                            _gui_helpers_sel_options_sel_options_component__WEBPACK_IMPORTED_MODULE_63__["SelOptionsComponent"],
                            _directives_lazyFor_directive__WEBPACK_IMPORTED_MODULE_69__["LazyForDirective"],
                            _gui_helpers_ngx_switch_ngx_switch_component__WEBPACK_IMPORTED_MODULE_64__["NgxSwitchComponent"],
                            _editor_chart_config_chart_config_component__WEBPACK_IMPORTED_MODULE_26__["ChartConfigComponent"],
                            _editor_card_config_card_config_component__WEBPACK_IMPORTED_MODULE_27__["CardConfigComponent"],
                            _alarms_alarm_list_alarm_list_component__WEBPACK_IMPORTED_MODULE_29__["AlarmListComponent"],
                            _alarms_alarm_view_alarm_view_component__WEBPACK_IMPORTED_MODULE_28__["AlarmViewComponent"],
                            _alarms_alarm_property_alarm_property_component__WEBPACK_IMPORTED_MODULE_30__["AlarmPropertyComponent"],
                            _text_list_text_list_component__WEBPACK_IMPORTED_MODULE_31__["TextListComponent"],
                            _gui_helpers_ngx_gauge_ngx_gauge_component__WEBPACK_IMPORTED_MODULE_97__["NgxGaugeComponent"],
                            _gui_helpers_ngx_nouislider_ngx_nouislider_component__WEBPACK_IMPORTED_MODULE_98__["NgxNouisliderComponent"],
                            _editor_chart_config_chart_config_component__WEBPACK_IMPORTED_MODULE_26__["DialogListItem"],
                            _editor_chart_config_chart_config_component__WEBPACK_IMPORTED_MODULE_26__["DialogChartLine"],
                            _users_users_component__WEBPACK_IMPORTED_MODULE_92__["UsersComponent"],
                            _users_users_component__WEBPACK_IMPORTED_MODULE_92__["DialogUser"],
                            _login_login_component__WEBPACK_IMPORTED_MODULE_93__["LoginComponent"],
                            _home_home_component__WEBPACK_IMPORTED_MODULE_16__["DialogUserInfo"],
                            _view_view_component__WEBPACK_IMPORTED_MODULE_19__["ViewComponent"],
                            _text_list_text_list_component__WEBPACK_IMPORTED_MODULE_31__["DialogItemText"],
                            _gui_helpers_ngx_uplot_ngx_uplot_component__WEBPACK_IMPORTED_MODULE_105__["NgxUplotComponent"],
                            _gauges_controls_html_chart_chart_uplot_chart_uplot_component__WEBPACK_IMPORTED_MODULE_106__["ChartUplotComponent"],
                            _cards_view_cards_view_component__WEBPACK_IMPORTED_MODULE_40__["CardsViewComponent"]
                        ],
                        imports: [
                            _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__["BrowserModule"],
                            _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormsModule"],
                            _angular_forms__WEBPACK_IMPORTED_MODULE_2__["ReactiveFormsModule"],
                            _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClientModule"],
                            _app_routing__WEBPACK_IMPORTED_MODULE_14__["routing"],
                            _material_module__WEBPACK_IMPORTED_MODULE_4__["MaterialModule"],
                            _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_5__["BrowserAnimationsModule"],
                            ngx_color_picker__WEBPACK_IMPORTED_MODULE_6__["ColorPickerModule"],
                            ng5_slider__WEBPACK_IMPORTED_MODULE_7__["Ng5SliderModule"],
                            angular2_draggable__WEBPACK_IMPORTED_MODULE_12__["AngularDraggableModule"],
                            _gui_helpers_mat_select_search_mat_select_search_module__WEBPACK_IMPORTED_MODULE_83__["MatSelectSearchModule"],
                            ngx_toastr__WEBPACK_IMPORTED_MODULE_8__["ToastrModule"].forRoot({
                                timeOut: 3000,
                                positionClass: "toast-bottom-right",
                                preventDuplicates: false
                            }),
                            _ngx_translate_core__WEBPACK_IMPORTED_MODULE_9__["TranslateModule"].forRoot({
                                loader: {
                                    provide: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_9__["TranslateLoader"],
                                    useFactory: createTranslateLoader,
                                    deps: [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]]
                                }
                            }),
                            angular_gridster2__WEBPACK_IMPORTED_MODULE_107__["GridsterModule"]
                        ],
                        providers: [
                            // providersResourceService,
                            _services_rcgi_resclient_service__WEBPACK_IMPORTED_MODULE_50__["ResClientService"],
                            _services_rcgi_reswebapi_service__WEBPACK_IMPORTED_MODULE_48__["ResWebApiService"],
                            _services_rcgi_resdemo_service__WEBPACK_IMPORTED_MODULE_49__["ResDemoService"],
                            _services_hmi_service__WEBPACK_IMPORTED_MODULE_52__["HmiService"],
                            _services_app_service__WEBPACK_IMPORTED_MODULE_53__["AppService"],
                            _services_project_service__WEBPACK_IMPORTED_MODULE_51__["ProjectService"],
                            _services_user_service__WEBPACK_IMPORTED_MODULE_44__["UserService"],
                            _services_plugin_service__WEBPACK_IMPORTED_MODULE_46__["PluginService"],
                            _services_settings_service__WEBPACK_IMPORTED_MODULE_45__["SettingsService"],
                            _tester_tester_service__WEBPACK_IMPORTED_MODULE_43__["TesterService"],
                            _helpers_custom_http__WEBPACK_IMPORTED_MODULE_42__["customHttpProvider"],
                            _helpers_auth_interceptor__WEBPACK_IMPORTED_MODULE_108__["httpInterceptorProviders"],
                            _services_auth_service__WEBPACK_IMPORTED_MODULE_47__["AuthService"],
                            _gauges_gauges_component__WEBPACK_IMPORTED_MODULE_70__["GaugesManager"],
                            _helpers_windowref__WEBPACK_IMPORTED_MODULE_55__["WindowRef"],
                            _helpers_utils__WEBPACK_IMPORTED_MODULE_56__["Utils"],
                            _gauges_controls_html_switch_html_switch_component__WEBPACK_IMPORTED_MODULE_89__["HtmlSwitchComponent"],
                            _gauges_controls_pipe_pipe_component__WEBPACK_IMPORTED_MODULE_101__["PipeComponent"],
                            _gauges_controls_slider_slider_component__WEBPACK_IMPORTED_MODULE_102__["SliderComponent"],
                            _helpers_dictionary__WEBPACK_IMPORTED_MODULE_58__["Dictionary"],
                            _directives_modal_position_cache__WEBPACK_IMPORTED_MODULE_66__["ModalPositionCache"],
                            _helpers_define__WEBPACK_IMPORTED_MODULE_57__["Define"],
                            _auth_guard__WEBPACK_IMPORTED_MODULE_15__["AuthGuard"],
                            { provide: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__["HAMMER_GESTURE_CONFIG"], useClass: _angular_material__WEBPACK_IMPORTED_MODULE_11__["GestureConfig"] }
                        ],
                        entryComponents: [
                            _editor_editor_component__WEBPACK_IMPORTED_MODULE_21__["DialogDocProperty"],
                            _editor_editor_component__WEBPACK_IMPORTED_MODULE_21__["DialogDocName"],
                            _editor_editor_component__WEBPACK_IMPORTED_MODULE_21__["DialogNewDoc"],
                            _device_device_list_device_list_component__WEBPACK_IMPORTED_MODULE_37__["DialogTagName"],
                            _editor_editor_component__WEBPACK_IMPORTED_MODULE_21__["DialogLinkProperty"],
                            _header_header_component__WEBPACK_IMPORTED_MODULE_17__["DialogInfo"],
                            _device_device_component__WEBPACK_IMPORTED_MODULE_33__["DeviceTagDialog"],
                            _gauges_gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_75__["GaugePropertyComponent"],
                            _gauges_gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_75__["DialogGaugePermission"],
                            _gauges_controls_html_chart_chart_property_chart_property_component__WEBPACK_IMPORTED_MODULE_76__["ChartPropertyComponent"],
                            _gui_helpers_ngx_gauge_ngx_gauge_component__WEBPACK_IMPORTED_MODULE_97__["NgxGaugeComponent"],
                            _gui_helpers_ngx_nouislider_ngx_nouislider_component__WEBPACK_IMPORTED_MODULE_98__["NgxNouisliderComponent"],
                            _gauges_controls_html_bag_bag_property_bag_property_component__WEBPACK_IMPORTED_MODULE_99__["BagPropertyComponent"],
                            _gauges_controls_pipe_pipe_property_pipe_property_component__WEBPACK_IMPORTED_MODULE_100__["PipePropertyComponent"],
                            _gauges_controls_slider_slider_property_slider_property_component__WEBPACK_IMPORTED_MODULE_103__["SliderPropertyComponent"],
                            _gauges_controls_html_switch_html_switch_property_html_switch_property_component__WEBPACK_IMPORTED_MODULE_104__["HtmlSwitchPropertyComponent"],
                            _device_device_property_device_property_component__WEBPACK_IMPORTED_MODULE_34__["DevicePropertyComponent"],
                            _device_tag_property_tag_property_component__WEBPACK_IMPORTED_MODULE_35__["TagPropertyComponent"],
                            _device_topic_property_topic_property_component__WEBPACK_IMPORTED_MODULE_36__["TopicPropertyComponent"],
                            _gui_helpers_confirm_dialog_confirm_dialog_component__WEBPACK_IMPORTED_MODULE_62__["ConfirmDialogComponent"],
                            _editor_layout_property_layout_property_component__WEBPACK_IMPORTED_MODULE_22__["LayoutPropertyComponent"],
                            _editor_plugins_plugins_component__WEBPACK_IMPORTED_MODULE_23__["PluginsComponent"],
                            _editor_app_settings_app_settings_component__WEBPACK_IMPORTED_MODULE_24__["AppSettingsComponent"],
                            _editor_setup_setup_component__WEBPACK_IMPORTED_MODULE_25__["SetupComponent"],
                            _editor_layout_property_layout_property_component__WEBPACK_IMPORTED_MODULE_22__["DialogMenuItem"],
                            _gui_helpers_ngx_switch_ngx_switch_component__WEBPACK_IMPORTED_MODULE_64__["NgxSwitchComponent"],
                            _editor_chart_config_chart_config_component__WEBPACK_IMPORTED_MODULE_26__["ChartConfigComponent"],
                            _editor_card_config_card_config_component__WEBPACK_IMPORTED_MODULE_27__["CardConfigComponent"],
                            _alarms_alarm_list_alarm_list_component__WEBPACK_IMPORTED_MODULE_29__["AlarmListComponent"],
                            _alarms_alarm_view_alarm_view_component__WEBPACK_IMPORTED_MODULE_28__["AlarmViewComponent"],
                            _alarms_alarm_property_alarm_property_component__WEBPACK_IMPORTED_MODULE_30__["AlarmPropertyComponent"],
                            _text_list_text_list_component__WEBPACK_IMPORTED_MODULE_31__["TextListComponent"],
                            _editor_chart_config_chart_config_component__WEBPACK_IMPORTED_MODULE_26__["DialogListItem"],
                            _editor_chart_config_chart_config_component__WEBPACK_IMPORTED_MODULE_26__["DialogChartLine"],
                            _users_users_component__WEBPACK_IMPORTED_MODULE_92__["DialogUser"],
                            _login_login_component__WEBPACK_IMPORTED_MODULE_93__["LoginComponent"],
                            _home_home_component__WEBPACK_IMPORTED_MODULE_16__["DialogUserInfo"],
                            _text_list_text_list_component__WEBPACK_IMPORTED_MODULE_31__["DialogItemText"],
                            _gauges_controls_html_chart_chart_uplot_chart_uplot_component__WEBPACK_IMPORTED_MODULE_106__["ChartUplotComponent"],
                            _gui_helpers_ngx_uplot_ngx_uplot_component__WEBPACK_IMPORTED_MODULE_105__["NgxUplotComponent"]
                        ],
                        bootstrap: [_app_component__WEBPACK_IMPORTED_MODULE_13__["AppComponent"]]
                    })
                ], AppModule);
                return AppModule;
            }());



            /***/
}),

/***/ "./app/app.routing.ts":
/*!****************************!*\
  !*** ./app/app.routing.ts ***!
  \****************************/
/*! exports provided: routing */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "routing", function () { return routing; });
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/router */ "../node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _auth_guard__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./auth.guard */ "./app/auth.guard.ts");
/* harmony import */ var _home_home_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./home/home.component */ "./app/home/home.component.ts");
/* harmony import */ var _editor_editor_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./editor/editor.component */ "./app/editor/editor.component.ts");
/* harmony import */ var _device_device_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./device/device.component */ "./app/device/device.component.ts");
/* harmony import */ var _lab_lab_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lab/lab.component */ "./app/lab/lab.component.ts");
/* harmony import */ var _users_users_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./users/users.component */ "./app/users/users.component.ts");
/* harmony import */ var _view_view_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./view/view.component */ "./app/view/view.component.ts");
/* harmony import */ var _alarms_alarm_view_alarm_view_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./alarms/alarm-view/alarm-view.component */ "./app/alarms/alarm-view/alarm-view.component.ts");
/* harmony import */ var _alarms_alarm_list_alarm_list_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./alarms/alarm-list/alarm-list.component */ "./app/alarms/alarm-list/alarm-list.component.ts");
/* harmony import */ var _text_list_text_list_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./text-list/text-list.component */ "./app/text-list/text-list.component.ts");











            var appRoutes = [
                { path: '', component: _home_home_component__WEBPACK_IMPORTED_MODULE_2__["HomeComponent"] },
                { path: 'home', component: _home_home_component__WEBPACK_IMPORTED_MODULE_2__["HomeComponent"] },
                { path: 'editor', component: _editor_editor_component__WEBPACK_IMPORTED_MODULE_3__["EditorComponent"], canActivate: [_auth_guard__WEBPACK_IMPORTED_MODULE_1__["AuthGuard"]] },
                { path: 'lab', component: _lab_lab_component__WEBPACK_IMPORTED_MODULE_5__["LabComponent"], canActivate: [_auth_guard__WEBPACK_IMPORTED_MODULE_1__["AuthGuard"]] },
                { path: 'device', component: _device_device_component__WEBPACK_IMPORTED_MODULE_4__["DeviceComponent"], canActivate: [_auth_guard__WEBPACK_IMPORTED_MODULE_1__["AuthGuard"]] },
                { path: 'users', component: _users_users_component__WEBPACK_IMPORTED_MODULE_6__["UsersComponent"], canActivate: [_auth_guard__WEBPACK_IMPORTED_MODULE_1__["AuthGuard"]] },
                { path: 'alarms', component: _alarms_alarm_view_alarm_view_component__WEBPACK_IMPORTED_MODULE_8__["AlarmViewComponent"], canActivate: [_auth_guard__WEBPACK_IMPORTED_MODULE_1__["AuthGuard"]] },
                { path: 'messages', component: _alarms_alarm_list_alarm_list_component__WEBPACK_IMPORTED_MODULE_9__["AlarmListComponent"], canActivate: [_auth_guard__WEBPACK_IMPORTED_MODULE_1__["AuthGuard"]] },
                { path: 'text', component: _text_list_text_list_component__WEBPACK_IMPORTED_MODULE_10__["TextListComponent"], canActivate: [_auth_guard__WEBPACK_IMPORTED_MODULE_1__["AuthGuard"]] },
                { path: 'view', component: _view_view_component__WEBPACK_IMPORTED_MODULE_7__["ViewComponent"] },
                // otherwise redirect to home
                { path: '**', redirectTo: '' }
            ];
            var routing = _angular_router__WEBPACK_IMPORTED_MODULE_0__["RouterModule"].forRoot(appRoutes);


            /***/
}),

/***/ "./app/auth.guard.ts":
/*!***************************!*\
  !*** ./app/auth.guard.ts ***!
  \***************************/
/*! exports provided: AuthGuard */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthGuard", function () { return AuthGuard; });
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/router */ "../node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _services_auth_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_services/auth.service */ "./app/_services/auth.service.ts");
/* harmony import */ var _services_project_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./_services/project.service */ "./app/_services/project.service.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-toastr */ "../node_modules/ngx-toastr/fesm5/ngx-toastr.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ngx-translate/core */ "../node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js");
/* harmony import */ var rxjs_observable_of__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs/observable/of */ "../node_modules/rxjs-compat/_esm5/observable/of.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs/operators */ "../node_modules/rxjs/_esm5/operators/index.js");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };








            var AuthGuard = /** @class */ (function () {
                function AuthGuard(authService, translateService, toastr, projectService, router) {
                    this.authService = authService;
                    this.translateService = translateService;
                    this.toastr = toastr;
                    this.projectService = projectService;
                    this.router = router;
                }
                AuthGuard.prototype.canActivate = function (next, state) {
                    if (!this.projectService.isSecurityEnabled()) {
                        return Object(rxjs_observable_of__WEBPACK_IMPORTED_MODULE_6__["of"])(true);
                    }
                    if (this.authService.isAdmin()) {
                        return Object(rxjs_observable_of__WEBPACK_IMPORTED_MODULE_6__["of"])(true);
                    }
                    return this.projectService.checkServer().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_7__["map"])(function (response) {
                        if (response && !response.secureEnabled) {
                            return true;
                        }
                        return false;
                    }));
                };
                AuthGuard.prototype.notifySaveError = function () {
                    var msg = '';
                    this.translateService.get('msg.signin-failed').subscribe(function (txt) { msg = txt; });
                    this.toastr.error(msg, '', {
                        timeOut: 3000,
                        closeButton: true,
                        disableTimeOut: true
                    });
                };
                AuthGuard = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])(),
                    __metadata("design:paramtypes", [_services_auth_service__WEBPACK_IMPORTED_MODULE_2__["AuthService"],
                    _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateService"],
                    ngx_toastr__WEBPACK_IMPORTED_MODULE_4__["ToastrService"],
                    _services_project_service__WEBPACK_IMPORTED_MODULE_3__["ProjectService"],
                    _angular_router__WEBPACK_IMPORTED_MODULE_0__["Router"]])
                ], AuthGuard);
                return AuthGuard;
            }());



            /***/
}),

/***/ "./app/cards-view/cards-view.component.css":
/*!*************************************************!*\
  !*** ./app/cards-view/cards-view.component.css ***!
  \*************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ".card-content {\n    margin: 0 auto;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: -webkit-fit-content;\n    width: -moz-fit-content;\n    width: fit-content;\n}\n\n.card-tool {\n    background-color: rgba(0,0,0,0.6);\n    color:white;\n    position:absolute;\n    bottom: -15px;\n    padding-left: 10px;\n    font-size: 11px;\n    left: 50%;\n    transform: translate(-50%, -50%); \n    width: 194px;\n    border-radius: 2px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2FyZHMtdmlldy9jYXJkcy12aWV3LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLFFBQVE7SUFDUixTQUFTO0lBQ1QsZ0NBQWdDO0lBQ2hDLDBCQUFrQjtJQUFsQix1QkFBa0I7SUFBbEIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksaUNBQWlDO0lBQ2pDLFdBQVc7SUFDWCxpQkFBaUI7SUFDakIsYUFBYTtJQUNiLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YsU0FBUztJQUNULGdDQUFnQztJQUNoQyxZQUFZO0lBQ1osa0JBQWtCO0FBQ3RCIiwiZmlsZSI6InNyYy9hcHAvY2FyZHMtdmlldy9jYXJkcy12aWV3LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZC1jb250ZW50IHtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1MCU7XG4gICAgbGVmdDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgIHdpZHRoOiBmaXQtY29udGVudDtcbn1cblxuLmNhcmQtdG9vbCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwwLjYpO1xuICAgIGNvbG9yOndoaXRlO1xuICAgIHBvc2l0aW9uOmFic29sdXRlO1xuICAgIGJvdHRvbTogLTE1cHg7XG4gICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xuICAgIGZvbnQtc2l6ZTogMTFweDtcbiAgICBsZWZ0OiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7IFxuICAgIHdpZHRoOiAxOTRweDtcbiAgICBib3JkZXItcmFkaXVzOiAycHg7XG59Il19 */"

            /***/
}),

/***/ "./app/cards-view/cards-view.component.html":
/*!**************************************************!*\
  !*** ./app/cards-view/cards-view.component.html ***!
  \**************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<gridster [options]=\"gridOptions\">\n    <gridster-item [item]=\"item\" *ngFor=\"let item of dashboard\">\n        <div *ngIf=\"item.content\" class=\"card-content\">\n            <div [ngSwitch]=\"item.card.type\"  [style.transform]=\"'scale(' + item.card.zoom + ')'\">\n                <div *ngSwitchCase=\"widgetView\">\n                    <app-fuxa-view class=\"lab-body\" id=\"lab\" [view]=\"item.content\" [hmi]=\"hmi\" [gaugesManager]=\"gaugesManager\"></app-fuxa-view>\n                </div>\n                <div *ngSwitchCase=\"widgetAlarms\">\n                    <app-alarm-view #alarmsview [fullview]=\"true\" (showMode)=\"onAlarmsShowMode($event)\"></app-alarm-view>\n                </div>\n            </div>\n        </div>\n        <div *ngIf=\"edit\" class=\"card-tool\">\n            {{'card.style-zoom' | translate}} \n            <mat-slider max=\"2\" min=\"0.1\" [step]=\"0.02\" [(ngModel)]=\"item.card.zoom\" (input)=\"onZoomChanged(item, $event)\"\n                style=\"min-width: 80px\" thumbLabel=\"true\" (mousedown)=\"$event.stopPropagation()\">\n            </mat-slider>\n            <button mat-icon-button (click)=\"onEditCard(item)\" (mousedown)=\"$event.stopPropagation()\">\n                <mat-icon>edit</mat-icon>\n            </button>\n            <button mat-icon-button (click)=\"onRemoveCard(item)\" (mousedown)=\"$event.stopPropagation()\">\n                <mat-icon>close</mat-icon>\n            </button>\n        </div>\n    </gridster-item>\n</gridster>"

            /***/
}),

/***/ "./app/cards-view/cards-view.component.ts":
/*!************************************************!*\
  !*** ./app/cards-view/cards-view.component.ts ***!
  \************************************************/
/*! exports provided: CardsViewComponent, NgxNouisliderOptions, GridOptions */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CardsViewComponent", function () { return CardsViewComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgxNouisliderOptions", function () { return NgxNouisliderOptions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GridOptions", function () { return GridOptions; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _gauges_gauges_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../gauges/gauges.component */ "./app/gauges/gauges.component.ts");
/* harmony import */ var _models_hmi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../_models/hmi */ "./app/_models/hmi.ts");
/* harmony import */ var angular_gridster2__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! angular-gridster2 */ "../node_modules/angular-gridster2/fesm5/angular-gridster2.js");
/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../_helpers/utils */ "./app/_helpers/utils.ts");
            var __assign = (undefined && undefined.__assign) || function () {
                __assign = Object.assign || function (t) {
                    for (var s, i = 1, n = arguments.length; i < n; i++) {
                        s = arguments[i];
                        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                            t[p] = s[p];
                    }
                    return t;
                };
                return __assign.apply(this, arguments);
            };
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };






            var CardsViewComponent = /** @class */ (function () {
                function CardsViewComponent(changeDetector) {
                    this.changeDetector = changeDetector;
                    this.edit = true;
                    this.editCard = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
                    this.dashboard = [];
                    this.widgetView = _helpers_utils__WEBPACK_IMPORTED_MODULE_4__["Utils"].getEnumKey(_models_hmi__WEBPACK_IMPORTED_MODULE_2__["CardWidgetType"], _models_hmi__WEBPACK_IMPORTED_MODULE_2__["CardWidgetType"].view);
                    this.widgetAlarms = _helpers_utils__WEBPACK_IMPORTED_MODULE_4__["Utils"].getEnumKey(_models_hmi__WEBPACK_IMPORTED_MODULE_2__["CardWidgetType"], _models_hmi__WEBPACK_IMPORTED_MODULE_2__["CardWidgetType"].alarms);
                    this.widgetTable = _helpers_utils__WEBPACK_IMPORTED_MODULE_4__["Utils"].getEnumKey(_models_hmi__WEBPACK_IMPORTED_MODULE_2__["CardWidgetType"], _models_hmi__WEBPACK_IMPORTED_MODULE_2__["CardWidgetType"].table);
                    this.gridOptions = new GridOptions();
                    this.gridOptions.itemChangeCallback = this.itemChange;
                    this.gridOptions.itemResizeCallback = this.itemChange;
                }
                CardsViewComponent.prototype.ngOnInit = function () {
                    this.gridOptions = __assign({}, this.gridOptions, this.options);
                };
                CardsViewComponent.prototype.ngAfterViewInit = function () {
                    var _this = this;
                    setTimeout(function () {
                        _this.reload();
                    }, 200);
                };
                CardsViewComponent.prototype.reload = function () {
                    var element = document.querySelector('gridster');
                    if (element && this.view.profile.bkcolor) {
                        element.style.backgroundColor = this.view.profile.bkcolor;
                    }
                    if (this.view.profile.margin >= 0) {
                        this.gridOptions.margin = this.view.profile.margin;
                        this.gridOptions.api.optionsChanged();
                    }
                    this.initCardsEditor(this.view.svgcontent);
                };
                CardsViewComponent.prototype.initCardsEditor = function (dashboardContent) {
                    this.dashboard = [];
                    if (dashboardContent) {
                        var dashboard = JSON.parse(dashboardContent);
                        for (var i = 0; i < dashboard.length; i++) {
                            this.addCardsWidget(dashboard[i].x, dashboard[i].y, dashboard[i].cols, dashboard[i].rows, dashboard[i].card);
                        }
                    }
                    else {
                        this.addCardsWidget(0, 0, 10, 8, { type: _helpers_utils__WEBPACK_IMPORTED_MODULE_4__["Utils"].getEnumKey(_models_hmi__WEBPACK_IMPORTED_MODULE_2__["CardWidgetType"], _models_hmi__WEBPACK_IMPORTED_MODULE_2__["CardWidgetType"].view) });
                    }
                };
                CardsViewComponent.prototype.onEditCard = function (item) {
                    this.editCard.emit(item);
                };
                CardsViewComponent.prototype.onRemoveCard = function (item) {
                    this.dashboard.splice(this.dashboard.indexOf(item), 1);
                    this.view.svgcontent = JSON.stringify(this.dashboard);
                };
                CardsViewComponent.prototype.addCardsWidget = function (x, y, cols, rows, card) {
                    var _this = this;
                    if (x === void 0) { x = 0; }
                    if (y === void 0) { y = 0; }
                    if (cols === void 0) { cols = 10; }
                    if (rows === void 0) { rows = 8; }
                    if (card === void 0) { card = { type: _helpers_utils__WEBPACK_IMPORTED_MODULE_4__["Utils"].getEnumKey(_models_hmi__WEBPACK_IMPORTED_MODULE_2__["CardWidgetType"], _models_hmi__WEBPACK_IMPORTED_MODULE_2__["CardWidgetType"].view), zoom: 1 }; }
                    var content = null;
                    var background = '';
                    var item = { x: x, y: y, cols: cols, rows: rows, card: card, content: content, background: background };
                    item.initCallback = function () {
                        if (card) {
                            if (card.type === _this.widgetView) {
                                var views = _this.hmi.views.filter(function (v) { return v.name === card.data; });
                                if (views && views.length) {
                                    if (views[0].svgcontent) {
                                        item.content = views[0]; //.svgcontent.replace('<title>Layer 1</title>', '');
                                    }
                                    if (views[0].profile.bkcolor) {
                                        item.background = views[0].profile.bkcolor;
                                    }
                                }
                            }
                            else if (card.type === _this.widgetAlarms) {
                                item.background = '#CCCCCC';
                            }
                        }
                    };
                    this.dashboard.push(item);
                };
                CardsViewComponent.prototype.render = function () {
                    this.initCardsEditor(this.view.svgcontent);
                };
                CardsViewComponent.prototype.getContent = function () {
                    return JSON.stringify(this.dashboard);
                };
                CardsViewComponent.prototype.getWindgetViewName = function () {
                    var widgetType = _helpers_utils__WEBPACK_IMPORTED_MODULE_4__["Utils"].getEnumKey(_models_hmi__WEBPACK_IMPORTED_MODULE_2__["CardWidgetType"], _models_hmi__WEBPACK_IMPORTED_MODULE_2__["CardWidgetType"].view);
                    var viewsName = this.dashboard.filter(function (c) { return c.card.type === widgetType && c.card.data; }).map(function (c) { return c.card.data; });
                    return viewsName;
                };
                CardsViewComponent.prototype.onZoomChanged = function (item, $event) {
                    item.card.zoom = $event.value;
                };
                CardsViewComponent.prototype.itemChange = function (item, itemComponent) {
                    // console.info('itemResized', item, itemComponent);
                    if (item.background && itemComponent.el) {
                        itemComponent.el.style.backgroundColor = item.background;
                    }
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Object)
                ], CardsViewComponent.prototype, "options", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Boolean)
                ], CardsViewComponent.prototype, "edit", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", _models_hmi__WEBPACK_IMPORTED_MODULE_2__["View"])
                ], CardsViewComponent.prototype, "view", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", _models_hmi__WEBPACK_IMPORTED_MODULE_2__["Hmi"])
                ], CardsViewComponent.prototype, "hmi", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", _gauges_gauges_component__WEBPACK_IMPORTED_MODULE_1__["GaugesManager"])
                ], CardsViewComponent.prototype, "gaugesManager", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"])
                ], CardsViewComponent.prototype, "editCard", void 0);
                CardsViewComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'app-cards-view',
                        template: __webpack_require__(/*! ./cards-view.component.html */ "./app/cards-view/cards-view.component.html"),
                        styles: [__webpack_require__(/*! ./cards-view.component.css */ "./app/cards-view/cards-view.component.css")]
                    }),
                    __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]])
                ], CardsViewComponent);
                return CardsViewComponent;
            }());

            var NgxNouisliderOptions = /** @class */ (function () {
                function NgxNouisliderOptions() {
                    this.orientation = 'vertical'; //'horizontal';
                    this.direction = 'ltr';
                    this.fontFamily = 'Sans-serif';
                    this.shape = { baseColor: '#dcdcdc', connectColor: '#49b2ff', handleColor: '#018ef5' };
                    this.marker = { color: '#000', subWidth: 5, subHeight: 1, fontSize: 18, divHeight: 2, divWidth: 12 };
                    this.range = { min: 0, max: 100 };
                    this.step = 1;
                    this.pips = { mode: 'values', values: [0, 50, 100], density: 4 };
                    this.tooltip = { type: 'none', decimals: 0, background: '#FFF', color: '#000', fontSize: 12 };
                }
                return NgxNouisliderOptions;
            }());

            var GridOptions = /** @class */ (function () {
                function GridOptions() {
                    this.gridType = angular_gridster2__WEBPACK_IMPORTED_MODULE_3__["GridType"].Fixed;
                    this.compactType = angular_gridster2__WEBPACK_IMPORTED_MODULE_3__["CompactType"].None;
                    this.maxCols = 100;
                    this.maxRows = 100;
                    this.fixedColWidth = 35;
                    this.fixedRowHeight = 35;
                    this.margin = 10;
                    this.disableWarnings = true;
                    this.draggable = { enabled: true };
                    this.resizable = { enabled: true };
                }
                return GridOptions;
            }());

            ;


            /***/
}),

/***/ "./app/device/device-list/device-list.component.css":
/*!**********************************************************!*\
  !*** ./app/device/device-list/device-list.component.css ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ".container {\n    display: flex;\n    flex-direction: column;\n    min-width: 300px;\n    position: absolute;\n    bottom: 0px;\n    top: 1px;\n    left:0px;\n    right:0px;\n}\n\n.filter {\n    display: inline-block;\n    min-height: 50px;\n    padding: 8px 24px 0;\n}\n\n.filter .mat-form-field {\n    font-size: 14px;\n    width: 100%;\n}\n\n.mat-table {\n    overflow: auto;\n    /* min-width: 1500px; */\n    height: 100%;\n}\n\n.mat-row {\n    min-height: 40px;\n    height: 43px;\n}\n\n.mat-cell {\n    font-size: 13px;\n}\n\n.mat-header-row {\n    top: 0;\n    position: -webkit-sticky;\n    position: sticky;\n    z-index: 1;\n}\n\n.mat-header-cell {\n    font-size: 15px;\n}\n\n.mat-column-select {\n    overflow: visible;\n    flex: 0 0 100px;\n}\n\n.mat-column-name {\n    flex: 0 0 180px;\n}\n\n.mat-column-address {\n    flex: 0 0 360px;\n}\n\n.mat-column-device {\n    flex: 0 0 180px;\n}\n\n.mat-column-type {\n    flex: 0 0 160px;\n}\n\n.mat-column-value {\n    flex: 0 0 180px;\n}\n\n.mat-column-warning {\n    flex: 0 0 60px;\n}\n\n.mat-column-min {\n    flex: 0 0 100px;\n}\n\n.mat-column-max {\n    flex: 0 0 100px;\n}\n\n.mat-column-remove {\n    flex: 0 0 60px;\n}\n\n.selectidthClass{\n    flex: 0 0 50px;\n }\n\n.warning {\n     color: red;\n }\n\n.my-header-filter /deep/ .mat-sort-header-button {\n    display: block;\n    text-align: left;\n    margin-top: 5px;\n}\n\n.my-header-filter /deep/ .mat-sort-header-arrow {\n    top: -12px;\n    right: 20px;\n}\n\n.my-header-filter-input {\n    display: block; \n    margin-top: 4px;\n    margin-bottom: 6px;\n    padding: 3px 1px 3px 2px;\n    border-radius: 2px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGV2aWNlL2RldmljZS1saXN0L2RldmljZS1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLGdCQUFnQjtJQUNoQixrQkFBa0I7SUFDbEIsV0FBVztJQUNYLFFBQVE7SUFDUixRQUFRO0lBQ1IsU0FBUztBQUNiOztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLGdCQUFnQjtJQUNoQixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsV0FBVztBQUNmOztBQUVBO0lBQ0ksY0FBYztJQUNkLHVCQUF1QjtJQUN2QixZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxlQUFlO0FBQ25COztBQUVBO0lBQ0ksTUFBTTtJQUNOLHdCQUFnQjtJQUFoQixnQkFBZ0I7SUFDaEIsVUFBVTtBQUNkOztBQUVBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixlQUFlO0FBQ25COztBQUVBO0lBQ0ksZUFBZTtBQUNuQjs7QUFHQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxlQUFlO0FBQ25COztBQUVBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksY0FBYztDQUNqQjs7QUFFQTtLQUNJLFVBQVU7Q0FDZDs7QUFFQTtJQUNHLGNBQWM7SUFDZCxnQkFBZ0I7SUFDaEIsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLFVBQVU7SUFDVixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsZUFBZTtJQUNmLGtCQUFrQjtJQUNsQix3QkFBd0I7SUFDeEIsa0JBQWtCO0FBQ3RCIiwiZmlsZSI6InNyYy9hcHAvZGV2aWNlL2RldmljZS1saXN0L2RldmljZS1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgbWluLXdpZHRoOiAzMDBweDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYm90dG9tOiAwcHg7XG4gICAgdG9wOiAxcHg7XG4gICAgbGVmdDowcHg7XG4gICAgcmlnaHQ6MHB4O1xufVxuXG4uZmlsdGVyIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgbWluLWhlaWdodDogNTBweDtcbiAgICBwYWRkaW5nOiA4cHggMjRweCAwO1xufVxuXG4uZmlsdGVyIC5tYXQtZm9ybS1maWVsZCB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIHdpZHRoOiAxMDAlO1xufVxuXG4ubWF0LXRhYmxlIHtcbiAgICBvdmVyZmxvdzogYXV0bztcbiAgICAvKiBtaW4td2lkdGg6IDE1MDBweDsgKi9cbiAgICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5tYXQtcm93IHtcbiAgICBtaW4taGVpZ2h0OiA0MHB4O1xuICAgIGhlaWdodDogNDNweDtcbn1cblxuLm1hdC1jZWxsIHtcbiAgICBmb250LXNpemU6IDEzcHg7XG59XG5cbi5tYXQtaGVhZGVyLXJvdyB7XG4gICAgdG9wOiAwO1xuICAgIHBvc2l0aW9uOiBzdGlja3k7XG4gICAgei1pbmRleDogMTtcbn1cblxuLm1hdC1oZWFkZXItY2VsbCB7XG4gICAgZm9udC1zaXplOiAxNXB4O1xufVxuXG4ubWF0LWNvbHVtbi1zZWxlY3Qge1xuICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuICAgIGZsZXg6IDAgMCAxMDBweDtcbn1cblxuLm1hdC1jb2x1bW4tbmFtZSB7XG4gICAgZmxleDogMCAwIDE4MHB4O1xufVxuXG5cbi5tYXQtY29sdW1uLWFkZHJlc3Mge1xuICAgIGZsZXg6IDAgMCAzNjBweDtcbn1cblxuLm1hdC1jb2x1bW4tZGV2aWNlIHtcbiAgICBmbGV4OiAwIDAgMTgwcHg7XG59XG5cbi5tYXQtY29sdW1uLXR5cGUge1xuICAgIGZsZXg6IDAgMCAxNjBweDtcbn1cblxuLm1hdC1jb2x1bW4tdmFsdWUge1xuICAgIGZsZXg6IDAgMCAxODBweDtcbn1cblxuLm1hdC1jb2x1bW4td2FybmluZyB7XG4gICAgZmxleDogMCAwIDYwcHg7XG59XG5cbi5tYXQtY29sdW1uLW1pbiB7XG4gICAgZmxleDogMCAwIDEwMHB4O1xufVxuXG4ubWF0LWNvbHVtbi1tYXgge1xuICAgIGZsZXg6IDAgMCAxMDBweDtcbn1cblxuLm1hdC1jb2x1bW4tcmVtb3ZlIHtcbiAgICBmbGV4OiAwIDAgNjBweDtcbn1cblxuLnNlbGVjdGlkdGhDbGFzc3tcbiAgICBmbGV4OiAwIDAgNTBweDtcbiB9XG5cbiAud2FybmluZyB7XG4gICAgIGNvbG9yOiByZWQ7XG4gfVxuXG4gLm15LWhlYWRlci1maWx0ZXIgL2RlZXAvIC5tYXQtc29ydC1oZWFkZXItYnV0dG9uIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIG1hcmdpbi10b3A6IDVweDtcbn1cblxuLm15LWhlYWRlci1maWx0ZXIgL2RlZXAvIC5tYXQtc29ydC1oZWFkZXItYXJyb3cge1xuICAgIHRvcDogLTEycHg7XG4gICAgcmlnaHQ6IDIwcHg7XG59XG5cbi5teS1oZWFkZXItZmlsdGVyLWlucHV0IHtcbiAgICBkaXNwbGF5OiBibG9jazsgXG4gICAgbWFyZ2luLXRvcDogNHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDZweDtcbiAgICBwYWRkaW5nOiAzcHggMXB4IDNweCAycHg7XG4gICAgYm9yZGVyLXJhZGl1czogMnB4O1xufSJdfQ== */"

            /***/
}),

/***/ "./app/device/device-list/device-list.component.html":
/*!***********************************************************!*\
  !*** ./app/device/device-list/device-list.component.html ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div class=\"container\">\n    <div class=\"filter\" *ngIf=\"deviceSelected\" style=\"color:var(--formInputColor)\">\n        <button mat-icon-button title=\"Device Map\" (click)=\"onGoBack()\" style=\"margin-right:10px;margin-left:-10px;\">\n            <mat-icon aria-label=\"Show devices map\">arrow_back</mat-icon>\n        </button>\n        <div class=\"my-form-field\" style=\"padding-right: 10px;\">\n            <span>{{'device.list-device' | translate}}</span>\n            <mat-select [(value)]=\"deviceSelected\" style=\"width: 300px\"\n                (selectionChange)=\"onDeviceChange($event.source)\">\n                <mat-option *ngFor=\"let device of devicesValue()\" [value]=\"device\">\n                    {{ device.name }}\n                </mat-option>\n            </mat-select>\n        </div>\n        <div class=\"my-form-field\" style=\"padding-right: 10px;\">\n            <span>{{'device.list-filter' | translate}}</span>\n            <input (keyup)=\"applyFilter($event.target.value)\" style=\"width: 450px\" type=\"text\">\n        </div>\n    </div>\n    <mat-table #table [dataSource]=\"dataSource\" matSort>\n        <!-- Checkbox Column -->\n        <ng-container matColumnDef=\"select\">\n            <mat-header-cell *matHeaderCellDef [ngClass]=\"'selectidthClass'\">\n                <button mat-icon-button (click)=\"onAddTag()\" class=\"remove\">\n                    <mat-icon>add</mat-icon>\n                </button>\n            </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\" [ngClass]=\"'selectidthClass'\">\n                <button mat-icon-button (click)=\"onEditRow(element)\" class=\"remove\"\n                    *ngIf=\"isToEdit(deviceSelected.type, element)\">\n                    <mat-icon>edit</mat-icon>\n                </button>\n            </mat-cell>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"name\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header> {{'device.list-name' | translate}} </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\"> {{getTagLabel(element)}} </mat-cell>\n        </ng-container>\n\n        <!-- Address Column -->\n        <ng-container matColumnDef=\"address\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header> {{'device.list-address' | translate}} </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\"> {{getAddress(element)}} </mat-cell>\n        </ng-container>\n\n        <!-- Device Column -->\n        <ng-container matColumnDef=\"device\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header> {{'device.list-device' | translate}} </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\"> {{deviceSelected.name}} </mat-cell>\n        </ng-container>\n\n        <!-- Device Column -->\n        <ng-container matColumnDef=\"type\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header> {{'device.list-type' | translate}} </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\"> {{element.type}} </mat-cell>\n        </ng-container>\n\n        <!-- Min Column -->\n        <ng-container matColumnDef=\"min\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header> {{'device.list-min' | translate}} </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\"> {{element.min}} </mat-cell>\n        </ng-container>\n\n        <!-- Max Column -->\n        <ng-container matColumnDef=\"max\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header> {{'device.list-max' | translate}} </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\"> {{element.max}} </mat-cell>\n        </ng-container>\n\n        <!-- Value Column -->\n        <ng-container matColumnDef=\"value\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header> {{'device.list-value' | translate}} </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\"> {{element.value}} </mat-cell>\n        </ng-container>\n\n        <!-- Warning Column -->\n        <ng-container matColumnDef=\"warning\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header></mat-header-cell>\n            <mat-cell *matCellDef=\"let element\" [matTooltip]=\"element.error ? element.error : null\" matTooltipPosition=\"left\">\n                <button mat-icon-button *ngIf=\"element.error\" class=\"warning\">\n                    <mat-icon>warning_amber</mat-icon>\n                </button>\n            </mat-cell>\n        </ng-container>\n\n        <!-- Button remove Column -->\n        <ng-container matColumnDef=\"remove\">\n            <mat-header-cell *matHeaderCellDef [ngClass]=\"'selectidthClass'\">\n                <button mat-icon-button (click)=\"onRemoveAll()\" class=\"remove\">\n                    <mat-icon>clear</mat-icon>\n                </button>\n            </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\">\n                <button mat-icon-button (click)=\"$event.stopPropagation();onRemoveRow(element)\" class=\"remove\">\n                    <mat-icon>clear</mat-icon>\n                </button>\n            </mat-cell>\n        </ng-container>\n\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\" [ngStyle]=\"{'min-width.px': tableWidth}\"></mat-header-row>\n        <mat-row *matRowDef=\"let row; columns: displayedColumns;\" class=\"my-mat-row\" [ngStyle]=\"{'min-width.px': tableWidth}\"></mat-row>\n    </mat-table>\n    <mat-paginator [pageSizeOptions]=\"[25, 100]\" style=\"position: relative; right: 100px;\"></mat-paginator>\n</div>"

            /***/
}),

/***/ "./app/device/device-list/device-list.component.ts":
/*!*********************************************************!*\
  !*** ./app/device/device-list/device-list.component.ts ***!
  \*********************************************************/
/*! exports provided: DeviceListComponent, DialogTagName */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeviceListComponent", function () { return DeviceListComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DialogTagName", function () { return DialogTagName; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "../node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/cdk/collections */ "../node_modules/@angular/cdk/esm5/collections.es5.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ngx-translate/core */ "../node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-toastr */ "../node_modules/ngx-toastr/fesm5/ngx-toastr.js");
/* harmony import */ var _tag_property_tag_property_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../tag-property/tag-property.component */ "./app/device/tag-property/tag-property.component.ts");
/* harmony import */ var _topic_property_topic_property_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../topic-property/topic-property.component */ "./app/device/topic-property/topic-property.component.ts");
/* harmony import */ var _models_device__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../_models/device */ "./app/_models/device.ts");
/* harmony import */ var _services_project_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../_services/project.service */ "./app/_services/project.service.ts");
/* harmony import */ var _services_hmi_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../_services/hmi.service */ "./app/_services/hmi.service.ts");
/* harmony import */ var _gui_helpers_treetable_treetable_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../gui-helpers/treetable/treetable.component */ "./app/gui-helpers/treetable/treetable.component.ts");
/* harmony import */ var _gui_helpers_confirm_dialog_confirm_dialog_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../gui-helpers/confirm-dialog/confirm-dialog.component */ "./app/gui-helpers/confirm-dialog/confirm-dialog.component.ts");
/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../_helpers/utils */ "./app/_helpers/utils.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };
            var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
                return function (target, key) { decorator(target, key, paramIndex); }
            };















            var DeviceListComponent = /** @class */ (function () {
                function DeviceListComponent(dialog, hmiService, translateService, changeDetector, projectService, toastr) {
                    this.dialog = dialog;
                    this.hmiService = hmiService;
                    this.translateService = translateService;
                    this.changeDetector = changeDetector;
                    this.projectService = projectService;
                    this.toastr = toastr;
                    this.defAllColumns = ['select', 'name', 'address', 'device', 'type', 'value', 'warning', 'remove'];
                    this.defClientColumns = ['select', 'name', 'address', 'device', 'type', 'value', 'warning', 'remove'];
                    this.defInternalColumns = ['select', 'name', 'device', 'type', 'value', 'remove'];
                    this.defAllRowWidth = 1400;
                    this.defClientRowWidth = 1400;
                    this.defInternalRowWidth = 1200;
                    this.displayedColumns = this.defAllColumns;
                    this.dataSource = new _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatTableDataSource"]([]);
                    this.selection = new _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_2__["SelectionModel"](true, []);
                    this.dirty = false;
                    this.deviceType = _models_device__WEBPACK_IMPORTED_MODULE_7__["DeviceType"];
                    this.tableWidth = this.defAllRowWidth;
                    this.tagsMap = {};
                    this.save = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
                    this.goto = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
                }
                DeviceListComponent_1 = DeviceListComponent;
                DeviceListComponent.prototype.ngOnInit = function () {
                };
                DeviceListComponent.prototype.ngAfterViewInit = function () {
                    var _this = this;
                    this.devices = this.projectService.getDevices();
                    if (!this.deviceSelected && this.devices) {
                        this.deviceSelected = this.devices[0];
                    }
                    Object.values(this.devices).forEach(function (d) {
                        Object.values(d.tags).forEach(function (t) {
                            _this.tagsMap[t.id] = t;
                        });
                    });
                    if (this.deviceSelected) {
                        this.bindToTable(this.deviceSelected.tags);
                    }
                    this.dataSource.paginator = this.paginator;
                    this.dataSource.sort = this.sort;
                    this.table.renderRows();
                };
                DeviceListComponent.prototype.bindToTable = function (tags) {
                    this.dataSource.data = Object.values(tags);
                };
                DeviceListComponent.prototype.onDeviceChange = function (source) {
                    this.dataSource.data = [];
                    this.deviceSelected = source.value;
                    this.setSelectedDevice(this.deviceSelected);
                };
                DeviceListComponent.prototype.setSelectedDevice = function (device) {
                    var _this = this;
                    this.devices = this.projectService.getDevices();
                    this.updateDeviceValue();
                    // this.devices = JSON.parse(JSON.stringify(this.projectService.getDevices()));
                    Object.values(this.devices).forEach(function (d) {
                        if (d.name === device.name) {
                            _this.deviceSelected = d;
                            _this.bindToTable(_this.deviceSelected.tags);
                        }
                    });
                    if (this.deviceSelected.type === _models_device__WEBPACK_IMPORTED_MODULE_7__["DeviceType"].WebStudio) {
                        this.displayedColumns = this.defClientColumns;
                        this.tableWidth = this.defClientRowWidth;
                    }
                    else if (this.deviceSelected.type === _models_device__WEBPACK_IMPORTED_MODULE_7__["DeviceType"].internal) {
                        this.displayedColumns = this.defInternalColumns;
                        this.tableWidth = this.defInternalRowWidth;
                    }
                    else {
                        this.displayedColumns = this.defAllColumns;
                        this.tableWidth = this.defAllRowWidth;
                    }
                };
                DeviceListComponent.prototype.onGoBack = function () {
                    this.goto.emit();
                };
                DeviceListComponent.prototype.onRemoveRow = function (row) {
                    var index = this.dataSource.data.indexOf(row, 0);
                    // if (index > -1) {
                    //   this.dataSource.data.splice(index, 1);
                    //   this.dirty = true;
                    // }
                    if (this.dataSource.data[index]) {
                        delete this.deviceSelected.tags[this.dataSource.data[index].id];
                    }
                    this.bindToTable(this.deviceSelected.tags);
                    this.projectService.setDeviceTags(this.deviceSelected);
                };
                DeviceListComponent.prototype.onRemoveAll = function () {
                    var _this = this;
                    var msg = '';
                    this.translateService.get('msg.tags-remove-all').subscribe(function (txt) { msg = txt; });
                    var dialogRef = this.dialog.open(_gui_helpers_confirm_dialog_confirm_dialog_component__WEBPACK_IMPORTED_MODULE_11__["ConfirmDialogComponent"], {
                        data: { msg: msg },
                        position: { top: '60px' }
                    });
                    dialogRef.afterClosed().subscribe(function (result) {
                        if (result) {
                            _this.clearTags();
                        }
                    });
                };
                DeviceListComponent.prototype.clearTags = function () {
                    this.deviceSelected.tags = {};
                    this.bindToTable(this.deviceSelected.tags);
                };
                /** Whether the number of selected elements matches the total number of rows. */
                DeviceListComponent.prototype.isAllSelected = function () {
                    var numSelected = this.selection.selected.length;
                    var numRows = this.dataSource.data.length;
                    return numSelected === numRows;
                };
                /** Selects all rows if they are not all selected; otherwise clear selection. */
                DeviceListComponent.prototype.masterToggle = function () {
                    var _this = this;
                    this.isAllSelected() ?
                        this.selection.clear() :
                        this.dataSource.data.forEach(function (row) { return _this.selection.select(row); });
                };
                DeviceListComponent.prototype.applyFilter = function (filterValue) {
                    filterValue = filterValue.trim(); // Remove whitespace
                    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches
                    this.dataSource.filter = filterValue;
                };
                DeviceListComponent.prototype.onEditRow = function (row) {
                    if (this.deviceSelected.type === _models_device__WEBPACK_IMPORTED_MODULE_7__["DeviceType"].MQTTclient) {
                        this.editTopics(row);
                    }
                    else {
                        this.editTag(row, false);
                    }
                };
                DeviceListComponent.prototype.onAddTag = function () {
                    if (this.deviceSelected.type === _models_device__WEBPACK_IMPORTED_MODULE_7__["DeviceType"].OPCUA || this.deviceSelected.type === _models_device__WEBPACK_IMPORTED_MODULE_7__["DeviceType"].BACnet || this.deviceSelected.type === _models_device__WEBPACK_IMPORTED_MODULE_7__["DeviceType"].WebAPI) {
                        this.addOpcTags(null);
                    }
                    else if (this.deviceSelected.type === _models_device__WEBPACK_IMPORTED_MODULE_7__["DeviceType"].MQTTclient) {
                        this.editTopics();
                    }
                    else {
                        var tag = new _models_device__WEBPACK_IMPORTED_MODULE_7__["Tag"](_helpers_utils__WEBPACK_IMPORTED_MODULE_12__["Utils"].getGUID(_models_device__WEBPACK_IMPORTED_MODULE_7__["TAG_PREFIX"]));
                        this.editTag(tag, true);
                    }
                };
                DeviceListComponent.prototype.addOpcTags = function (tag) {
                    var _this = this;
                    var dialogRef = this.dialog.open(_tag_property_tag_property_component__WEBPACK_IMPORTED_MODULE_5__["TagPropertyComponent"], {
                        panelClass: 'dialog-property',
                        data: { device: this.deviceSelected, tag: tag, devices: this.devices },
                        position: { top: '60px' }
                    });
                    dialogRef.afterClosed().subscribe(function (result) {
                        if (result) {
                            _this.dirty = true;
                            if (_this.deviceSelected.type === _models_device__WEBPACK_IMPORTED_MODULE_7__["DeviceType"].WebAPI) {
                                // this.clearTags();
                            }
                            result.nodes.forEach(function (n) {
                                var tag = new _models_device__WEBPACK_IMPORTED_MODULE_7__["Tag"](_helpers_utils__WEBPACK_IMPORTED_MODULE_12__["Utils"].getGUID(_models_device__WEBPACK_IMPORTED_MODULE_7__["TAG_PREFIX"]));
                                tag.name = n.text;
                                tag.label = n.text;
                                tag.type = n.type;
                                if (_this.deviceSelected.type === _models_device__WEBPACK_IMPORTED_MODULE_7__["DeviceType"].BACnet) {
                                    tag.label = n.text;
                                }
                                else if (_this.deviceSelected.type === _models_device__WEBPACK_IMPORTED_MODULE_7__["DeviceType"].WebAPI) {
                                    tag.label = n.text;
                                    if (n.class === _gui_helpers_treetable_treetable_component__WEBPACK_IMPORTED_MODULE_10__["NodeType"].Reference) {
                                        tag.memaddress = n.property; // in memaddress save the address of the value
                                        tag.options = n.todefine; // save the id and value in text to set by select list
                                        tag.type = n.type;
                                    }
                                }
                                tag.address = n.id;
                                _this.checkToAdd(tag, result.device);
                            });
                            _this.projectService.setDeviceTags(_this.deviceSelected);
                        }
                    });
                };
                DeviceListComponent.prototype.getTagLabel = function (tag) {
                    if (this.deviceSelected.type === _models_device__WEBPACK_IMPORTED_MODULE_7__["DeviceType"].BACnet || this.deviceSelected.type === _models_device__WEBPACK_IMPORTED_MODULE_7__["DeviceType"].WebAPI) {
                        return tag.label;
                    }
                    else if (this.deviceSelected.type === _models_device__WEBPACK_IMPORTED_MODULE_7__["DeviceType"].OPCUA) {
                        return tag.label;
                    }
                    else {
                        return tag.name;
                    }
                };
                DeviceListComponent.prototype.getAddress = function (tag) {
                    if (this.deviceSelected.type === _models_device__WEBPACK_IMPORTED_MODULE_7__["DeviceType"].ModbusRTU || this.deviceSelected.type === _models_device__WEBPACK_IMPORTED_MODULE_7__["DeviceType"].ModbusTCP) {
                        return parseInt(tag.address) + parseInt(tag.memaddress);
                    }
                    else if (this.deviceSelected.type === _models_device__WEBPACK_IMPORTED_MODULE_7__["DeviceType"].WebAPI) {
                        if (tag.options) {
                            return tag.address + ' / ' + tag.options.selval;
                        }
                        return tag.address;
                    }
                    else if (this.deviceSelected.type === _models_device__WEBPACK_IMPORTED_MODULE_7__["DeviceType"].MQTTclient) {
                        if (tag.options.subs && tag.type === 'json') {
                            return DeviceListComponent_1.formatAddress(tag.address, tag.memaddress);
                        }
                        return tag.address;
                    }
                    return tag.address;
                };
                DeviceListComponent.prototype.isToEdit = function (type, tag) {
                    if (type === _models_device__WEBPACK_IMPORTED_MODULE_7__["DeviceType"].SiemensS7 || type === _models_device__WEBPACK_IMPORTED_MODULE_7__["DeviceType"].ModbusTCP || type === _models_device__WEBPACK_IMPORTED_MODULE_7__["DeviceType"].ModbusRTU ||
                        type === _models_device__WEBPACK_IMPORTED_MODULE_7__["DeviceType"].WebStudio || type === _models_device__WEBPACK_IMPORTED_MODULE_7__["DeviceType"].internal) {
                        return true;
                    }
                    else if (type === _models_device__WEBPACK_IMPORTED_MODULE_7__["DeviceType"].MQTTclient) {
                        if (tag && tag.options && (tag.options.pubs || tag.options.subs)) {
                            return true;
                        }
                    }
                    return false;
                };
                DeviceListComponent.prototype.editTag = function (tag, checkToAdd) {
                    var _this = this;
                    var oldtag = tag.id;
                    var temptag = JSON.parse(JSON.stringify(tag));
                    var dialogRef = this.dialog.open(_tag_property_tag_property_component__WEBPACK_IMPORTED_MODULE_5__["TagPropertyComponent"], {
                        panelClass: 'dialog-property',
                        data: { device: this.deviceSelected, tag: temptag, devices: this.devices },
                        position: { top: '60px' }
                    });
                    dialogRef.afterClosed().subscribe(function (result) {
                        if (result) {
                            if (_this.deviceSelected.type === _models_device__WEBPACK_IMPORTED_MODULE_7__["DeviceType"].MQTTclient) {
                                result.nodes.forEach(function (ta) {
                                    _this.checkToAdd(tag, result.device);
                                });
                                _this.projectService.setDeviceTags(_this.deviceSelected);
                            }
                            else {
                                _this.dirty = true;
                                tag.name = temptag.name;
                                tag.type = temptag.type;
                                tag.address = temptag.address;
                                tag.memaddress = temptag.memaddress;
                                tag.divisor = temptag.divisor;
                                if (_this.deviceSelected.type === _models_device__WEBPACK_IMPORTED_MODULE_7__["DeviceType"].internal) {
                                    tag.value = '0';
                                }
                                if (checkToAdd) {
                                    _this.checkToAdd(tag, result.device);
                                }
                                else if (tag.id !== oldtag) {
                                    //remove old tag device reference
                                    delete result.device.tags[oldtag];
                                    _this.checkToAdd(tag, result.device);
                                }
                                _this.projectService.setDeviceTags(_this.deviceSelected);
                            }
                        }
                    });
                };
                DeviceListComponent.prototype.checkToAdd = function (tag, device, overwrite) {
                    if (overwrite === void 0) { overwrite = false; }
                    var exist = false;
                    Object.keys(device.tags).forEach(function (key) {
                        if (device.tags[key].id) {
                            if (device.tags[key].id === tag.id) {
                                exist = true;
                            }
                        }
                        else if (device.tags[key].name === tag.name) {
                            exist = true;
                        }
                    });
                    if (!exist || overwrite) {
                        device.tags[tag.id] = tag;
                    }
                    this.tagsMap[tag.id] = tag;
                    this.bindToTable(this.deviceSelected.tags);
                };
                DeviceListComponent.prototype.updateDeviceValue = function () {
                    var sigs = this.hmiService.getAllSignals();
                    for (var id in sigs) {
                        if (this.tagsMap[id]) {
                            this.tagsMap[id].value = sigs[id].value;
                            this.tagsMap[id].error = sigs[id].error;
                        }
                    }
                    this.changeDetector.detectChanges();
                };
                DeviceListComponent.prototype.devicesValue = function () {
                    return Object.values(this.devices);
                };
                /**
                 * to add or edit MQTT topic for subscription or publish
                 */
                DeviceListComponent.prototype.editTopics = function (topic) {
                    var _this = this;
                    if (topic === void 0) { topic = null; }
                    if (topic && topic.options && topic.options.subs) {
                        // edit only name (subscription)
                        var existNames = Object.values(this.deviceSelected.tags).filter(function (t) {
                            if (t.id !== topic.id)
                                return t;
                        }).map(function (t) { return t.name; });
                        var dialogRef = this.dialog.open(DialogTagName, {
                            position: { top: '60px' },
                            data: { name: topic.name, exist: existNames }
                        });
                        dialogRef.afterClosed().subscribe(function (result) {
                            if (result) {
                                _this.deviceSelected.tags[topic.id].name = result.name;
                                _this.tagsMap[topic.id].name = result.name;
                                _this.bindToTable(_this.deviceSelected.tags);
                                _this.projectService.setDeviceTags(_this.deviceSelected);
                            }
                        });
                    }
                    else {
                        // edit new topic or publish
                        var dialogRef = this.dialog.open(_topic_property_topic_property_component__WEBPACK_IMPORTED_MODULE_6__["TopicPropertyComponent"], {
                            panelClass: 'dialog-property',
                            data: { device: this.deviceSelected, devices: Object.values(this.devices), topic: topic },
                            position: { top: '60px' }
                        });
                        dialogRef.componentInstance.invokeSubscribe = function (oldtopic, newtopics) { return _this.addTopicSubscription(oldtopic, newtopics); };
                        dialogRef.componentInstance.invokePublish = function (oldtopic, newtopic) { return _this.addTopicToPublish(oldtopic, newtopic); };
                        dialogRef.afterClosed().subscribe(function (result) {
                        });
                    }
                };
                DeviceListComponent.prototype.addTopicSubscription = function (oldTopic, topics) {
                    var _this = this;
                    if (topics) {
                        var existNames_1 = Object.values(this.deviceSelected.tags).filter(function (t) {
                            if (!oldTopic || t.id !== oldTopic.id)
                                return t.name;
                        }).map(function (t) { return t.name; });
                        topics.forEach(function (topic) {
                            // check if name exist
                            if (existNames_1.indexOf(topic.name) !== -1) {
                                var msg_1 = '';
                                _this.translateService.get('device.topic-name-exist', { value: topic.name }).subscribe(function (txt) { msg_1 = txt; });
                                _this.notifyError(msg_1);
                            }
                            else {
                                // check if subscriptions address exist for new topic
                                var exist_1 = null;
                                if (!oldTopic) {
                                    Object.keys(_this.deviceSelected.tags).forEach(function (key) {
                                        if (_this.deviceSelected.tags[key].address === topic.address && _this.deviceSelected.tags[key].memaddress === topic.memaddress &&
                                            _this.deviceSelected.tags[key].id != topic.id && _this.deviceSelected.tags[key].options.subs) {
                                            exist_1 = DeviceListComponent_1.formatAddress(topic.address, topic.memaddress);
                                        }
                                    });
                                }
                                if (exist_1) {
                                    var msg_2 = '';
                                    _this.translateService.get('device.topic-subs-address-exist', { value: exist_1 }).subscribe(function (txt) { msg_2 = txt; });
                                    _this.notifyError(msg_2);
                                }
                                else {
                                    _this.deviceSelected.tags[topic.id] = topic;
                                    _this.tagsMap[topic.id] = topic;
                                }
                            }
                        });
                        this.bindToTable(this.deviceSelected.tags);
                        this.projectService.setDeviceTags(this.deviceSelected);
                    }
                };
                DeviceListComponent.prototype.addTopicToPublish = function (oldTopic, topic) {
                    var _this = this;
                    if (topic) {
                        var existNames = Object.values(this.deviceSelected.tags).filter(function (t) {
                            if (!oldTopic || t.id !== oldTopic.id)
                                return t.name;
                        }).map(function (t) { return t.name; });
                        // check if name exist
                        if (existNames.indexOf(topic.name) !== -1) {
                            var msg_3 = '';
                            this.translateService.get('device.topic-name-exist', { value: topic.name }).subscribe(function (txt) { msg_3 = txt; });
                            this.notifyError(msg_3);
                        }
                        else {
                            // check if publish address exist
                            var exist_2 = null;
                            Object.keys(this.deviceSelected.tags).forEach(function (key) {
                                if (_this.deviceSelected.tags[key].address === topic.address && _this.deviceSelected.tags[key].id != topic.id) {
                                    exist_2 = topic.address;
                                }
                            });
                            if (exist_2) {
                                var msg_4 = '';
                                this.translateService.get('device.topic-pubs-address-exist', { value: exist_2 }).subscribe(function (txt) { msg_4 = txt; });
                                this.notifyError(msg_4);
                            }
                            else {
                                this.deviceSelected.tags[topic.id] = topic;
                                this.tagsMap[topic.id] = topic;
                            }
                            this.bindToTable(this.deviceSelected.tags);
                            this.projectService.setDeviceTags(this.deviceSelected);
                        }
                    }
                };
                DeviceListComponent.prototype.notifyError = function (error) {
                    this.toastr.error(error, '', {
                        timeOut: 3000,
                        closeButton: true
                        // disableTimeOut: true
                    });
                };
                DeviceListComponent.formatAddress = function (adr, mem) {
                    var result = adr;
                    if (mem) {
                        result += '[' + mem + ']';
                    }
                    return result;
                };
                var DeviceListComponent_1;
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", _models_device__WEBPACK_IMPORTED_MODULE_7__["Device"])
                ], DeviceListComponent.prototype, "deviceSelected", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
                    __metadata("design:type", Object)
                ], DeviceListComponent.prototype, "save", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
                    __metadata("design:type", Object)
                ], DeviceListComponent.prototype, "goto", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatTable"]),
                    __metadata("design:type", _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatTable"])
                ], DeviceListComponent.prototype, "table", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatSort"]),
                    __metadata("design:type", _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatSort"])
                ], DeviceListComponent.prototype, "sort", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatMenuTrigger"]),
                    __metadata("design:type", _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatMenuTrigger"])
                ], DeviceListComponent.prototype, "trigger", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatPaginator"]),
                    __metadata("design:type", _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatPaginator"])
                ], DeviceListComponent.prototype, "paginator", void 0);
                DeviceListComponent = DeviceListComponent_1 = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'app-device-list',
                        template: __webpack_require__(/*! ./device-list.component.html */ "./app/device/device-list/device-list.component.html"),
                        styles: [__webpack_require__(/*! ./device-list.component.css */ "./app/device/device-list/device-list.component.css")]
                    }),
                    __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialog"],
                    _services_hmi_service__WEBPACK_IMPORTED_MODULE_9__["HmiService"],
                    _ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__["TranslateService"],
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"],
                    _services_project_service__WEBPACK_IMPORTED_MODULE_8__["ProjectService"],
                    ngx_toastr__WEBPACK_IMPORTED_MODULE_4__["ToastrService"]])
                ], DeviceListComponent);
                return DeviceListComponent;
            }());

            var DialogTagName = /** @class */ (function () {
                function DialogTagName(dialogRef, data) {
                    this.dialogRef = dialogRef;
                    this.data = data;
                }
                DialogTagName.prototype.onNoClick = function () {
                    this.dialogRef.close();
                };
                DialogTagName.prototype.isValid = function (name) {
                    return (this.data.exist.find(function (n) { return n === name; })) ? false : true;
                };
                DialogTagName = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        template: __webpack_require__(/*! ./tagname.dialog.html */ "./app/device/device-list/tagname.dialog.html"),
                    }),
                    __param(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MAT_DIALOG_DATA"])),
                    __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialogRef"], Object])
                ], DialogTagName);
                return DialogTagName;
            }());



            /***/
}),

/***/ "./app/device/device-list/tagname.dialog.html":
/*!****************************************************!*\
  !*** ./app/device/device-list/tagname.dialog.html ***!
  \****************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div>\n    <h1 mat-dialog-title style=\"display:inline-block;cursor:move;\" mat-dialog-draggable>{{'dlg.tagname-title' | translate}}</h1>\n    <mat-icon (click)=\"onNoClick()\" class=\"dialog-close-btn\" cdkFocusInitial>clear</mat-icon>\n    <div mat-dialog-content>\n        <div class=\"my-form-field\" style=\"display: block;margin-bottom: 10px;\">\n            <span>{{'dlg.tagname-name' | translate}}</span>\n            <input [(ngModel)]=\"data.name\" type=\"text\" style=\"width:300px\">\n        </div>\n    </div>\n    <div mat-dialog-actions class=\"dialog-action\">\n        <button mat-raised-button (click)=\"onNoClick()\">{{'dlg.cancel' | translate}}</button>\n        <button mat-raised-button [disabled]=\"!isValid(data.name)\" color=\"primary\" [mat-dialog-close]=\"data\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\n    </div>\n</div>"

            /***/
}),

/***/ "./app/device/device-map/device-map.component.html":
/*!*********************************************************!*\
  !*** ./app/device/device-map/device-map.component.html ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div *ngIf=\"server && server.property\">\n    <div class=\"main-line-flow\" [style.left.px]=\"getMainLineLeftPosition()\" [style.top.px]=\"getMainLineTopPosition('flow')\" [style.width.px]=\"lineFlowSize\"\n        [style.height.px]=\"getMainLineHeight('flow')\"></div>\n    <div *ngFor=\"let flow of devicesValue('flow'); index as i\" class=\"flow-line\" [style.left.px]=\"getDeviceLineLeftPosition(i, 'flow')\"\n        [style.top.px]=\"getDeviceLineTopPosition('flow')\" [style.width.px]=\"lineFlowSize\" [style.height.px]=\"flowLineHeight\"></div>\n    <div class=\"connection-line\" [style.left.px]=\"getDeviceConnectionLeftPosition('flow')\" [style.top.px]=\"getDeviceConnectionTopPosition('flow')\"\n        [style.width.px]=\"getDeviceConnectionWidth('flow')\" [style.height.px]=\"lineFlowSize\"></div>\n\n    <div class=\"main-line\" [style.left.px]=\"getMainLineLeftPosition()\" [style.top.px]=\"getMainLineTopPosition()\" [style.width.px]=\"lineDeviceSize\" [style.height.px]=\"getMainLineHeight()\">\n    </div>\n    <div *ngFor=\"let device of devicesValue(); index as i\" class=\"device-line\" [style.left.px]=\"getDeviceLineLeftPosition(i)\" [style.top.px]=\"getDeviceLineTopPosition()\"\n        [style.width.px]=\"lineDeviceSize\" [style.height.px]=\"deviceLineHeight\"></div>\n    <div class=\"connection-line\" [style.left.px]=\"getDeviceConnectionLeftPosition()\" [style.top.px]=\"getDeviceConnectionTopPosition()\"\n        [style.width.px]=\"getDeviceConnectionWidth()\" [style.height.px]=\"lineDeviceSize\"></div>\n</div>\n<div class=\"container\">\n    <div class=\"main-device\" *ngIf=\"server && server.property\" [style.left.px]=\"getMainLeftPosition()\" [style.top.px]=\"getMainTopPosition()\" [style.width.px]=\"mainWidth\"\n        [style.height.px]=\"mainHeight\" [style.borderWidth.px]=\"mainBorder\">\n        <span class=\"device-header\" style=\"padding-top: 10px;\">{{ server.name }}</span>\n        <span class=\"device-pro\">{{ server.property.address }}</span>\n        <!-- <mat-icon (click)=\"onListDevice(server)\" class=\"device-icon device-list\">list_alt</mat-icon> -->\n        <!-- <mat-icon (click)=\"onEditDevice(server)\" class=\"device-icon device-edit\" >edit</mat-icon> -->\n    </div>\n\n    <div *ngFor=\"let flow of devicesValue('flow'); index as i\" class=\"node-flow\" [style.color]=\"(flow.enabled) ? '#000000' : '#828282'\" [style.left.px]=\"getDeviceLeftPosition(i, 'flow')\"\n        [style.top.px]=\"getDeviceTopPosition('flow')\" [style.width.px]=\"flowWidth\" [style.height.px]=\"flowHeight\" [style.borderWidth.px]=\"flowBorder\">\n        <span class=\"device-header\">{{ flow.name }}</span>\n        <span class=\"device-pro\" *ngIf=\"flow.property\">{{ flow.property.address }}</span>\n        <span class=\"device-pro\" style=\"padding-bottom: 10px;\">{{ getDevicePropertyToShow(flow) }}</span>\n        <div class=\"device-status\" *ngIf=\"flow.enabled\" [style.background-color]=\"getDeviceStatusColor(flow)\"></div>\n        <mat-icon (click)=\"onListDevice(flow)\" class=\"device-icon device-list\">list_alt</mat-icon>\n        <mat-icon (click)=\"onEditDevice(flow)\" class=\"device-icon device-edit\">edit</mat-icon>\n        <mat-icon (click)=\"onRemoveDevice(flow)\" class=\"device-icon device-delete\">clear</mat-icon>\n    </div>\n\n    <div *ngFor=\"let device of devicesValue(); index as i\" [ngClass]=\"getNodeClass(device)\" [style.color]=\"(device.enabled) ? '#FFFFFF' : '#C5C5C5'\" [style.left.px]=\"getDeviceLeftPosition(i)\"\n        [style.top.px]=\"getDeviceTopPosition()\" [style.width.px]=\"deviceWidth\" [style.height.px]=\"deviceHeight\" [style.borderWidth.px]=\"deviceBorder\">\n        <span class=\"device-header\">{{ device.name }}</span>\n        <span class=\"device-pro\" *ngIf=\"device.property\">{{ device.property.address }}</span>\n        <span class=\"device-pro\" style=\"padding-bottom: 10px;\">{{ getDevicePropertyToShow(device) }}</span>\n        <div class=\"device-status\" *ngIf=\"device.enabled\" [style.background-color]=\"getDeviceStatusColor(device)\"></div>\n        <mat-icon (click)=\"onListDevice(device)\" class=\"device-icon device-list\">list_alt</mat-icon>\n        <mat-icon (click)=\"onEditDevice(device)\" class=\"device-icon device-edit\">edit</mat-icon>\n        <mat-icon (click)=\"onRemoveDevice(device)\" class=\"device-icon device-delete\">clear</mat-icon>\n    </div>\n</div>"

            /***/
}),

/***/ "./app/device/device-map/device-map.component.scss":
/*!*********************************************************!*\
  !*** ./app/device/device-map/device-map.component.scss ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ".main-device {\n  position: absolute;\n  text-align: center;\n  background-color: #0c65bd;\n  color: white;\n  border-style: solid;\n  border-color: var(--mapBorderColor); }\n\n.node-device {\n  position: absolute;\n  background-color: #4f565d;\n  text-align: center;\n  padding-top: 17px;\n  border-style: solid;\n  border-color: var(--mapBorderColor); }\n\n.node-device mat-icon {\n    color: white; }\n\n.node-internal {\n  position: absolute;\n  background-color: #72787d;\n  text-align: center;\n  padding-top: 17px;\n  border-style: solid;\n  border-color: var(--mapBorderColor); }\n\n.node-internal mat-icon {\n    color: white; }\n\n.node-flow {\n  position: absolute;\n  background-color: #dadada;\n  text-align: center;\n  padding-top: 17px;\n  border-style: solid;\n  border-color: var(--mapBorderColor); }\n\n.node-flow mat-icon {\n    color: black; }\n\n.main-line {\n  position: absolute;\n  background-color: var(--mapBorderColor); }\n\n.main-line-flow {\n  position: absolute;\n  background-color: var(--mapBorderColor); }\n\n.device-line {\n  position: absolute;\n  background-color: var(--mapBorderColor); }\n\n.flow-line {\n  position: absolute;\n  background-color: var(--mapBorderColor); }\n\n.connection-line {\n  position: absolute;\n  background-color: var(--mapBorderColor); }\n\n.device-header {\n  display: block;\n  font-size: 17px;\n  padding-bottom: 7px;\n  padding-top: 0px;\n  min-height: 20px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis; }\n\n.device-pro {\n  display: block;\n  font-size: 12px;\n  padding-top: 0px;\n  min-height: 14px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis; }\n\n.device-pro-line {\n  display: inline-block;\n  font-size: 12px;\n  padding-top: 5px; }\n\n.device-icon {\n  position: absolute;\n  font-size: 17px;\n  cursor: pointer; }\n\n.device-edit {\n  bottom: 0px;\n  right: 2px; }\n\n.device-edit-disabled {\n  color: #888888 !important;\n  cursor: default; }\n\n.device-delete {\n  top: 2px;\n  right: 2px;\n  font-size: 17px; }\n\n.device-list {\n  right: 28px;\n  font-size: 24px;\n  bottom: 2px; }\n\n.device-status {\n  position: absolute;\n  bottom: 10px;\n  left: 10px;\n  width: 10px;\n  height: 10px;\n  border-radius: 4px; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9iaWxhbC9Eb2N1bWVudHMvRlVYQS9jbGllbnQvc3JjL2FwcC9kZXZpY2UvZGV2aWNlLW1hcC9kZXZpY2UtbWFwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVNBO0VBQ0ksa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQix5QkFaOEI7RUFhOUIsWUFBWTtFQUNaLG1CQUFtQjtFQUNuQixtQ0Fkb0MsRUFBQTs7QUFpQnhDO0VBQ0ksa0JBQWtCO0VBQ2xCLHlCQWxCMEI7RUFtQjFCLGtCQUFrQjtFQUNsQixpQkFBaUI7RUFDakIsbUJBQW1CO0VBQ25CLG1DQXJCZ0MsRUFBQTs7QUFlcEM7SUFRUSxZQUFZLEVBQUE7O0FBSXBCO0VBQ0ksa0JBQWtCO0VBQ2xCLHlCQXpCaUM7RUEwQmpDLGtCQUFrQjtFQUNsQixpQkFBaUI7RUFDakIsbUJBQW1CO0VBQ25CLG1DQWpDZ0MsRUFBQTs7QUEyQnBDO0lBUVEsWUFBWSxFQUFBOztBQUlwQjtFQUNJLGtCQUFrQjtFQUNsQix5QkF4QytCO0VBeUMvQixrQkFBa0I7RUFDbEIsaUJBQWlCO0VBQ2pCLG1CQUFtQjtFQUNuQixtQ0EzQ29DLEVBQUE7O0FBcUN4QztJQVFRLFlBQVksRUFBQTs7QUFHcEI7RUFDSSxrQkFBa0I7RUFDbEIsdUNBcERnQyxFQUFBOztBQXNEcEM7RUFDSSxrQkFBa0I7RUFDbEIsdUNBckRrQyxFQUFBOztBQXdEdEM7RUFDSSxrQkFBa0I7RUFDbEIsdUNBN0RnQyxFQUFBOztBQStEcEM7RUFDSSxrQkFBa0I7RUFDbEIsdUNBOURrQyxFQUFBOztBQWdFdEM7RUFDSSxrQkFBa0I7RUFDbEIsdUNBckVnQyxFQUFBOztBQStFcEM7RUFDSSxjQUFjO0VBQ2QsZUFBZTtFQUNmLG1CQUFtQjtFQUNuQixnQkFBZ0I7RUFDaEIsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtFQUNuQixnQkFBZ0I7RUFDaEIsdUJBQXVCLEVBQUE7O0FBRzNCO0VBQ0ksY0FBYztFQUNkLGVBQWU7RUFDZixnQkFBZ0I7RUFDaEIsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtFQUNuQixnQkFBZ0I7RUFDaEIsdUJBQXVCLEVBQUE7O0FBRzNCO0VBQ0kscUJBQXFCO0VBQ3JCLGVBQWU7RUFDZixnQkFBZ0IsRUFBQTs7QUFHcEI7RUFDSSxrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLGVBQWMsRUFBQTs7QUFHbEI7RUFDSSxXQUFXO0VBQ1gsVUFBVSxFQUFBOztBQUdkO0VBQ0kseUJBQW1DO0VBQ25DLGVBQWMsRUFBQTs7QUFHbEI7RUFDSSxRQUFRO0VBQ1IsVUFBVTtFQUNWLGVBQWUsRUFBQTs7QUFHbkI7RUFFSSxXQUFXO0VBQ1gsZUFBZTtFQUNmLFdBQVcsRUFBQTs7QUFHZjtFQUNJLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1osVUFBVTtFQUNWLFdBQVc7RUFDWCxZQUFZO0VBQ1osa0JBQWtCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9kZXZpY2UvZGV2aWNlLW1hcC9kZXZpY2UtbWFwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiJG1haW4tYmFja2NvbG9yOiByZ2IoMTIsIDEwMSwgMTg5KTtcbiRtYWluLWJvcmRlcmNvbG9yOiB2YXIoLS1tYXBCb3JkZXJDb2xvcik7Ly9yZ2IoNSwgNjUsIDEyMyk7XG4kZGV2aWNlLWNvbG9yOiByZ2IoNzksIDg2LCA5Myk7XG4kbGluZS1jb2xvcjogICB2YXIoLS1tYXBCb3JkZXJDb2xvcik7XG4kZmxvdy1iYWNrY29sb3I6IHJnYigyMTgsIDIxOCwgMjE4KTtcbiRmbG93LWJvcmRlcmNvbG9yOiB2YXIoLS1tYXBCb3JkZXJDb2xvcik7Ly9yZ2IoMTE3LCAxMTcsIDExNyk7XG4kZmxvd2xpbmUtY29sb3I6IHZhcigtLW1hcEJvcmRlckNvbG9yKTsvL3JnYigxMTcsIDExNywgMTE3KTtcbiRpbnRlcm5hbC1iYWNrY29sb3I6IHJnYigxMTQsMTIwLDEyNSk7XG5cbi5tYWluLWRldmljZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWFpbi1iYWNrY29sb3I7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG4gICAgYm9yZGVyLWNvbG9yOiAkbWFpbi1ib3JkZXJjb2xvcjtcbn1cblxuLm5vZGUtZGV2aWNlIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGRldmljZS1jb2xvcjtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgcGFkZGluZy10b3A6IDE3cHg7XG4gICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgICBib3JkZXItY29sb3I6ICRsaW5lLWNvbG9yO1xuICAgIG1hdC1pY29uIHtcbiAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgIH1cbn1cblxuLm5vZGUtaW50ZXJuYWwge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkaW50ZXJuYWwtYmFja2NvbG9yO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBwYWRkaW5nLXRvcDogMTdweDtcbiAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICAgIGJvcmRlci1jb2xvcjogJGxpbmUtY29sb3I7XG4gICAgbWF0LWljb24ge1xuICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgfVxufVxuXG4ubm9kZS1mbG93IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGZsb3ctYmFja2NvbG9yO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBwYWRkaW5nLXRvcDogMTdweDtcbiAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICAgIGJvcmRlci1jb2xvcjogJGZsb3ctYm9yZGVyY29sb3I7XG4gICAgbWF0LWljb24ge1xuICAgICAgICBjb2xvcjogYmxhY2s7XG4gICAgfVxufVxuLm1haW4tbGluZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRsaW5lLWNvbG9yO1xufVxuLm1haW4tbGluZS1mbG93IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGZsb3dsaW5lLWNvbG9yO1xufVxuXG4uZGV2aWNlLWxpbmUge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbGluZS1jb2xvcjtcbn1cbi5mbG93LWxpbmUge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZmxvd2xpbmUtY29sb3I7XG59XG4uY29ubmVjdGlvbi1saW5lIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGxpbmUtY29sb3I7XG59XG5cbi8vIC5tYWluLWRldmljZSBtYXQtaWNvbiB7XG4vLyAgICAgZm9udC1zaXplOiAwcHg7XG4vLyB9XG4vLyAubWFpbi1kZXZpY2U6aG92ZXIgbWF0LWljb24ge1xuLy8gICAgIGZvbnQtc2l6ZTogMTdweDtcbi8vIH1cblxuLmRldmljZS1oZWFkZXIge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZvbnQtc2l6ZTogMTdweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogN3B4O1xuICAgIHBhZGRpbmctdG9wOiAwcHg7XG4gICAgbWluLWhlaWdodDogMjBweDtcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG59XG5cbi5kZXZpY2UtcHJvIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgcGFkZGluZy10b3A6IDBweDtcbiAgICBtaW4taGVpZ2h0OiAxNHB4O1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbn1cblxuLmRldmljZS1wcm8tbGluZSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICBwYWRkaW5nLXRvcDogNXB4O1xufVxuXG4uZGV2aWNlLWljb24ge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBmb250LXNpemU6IDE3cHg7XG4gICAgY3Vyc29yOnBvaW50ZXI7XG59XG5cbi5kZXZpY2UtZWRpdCB7XG4gICAgYm90dG9tOiAwcHg7XG4gICAgcmlnaHQ6IDJweDtcbn1cblxuLmRldmljZS1lZGl0LWRpc2FibGVkIHtcbiAgICBjb2xvcjpyZ2IoMTM2LCAxMzYsIDEzNikgIWltcG9ydGFudDtcbiAgICBjdXJzb3I6ZGVmYXVsdDtcbn1cblxuLmRldmljZS1kZWxldGUge1xuICAgIHRvcDogMnB4O1xuICAgIHJpZ2h0OiAycHg7XG4gICAgZm9udC1zaXplOiAxN3B4O1xufVxuXG4uZGV2aWNlLWxpc3Qge1xuICAgIC8vIGJvdHRvbTogMHB4O1xuICAgIHJpZ2h0OiAyOHB4O1xuICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICBib3R0b206IDJweDtcbn1cblxuLmRldmljZS1zdGF0dXMge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IDEwcHg7XG4gICAgbGVmdDogMTBweDtcbiAgICB3aWR0aDogMTBweDtcbiAgICBoZWlnaHQ6IDEwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xufSJdfQ== */"

            /***/
}),

/***/ "./app/device/device-map/device-map.component.ts":
/*!*******************************************************!*\
  !*** ./app/device/device-map/device-map.component.ts ***!
  \*******************************************************/
/*! exports provided: DeviceMapComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeviceMapComponent", function () { return DeviceMapComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "../node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _device_property_device_property_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../device-property/device-property.component */ "./app/device/device-property/device-property.component.ts");
/* harmony import */ var _services_project_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../_services/project.service */ "./app/_services/project.service.ts");
/* harmony import */ var _services_plugin_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../_services/plugin.service */ "./app/_services/plugin.service.ts");
/* harmony import */ var _models_device__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../../_models/device */ "./app/_models/device.ts");
/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../_helpers/utils */ "./app/_helpers/utils.ts");
/* harmony import */ var _services_app_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../_services/app.service */ "./app/_services/app.service.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };








            var DeviceMapComponent = /** @class */ (function () {
                function DeviceMapComponent(dialog, elementRef, appService, pluginService, projectService) {
                    this.dialog = dialog;
                    this.elementRef = elementRef;
                    this.appService = appService;
                    this.pluginService = pluginService;
                    this.projectService = projectService;
                    this.goto = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
                    this.flowBorder = 5;
                    this.flowWidth = 160;
                    this.flowHeight = 70;
                    this.flowLineHeight = 60;
                    this.deviceBorder = 5;
                    this.deviceWidth = 160;
                    this.deviceHeight = 90;
                    this.deviceLineHeight = 60;
                    this.lineFlowSize = 6;
                    this.lineFlowHeight = 60;
                    this.lineDeviceSize = 6;
                    this.mainDeviceLineHeight = 60;
                    this.mainWidth = 160;
                    this.mainHeight = 90;
                    this.mainBorder = 5;
                    this.devices = {};
                    this.plugins = [];
                    this.devicesStatus = {};
                    this.dirty = false;
                    this.domArea = this.elementRef.nativeElement.parent;
                }
                DeviceMapComponent.prototype.ngOnInit = function () {
                    var _this = this;
                    this.loadCurrentProject();
                    this.loadAvailableType();
                    this.subscriptionPluginsChange = this.pluginService.onPluginsChanged.subscribe(function (event) {
                        _this.loadAvailableType();
                    });
                };
                DeviceMapComponent.prototype.ngAfterViewInit = function () {
                    if (this.appService.isClientApp) {
                        this.mainDeviceLineHeight = 0;
                        this.mainHeight = 0;
                        this.flowLineHeight = 0;
                        this.flowHeight = 0;
                        this.lineFlowHeight = 0;
                    }
                };
                DeviceMapComponent.prototype.ngOnDestroy = function () {
                    try {
                        if (this.subscriptionPluginsChange) {
                            this.subscriptionPluginsChange.unsubscribe();
                        }
                    }
                    catch (e) {
                    }
                };
                DeviceMapComponent.prototype.onEditDevice = function (device) {
                    this.editDevice(device, false);
                };
                DeviceMapComponent.prototype.loadCurrentProject = function () {
                    // take the copy of devices to save by leave
                    var prj = this.projectService.getProject();
                    if (prj && prj.server) {
                        this.server = prj.server;
                    }
                    if (prj && prj.devices) {
                        this.devices = prj.devices;
                    }
                };
                DeviceMapComponent.prototype.checkLayout = function () {
                    if (this.devices) {
                        if (this.plcs().length && this.flows().length) {
                        }
                    }
                };
                DeviceMapComponent.prototype.loadAvailableType = function () {
                    var _this = this;
                    // define available device type (plugins)
                    this.plugins = [];
                    if (!this.appService.isClientApp && !this.appService.isDemoApp) {
                        this.pluginService.getPlugins().subscribe(function (plugins) {
                            Object.values(plugins).forEach(function (pg) {
                                if (pg.current.length) {
                                    _this.plugins.push(pg.type);
                                }
                            });
                        }, function (error) {
                        });
                        this.plugins.push(_models_device__WEBPACK_IMPORTED_MODULE_5__["DeviceType"].WebAPI);
                        this.plugins.push(_models_device__WEBPACK_IMPORTED_MODULE_5__["DeviceType"].MQTTclient);
                        this.plugins.push(_models_device__WEBPACK_IMPORTED_MODULE_5__["DeviceType"].internal);
                    }
                    else {
                        this.plugins.push(_models_device__WEBPACK_IMPORTED_MODULE_5__["DeviceType"].WebStudio);
                        this.plugins.push(_models_device__WEBPACK_IMPORTED_MODULE_5__["DeviceType"].internal);
                    }
                };
                DeviceMapComponent.prototype.addDevice = function () {
                    var device = new _models_device__WEBPACK_IMPORTED_MODULE_5__["Device"](_helpers_utils__WEBPACK_IMPORTED_MODULE_6__["Utils"].getGUID(_models_device__WEBPACK_IMPORTED_MODULE_5__["DEVICE_PREFIX"]));
                    device.property = new _models_device__WEBPACK_IMPORTED_MODULE_5__["DeviceNetProperty"]();
                    device.enabled = false;
                    device.tags = {};
                    this.editDevice(device, false);
                };
                DeviceMapComponent.prototype.onRemoveDevice = function (device) {
                    this.editDevice(device, true);
                };
                DeviceMapComponent.prototype.removeDevice = function (device) {
                    delete this.devices[device.id];
                };
                DeviceMapComponent.prototype.getWindowWidth = function () {
                    var result = window.innerWidth;
                    if (this.appService.isClientApp && this.elementRef.nativeElement && this.elementRef.nativeElement.parentElement) {
                        result = this.elementRef.nativeElement.parentElement.clientWidth;
                    }
                    if (this.devices) {
                        if (result < (this.plcs().length + 2) * this.deviceWidth) {
                            result = (this.plcs().length + 2) * this.deviceWidth;
                        }
                        if (result < (this.flows().length + 2) * this.deviceWidth) {
                            result = (this.flows().length + 2) * this.deviceWidth;
                        }
                    }
                    return result;
                };
                DeviceMapComponent.prototype.getHorizontalCenter = function () {
                    return this.getWindowWidth() / 2;
                };
                DeviceMapComponent.prototype.getVerticalCenter = function () {
                    if (this.devices && this.plcs().length && this.flows().length) {
                        return window.innerHeight / 5 * 2;
                    }
                    else if (this.flows().length) {
                        return window.innerHeight / 2;
                    }
                    else {
                        return window.innerHeight / 3;
                    }
                };
                DeviceMapComponent.prototype.getMainLeftPosition = function () {
                    return this.getHorizontalCenter() - this.mainWidth / 2;
                };
                DeviceMapComponent.prototype.getMainTopPosition = function () {
                    return this.getVerticalCenter() - this.mainHeight / 2;
                };
                DeviceMapComponent.prototype.getMainLineLeftPosition = function () {
                    return this.getHorizontalCenter() - 1 + this.lineDeviceSize / 2;
                };
                DeviceMapComponent.prototype.getMainLineTopPosition = function (type) {
                    if (type === void 0) { type = null; }
                    if (type === 'flow') {
                        return this.getVerticalCenter() + this.mainBorder - (this.lineFlowHeight + this.mainHeight / 2);
                    }
                    return this.getVerticalCenter() + this.mainBorder + this.mainHeight / 2;
                };
                DeviceMapComponent.prototype.getMainLineHeight = function (type) {
                    if (type === void 0) { type = null; }
                    if (this.devices) {
                        if (type === 'flow') {
                            if (this.flows().length) {
                                return this.lineFlowHeight;
                            }
                        }
                        else {
                            if (this.plcs().length) {
                                return this.mainDeviceLineHeight;
                            }
                        }
                    }
                    return 0;
                };
                DeviceMapComponent.prototype.getDeviceLeftPosition = function (index, type) {
                    if (type === void 0) { type = null; }
                    if (this.devices) {
                        if (type === 'flow') {
                            if (this.flows().length) {
                                var pos = index + 1;
                                var centerd = this.flows().length + 1;
                                var result = ((this.getWindowWidth() - this.flowWidth) / centerd) * pos;
                                return result;
                            }
                        }
                        else {
                            if (this.plcs().length) {
                                var pos = index + 1;
                                var centerd = this.plcs().length + 1;
                                var result = ((this.getWindowWidth() - this.deviceWidth) / centerd) * pos;
                                return result;
                            }
                        }
                    }
                    return 0;
                };
                DeviceMapComponent.prototype.getDeviceTopPosition = function (type) {
                    if (type === void 0) { type = null; }
                    if (!this.server) {
                        var pos = this.elementRef.nativeElement.parentElement.clientHeight / 2;
                        if (pos < 200) {
                            pos = 200;
                        }
                        if (type === 'flow') {
                            pos -= (this.mainHeight * 2);
                        }
                        else {
                            pos += (this.mainHeight / 2);
                        }
                        return pos;
                    }
                    else if (type === 'flow') {
                        return this.getDeviceLineTopPosition(type) - (this.flowHeight + this.flowBorder * 2);
                    }
                    else {
                        return this.getVerticalCenter() + (this.mainHeight / 2 + this.deviceLineHeight + this.mainDeviceLineHeight);
                    }
                };
                DeviceMapComponent.prototype.getDeviceLineLeftPosition = function (index, type) {
                    if (type === void 0) { type = null; }
                    if (this.devices) {
                        if (type === 'flow') {
                            if (this.flows().length) {
                                var pos = index + 1;
                                var centerd = this.flows().length + 1;
                                var result = ((this.getWindowWidth() - this.flowWidth) / centerd) * pos;
                                result += this.flowBorder + this.flowWidth / 2 - this.lineDeviceSize / 2;
                                return result;
                            }
                        }
                        else {
                            if (this.plcs().length) {
                                var pos = index + 1;
                                var centerd = this.plcs().length + 1;
                                var result = ((this.getWindowWidth() - this.deviceWidth) / centerd) * pos;
                                result += this.deviceBorder + this.deviceWidth / 2 - this.lineDeviceSize / 2;
                                return result;
                            }
                        }
                    }
                    return 0;
                };
                DeviceMapComponent.prototype.getDeviceLineTopPosition = function (type) {
                    if (type === void 0) { type = null; }
                    if (type === 'flow') {
                        return this.getDeviceConnectionTopPosition(type) + this.lineFlowSize - this.flowLineHeight;
                    }
                    else {
                        return this.getDeviceTopPosition(type) - this.deviceLineHeight;
                    }
                };
                DeviceMapComponent.prototype.getDeviceConnectionLeftPosition = function (type) {
                    if (type === void 0) { type = null; }
                    if (type === 'flow') {
                        var centerd = this.flows().length + 1;
                        var result = ((this.getWindowWidth() - this.flowWidth) / centerd) * 1;
                        result += this.deviceBorder + (this.flowWidth - this.lineFlowSize) / 2;
                        return result;
                    }
                    else {
                        var centerd = this.plcs().length + 1;
                        var result = ((this.getWindowWidth() - this.deviceWidth) / centerd) * 1;
                        result += this.deviceBorder + (this.deviceWidth - this.lineDeviceSize) / 2;
                        return result;
                    }
                };
                DeviceMapComponent.prototype.getDeviceConnectionTopPosition = function (type) {
                    if (type === void 0) { type = null; }
                    if (type === 'flow') {
                        return this.getMainLineTopPosition(type) - this.lineFlowSize;
                    }
                    else {
                        return this.getDeviceLineTopPosition();
                    }
                };
                DeviceMapComponent.prototype.getDeviceConnectionWidth = function (type) {
                    if (type === void 0) { type = null; }
                    if (this.devices) {
                        if (type === 'flow') {
                            var count = this.flows().length;
                            if (count) {
                                var centerd = this.flows().length + 1;
                                var result = (((this.getWindowWidth() - this.flowWidth) / centerd) * count) - (((this.getWindowWidth() - this.flowWidth) / centerd) * 1);
                                return result;
                            }
                        }
                        else {
                            var count = this.plcs().length;
                            if (count) {
                                var centerd = this.plcs().length + 1;
                                var result = (((this.getWindowWidth() - this.deviceWidth) / centerd) * count) - (((this.getWindowWidth() - this.deviceWidth) / centerd) * 1);
                                return result;
                            }
                        }
                    }
                    return 0;
                };
                DeviceMapComponent.prototype.devicesValue = function (type) {
                    if (type === void 0) { type = null; }
                    if (this.devices) {
                        if (type === 'flow') {
                            if (this.flows().length) {
                                var result = this.flows();
                                return result.sort(function (a, b) { return (a.name > b.name) ? 1 : -1; });
                            }
                        }
                        else {
                            if (this.plcs().length) {
                                var result = this.plcs();
                                return result.sort(function (a, b) { return (a.name > b.name) ? 1 : -1; });
                            }
                        }
                    }
                    return [];
                };
                DeviceMapComponent.prototype.onListDevice = function (device) {
                    this.goto.emit(device);
                };
                DeviceMapComponent.prototype.isDevicePropertyToShow = function (device) {
                    if (device.property && device.type !== 'OPCUA') {
                        return true;
                    }
                };
                DeviceMapComponent.prototype.isClientDevice = function (device) {
                    return (device.type === _models_device__WEBPACK_IMPORTED_MODULE_5__["DeviceType"].WebStudio && this.appService.isClientApp);
                };
                DeviceMapComponent.prototype.getDevicePropertyToShow = function (device) {
                    var result = '';
                    if (device.property) {
                        if (device.type === _models_device__WEBPACK_IMPORTED_MODULE_5__["DeviceType"].OPCUA) {
                            result = 'OPC-UA';
                        }
                        else if (device.type === _models_device__WEBPACK_IMPORTED_MODULE_5__["DeviceType"].SiemensS7) {
                            result = 'Port: ';
                            if (device.property.port) {
                                result += device.property.port;
                            }
                            result += ' / Rack: ';
                            if (device.property.rack) {
                                result += device.property.rack;
                            }
                            result += ' / Slot: ';
                            if (device.property.slot) {
                                result += device.property.slot;
                            }
                        }
                        else if (device.type === _models_device__WEBPACK_IMPORTED_MODULE_5__["DeviceType"].ModbusTCP) {
                            result = 'Modbus-TCP  ' + 'Slave ID: ';
                            if (device.property.slaveid) {
                                result += device.property.slaveid;
                            }
                        }
                        else if (device.type === _models_device__WEBPACK_IMPORTED_MODULE_5__["DeviceType"].ModbusRTU) {
                            result = 'Modbus-RTU  ' + 'Slave ID: ';
                            if (device.property.slaveid) {
                                result += device.property.slaveid;
                            }
                        }
                    }
                    return result;
                };
                DeviceMapComponent.prototype.getDeviceStatusColor = function (device) {
                    if (this.devicesStatus[device.id]) {
                        var milli = new Date().getTime();
                        if (this.devicesStatus[device.id].last + 15000 < milli) {
                            this.devicesStatus[device.id].status = 'connect-error';
                            this.devicesStatus[device.id].last = new Date().getTime();
                        }
                        var st = this.devicesStatus[device.id].status;
                        if (st === 'connect-ok') {
                            return '#00b050';
                        }
                        else if (st === 'connect-error' || st === 'connect-failed') {
                            return '#ff2d2d';
                        }
                        else if (st === 'connect-off' || st === 'connect-busy') {
                            return '#ffc000';
                        }
                    }
                };
                DeviceMapComponent.prototype.getNodeClass = function (device) {
                    if (device.type === _models_device__WEBPACK_IMPORTED_MODULE_5__["DeviceType"].internal) {
                        return 'node-internal';
                    }
                    return 'node-device';
                };
                DeviceMapComponent.prototype.setDeviceStatus = function (event) {
                    this.devicesStatus[event.id] = { status: event.status, last: new Date().getTime() };
                };
                DeviceMapComponent.prototype.editDevice = function (device, toremove) {
                    var _this = this;
                    var exist = Object.values(this.devices).filter(function (d) { return d.id !== device.id; }).map(function (d) { return d.name; });
                    exist.push('server');
                    var tempdevice = JSON.parse(JSON.stringify(device));
                    var dialogRef = this.dialog.open(_device_property_device_property_component__WEBPACK_IMPORTED_MODULE_2__["DevicePropertyComponent"], {
                        panelClass: 'dialog-property',
                        data: {
                            device: tempdevice, remove: toremove, exist: exist, availableType: this.plugins,
                            projectService: this.projectService
                        },
                        position: { top: '60px' }
                    });
                    dialogRef.afterClosed().subscribe(function (result) {
                        if (result) {
                            _this.dirty = true;
                            if (toremove) {
                                _this.removeDevice(device);
                                _this.projectService.removeDevice(device);
                            }
                            else {
                                var olddevice = JSON.parse(JSON.stringify(device));
                                device.name = tempdevice.name;
                                device.type = tempdevice.type;
                                device.enabled = tempdevice.enabled;
                                device.polling = tempdevice.polling;
                                if (_this.appService.isClientApp || _this.appService.isDemoApp) {
                                    delete device.property;
                                }
                                if (device.property && tempdevice.property) {
                                    device.property.address = tempdevice.property.address;
                                    device.property.port = parseInt(tempdevice.property.port);
                                    device.property.slot = parseInt(tempdevice.property.slot);
                                    device.property.rack = parseInt(tempdevice.property.rack);
                                    device.property.slaveid = tempdevice.property.slaveid;
                                    device.property.baudrate = tempdevice.property.baudrate;
                                    device.property.databits = tempdevice.property.databits;
                                    device.property.stopbits = tempdevice.property.stopbits;
                                    device.property.parity = tempdevice.property.parity;
                                    device.property.options = tempdevice.property.options;
                                    device.property.method = tempdevice.property.method;
                                    device.property.format = tempdevice.property.format;
                                }
                                _this.projectService.setDevice(device, olddevice, result.security);
                            }
                        }
                        _this.checkLayout();
                    });
                };
                DeviceMapComponent.prototype.plcs = function () {
                    return Object.values(this.devices).filter(function (d) { return d.type !== _models_device__WEBPACK_IMPORTED_MODULE_5__["DeviceType"].WebAPI; });
                };
                DeviceMapComponent.prototype.flows = function () {
                    return Object.values(this.devices).filter(function (d) { return d.type === _models_device__WEBPACK_IMPORTED_MODULE_5__["DeviceType"].WebAPI; });
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"])
                ], DeviceMapComponent.prototype, "goto", void 0);
                DeviceMapComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'app-device-map',
                        template: __webpack_require__(/*! ./device-map.component.html */ "./app/device/device-map/device-map.component.html"),
                        styles: [__webpack_require__(/*! ./device-map.component.scss */ "./app/device/device-map/device-map.component.scss")]
                    }),
                    __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialog"],
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"],
                    _services_app_service__WEBPACK_IMPORTED_MODULE_7__["AppService"],
                    _services_plugin_service__WEBPACK_IMPORTED_MODULE_4__["PluginService"],
                    _services_project_service__WEBPACK_IMPORTED_MODULE_3__["ProjectService"]])
                ], DeviceMapComponent);
                return DeviceMapComponent;
            }());



            /***/
}),

/***/ "./app/device/device-property/device-property.component.css":
/*!******************************************************************!*\
  !*** ./app/device/device-property/device-property.component.css ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "::ng-deep .mat-expansion-panel-body {\n    padding-left: 5px !important;\n    padding-right: 5px !important;\n}\n\n.multiline {\n    overflow: auto;\n    max-height: 300px;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGV2aWNlL2RldmljZS1wcm9wZXJ0eS9kZXZpY2UtcHJvcGVydHkuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLDRCQUE0QjtJQUM1Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsaUJBQWlCO0FBQ3JCIiwiZmlsZSI6InNyYy9hcHAvZGV2aWNlL2RldmljZS1wcm9wZXJ0eS9kZXZpY2UtcHJvcGVydHkuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIjo6bmctZGVlcCAubWF0LWV4cGFuc2lvbi1wYW5lbC1ib2R5IHtcbiAgICBwYWRkaW5nLWxlZnQ6IDVweCAhaW1wb3J0YW50O1xuICAgIHBhZGRpbmctcmlnaHQ6IDVweCAhaW1wb3J0YW50O1xufVxuXG4ubXVsdGlsaW5lIHtcbiAgICBvdmVyZmxvdzogYXV0bztcbiAgICBtYXgtaGVpZ2h0OiAzMDBweDtcbn1cbiJdfQ== */"

            /***/
}),

/***/ "./app/device/device-property/device-property.component.html":
/*!*******************************************************************!*\
  !*** ./app/device/device-property/device-property.component.html ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div style=\"width: 100%;position: relative;\">\n    <div *ngIf=\"isToRemove\" style=\"margin-top: 20px;margin-bottom: 20px;\">\n        {{'msg.device-remove' | translate}} '{{data.device.name}}' ?\n    </div>\n    <div *ngIf=\"!isToRemove\">\n        <h1 mat-dialog-title style=\"display:inline-block; cursor:move; padding-top: 15px\" mat-dialog-draggable *ngIf=\"!isFuxaServer\">\n            {{'device.property-client' | translate}}</h1>\n        <h1 mat-dialog-title style=\"display:inline-block; cursor:move; padding-top: 15px\" mat-dialog-draggable *ngIf=\"isFuxaServer\">\n            {{'device.property-server' | translate}}</h1>\n        <mat-icon (click)=\"onNoClick()\" style=\"float:right;cursor:pointer;color:gray;position: relative; top: 10px; right: 0px\">clear</mat-icon>\n    </div>\n    <div style=\"overflow-y: hidden; overflow-x: hidden; padding-top: 5px;\" *ngIf=\"!isToRemove\">\n        <div style=\"display: block;\">\n            <div class=\"my-form-field\" style=\"display: block;margin-bottom: 10px;\">\n                <span>{{'device.property-name' | translate}}</span>\n                <input [(ngModel)]=\"data.device.name\" style=\"width: 350px\" type=\"text\">\n            </div>\n            <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;\" *ngIf=\"!isFuxaServer\">\n                <span>{{'device.property-type' | translate}}</span>\n                <mat-select [(value)]=\"data.device.type\" (selectionChange)=\"onDeviceTypeChanged($event)\" #devicetype style=\"width: 160px\" [disabled]=\"isFuxaServer\">\n                    <mat-option *ngFor=\"let type of deviceType | enumToArray\" [value]=\"type.key\">\n                        {{ type.value }}\n                    </mat-option>\n                </mat-select>\n            </div>\n            <div class=\"my-form-field\" style=\"display: inline-block;margin-left: 15px;\" *ngIf=\"isWithPolling && !isFuxaServer\">\n                <span>{{'device.property-polling' | translate}}</span>\n                <mat-select [(value)]=\"data.device.polling\" style=\"width: 80px\" [disabled]=\"isFuxaServer\">\n                    <mat-option *ngFor=\"let polling of pollingType\" [value]=\"polling.value\">\n                        {{ polling.text }}\n                    </mat-option>\n                </mat-select>\n            </div>\n            <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;text-align: center;width: 80px;\" *ngIf=\"!isFuxaServer\">\n                <span *ngIf=\"data.device.type === deviceType.WebStudio\">{{'device.property-subscribe' | translate}}</span>\n                <span *ngIf=\"data.device.type !== deviceType.WebStudio\">{{'device.property-enable' | translate}}</span>\n                <mat-slide-toggle color=\"primary\" [(ngModel)]=\"data.device.enabled\"></mat-slide-toggle>\n            </div>\n            <div *ngIf=\"data.device.property && data.device.type\" [ngSwitch]=\"data.device.type\">\n                <div *ngSwitchCase=\"deviceType.OPCUA\">\n                    <div class=\"my-form-field\" style=\"display: block;margin-bottom: 10px;\">\n                        <span>{{'device.property-address-opc' | translate}}</span>\n                        <input [(ngModel)]=\"data.device.property.address\" style=\"width: 350px\" type=\"ip\" (click)=\"onAddressChanged()\">\n                    </div>\n                    <div class=\"my-form-field\" style=\"width: 356px\">\n                        <mat-expansion-panel #panelProperty class=\"my-expansion-panel\" style=\"box-shadow:none !important; background-color:var(--formExtBackground);border-radius: 2px;\"\n                            (closed)=\"onPropertyExpand(false)\" (opened)=\"onPropertyExpand(true);onCheckOpcUaServer()\">\n                            <mat-expansion-panel-header class=\"header\" [collapsedHeight]=\"'32px'\" [expandedHeight]=\"'32px'\"\n                                style=\"padding-left:5px !important;padding-right:17px !important; font-size: 13px;\">\n                                <mat-panel-title>\n                                    <span *ngIf=\"propertyExpanded\">{{'device.property-security' | translate}}</span>\n                                    <span *ngIf=\"!propertyExpanded\">{{'device.not-property-security' | translate}}</span>\n                                </mat-panel-title>\n                            </mat-expansion-panel-header>\n                            <div *ngIf=\"propertyLoading\">\n                                <mat-spinner style=\"margin: auto\" diameter=\"20\"></mat-spinner>\n                            </div>\n                            <div *ngIf=\"!propertyLoading\">\n                                <mat-radio-group [(ngModel)]=\"securityRadio\">\n                                    <mat-radio-button style=\"display:block;padding-left:10px;padding-bottom:2px;font-size: 13px;\" *ngFor=\"let sec of securityMode;\"\n                                        [value]=\"sec.value\">{{sec.text}}</mat-radio-button>\n                                </mat-radio-group>\n                                <div *ngIf=\"!propertyError\" style=\"display: block;margin: 5px 10px 0px 10px;\">\n                                    <div class=\"my-form-field\">\n                                        <span>{{'general.username' | translate}}</span>\n                                        <input [(ngModel)]=\"security.username\" style=\"width: 315px;background-color:var(--formInputExtBackground)\" type=\"text\">\n                                    </div>\n                                    <div class=\"my-form-field\" style=\"margin-top: 5px;\">\n                                        <span>{{'general.password' | translate}}</span>\n                                        <input autocomplete=\"off\" [type]=\"showPassword ? 'text' : 'password'\" [(ngModel)]=\"security.password\" style=\"width: 315px;background-color:var(--formInputExtBackground)\">\n                                        <mat-icon matSuffix (click)=\"showPassword = !showPassword\" class=\"show-password\">{{showPassword ? 'visibility' : 'visibility_off'}}</mat-icon>\n                                    </div>\n                                </div>\n                                <div *ngIf=\"propertyError\" style=\"display: block;margin: 5px 10px 0px 10px;width: 315px; color: red;\">\n                                    <span>{{propertyError}}</span>\n                                </div>\n                            </div>\n                        </mat-expansion-panel>\n                    </div>\n                </div>\n                <div *ngSwitchCase=\"deviceType.BACnet\">\n                    <div class=\"my-form-field\" style=\"display: block;margin-bottom: 10px;\">\n                        <span>{{'device.property-device-port' | translate}}</span>\n                        <input [(ngModel)]=\"data.device.property.address\" style=\"width: 350px\" type=\"ip\" (click)=\"onAddressChanged()\">\n                    </div>\n                </div>\n                <div *ngSwitchCase=\"deviceType.SiemensS7\">\n                    <div class=\"my-form-field\" style=\"display: block;margin-bottom: 10px;\">\n                        <span>{{'device.property-address-s7' | translate}}</span>\n                        <input [(ngModel)]=\"data.device.property.address\" style=\"width: 350px\" type=\"ip\" (click)=\"onAddressChanged()\">\n                    </div>\n                    <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;padding-right: 10px;\">\n                        <span>{{'device.property-port' | translate}}</span>\n                        <input numberOnly [(ngModel)]=\"data.device.property.port\" style=\"width: 80px\" type=\"text\">\n                    </div>\n                    <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;padding-right: 10px;\">\n                        <span>{{'device.property-rack' | translate}}</span>\n                        <input numberOnly [(ngModel)]=\"data.device.property.rack\" style=\"width: 80px\" type=\"text\">\n                    </div>\n                    <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;\">\n                        <span>{{'device.property-slot' | translate}}</span>\n                        <input numberOnly [(ngModel)]=\"data.device.property.slot\" style=\"width: 80px\" type=\"text\">\n                    </div>\n                </div>\n                <div *ngSwitchCase=\"deviceType.ModbusRTU\">\n                    <div style=\"display: block;margin-bottom: 10px;\">\n                        <div class=\"my-form-field\" style=\"display: inline-block;\">\n                            <span>{{'device.property-serialport' | translate}}</span>\n                            <input [(ngModel)]=\"data.device.property.address\" style=\"width: 262px\" type=\"ip\" (click)=\"onAddressChanged()\">\n                        </div>\n                        <div class=\"my-form-field\" style=\"display: inline-block;margin-left: 15px;\">\n                            <span>{{'device.property-slave-id' | translate}}</span>\n                            <input numberOnly [(ngModel)]=\"data.device.property.slaveid\" style=\"width: 65px\" type=\"text\">\n                        </div>\n                    </div>\n                    <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;padding-right: 10px;\">\n                        <span>{{'device.property-baudrate' | translate}}</span>\n                        <mat-select [(value)]=\"data.device.property.baudrate\" style=\"width: 75px\">\n                            <mat-option *ngFor=\"let value of baudrateType\" [value]=\"value\">\n                                {{ value }}\n                            </mat-option>\n                        </mat-select>\n                    </div>\n                    <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;padding-right: 10px;\">\n                        <span>{{'device.property-databits' | translate}}</span>\n                        <mat-select [(value)]=\"data.device.property.databits\" style=\"width: 50px\">\n                            <mat-option *ngFor=\"let value of databitsType\" [value]=\"value\">\n                                {{ value }}\n                            </mat-option>\n                        </mat-select>\n                    </div>\n                    <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;padding-right: 10px;\">\n                        <span>{{'device.property-stopbits' | translate}}</span>\n                        <mat-select [(value)]=\"data.device.property.stopbits\" style=\"width: 50px\">\n                            <mat-option *ngFor=\"let value of stopbitsType\" [value]=\"value\">\n                                {{ value }}\n                            </mat-option>\n                        </mat-select>\n                    </div>\n                    <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;\">\n                        <span>{{'device.property-parity' | translate}}</span>\n                        <mat-select [(value)]=\"data.device.property.parity\" style=\"width: 74px\">\n                            <mat-option *ngFor=\"let value of parityType\" [value]=\"value\">\n                                {{ value }}\n                            </mat-option>\n                        </mat-select>\n                    </div>\n                    <div class=\"my-form-field\" style=\"display: block;margin-bottom: 10px; width: 100px; text-align: center;\">\n                        <span>{{'device.property-tockenized' | translate}}</span>\n                        <mat-slide-toggle color=\"primary\" [(ngModel)]=\"data.device.property.options\"></mat-slide-toggle>\n                    </div>\n                </div>\n                <div *ngSwitchCase=\"deviceType.ModbusTCP\">\n                    <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;\">\n                        <span>{{'device.property-address-port' | translate}}</span>\n                        <input [(ngModel)]=\"data.device.property.address\" style=\"width: 262px\" type=\"ip\" (click)=\"onAddressChanged()\">\n                    </div>\n                    <div class=\"my-form-field\" style=\"display: inline-block;margin-left: 15px;\">\n                        <span>{{'device.property-slave-id' | translate}}</span>\n                        <input numberOnly [(ngModel)]=\"data.device.property.slaveid\" style=\"width: 65px\" type=\"text\">\n                    </div>\n                    <div class=\"my-form-field\" style=\"display: block;margin-bottom: 10px; width: 100px; text-align: center;\">\n                        <span>{{'device.property-tockenized' | translate}}</span>\n                        <mat-slide-toggle color=\"primary\" [(ngModel)]=\"data.device.property.options\"></mat-slide-toggle>\n                    </div>\n                </div>\n                <div *ngSwitchCase=\"deviceType.WebAPI\">\n                    <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;\">\n                        <span>{{'device.property-method' | translate}}</span>\n                        <mat-select [(value)]=\"data.device.property.method\" style=\"width: 160px\">\n                            <mat-option *ngFor=\"let value of methodType\" [value]=\"value\">\n                                {{ value }}\n                            </mat-option>\n                        </mat-select>\n                    </div>\n                    <div class=\"my-form-field\" style=\"margin-bottom: 10px; float: right;\">\n                        <span>{{'device.property-format' | translate}}</span>\n                        <mat-select [(value)]=\"data.device.property.format\" style=\"width: 168px\">\n                            <mat-option *ngFor=\"let value of parserType\" [value]=\"value\">\n                                {{ value }}\n                            </mat-option>\n                        </mat-select>\n                    </div>\n                    <div class=\"my-form-field\" style=\"display: block;margin-bottom: 10px;\">\n                        <span>{{'device.property-url' | translate}}</span>\n                        <input [(ngModel)]=\"data.device.property.address\" style=\"width: 350px\" type=\"ip\" (click)=\"onAddressChanged()\">\n                    </div>\n                    <div class=\"my-form-field\" style=\"width: 356px\">\n                        <mat-expansion-panel [disabled]=\"!data.device.property.method || !data.device.property.address\" #panelProperty class=\"my-expansion-panel\"\n                            style=\"box-shadow:none !important; background-color:var(--formExtBackground);border-radius: 2px;\" (closed)=\"onPropertyExpand(false)\"\n                            (opened)=\"onPropertyExpand(true);onCheckWebApi()\">\n                            <mat-expansion-panel-header class=\"header\" [collapsedHeight]=\"'32px'\" [expandedHeight]=\"'32px'\"\n                                style=\"padding-left:5px !important;padding-right:17px !important;font-size: 13px;\">\n                                <mat-panel-title>\n                                    <span *ngIf=\"propertyExpanded\">{{'device.property-webapi-result' | translate}}</span>\n                                    <span *ngIf=\"!propertyExpanded\">{{'device.not-webapi-result' | translate}}</span>\n                                </mat-panel-title>\n                            </mat-expansion-panel-header>\n                            <div *ngIf=\"propertyLoading\">\n                                <mat-spinner style=\"margin: auto\" diameter=\"20\"></mat-spinner>\n                            </div>\n                            <div *ngIf=\"!propertyLoading\">\n                                <div class=\"my-form-field multiline\" style=\"display: block;margin: 5px 5px 0px 5px;font-size: 13px;\">\n                                    {{result}}\n                                </div>\n                            </div>\n                        </mat-expansion-panel>\n                    </div>\n                </div>\n                <div *ngSwitchCase=\"deviceType.MQTTclient\">\n                    <div class=\"my-form-field\" style=\"display: block;margin-bottom: 10px;\">\n                        <span>{{'device.property-mqtt-address' | translate}}</span>\n                        <input [(ngModel)]=\"data.device.property.address\" style=\"width: 350px\" type=\"ip\" (click)=\"onAddressChanged()\">\n                    </div>\n                    <div class=\"my-form-field\" style=\"width: 356px\">\n                        <mat-expansion-panel #panelProperty class=\"my-expansion-panel\" style=\"box-shadow:none !important; background-color:var(--formExtBackground);border-radius: 2px;\"\n                            (closed)=\"onPropertyExpand(false)\" (opened)=\"onPropertyExpand(true);\">\n                            <mat-expansion-panel-header class=\"header\" [collapsedHeight]=\"'32px'\" [expandedHeight]=\"'32px'\"\n                                style=\"padding-left:5px !important;padding-right:17px !important;font-size: 13px;\">\n                                <mat-panel-title>\n                                    <span *ngIf=\"propertyExpanded\">{{'device.property-security' | translate}}</span>\n                                    <span *ngIf=\"!propertyExpanded\">{{'device.not-property-security' | translate}}</span>\n                                </mat-panel-title>\n                            </mat-expansion-panel-header>\n                            <div *ngIf=\"propertyLoading\">\n                                <mat-spinner style=\"margin: auto\" diameter=\"20\"></mat-spinner>\n                            </div>\n                            <div *ngIf=\"!propertyLoading\">\n                                <div style=\"display: block;margin: 5px 10px 0px 10px;\">\n                                    <div class=\"my-form-field\" style=\"display: block;\">\n                                        <span>{{'general.clientId' | translate}}</span>\n                                        <input [(ngModel)]=\"security.clientId\" style=\"width: 315px;background-color:var(--formInputExtBackground)\" type=\"text\">\n                                    </div>\n                                    <div class=\"my-form-field\" style=\"display: block;margin-top: 5px;\">\n                                        <span>{{'general.username' | translate}}</span>\n                                        <input [(ngModel)]=\"security.username\" style=\"width: 315px;background-color:var(--formInputExtBackground)\" type=\"text\">\n                                    </div>\n                                    <div class=\"my-form-field\" style=\"display: block;margin-top: 5px;\">\n                                        <span>{{'general.password' | translate}}</span>\n                                        <input autocomplete=\"off\" [type]=\"showPassword ? 'text' : 'password'\" [(ngModel)]=\"security.password\" style=\"width: 315px;background-color:var(--formInputExtBackground)\">\n                                        <mat-icon matSuffix (click)=\"showPassword = !showPassword\" class=\"show-password\">{{showPassword ? 'visibility' : 'visibility_off'}}</mat-icon>\n                                    </div>\n                                </div>\n                            </div>\n                        </mat-expansion-panel>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div mat-dialog-actions class=\"dialog-action\">\n        <button mat-raised-button (click)=\"onNoClick()\">{{'dlg.cancel' | translate}}</button>\n        <button mat-raised-button color=\"primary\" [disabled]=\"!isValid(data.device)\" (click)=\"onOkClick()\" [mat-dialog-close]=\"data\" cdkFocusInitial>{{'dlg.ok' |\n            translate}}</button>\n    </div>\n</div>"

            /***/
}),

/***/ "./app/device/device-property/device-property.component.ts":
/*!*****************************************************************!*\
  !*** ./app/device/device-property/device-property.component.ts ***!
  \*****************************************************************/
/*! exports provided: DevicePropertyComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DevicePropertyComponent", function () { return DevicePropertyComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "../node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ngx-translate/core */ "../node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js");
/* harmony import */ var _services_hmi_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../_services/hmi.service */ "./app/_services/hmi.service.ts");
/* harmony import */ var _services_app_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../_services/app.service */ "./app/_services/app.service.ts");
/* harmony import */ var _models_device__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../../_models/device */ "./app/_models/device.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };
            var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
                return function (target, key) { decorator(target, key, paramIndex); }
            };






            var DevicePropertyComponent = /** @class */ (function () {
                function DevicePropertyComponent(hmiService, translateService, appService, dialogRef, data) {
                    this.hmiService = hmiService;
                    this.translateService = translateService;
                    this.appService = appService;
                    this.dialogRef = dialogRef;
                    this.data = data;
                    this.deviceType = {};
                    this.pollingPlcType = [{ text: '200 ms', value: 200 }, { text: '500 ms', value: 500 }, { text: '700 ms', value: 700 }, { text: '1 sec', value: 1000 },
                    { text: '1.5 sec', value: 1500 }, { text: '2 sec', value: 2000 }, { text: '3 sec', value: 3000 },
                    { text: '4 sec', value: 4000 }, { text: '5 sec', value: 5000 }];
                    this.pollingWebApiType = [{ text: '1 sec', value: 1000 }, { text: '2 sec', value: 2000 }, { text: '3 sec', value: 3000 }, { text: '5 sec', value: 5000 },
                    { text: '10 sec', value: 10000 }, { text: '30 sec', value: 30000 }, { text: '1 min', value: 60000 }, { text: '2 min', value: 60000 * 2 },
                    { text: '5 min', value: 60000 * 5 }, { text: '10 min', value: 60000 * 10 }, { text: '30 min', value: 60000 * 30 }, { text: '60 min', value: 60000 * 60 }];
                    this.pollingType = this.pollingPlcType;
                    this.isFuxaServer = false;
                    this.isWithPolling = true;
                    this.isToRemove = false;
                    this.propertyError = '';
                    this.securityMode = [];
                    this.security = new _models_device__WEBPACK_IMPORTED_MODULE_5__["DeviceSecurity"]();
                    this.baudrateType = [110, 300, 600, 1200, 2400, 4800, 9600, 14400, 19200, 28800, 38400, 57600, 115200, 128000, 256000, 921600];
                    this.databitsType = [7, 8];
                    this.stopbitsType = [1, 1.5, 2];
                    this.parityType = ['None', 'Odd', 'Even'];
                    this.methodType = ['GET']; //, 'POST'];
                    this.parserType = ['JSON']; //, 'CSV'];
                    this.hostInterfaces = [];
                    this.result = '';
                    this.projectService = data.projectService;
                }
                DevicePropertyComponent.prototype.ngOnInit = function () {
                    var _this = this;
                    this.isToRemove = this.data.remove;
                    this.isFuxaServer = (this.data.device.type && this.data.device.type === _models_device__WEBPACK_IMPORTED_MODULE_5__["DeviceType"].FuxaServer) ? true : false;
                    if (this.appService.isClientApp || this.appService.isDemoApp) {
                        this.isWithPolling = false;
                    }
                    for (var key in _models_device__WEBPACK_IMPORTED_MODULE_5__["DeviceType"]) {
                        if (!this.isFuxaServer && key !== _models_device__WEBPACK_IMPORTED_MODULE_5__["DeviceType"].FuxaServer) {
                            for (var idx = 0; idx < this.data.availableType.length; idx++) {
                                if (key.startsWith(this.data.availableType[idx])) {
                                    this.deviceType[key] = _models_device__WEBPACK_IMPORTED_MODULE_5__["DeviceType"][key];
                                }
                            }
                        }
                    }
                    // set default is only one type
                    if (this.data.availableType.length === 1) {
                        this.data.device.type = this.data.availableType[0];
                    }
                    this.subscriptionDeviceProperty = this.hmiService.onDeviceProperty.subscribe(function (res) {
                        if (res.type === _models_device__WEBPACK_IMPORTED_MODULE_5__["DeviceType"].OPCUA) {
                            _this.securityMode = [];
                            if (res.result) {
                                var secPol = _models_device__WEBPACK_IMPORTED_MODULE_5__["SecurityPolicy"];
                                for (var idx = 0; idx < res.result.length; idx++) {
                                    var sec = res.result[idx];
                                    var mode = _this.securityModeToString(sec.securityMode);
                                    if (sec.securityPolicy.indexOf(secPol.None) !== -1) {
                                        _this.securityMode.push({ value: sec, text: _models_device__WEBPACK_IMPORTED_MODULE_5__["SecurityPolicy"].None.toString() + ' - ' + mode });
                                    }
                                    else if (sec.securityPolicy.indexOf(secPol.Basic128Rsa15) !== -1) {
                                        _this.securityMode.push({ value: sec, text: _models_device__WEBPACK_IMPORTED_MODULE_5__["SecurityPolicy"].Basic128Rsa15.toString() + ' - ' + mode });
                                    }
                                    else if (sec.securityPolicy.indexOf(secPol.Basic128) !== -1) {
                                        _this.securityMode.push({ value: sec, text: _models_device__WEBPACK_IMPORTED_MODULE_5__["SecurityPolicy"].Basic128.toString() + ' - ' + mode });
                                    }
                                    else if (sec.securityPolicy.indexOf(secPol.Basic192Rsa15) !== -1) {
                                        _this.securityMode.push({ value: sec, text: _models_device__WEBPACK_IMPORTED_MODULE_5__["SecurityPolicy"].Basic192Rsa15.toString() + ' - ' + mode });
                                    }
                                    else if (sec.securityPolicy.indexOf(secPol.Basic192) !== -1) {
                                        _this.securityMode.push({ value: sec, text: _models_device__WEBPACK_IMPORTED_MODULE_5__["SecurityPolicy"].Basic192.toString() + ' - ' + mode });
                                    }
                                    else if (sec.securityPolicy.indexOf(secPol.Basic256Rsa15) !== -1) {
                                        _this.securityMode.push({ value: sec, text: _models_device__WEBPACK_IMPORTED_MODULE_5__["SecurityPolicy"].Basic256Rsa15.toString() + ' - ' + mode });
                                    }
                                    else if (sec.securityPolicy.indexOf(secPol.Basic256Sha256) !== -1) {
                                        _this.securityMode.push({ value: sec, text: _models_device__WEBPACK_IMPORTED_MODULE_5__["SecurityPolicy"].Basic256Sha256.toString() + ' - ' + mode });
                                    }
                                    else if (sec.securityPolicy.indexOf(secPol.Basic256) !== -1) {
                                        _this.securityMode.push({ value: sec, text: _models_device__WEBPACK_IMPORTED_MODULE_5__["SecurityPolicy"].Basic256.toString() + ' - ' + mode });
                                    }
                                    else if (sec.securityPolicy.indexOf(secPol.Aes128_Sha256_RsaOaep) !== -1) {
                                        _this.securityMode.push({ value: sec, text: _models_device__WEBPACK_IMPORTED_MODULE_5__["SecurityPolicy"].Aes128_Sha256_RsaOaep.toString() + ' - ' + mode });
                                    }
                                    else if (sec.securityPolicy.indexOf(secPol.Aes256_Sha256_RsaPss) !== -1) {
                                        _this.securityMode.push({ value: sec, text: _models_device__WEBPACK_IMPORTED_MODULE_5__["SecurityPolicy"].Aes256_Sha256_RsaPss.toString() + ' - ' + mode });
                                    }
                                    if (_this.isSecurityMode(sec)) {
                                        _this.securityRadio = sec;
                                    }
                                }
                                _this.propertyError = '';
                            }
                            else if (res.error) {
                                _this.propertyError = res.error;
                            }
                        }
                        else if (res.type === _models_device__WEBPACK_IMPORTED_MODULE_5__["DeviceType"].BACnet) {
                        }
                        _this.propertyLoading = false;
                    });
                    // check security
                    if (this.data.device.id && (this.data.device.type === _models_device__WEBPACK_IMPORTED_MODULE_5__["DeviceType"].OPCUA || this.data.device.type === _models_device__WEBPACK_IMPORTED_MODULE_5__["DeviceType"].MQTTclient)) {
                        this.projectService.getDeviceSecurity(this.data.device.id).subscribe(function (result) {
                            if (result) {
                                _this.setSecurity(result.value);
                            }
                        }, function (err) {
                            console.error('get Device Security err: ' + err);
                        });
                    }
                    if (this.data.device.property) {
                        if (!this.data.device.property.baudrate) {
                            this.data.device.property.baudrate = 9600;
                        }
                        if (!this.data.device.property.databits) {
                            this.data.device.property.databits = 8;
                        }
                        if (!this.data.device.property.stopbits) {
                            this.data.device.property.stopbits = 1;
                        }
                        if (!this.data.device.property.parity) {
                            this.data.device.property.parity = 'None';
                        }
                    }
                    this.subscriptionHostInterfaces = this.hmiService.onHostInterfaces.subscribe(function (res) {
                        if (res.result) {
                            _this.hostInterfaces = res;
                        }
                    });
                    this.subscriptionDeviceWebApiRequest = this.hmiService.onDeviceWebApiRequest.subscribe(function (res) {
                        if (res.result) {
                            _this.result = JSON.stringify(res.result);
                        }
                        _this.propertyLoading = false;
                    });
                    this.onDeviceTypeChanged();
                    // this.hmiService.askHostInterface();
                };
                DevicePropertyComponent.prototype.ngOnDestroy = function () {
                    try {
                        if (this.subscriptionDeviceProperty) {
                            this.subscriptionDeviceProperty.unsubscribe();
                        }
                        if (this.subscriptionHostInterfaces) {
                            this.subscriptionHostInterfaces.unsubscribe();
                        }
                        if (this.subscriptionDeviceWebApiRequest) {
                            this.subscriptionDeviceWebApiRequest.unsubscribe();
                        }
                    }
                    catch (e) {
                    }
                };
                DevicePropertyComponent.prototype.onNoClick = function () {
                    this.dialogRef.close();
                };
                DevicePropertyComponent.prototype.onOkClick = function () {
                    this.data.security = this.getSecurity();
                };
                DevicePropertyComponent.prototype.onCheckOpcUaServer = function () {
                    this.propertyLoading = true;
                    this.propertyError = '';
                    this.hmiService.askDeviceProperty(this.data.device.property.address, this.data.device.type);
                };
                DevicePropertyComponent.prototype.onCheckWebApi = function () {
                    this.propertyLoading = true;
                    this.result = '';
                    this.hmiService.askWebApiProperty(this.data.device.property);
                };
                // onCheckBACnetDevice() {
                // 	this.propertyLoading = true;
                // 	this.hmiService.askDeviceProperty(this.data.device.property.address, this.data.device.type);
                // }
                DevicePropertyComponent.prototype.onPropertyExpand = function (status) {
                    this.propertyExpanded = status;
                };
                DevicePropertyComponent.prototype.onAddressChanged = function () {
                    this.propertyLoading = false;
                };
                DevicePropertyComponent.prototype.onDeviceTypeChanged = function () {
                    if (this.data.device.type === _models_device__WEBPACK_IMPORTED_MODULE_5__["DeviceType"].WebAPI) {
                        this.pollingType = this.pollingWebApiType;
                    }
                    else {
                        this.pollingType = this.pollingPlcType;
                    }
                };
                DevicePropertyComponent.prototype.isValid = function (device) {
                    if (!device.name || !device.type) {
                        return false;
                    }
                    return (this.data.exist.find(function (n) { return n === device.name; })) ? false : true;
                };
                DevicePropertyComponent.prototype.isSecurityMode = function (sec) {
                    if (JSON.stringify(this.mode) === JSON.stringify(sec)) {
                        return true;
                    }
                    else {
                        return false;
                    }
                };
                DevicePropertyComponent.prototype.getSecurity = function () {
                    if (!this.propertyExpanded || (this.data.device.type !== _models_device__WEBPACK_IMPORTED_MODULE_5__["DeviceType"].OPCUA && this.data.device.type !== _models_device__WEBPACK_IMPORTED_MODULE_5__["DeviceType"].MQTTclient)) {
                        return null;
                    }
                    else {
                        if (this.data.device.type === _models_device__WEBPACK_IMPORTED_MODULE_5__["DeviceType"].OPCUA) {
                            if (this.securityRadio || this.security.username || this.security.password) {
                                var result = { mode: this.securityRadio, uid: this.security.username, pwd: this.security.password };
                                return result;
                            }
                        }
                        else if (this.data.device.type === _models_device__WEBPACK_IMPORTED_MODULE_5__["DeviceType"].MQTTclient) {
                            if (this.security.clientId || this.security.username || this.security.password) {
                                var result = { clientId: this.security.clientId, uid: this.security.username, pwd: this.security.password };
                                return result;
                            }
                        }
                        return null;
                    }
                };
                DevicePropertyComponent.prototype.setSecurity = function (security) {
                    if (security && security !== 'null') {
                        var value = JSON.parse(security);
                        this.mode = value.mode;
                        this.security.username = value.uid;
                        this.security.password = value.pwd;
                        this.security.clientId = value.clientId;
                        this.security.grant_type = value.gt;
                        if (this.panelProperty) {
                            this.panelProperty.open();
                        }
                    }
                };
                DevicePropertyComponent.prototype.securityModeToString = function (mode) {
                    var secMode = _models_device__WEBPACK_IMPORTED_MODULE_5__["MessageSecurityMode"];
                    var result = '';
                    if (mode === secMode.NONE) {
                        this.translateService.get('device.security-none').subscribe(function (txt) { result = txt; });
                    }
                    else if (mode === secMode.SIGN) {
                        this.translateService.get('device.security-sign').subscribe(function (txt) { result = txt; });
                    }
                    else if (mode === secMode.SIGNANDENCRYPT) {
                        this.translateService.get('device.security-signandencrypt').subscribe(function (txt) { result = txt; });
                    }
                    return result;
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatExpansionPanel"]),
                    __metadata("design:type", _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatExpansionPanel"])
                ], DevicePropertyComponent.prototype, "panelProperty", void 0);
                DevicePropertyComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'app-device-property',
                        template: __webpack_require__(/*! ./device-property.component.html */ "./app/device/device-property/device-property.component.html"),
                        styles: [__webpack_require__(/*! ./device-property.component.css */ "./app/device/device-property/device-property.component.css")]
                    }),
                    __param(4, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MAT_DIALOG_DATA"])),
                    __metadata("design:paramtypes", [_services_hmi_service__WEBPACK_IMPORTED_MODULE_3__["HmiService"],
                    _ngx_translate_core__WEBPACK_IMPORTED_MODULE_2__["TranslateService"],
                    _services_app_service__WEBPACK_IMPORTED_MODULE_4__["AppService"],
                    _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialogRef"], Object])
                ], DevicePropertyComponent);
                return DevicePropertyComponent;
            }());



            /***/
}),

/***/ "./app/device/device-tag.dialog.html":
/*!*******************************************!*\
  !*** ./app/device/device-tag.dialog.html ***!
  \*******************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div style=\"min-width:930px; position: relative;\">\n    <h1 mat-dialog-title style=\"display:inline-block;cursor: move;\" mat-dialog-draggable>{{'device-tag-dialog-title' | translate}}</h1>\n    <mat-icon (click)=\"onNoClick()\" style=\"float:right;margin-right:-10px;margin-top:-10px;cursor:pointer;color:gray;\">\n        clear\n    </mat-icon>\n    <mat-table #table [dataSource]=\"dataSource\" matSort style=\"height:620px\">\n        <!-- Checkbox Column -->\n        <ng-container matColumnDef=\"toogle\">\n            <mat-header-cell *matHeaderCellDef style=\"padding-left: 5px;padding-right: 10px;\">\n                <button mat-icon-button (click)=\"onClearSelection()\" class=\"remove\">\n                    <mat-icon>clear</mat-icon>\n                </button>\n            </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\" style=\"padding-left: 15px;\">\n                <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"onToogle(element)\" [(ngModel)]=\"element.checked\">\n                </mat-checkbox>\n            </mat-cell>\n        </ng-container>        \n        <!-- Name Column -->\n        <ng-container matColumnDef=\"name\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header class=\"my-header-filter\"> \n                {{'device.list-name' | translate}}\n                <input (click)=\"$event.stopPropagation()\" [formControl]=\"nameFilter\" style=\"width: 200px\" class=\"my-header-filter-input\" type=\"text\">\n            </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\n        </ng-container>\n        <!-- Address Column -->\n        <ng-container matColumnDef=\"address\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header class=\"my-header-filter\"> \n                {{'device.list-address' | translate}} \n                <input (click)=\"$event.stopPropagation()\" [formControl]=\"addressFilter\" style=\"width: 360px\" class=\"my-header-filter-input\" type=\"text\">\n            </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\"> {{element.address}} </mat-cell>\n        </ng-container>\n        <!-- Device Column -->\n        <ng-container matColumnDef=\"device\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header class=\"my-header-filter\"> \n                {{'device.list-device' | translate}} \n                <input (click)=\"$event.stopPropagation()\" [formControl]=\"deviceFilter\" style=\"width: 200px\" class=\"my-header-filter-input\" type=\"text\">\n            </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\"> {{element.device}} </mat-cell>\n        </ng-container>\n        <!-- Select Column -->\n        <ng-container matColumnDef=\"select\">\n            <mat-header-cell *matHeaderCellDef style=\"padding-right: 0px;\">\n            </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\" style=\"padding-right: 0px;\">\n                <button mat-icon-button (click)=\"onSelect(element)\">\n                    <mat-icon>check</mat-icon>\n                </button>\n            </mat-cell>\n        </ng-container>\n\n        <mat-header-row *matHeaderRowDef=\"defColumns\" style=\"min-height: 30px;\"></mat-header-row>\n        <mat-row *matRowDef=\"let row; columns: defColumns;\"></mat-row>\n    </mat-table>\n    <mat-paginator [pageSizeOptions]=\"[25, 100]\" style=\"float: left;\"></mat-paginator>\n\n    <div mat-dialog-actions class=\"dialog-action\" style=\"padding-top: 30px;\">\n        <button mat-raised-button (click)=\"onNoClick()\" cdkFocusInitial>{{'dlg.cancel' | translate}}</button>\n        <button mat-raised-button color=\"primary\" (click)=\"onOkClick()\">{{'dlg.ok' | translate}}</button>\n    </div>\n</div>"

            /***/
}),

/***/ "./app/device/device.component.css":
/*!*****************************************!*\
  !*** ./app/device/device.component.css ***!
  \*****************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ".header-panel {\n    /* z-index: 9999 !important; */\n    top: 0px;\n    left: 0px;\n    background-color: var(--headerBackground);\n    color: var(--headerColor);\n    height: 36px;\n    width: 100%;\n    text-align: center;\n    line-height: 36px;\n    border-bottom: 1px solid var(--headerBorder);\n}\n\n.device-btn {\n    height: 34px;\n    width: 34px;\n    min-width: unset !important;\n    padding:unset !important;\n    line-height: 34px;\n    margin-left: 5px;\n    margin-right: 5px;\n    float: right;\n}\n\n.device-btn mat-icon {\n    font-size: 24px;\n    height: unset;\n    width: unset;\n}\n\n.work-panel {\n    position: absolute;\n    top: 37px;\n    left: 0px;\n    right: 0px;\n    bottom: 0px;\n    overflow: auto;\n    background-color: var(--workPanelBackground);\n}\n\n.mat-table {\n    overflow: auto;\n    /* min-width: 1500px; */\n    height: 100%;\n}\n\n.mat-header-cell.mat-sort-header-sorted {\n    /* color: black; */\n}\n\n.mat-row {\n    min-height: 34px;\n    height: 34px;\n    border-bottom-color: rgba(0,0,0,0.06);\n}\n\n.mat-cell {\n    font-size: 13px;\n}\n\n.mat-cell /deep/ .mat-checkbox-inner-container {\n    height: 16px;\n    width: 16px;\n    margin-left: 2px;\n}\n\n.mat-header-row {\n    top: 0;\n    position: -webkit-sticky;\n    position: sticky;\n    z-index: 1;\n    /* background-color: rgba(0,0,0,0.7); */\n    /* background-color: rgb(30, 30, 30); */\n    /* color: white; */\n}\n\n.mat-header-cell {\n    /* color: white; */\n    font-size: 13px;\n}\n\n.mat-column-toogle {\n    overflow: visible;\n    flex: 0 0 40px;\n}\n\n.mat-column-name {\n    flex: 0 0 220px;\n}\n\n.mat-column-address {\n    flex: 0 0 380px;\n}\n\n.mat-column-device {\n    flex: 0 0 220px;\n}\n\n.mat-column-select {\n    flex: 0 0 40px;\n}\n\n.my-header-filter /deep/ .mat-sort-header-button {\n    display: block;\n    text-align: left;\n    margin-top: 5px;\n}\n\n.my-header-filter /deep/ .mat-sort-header-arrow {\n    /* color: white; */\n    top: -12px;\n    right: 20px;\n}\n\n.my-header-filter-input {\n    display: block; \n    margin-top: 4px;\n    margin-bottom: 6px;\n    /* color: white; */\n    padding: 3px 1px 3px 2px;\n    border-radius: 2px;\n    border: 1px solid var(--formInputBackground);\n    background-color: var(--formInputBackground);\n    color: var(--formInputColor);\n}\n\n.my-header-filter-input:focus {\n    padding: 3px 1px 3px 2px;\n    border: 1px solid var(--formInputBorderFocus);\n    background-color: var(--formInputBackgroundFocus);\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGV2aWNlL2RldmljZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksOEJBQThCO0lBQzlCLFFBQVE7SUFDUixTQUFTO0lBQ1QseUNBQXlDO0lBQ3pDLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1osV0FBVztJQUNYLGtCQUFrQjtJQUNsQixpQkFBaUI7SUFDakIsNENBQTRDO0FBQ2hEOztBQUVBO0lBQ0ksWUFBWTtJQUNaLFdBQVc7SUFDWCwyQkFBMkI7SUFDM0Isd0JBQXdCO0lBQ3hCLGlCQUFpQjtJQUNqQixnQkFBZ0I7SUFDaEIsaUJBQWlCO0lBQ2pCLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsYUFBYTtJQUNiLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsU0FBUztJQUNULFNBQVM7SUFDVCxVQUFVO0lBQ1YsV0FBVztJQUNYLGNBQWM7SUFDZCw0Q0FBNEM7QUFDaEQ7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsdUJBQXVCO0lBQ3ZCLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsWUFBWTtJQUNaLHFDQUFxQztBQUN6Qzs7QUFFQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osV0FBVztJQUNYLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLE1BQU07SUFDTix3QkFBZ0I7SUFBaEIsZ0JBQWdCO0lBQ2hCLFVBQVU7SUFDVix1Q0FBdUM7SUFDdkMsdUNBQXVDO0lBQ3ZDLGtCQUFrQjtBQUN0Qjs7QUFDQTtJQUNJLGtCQUFrQjtJQUNsQixlQUFlO0FBQ25COztBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxlQUFlO0FBQ25COztBQUVBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksY0FBYztJQUNkLGdCQUFnQjtJQUNoQixlQUFlO0FBQ25COztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLFVBQVU7SUFDVixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsZUFBZTtJQUNmLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsd0JBQXdCO0lBQ3hCLGtCQUFrQjtJQUNsQiw0Q0FBNEM7SUFDNUMsNENBQTRDO0lBQzVDLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLHdCQUF3QjtJQUN4Qiw2Q0FBNkM7SUFDN0MsaURBQWlEO0FBQ3JEIiwiZmlsZSI6InNyYy9hcHAvZGV2aWNlL2RldmljZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmhlYWRlci1wYW5lbCB7XG4gICAgLyogei1pbmRleDogOTk5OSAhaW1wb3J0YW50OyAqL1xuICAgIHRvcDogMHB4O1xuICAgIGxlZnQ6IDBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1oZWFkZXJCYWNrZ3JvdW5kKTtcbiAgICBjb2xvcjogdmFyKC0taGVhZGVyQ29sb3IpO1xuICAgIGhlaWdodDogMzZweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbGluZS1oZWlnaHQ6IDM2cHg7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHZhcigtLWhlYWRlckJvcmRlcik7XG59XG5cbi5kZXZpY2UtYnRuIHtcbiAgICBoZWlnaHQ6IDM0cHg7XG4gICAgd2lkdGg6IDM0cHg7XG4gICAgbWluLXdpZHRoOiB1bnNldCAhaW1wb3J0YW50O1xuICAgIHBhZGRpbmc6dW5zZXQgIWltcG9ydGFudDtcbiAgICBsaW5lLWhlaWdodDogMzRweDtcbiAgICBtYXJnaW4tbGVmdDogNXB4O1xuICAgIG1hcmdpbi1yaWdodDogNXB4O1xuICAgIGZsb2F0OiByaWdodDtcbn1cbiAgXG4uZGV2aWNlLWJ0biBtYXQtaWNvbiB7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGhlaWdodDogdW5zZXQ7XG4gICAgd2lkdGg6IHVuc2V0O1xufVxuXG4ud29yay1wYW5lbCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMzdweDtcbiAgICBsZWZ0OiAwcHg7XG4gICAgcmlnaHQ6IDBweDtcbiAgICBib3R0b206IDBweDtcbiAgICBvdmVyZmxvdzogYXV0bztcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS13b3JrUGFuZWxCYWNrZ3JvdW5kKTtcbn1cblxuLm1hdC10YWJsZSB7XG4gICAgb3ZlcmZsb3c6IGF1dG87XG4gICAgLyogbWluLXdpZHRoOiAxNTAwcHg7ICovXG4gICAgaGVpZ2h0OiAxMDAlO1xufVxuICBcbi5tYXQtaGVhZGVyLWNlbGwubWF0LXNvcnQtaGVhZGVyLXNvcnRlZCB7XG4gICAgLyogY29sb3I6IGJsYWNrOyAqL1xufVxuXG4ubWF0LXJvdyB7XG4gICAgbWluLWhlaWdodDogMzRweDtcbiAgICBoZWlnaHQ6IDM0cHg7XG4gICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmdiYSgwLDAsMCwwLjA2KTtcbn1cblxuLm1hdC1jZWxsIHtcbiAgICBmb250LXNpemU6IDEzcHg7XG59XG5cbi5tYXQtY2VsbCAvZGVlcC8gLm1hdC1jaGVja2JveC1pbm5lci1jb250YWluZXIge1xuICAgIGhlaWdodDogMTZweDtcbiAgICB3aWR0aDogMTZweDtcbiAgICBtYXJnaW4tbGVmdDogMnB4O1xufVxuXG4ubWF0LWhlYWRlci1yb3cge1xuICAgIHRvcDogMDtcbiAgICBwb3NpdGlvbjogc3RpY2t5O1xuICAgIHotaW5kZXg6IDE7XG4gICAgLyogYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwwLjcpOyAqL1xuICAgIC8qIGJhY2tncm91bmQtY29sb3I6IHJnYigzMCwgMzAsIDMwKTsgKi9cbiAgICAvKiBjb2xvcjogd2hpdGU7ICovXG59XG4ubWF0LWhlYWRlci1jZWxsIHtcbiAgICAvKiBjb2xvcjogd2hpdGU7ICovXG4gICAgZm9udC1zaXplOiAxM3B4O1xufVxuXG4ubWF0LWNvbHVtbi10b29nbGUge1xuICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuICAgIGZsZXg6IDAgMCA0MHB4O1xufVxuXG4ubWF0LWNvbHVtbi1uYW1lIHtcbiAgICBmbGV4OiAwIDAgMjIwcHg7XG59XG5cbi5tYXQtY29sdW1uLWFkZHJlc3Mge1xuICAgIGZsZXg6IDAgMCAzODBweDtcbn1cblxuLm1hdC1jb2x1bW4tZGV2aWNlIHtcbiAgICBmbGV4OiAwIDAgMjIwcHg7XG59XG5cbi5tYXQtY29sdW1uLXNlbGVjdCB7XG4gICAgZmxleDogMCAwIDQwcHg7XG59XG5cbi5teS1oZWFkZXItZmlsdGVyIC9kZWVwLyAubWF0LXNvcnQtaGVhZGVyLWJ1dHRvbiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICBtYXJnaW4tdG9wOiA1cHg7XG59XG5cbi5teS1oZWFkZXItZmlsdGVyIC9kZWVwLyAubWF0LXNvcnQtaGVhZGVyLWFycm93IHtcbiAgICAvKiBjb2xvcjogd2hpdGU7ICovXG4gICAgdG9wOiAtMTJweDtcbiAgICByaWdodDogMjBweDtcbn1cblxuLm15LWhlYWRlci1maWx0ZXItaW5wdXQge1xuICAgIGRpc3BsYXk6IGJsb2NrOyBcbiAgICBtYXJnaW4tdG9wOiA0cHg7XG4gICAgbWFyZ2luLWJvdHRvbTogNnB4O1xuICAgIC8qIGNvbG9yOiB3aGl0ZTsgKi9cbiAgICBwYWRkaW5nOiAzcHggMXB4IDNweCAycHg7XG4gICAgYm9yZGVyLXJhZGl1czogMnB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWZvcm1JbnB1dEJhY2tncm91bmQpO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWZvcm1JbnB1dEJhY2tncm91bmQpO1xuICAgIGNvbG9yOiB2YXIoLS1mb3JtSW5wdXRDb2xvcik7XG59XG5cbi5teS1oZWFkZXItZmlsdGVyLWlucHV0OmZvY3VzIHtcbiAgICBwYWRkaW5nOiAzcHggMXB4IDNweCAycHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tZm9ybUlucHV0Qm9yZGVyRm9jdXMpO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWZvcm1JbnB1dEJhY2tncm91bmRGb2N1cyk7XG59Il19 */"

            /***/
}),

/***/ "./app/device/device.component.html":
/*!******************************************!*\
  !*** ./app/device/device.component.html ***!
  \******************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div style=\"width: 100%;height: 100% !important;position: absolute;\">\n    <div class=\"header-panel\">\n        {{'device.list-title' | translate}}\n    </div>\n    <diV class=\"work-panel\">\n        <app-device-list [hidden]=\"showMode === 'map'\" #devicelist (goto)=\"gotoMap()\"></app-device-list>\n        <app-device-map [hidden]=\"showMode === 'tags'\" #devicemap (goto)=\"gotoList($event)\"></app-device-map>\n    </diV>\n</div>\n\n<button mat-fab color=\"primary\" (click)=\"addItem()\" class=\"fab-add\">\n    <mat-icon class=\"\">add</mat-icon>\n</button>"

            /***/
}),

/***/ "./app/device/device.component.ts":
/*!****************************************!*\
  !*** ./app/device/device.component.ts ***!
  \****************************************/
/*! exports provided: DeviceComponent, DeviceTagDialog */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeviceComponent", function () { return DeviceComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeviceTagDialog", function () { return DeviceTagDialog; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "../node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "../node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _device_list_device_list_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./device-list/device-list.component */ "./app/device/device-list/device-list.component.ts");
/* harmony import */ var _device_map_device_map_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./device-map/device-map.component */ "./app/device/device-map/device-map.component.ts");
/* harmony import */ var _services_project_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../_services/project.service */ "./app/_services/project.service.ts");
/* harmony import */ var _services_hmi_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../_services/hmi.service */ "./app/_services/hmi.service.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };
            var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
                return function (target, key) { decorator(target, key, paramIndex); }
            };








            var DeviceComponent = /** @class */ (function () {
                function DeviceComponent(projectService, hmiService) {
                    this.projectService = projectService;
                    this.hmiService = hmiService;
                    this.showMode = 'map';
                }
                DeviceComponent.prototype.ngOnInit = function () {
                    var _this = this;
                    this.subscriptionLoad = this.projectService.onLoadHmi.subscribe(function (res) {
                        _this.deviceMap.loadCurrentProject();
                        // this.deviceList.loadCurrentProject();
                    });
                    this.subscriptionDeviceChange = this.hmiService.onDeviceChanged.subscribe(function (event) {
                        _this.deviceMap.setDeviceStatus(event);
                    });
                    this.subscriptionVariableChange = this.hmiService.onVariableChanged.subscribe(function (event) {
                        _this.deviceList.updateDeviceValue();
                    });
                    this.subscriptionSave = this.projectService.onSaveCurrent.subscribe(function (mode) {
                        if (mode === _services_project_service__WEBPACK_IMPORTED_MODULE_5__["SaveMode"].SaveAs) {
                            _this.projectService.saveAs();
                        }
                        else if (mode === _services_project_service__WEBPACK_IMPORTED_MODULE_5__["SaveMode"].Save) {
                            _this.projectService.save();
                        }
                    });
                    this.askStatusTimer = setInterval(function () {
                        _this.hmiService.askDeviceStatus();
                    }, 10000);
                    this.hmiService.askDeviceStatus();
                };
                DeviceComponent.prototype.ngAfterViewInit = function () {
                    this.showMode = 'map';
                };
                DeviceComponent.prototype.ngOnDestroy = function () {
                    // this.checkToSave();
                    try {
                        if (this.subscriptionLoad) {
                            this.subscriptionLoad.unsubscribe();
                        }
                        if (this.subscriptionDeviceChange) {
                            this.subscriptionDeviceChange.unsubscribe();
                        }
                        if (this.subscriptionVariableChange) {
                            this.subscriptionVariableChange.unsubscribe();
                        }
                        if (this.subscriptionSave) {
                            this.subscriptionSave.unsubscribe();
                        }
                    }
                    catch (e) {
                    }
                    try {
                        clearInterval(this.askStatusTimer);
                        this.askStatusTimer = null;
                    }
                    catch (_a) { }
                };
                DeviceComponent.prototype.show = function (mode) {
                    // this.checkToSave();
                    this.showMode = mode;
                    if (this.showMode === 'tags') {
                        this.deviceList.updateDeviceValue();
                        try {
                            if (Object.values(this.deviceMap.devicesValue()).length > 0) {
                                this.deviceList.setSelectedDevice(this.deviceMap.devicesValue()[0]);
                            }
                        }
                        catch (e) {
                        }
                    }
                };
                DeviceComponent.prototype.gotoMap = function () {
                    this.show('map');
                };
                DeviceComponent.prototype.gotoList = function (device) {
                    this.show('tags');
                    this.deviceList.setSelectedDevice(device);
                };
                DeviceComponent.prototype.addItem = function () {
                    if (this.showMode === 'tags') {
                        this.deviceList.onAddTag();
                    }
                    else if (this.showMode === 'map') {
                        this.deviceMap.addDevice();
                    }
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('devicelist'),
                    __metadata("design:type", _device_list_device_list_component__WEBPACK_IMPORTED_MODULE_3__["DeviceListComponent"])
                ], DeviceComponent.prototype, "deviceList", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('devicemap'),
                    __metadata("design:type", _device_map_device_map_component__WEBPACK_IMPORTED_MODULE_4__["DeviceMapComponent"])
                ], DeviceComponent.prototype, "deviceMap", void 0);
                DeviceComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'app-device',
                        template: __webpack_require__(/*! ./device.component.html */ "./app/device/device.component.html"),
                        styles: [__webpack_require__(/*! ./device.component.css */ "./app/device/device.component.css")]
                    }),
                    __metadata("design:paramtypes", [_services_project_service__WEBPACK_IMPORTED_MODULE_5__["ProjectService"],
                    _services_hmi_service__WEBPACK_IMPORTED_MODULE_6__["HmiService"]])
                ], DeviceComponent);
                return DeviceComponent;
            }());

            var DeviceTagDialog = /** @class */ (function () {
                function DeviceTagDialog(dialogRef, data) {
                    var _this = this;
                    this.dialogRef = dialogRef;
                    this.data = data;
                    this.dataSource = new _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatTableDataSource"]([]);
                    this.nameFilter = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]();
                    this.addressFilter = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]();
                    this.deviceFilter = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]();
                    this.tags = [];
                    this.filteredValues = {
                        name: '', address: '', device: ''
                    };
                    this.defColumns = ['toogle', 'name', 'address', 'device', 'select'];
                    if (this.data.devices) {
                        this.data.devices.forEach(function (device) {
                            if (device.tags) {
                                Object.values(device.tags).forEach(function (t) {
                                    return _this.tags.push({
                                        id: t.id, name: t.name, address: t.address,
                                        device: device.name, checked: (t.id === _this.data.variableId), error: null
                                    });
                                });
                            }
                        });
                    }
                    this.dataSource = new _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatTableDataSource"](this.tags);
                }
                DeviceTagDialog.prototype.ngOnInit = function () {
                    var _this = this;
                    this.nameFilter.valueChanges.subscribe(function (nameFilterValue) {
                        _this.filteredValues['name'] = nameFilterValue;
                        _this.dataSource.filter = JSON.stringify(_this.filteredValues);
                    });
                    this.addressFilter.valueChanges.subscribe(function (addressFilterValue) {
                        _this.filteredValues['address'] = addressFilterValue;
                        _this.dataSource.filter = JSON.stringify(_this.filteredValues);
                    });
                    this.deviceFilter.valueChanges.subscribe(function (deviceFilterValue) {
                        _this.filteredValues['device'] = deviceFilterValue;
                        _this.dataSource.filter = JSON.stringify(_this.filteredValues);
                    });
                    this.dataSource.filterPredicate = this.customFilterPredicate();
                };
                DeviceTagDialog.prototype.customFilterPredicate = function () {
                    var myFilterPredicate = function (data, filter) {
                        var searchString = JSON.parse(filter);
                        return (!data.name || data.name.toString().trim().toLowerCase().indexOf(searchString.name.toLowerCase()) !== -1) &&
                            (!data.address || data.address.toString().trim().toLowerCase().indexOf(searchString.address.toLowerCase()) !== -1) &&
                            data.device.toString().trim().toLowerCase().indexOf(searchString.device.toLowerCase()) !== -1;
                    };
                    return myFilterPredicate;
                };
                DeviceTagDialog.prototype.ngAfterViewInit = function () {
                    this.dataSource.paginator = this.paginator;
                    this.dataSource.sort = this.sort;
                    // this.dataSource.data = this.data.tags;
                };
                DeviceTagDialog.prototype.onToogle = function (element) {
                    if (element.checked) {
                        this.dataSource.data.forEach(function (e) {
                            if (e.id !== element.id) {
                                e.checked = false;
                            }
                        });
                    }
                };
                DeviceTagDialog.prototype.onClearSelection = function () {
                    this.dataSource.data.forEach(function (e) {
                        e.checked = false;
                    });
                };
                DeviceTagDialog.prototype.onNoClick = function () {
                    this.dialogRef.close();
                };
                DeviceTagDialog.prototype.onOkClick = function () {
                    var _this = this;
                    this.data.variableId = null;
                    this.dataSource.data.forEach(function (e) {
                        if (e.checked) {
                            _this.data.variableId = e.id;
                        }
                    });
                    this.dialogRef.close(this.data);
                };
                DeviceTagDialog.prototype.onSelect = function (element) {
                    this.data.variableId = element.id;
                    this.dialogRef.close(this.data);
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatTable"]),
                    __metadata("design:type", _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatTable"])
                ], DeviceTagDialog.prototype, "table", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatSort"]),
                    __metadata("design:type", _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatSort"])
                ], DeviceTagDialog.prototype, "sort", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatPaginator"]),
                    __metadata("design:type", _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatPaginator"])
                ], DeviceTagDialog.prototype, "paginator", void 0);
                DeviceTagDialog = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'device-tag-dialog',
                        template: __webpack_require__(/*! ./device-tag.dialog.html */ "./app/device/device-tag.dialog.html"),
                        styles: [__webpack_require__(/*! ./device.component.css */ "./app/device/device.component.css")]
                    }),
                    __param(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MAT_DIALOG_DATA"])),
                    __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialogRef"], Object])
                ], DeviceTagDialog);
                return DeviceTagDialog;
            }());



            /***/
}),

/***/ "./app/device/tag-property/tag-property.component.css":
/*!************************************************************!*\
  !*** ./app/device/tag-property/tag-property.component.css ***!
  \************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RldmljZS90YWctcHJvcGVydHkvdGFnLXByb3BlcnR5LmNvbXBvbmVudC5jc3MifQ== */"

            /***/
}),

/***/ "./app/device/tag-property/tag-property.component.html":
/*!*************************************************************!*\
  !*** ./app/device/tag-property/tag-property.component.html ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div style=\"width: 100%;position: relative;\">\n    <div [ngSwitch]=\"dialogType\">\n        <div *ngSwitchCase=\"TypeOfDialog.Standard\">\n            <h1 mat-dialog-title style=\"display:inline-block; cursor:move; padding-top: 15px\" mat-dialog-draggable>\n                {{'device.tag-property-title' | translate}}\n            </h1>\n            <mat-icon (click)=\"onNoClick()\" style=\"float:right;cursor:pointer;color:gray;position: relative; top: 10px; right: 0px\">clear</mat-icon>\n            <div style=\"max-height: 540px; overflow-y: auto; overflow-x: hidden;\">\n                <div style=\"display: block;\">\n                    <div class=\"my-form-field\" style=\"display: block;margin-bottom: 10px;\">\n                        <span>{{'device.tag-property-device' | translate}}</span>\n                        <mat-select [(value)]=\"data.device.name\" style=\"width: 350px\" [disabled]=\"true\">\n                            <mat-option *ngFor=\"let device of devicesValue()\" [value]=\"device.name\">\n                                {{ device.name }}\n                            </mat-option>\n                        </mat-select>\n                    </div>\n                    <div class=\"my-form-field\" style=\"display: block;margin-bottom: 10px;\">\n                        <span>{{'device.tag-property-name' | translate}}</span>\n                        <input [(ngModel)]=\"data.tag.name\" style=\"width: 350px\" type=\"text\" (input)=\"onCheckValue($event)\">\n                    </div>\n                    <div *ngIf=\"isSiemensS7()\">\n                        <div class=\"my-form-field\" style=\"display: block;margin-bottom: 10px;\">\n                            <span>{{'device.tag-property-type' | translate}}</span>\n                            <mat-select [(value)]=\"data.tag.type\" style=\"width: 350px\">\n                                <mat-option *ngFor=\"let type of tagType | enumToArray\" [value]=\"type.key\">\n                                    {{ type.value }}\n                                </mat-option>\n                            </mat-select>\n                        </div>\n                        <div class=\"my-form-field\" style=\"display: block;margin-bottom: 10px;\">\n                            <span>{{'device.tag-property-address' | translate}}</span>\n                            <input [(ngModel)]=\"data.tag.address\" style=\"width: 350px\" type=\"text\">\n                        </div>\n                        <!-- <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;padding-right: 10px;\">\n                            <span>{{'device.tag-property-min' | translate}}</span>\n                            <input numberOnly [(ngModel)]=\"data.tag.min\" style=\"width: 80px\" type=\"text\">\n                        </div>\n                        <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;padding-right: 10px;\">\n                            <span>{{'device.tag-property-max' | translate}}</span>\n                            <input numberOnly [(ngModel)]=\"data.tag.max\" style=\"width: 80px\" type=\"text\">\n                        </div> -->\n                    </div>\n                    <div *ngIf=\"isModbus()\">\n                        <div class=\"my-form-field\" style=\"display: block;margin-bottom: 10px;\">\n                            <span>{{'device.tag-property-register' | translate}}</span>\n                            <mat-select [(value)]=\"data.tag.memaddress\" style=\"width: 350px\" #memaddress (selectionChange)=\"checkMemAddress(data.tag.memaddress)\">\n                                <mat-option *ngFor=\"let type of memAddress | enumToArray\" [value]=\"type.value\">\n                                    {{ type.key }}\n                                </mat-option>\n                            </mat-select>\n                        </div>                \n                        <div class=\"my-form-field\" style=\"display: block;margin-bottom: 10px;\">\n                            <span>{{'device.tag-property-type' | translate}}</span>\n                            <mat-select [(value)]=\"data.tag.type\" style=\"width: 350px\" [disabled]=\"!memaddress.value || memaddress.value == '000000' || memaddress.value == '100000'\">\n                                <mat-option *ngFor=\"let type of tagType | enumToArray\" [value]=\"type.key\">\n                                    {{ type.value }}\n                                </mat-option>\n                            </mat-select>\n                        </div>\n                        <div class=\"my-form-field\" style=\"display: block;margin-bottom: 10px;\">\n                            <span>{{'device.tag-property-address-offset' | translate}}</span>\n                            <input numberOnly [(ngModel)]=\"data.tag.address\" style=\"width: 350px\" type=\"text\" [disabled]=\"!memaddress.value\">\n                        </div>\n                        <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;padding-right: 10px;\">\n                            <span>{{'device.tag-property-divisor' | translate}}</span>\n                            <input numberOnly [(ngModel)]=\"data.tag.divisor\" style=\"width: 80px\" type=\"text\">\n                        </div>                        \n                        <!-- <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;padding-right: 10px;\">\n                            <span>{{'device.tag-property-min' | translate}}</span>\n                            <input numberOnly [(ngModel)]=\"data.tag.min\" style=\"width: 80px\" type=\"text\">\n                        </div>\n                        <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;padding-right: 10px;\">\n                            <span>{{'device.tag-property-max' | translate}}</span>\n                            <input numberOnly [(ngModel)]=\"data.tag.max\" style=\"width: 80px\" type=\"text\">\n                        </div> -->\n                    </div>\n                    <div class=\"error\" *ngIf=\"error\">\n                        <span>{{error}}</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div *ngSwitchCase=\"TypeOfDialog.Simple\">\n            <h1 mat-dialog-title style=\"display:inline-block; cursor:move; padding-top: 15px\" mat-dialog-draggable>\n                {{'device.tag-property-title' | translate}}\n            </h1>\n            <mat-icon (click)=\"onNoClick()\" style=\"float:right;cursor:pointer;color:gray;position: relative; top: 10px; right: 0px\">clear</mat-icon>\n            <div style=\"max-height: 540px; overflow: hidden;\">\n                <div style=\"display: block;\">\n                    <div class=\"my-form-field\" style=\"display: block;margin-bottom: 10px;\">\n                        <span>{{'device.tag-property-device' | translate}}</span>\n                        <mat-select [(value)]=\"data.device.name\" style=\"width: 550px\" [disabled]=\"true\">\n                            <mat-option *ngFor=\"let device of devicesValue()\" [value]=\"device.name\">\n                                {{ device.name }}\n                            </mat-option>\n                        </mat-select>\n                    </div>\n                    <div class=\"my-form-field\" style=\"display: block;margin-bottom: 10px;\">\n                        <span>{{'device.tag-property-obj-name' | translate}}</span>\n                        <input [(ngModel)]=\"data.tag.name\" style=\"width: 550px\" type=\"text\" (input)=\"onCheckValue($event)\">\n                    </div>\n                    <div class=\"my-form-field\" style=\"display: block;margin-bottom: 10px;\" *ngIf=\"!isInternal()\">\n                        <span>{{'device.tag-property-path' | translate}}</span>\n                        <input [(ngModel)]=\"data.tag.address\" autocomplete=\"off\" style=\"width: 550px\" type=\"text\" (input)=\"onCheckValue($event)\">\n                    </div>\n                </div>\n                <div class=\"error\" *ngIf=\"error\" style=\"display: block; color: red;\">\n                    <span>{{error}}</span>\n                </div>\n            </div>\n        </div>\n        <div *ngSwitchCase=\"TypeOfDialog.Tree\">\n            <h1 mat-dialog-title style=\"display:inline-block; cursor:move; padding-top: 15px\" mat-dialog-draggable>\n                {{'device.browsetag-property-title' | translate}}\n            </h1>\n            <mat-icon (click)=\"onNoClick()\" style=\"float:right;cursor:pointer;color:gray;position: relative; top: 10px; right: 0px\">clear</mat-icon>\n            <div style=\"overflow-y: auto; overflow-x: hidden;\">\n                <ngx-treetable #treetable [config]=\"config\" (expand)=\"queryNext($event)\"></ngx-treetable>\n            </div>\n        </div>\n    </div>\n    <div mat-dialog-actions class=\"dialog-action\">\n        <button mat-raised-button (click)=\"onNoClick()\">{{'dlg.cancel' | translate}}</button>\n        <button mat-raised-button [disabled]=\"!isValidate()\" color=\"primary\" (click)=\"onOkClick()\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\n    </div>\n</div>"

            /***/
}),

/***/ "./app/device/tag-property/tag-property.component.ts":
/*!***********************************************************!*\
  !*** ./app/device/tag-property/tag-property.component.ts ***!
  \***********************************************************/
/*! exports provided: TagPropertyComponent, EditTagDialogType */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TagPropertyComponent", function () { return TagPropertyComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditTagDialogType", function () { return EditTagDialogType; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "../node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _models_device__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../_models/device */ "./app/_models/device.ts");
/* harmony import */ var _gui_helpers_treetable_treetable_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../gui-helpers/treetable/treetable.component */ "./app/gui-helpers/treetable/treetable.component.ts");
/* harmony import */ var _services_hmi_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../_services/hmi.service */ "./app/_services/hmi.service.ts");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ngx-translate/core */ "../node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js");
/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../_helpers/utils */ "./app/_helpers/utils.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };
            var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
                return function (target, key) { decorator(target, key, paramIndex); }
            };







            var TagPropertyComponent = /** @class */ (function () {
                function TagPropertyComponent(hmiService, translateService, dialogRef, data) {
                    var _this = this;
                    this.hmiService = hmiService;
                    this.translateService = translateService;
                    this.dialogRef = dialogRef;
                    this.data = data;
                    this.existing = [];
                    this.TypeOfDialog = EditTagDialogType;
                    this.dialogType = EditTagDialogType.Standard;
                    this.config = { width: '100%', height: '600px', type: '' };
                    this.memAddress = { 'Coil Status (Read/Write 000001-065536)': '000000', 'Digital Inputs (Read 100001-165536)': '100000', 'Input Registers (Read  300001-365536)': '300000', 'Holding Registers (Read/Write  400001-465535)': '400000' };
                    this.tagType = _models_device__WEBPACK_IMPORTED_MODULE_2__["TagType"];
                    if (this.isOpcua() || this.isBACnet() || this.isWebApi()) {
                        this.dialogType = EditTagDialogType.Tree;
                        this.config.height = '640px';
                        this.config.width = '1000px';
                        this.config.type = (this.isWebApi()) ? 'todefine' : '';
                    }
                    else if (this.isExternal()) {
                        this.dialogType = EditTagDialogType.Simple;
                    }
                    else if (this.isInternal()) {
                        this.dialogType = EditTagDialogType.Simple;
                    }
                    else {
                        if (this.isModbus()) {
                            this.tagType = _models_device__WEBPACK_IMPORTED_MODULE_2__["ModbusTagType"];
                        }
                        this.config.height = '0px';
                        Object.keys(this.data.device.tags).forEach(function (key) {
                            var tag = _this.data.device.tags[key];
                            if (tag.id) {
                                if (tag.id !== _this.data.tag.id) {
                                    _this.existing.push(tag.name);
                                }
                            }
                            else if (tag.name !== _this.data.tag.name) {
                                _this.existing.push(tag.name);
                            }
                        });
                    }
                }
                TagPropertyComponent.prototype.ngOnInit = function () {
                    var _this = this;
                    if (this.dialogType === EditTagDialogType.Tree) {
                        if (this.isOpcua() || this.isBACnet()) {
                            this.subscriptionBrowse = this.hmiService.onDeviceBrowse.subscribe(function (values) {
                                if (_this.data.device.id === values.device) {
                                    if (values.error) {
                                        _this.addError(values.node, values.error);
                                    }
                                    else {
                                        _this.addNodes(values.node, values.result);
                                    }
                                }
                            });
                            this.subscriptionNodeAttribute = this.hmiService.onDeviceNodeAttribute.subscribe(function (values) {
                                if (_this.data.device.id === values.device) {
                                    if (values.error) {
                                        //   this.addError(values.node, values.error);
                                    }
                                    else if (values.node) {
                                        if (values.node.attribute[14]) { // datatype
                                            values.node.type = values.node.attribute[14];
                                        }
                                        _this.treetable.setNodeProperty(values.node, _this.attributeToString(values.node.attribute));
                                    }
                                }
                            });
                        }
                        else if (this.isWebApi()) {
                            this.hmiService.onDeviceWebApiRequest.subscribe(function (res) {
                                if (res.result) {
                                    _this.addTreeNodes(res.result);
                                    _this.treetable.update(false);
                                }
                            });
                            this.hmiService.askWebApiProperty(this.data.device.property);
                        }
                        this.queryNext(null);
                    }
                };
                TagPropertyComponent.prototype.ngOnDestroy = function () {
                    // this.checkToSave();
                    try {
                        if (this.subscriptionBrowse) {
                            this.subscriptionBrowse.unsubscribe();
                        }
                        if (this.subscriptionNodeAttribute) {
                            this.subscriptionNodeAttribute.unsubscribe();
                        }
                        if (this.subscriptionDeviceWebApiRequest) {
                            this.subscriptionDeviceWebApiRequest.unsubscribe();
                        }
                    }
                    catch (e) {
                    }
                };
                TagPropertyComponent.prototype.onNoClick = function () {
                    this.dialogRef.close();
                };
                TagPropertyComponent.prototype.onOkClick = function () {
                    var _this = this;
                    this.data.nodes = [];
                    if (this.isWebApi()) {
                        var result = this.getSelectedTreeNodes(Object.values(this.treetable.nodes), null);
                        result.forEach(function (n) {
                            if (n.checked && n.enabled) {
                                _this.data.nodes.push(n);
                            }
                        });
                        // this.data.nodes = result;
                    }
                    else if (this.isModbus() || this.isSiemensS7()) {
                    }
                    else if (this.isInternal()) {
                        var tags = Object.values(this.data.device.tags);
                        this.error = '';
                        for (var i = 0; i < tags.length; i++) {
                            if (tags[i].id !== this.data.tag.id && tags[i].name === this.data.tag.name) {
                                this.error = '';
                                this.translateService.get('msg.device-tag-exist').subscribe(function (txt) { _this.error = txt; });
                                return;
                            }
                        }
                    }
                    else if (this.isExternal()) {
                        var tags = Object.values(this.data.device.tags);
                        this.error = '';
                        for (var i = 0; i < tags.length; i++) {
                            if (tags[i].id !== this.data.tag.id && tags[i].address === this.data.tag.address) {
                                this.error = '';
                                this.translateService.get('msg.device-tag-exist').subscribe(function (txt) { _this.error = txt; });
                                return;
                            }
                        }
                    }
                    else {
                        Object.keys(this.treetable.nodes).forEach(function (key) {
                            var n = _this.treetable.nodes[key];
                            if (n.checked && n.enabled) {
                                _this.data.nodes.push(_this.treetable.nodes[key]);
                            }
                        });
                    }
                    this.dialogRef.close(this.data);
                };
                TagPropertyComponent.prototype.onCheckValue = function (tag) {
                    var _this = this;
                    if (this.existing.indexOf(tag.target.value) !== -1) {
                        this.error = '';
                        this.translateService.get('msg.device-tag-exist').subscribe(function (txt) { _this.error = txt; });
                    }
                    else {
                        this.error = '';
                    }
                };
                TagPropertyComponent.prototype.addNodes = function (parent, nodes) {
                    var _this = this;
                    if (nodes) {
                        var tempTags_1 = Object.values(this.data.device.tags);
                        nodes.forEach(function (n) {
                            var node = new _gui_helpers_treetable_treetable_component__WEBPACK_IMPORTED_MODULE_3__["Node"](n.id, n.name);
                            node.class = n.class;
                            node.property = _this.getProperty(n);
                            if (_this.isBACnet()) {
                                node.class = _gui_helpers_treetable_treetable_component__WEBPACK_IMPORTED_MODULE_3__["Node"].strToType(n.class);
                                node.type = n.type;
                                var typetext = Object.values(_models_device__WEBPACK_IMPORTED_MODULE_2__["BACnetObjectType"])[n.type];
                                if (typetext) {
                                    node.property = typetext;
                                }
                                // node.property = Object.keys(BACnetObjectType)[Object.values(BACnetObjectType).indexOf(n.type)] + '   ' + node.property;
                                // Object.keys(AlarmAckMode)[Object.values(AlarmAckMode).indexOf(AlarmAckMode.float)]
                            }
                            var enabled = true;
                            if (node.class === _gui_helpers_treetable_treetable_component__WEBPACK_IMPORTED_MODULE_3__["NodeType"].Variable) {
                                var selected = tempTags_1.find(function (t) { return t.address === n.id; });
                                if (selected) {
                                    enabled = false;
                                }
                            }
                            _this.treetable.addNode(node, parent, enabled);
                            if (node.class === _gui_helpers_treetable_treetable_component__WEBPACK_IMPORTED_MODULE_3__["NodeType"].Variable && _this.data.device.type !== _models_device__WEBPACK_IMPORTED_MODULE_2__["DeviceType"].BACnet) {
                                _this.hmiService.askNodeAttributes(_this.data.device.id, n);
                            }
                        });
                        this.treetable.update();
                    }
                };
                TagPropertyComponent.prototype.addTreeNodes = function (nodes, id, parent) {
                    if (id === void 0) { id = ''; }
                    if (parent === void 0) { parent = null; }
                    var nodeId = id;
                    var nodeName = id;
                    if (parent && parent.id) {
                        nodeId = parent.id + ':' + nodeId;
                    }
                    var node = new _gui_helpers_treetable_treetable_component__WEBPACK_IMPORTED_MODULE_3__["Node"](nodeId, nodeName);
                    node.parent = parent;
                    if (Array.isArray(nodes)) {
                        // nodeId = nodeId + '[]';
                        node.class = _gui_helpers_treetable_treetable_component__WEBPACK_IMPORTED_MODULE_3__["NodeType"].Array;
                        node.setToDefine();
                        node.expanded = true;
                        this.treetable.addNode(node, parent, true);
                        var idx = 0;
                        for (var n in nodes) {
                            this.addTreeNodes(nodes[n], '[' + idx++ + ']', node);
                        }
                    }
                    else if (nodes && typeof nodes === 'object') {
                        // for(var n in nodes) {
                        //     this.addTreeNodes(nodes[n], n, nodes);
                        // }
                        // let node = new Node(nodeId, nodeName);
                        node.expanded = true;
                        node.class = _gui_helpers_treetable_treetable_component__WEBPACK_IMPORTED_MODULE_3__["NodeType"].Object;
                        this.treetable.addNode(node, parent, true);
                        for (var n in nodes) {
                            this.addTreeNodes(nodes[n], n, node);
                            if (parent) {
                                parent.addToDefine(n);
                            }
                        }
                    }
                    else {
                        // let node = new Node(nodeId, nodeName);
                        node.expandable = false;
                        node.class = _gui_helpers_treetable_treetable_component__WEBPACK_IMPORTED_MODULE_3__["NodeType"].Variable;
                        node.childs = [];
                        node.property = nodes;
                        var enabled = true;
                        var selected = Object.values(this.data.device.tags).find(function (t) { return t.address === nodeId; });
                        if (node.parent && node.parent.parent && node.parent.parent.class === _gui_helpers_treetable_treetable_component__WEBPACK_IMPORTED_MODULE_3__["NodeType"].Array) {
                            node.class = _gui_helpers_treetable_treetable_component__WEBPACK_IMPORTED_MODULE_3__["NodeType"].Item;
                            if (!node.parent.parent.todefine.id && this.data.device.tags[nodeId] && this.data.device.tags[nodeId].options) {
                                node.parent.parent.todefine.id = this.data.device.tags[nodeId].options.selid;
                                node.parent.parent.todefine.value = this.data.device.tags[nodeId].options.selval;
                            }
                        }
                        else if (selected) {
                            enabled = false;
                        }
                        this.treetable.addNode(node, parent, enabled);
                    }
                };
                TagPropertyComponent.prototype.getSelectedTreeNodes = function (nodes, defined) {
                    var result = [];
                    for (var key in nodes) {
                        var n = nodes[key];
                        if (n.class === _gui_helpers_treetable_treetable_component__WEBPACK_IMPORTED_MODULE_3__["NodeType"].Array && n.todefine && n.todefine.id && n.todefine.value) {
                            var arrayResult = this.getSelectedTreeNodes(n.childs, n.todefine);
                            for (var ak in arrayResult) {
                                result.push(arrayResult[ak]);
                            }
                        }
                        else if (n.class === _gui_helpers_treetable_treetable_component__WEBPACK_IMPORTED_MODULE_3__["NodeType"].Object && defined && defined.id && defined.value) {
                            // search defined attributes
                            var childId = null, childValue = null;
                            for (var childKey in n.childs) {
                                var child = n.childs[childKey];
                                if (child.text === defined.id) {
                                    childId = child;
                                }
                                else if (child.text === defined.value) {
                                    childValue = child;
                                }
                            }
                            if (childId && childValue) {
                                var objNode = new _gui_helpers_treetable_treetable_component__WEBPACK_IMPORTED_MODULE_3__["Node"](childId.id, childId.property); // node array element (id: id:id, text: current id value)
                                objNode.class = _gui_helpers_treetable_treetable_component__WEBPACK_IMPORTED_MODULE_3__["NodeType"].Reference; // to check
                                objNode.property = childValue.id; // value:id
                                objNode.todefine = { selid: childId.text, selval: childValue.text };
                                objNode.type = _helpers_utils__WEBPACK_IMPORTED_MODULE_6__["Utils"].getType(childValue.property);
                                objNode.checked = true;
                                objNode.enabled = n.enabled;
                                result.push(objNode);
                            }
                        }
                        else if (n.class === _gui_helpers_treetable_treetable_component__WEBPACK_IMPORTED_MODULE_3__["NodeType"].Variable && n.checked) {
                            // let objNode = new Node(n.id.split('>').join(''), n.text);
                            var objNode = new _gui_helpers_treetable_treetable_component__WEBPACK_IMPORTED_MODULE_3__["Node"](n.id, n.text);
                            objNode.type = _helpers_utils__WEBPACK_IMPORTED_MODULE_6__["Utils"].getType(n.property);
                            objNode.checked = n.checked;
                            objNode.enabled = n.enabled;
                            result.push(objNode);
                        }
                    }
                    return result;
                };
                TagPropertyComponent.prototype.getProperty = function (n) {
                    if (n.class === 'Object') { // Object
                        return '';
                    }
                    else if (n.class === 'Variable') {
                        return 'Variable';
                    }
                    else if (n.class === 'Method') {
                        return 'Method';
                    }
                    return '';
                };
                TagPropertyComponent.prototype.addError = function (parent, error) {
                };
                TagPropertyComponent.prototype.devicesValue = function () {
                    return Object.values(this.data.devices);
                };
                TagPropertyComponent.prototype.queryNext = function (node) {
                    var n = (node) ? { id: node.id } : null;
                    if (this.isBACnet() && node) {
                        n['parent'] = (node.parent) ? node.parent.id : null;
                    }
                    this.hmiService.askDeviceBrowse(this.data.device.id, n);
                };
                TagPropertyComponent.prototype.attributeToString = function (attribute) {
                    var result = '';
                    if (attribute) {
                        Object.values(attribute).forEach(function (x) {
                            if (result.length) {
                                result += ', ';
                            }
                            result += x;
                        });
                    }
                    return result;
                };
                TagPropertyComponent.prototype.isSiemensS7 = function () {
                    return (this.data.device.type === _models_device__WEBPACK_IMPORTED_MODULE_2__["DeviceType"].SiemensS7) ? true : false;
                };
                TagPropertyComponent.prototype.isModbus = function () {
                    return (this.data.device.type === _models_device__WEBPACK_IMPORTED_MODULE_2__["DeviceType"].ModbusRTU || this.data.device.type === _models_device__WEBPACK_IMPORTED_MODULE_2__["DeviceType"].ModbusTCP) ? true : false;
                };
                TagPropertyComponent.prototype.isOpcua = function () {
                    return (this.data.device.type === _models_device__WEBPACK_IMPORTED_MODULE_2__["DeviceType"].OPCUA) ? true : false;
                };
                TagPropertyComponent.prototype.isWebApi = function () {
                    return (this.data.device.type === _models_device__WEBPACK_IMPORTED_MODULE_2__["DeviceType"].WebAPI) ? true : false;
                };
                TagPropertyComponent.prototype.isBACnet = function () {
                    return (this.data.device.type === _models_device__WEBPACK_IMPORTED_MODULE_2__["DeviceType"].BACnet) ? true : false;
                };
                TagPropertyComponent.prototype.isExternal = function () {
                    return (this.data.device.type === _models_device__WEBPACK_IMPORTED_MODULE_2__["DeviceType"].WebStudio) ? true : false;
                };
                TagPropertyComponent.prototype.isInternal = function () {
                    return (this.data.device.type === _models_device__WEBPACK_IMPORTED_MODULE_2__["DeviceType"].internal) ? true : false;
                };
                TagPropertyComponent.prototype.checkMemAddress = function (memaddress) {
                    if (memaddress === '000000' || memaddress === '100000') {
                        this.data.tag.type = _models_device__WEBPACK_IMPORTED_MODULE_2__["ModbusTagType"].Bool;
                    }
                };
                TagPropertyComponent.prototype.isValidate = function () {
                    if (this.error) {
                        return false;
                    }
                    else if (this.isOpcua() || this.isWebApi()) {
                        return true;
                    }
                    else if (this.isExternal()) {
                        return (this.data.tag.address) ? true : false;
                    }
                    else if (this.isInternal()) {
                        return (this.data.tag.name) ? true : false;
                    }
                    else if (this.data.tag && !this.data.tag.name) {
                        return false;
                    }
                    else if (this.isModbus() && (!this.data.tag.address || parseInt(this.data.tag.address) <= 0)) {
                        return false;
                    }
                    return true;
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])(_gui_helpers_treetable_treetable_component__WEBPACK_IMPORTED_MODULE_3__["TreetableComponent"]),
                    __metadata("design:type", _gui_helpers_treetable_treetable_component__WEBPACK_IMPORTED_MODULE_3__["TreetableComponent"])
                ], TagPropertyComponent.prototype, "treetable", void 0);
                TagPropertyComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'app-tag-property',
                        template: __webpack_require__(/*! ./tag-property.component.html */ "./app/device/tag-property/tag-property.component.html"),
                        styles: [__webpack_require__(/*! ./tag-property.component.css */ "./app/device/tag-property/tag-property.component.css")]
                    }),
                    __param(3, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MAT_DIALOG_DATA"])),
                    __metadata("design:paramtypes", [_services_hmi_service__WEBPACK_IMPORTED_MODULE_4__["HmiService"],
                    _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateService"],
                    _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialogRef"], Object])
                ], TagPropertyComponent);
                return TagPropertyComponent;
            }());

            var EditTagDialogType;
            (function (EditTagDialogType) {
                EditTagDialogType["Standard"] = "standard";
                EditTagDialogType["Simple"] = "simple";
                EditTagDialogType["Tree"] = "tree";
            })(EditTagDialogType || (EditTagDialogType = {}));


            /***/
}),

/***/ "./app/device/topic-property/topic-property.component.css":
/*!****************************************************************!*\
  !*** ./app/device/topic-property/topic-property.component.css ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ".topic {\n    font-size: 12px;\n    width: 100%;\n    height: 24px;\n    cursor: pointer;\n}\n\n.topic-active {\n    width: 100%;\n    height: 26px;\n    background-color: violet;\n}\n\n.topic-text {\n    width: 250px;\n    display: inline-block;\n    overflow: hidden; \n    text-overflow: ellipsis;\n    white-space: nowrap;\n    line-height: 24px;\n}\n\n.topic-name {\n    display: inline-block;\n    width: 220px;\n    overflow: hidden; \n    text-overflow: ellipsis;\n    white-space: nowrap;\n    font-size: 12px;\n    font-family: monospace;\n}\n\n.topic-name input {\n    width: 200px;\n    overflow: hidden; \n    text-overflow: ellipsis;\n    white-space: nowrap;\n    font-size: 12px;\n    font-family: monospace;\n    background-color: var(--formExtInputBackground);\n    padding: 4px 2px 4px 3px !important;\n}\n\n.topic-value {\n    font-size: 12px;\n    color: gray;\n    width: 280px;\n    display: inline-block;\n    overflow-wrap: break-word;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n    line-height: 24px;\n}\n\n.topic-check {\n    float: right;\n    margin-right: 12px;\n}\n\n.topic-publish-result {\n    height: 160px;\n    width: 100%;\n    background-color: var(--formInputBackground);\n    padding: 5px 5px 3px 8px;\n    overflow: auto;\n    white-space: pre;\n    font-family: monospace;\n    font-size: 12px;\n}\n\n.topic-subscription-result {\n    height: 160px;\n    background-color: var(--formInputBackground);\n    padding: 5px 5px 3px 8px;\n    overflow-y: auto;\n    overflow-x: hidden;\n    white-space: pre;\n    font-family: monospace;\n    font-size: 12px;\n}\n\n.separator-line {\n    border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n    height: 1px;\n    width: 100%;\n}\n\n::ng-deep .mytoogle .mat-button-toggle-label-content {\n    line-height: 28px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGV2aWNlL3RvcGljLXByb3BlcnR5L3RvcGljLXByb3BlcnR5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0lBQ2YsV0FBVztJQUNYLFlBQVk7SUFDWixlQUFlO0FBQ25COztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWix3QkFBd0I7QUFDNUI7O0FBRUE7SUFDSSxZQUFZO0lBQ1oscUJBQXFCO0lBQ3JCLGdCQUFnQjtJQUNoQix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLHFCQUFxQjtJQUNyQixZQUFZO0lBQ1osZ0JBQWdCO0lBQ2hCLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIsZUFBZTtJQUNmLHNCQUFzQjtBQUMxQjs7QUFFQTtJQUNJLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixlQUFlO0lBQ2Ysc0JBQXNCO0lBQ3RCLCtDQUErQztJQUMvQyxtQ0FBbUM7QUFDdkM7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsV0FBVztJQUNYLFlBQVk7SUFDWixxQkFBcUI7SUFDckIseUJBQXlCO0lBQ3pCLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIsZ0JBQWdCO0lBQ2hCLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLFlBQVk7SUFDWixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsV0FBVztJQUNYLDRDQUE0QztJQUM1Qyx3QkFBd0I7SUFDeEIsY0FBYztJQUNkLGdCQUFnQjtJQUNoQixzQkFBc0I7SUFDdEIsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGFBQWE7SUFDYiw0Q0FBNEM7SUFDNUMsd0JBQXdCO0lBQ3hCLGdCQUFnQjtJQUNoQixrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLHNCQUFzQjtJQUN0QixlQUFlO0FBQ25COztBQUVBO0lBQ0ksMkNBQTJDO0lBQzNDLFdBQVc7SUFDWCxXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxpQkFBaUI7QUFDckIiLCJmaWxlIjoic3JjL2FwcC9kZXZpY2UvdG9waWMtcHJvcGVydHkvdG9waWMtcHJvcGVydHkuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi50b3BpYyB7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMjRweDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi50b3BpYy1hY3RpdmUge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMjZweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2aW9sZXQ7XG59XG5cbi50b3BpYy10ZXh0IHtcbiAgICB3aWR0aDogMjUwcHg7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIG92ZXJmbG93OiBoaWRkZW47IFxuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgbGluZS1oZWlnaHQ6IDI0cHg7XG59XG5cbi50b3BpYy1uYW1lIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgd2lkdGg6IDIyMHB4O1xuICAgIG92ZXJmbG93OiBoaWRkZW47IFxuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIGZvbnQtZmFtaWx5OiBtb25vc3BhY2U7XG59XG5cbi50b3BpYy1uYW1lIGlucHV0IHtcbiAgICB3aWR0aDogMjAwcHg7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjsgXG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1mb3JtRXh0SW5wdXRCYWNrZ3JvdW5kKTtcbiAgICBwYWRkaW5nOiA0cHggMnB4IDRweCAzcHggIWltcG9ydGFudDtcbn1cblxuLnRvcGljLXZhbHVlIHtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgY29sb3I6IGdyYXk7XG4gICAgd2lkdGg6IDI4MHB4O1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBvdmVyZmxvdy13cmFwOiBicmVhay13b3JkO1xuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBsaW5lLWhlaWdodDogMjRweDtcbn1cblxuLnRvcGljLWNoZWNrIHtcbiAgICBmbG9hdDogcmlnaHQ7XG4gICAgbWFyZ2luLXJpZ2h0OiAxMnB4O1xufVxuXG4udG9waWMtcHVibGlzaC1yZXN1bHQge1xuICAgIGhlaWdodDogMTYwcHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tZm9ybUlucHV0QmFja2dyb3VuZCk7XG4gICAgcGFkZGluZzogNXB4IDVweCAzcHggOHB4O1xuICAgIG92ZXJmbG93OiBhdXRvO1xuICAgIHdoaXRlLXNwYWNlOiBwcmU7XG4gICAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZTtcbiAgICBmb250LXNpemU6IDEycHg7XG59XG5cbi50b3BpYy1zdWJzY3JpcHRpb24tcmVzdWx0IHtcbiAgICBoZWlnaHQ6IDE2MHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWZvcm1JbnB1dEJhY2tncm91bmQpO1xuICAgIHBhZGRpbmc6IDVweCA1cHggM3B4IDhweDtcbiAgICBvdmVyZmxvdy15OiBhdXRvO1xuICAgIG92ZXJmbG93LXg6IGhpZGRlbjtcbiAgICB3aGl0ZS1zcGFjZTogcHJlO1xuICAgIGZvbnQtZmFtaWx5OiBtb25vc3BhY2U7XG4gICAgZm9udC1zaXplOiAxMnB4O1xufVxuXG4uc2VwYXJhdG9yLWxpbmUge1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gICAgaGVpZ2h0OiAxcHg7XG4gICAgd2lkdGg6IDEwMCU7XG59XG5cbjo6bmctZGVlcCAubXl0b29nbGUgLm1hdC1idXR0b24tdG9nZ2xlLWxhYmVsLWNvbnRlbnQge1xuICAgIGxpbmUtaGVpZ2h0OiAyOHB4O1xufSJdfQ== */"

            /***/
}),

/***/ "./app/device/topic-property/topic-property.component.html":
/*!*****************************************************************!*\
  !*** ./app/device/topic-property/topic-property.component.html ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div style=\"width: 100%;position: relative;\">\n    <div style=\"width: 840px;\">\n        <h1 mat-dialog-title style=\"display:inline-block; cursor:move; padding-top: 15px\" mat-dialog-draggable>\n            {{'device.browsetopics-property-title' | translate}}\n        </h1>\n        <mat-icon (click)=\"onNoClick()\" style=\"float:right;cursor:pointer;color:gray;position: relative; top: 10px; right: 0px\">clear</mat-icon>\n        <mat-tab-group style=\"width: 100%; height: 100%\" #grptabs>\n            <mat-tab label=\"{{'device.browsetopics-property-sub' | translate}}\" #tabsub>\n                <div style=\"display: block; margin-bottom: 5px;margin-top: 10px\">\n                    <div class=\"my-form-field\" style=\"display:inline-block; margin-right: 10px;\">\n                        <span>{{'device.discovery-topics' | translate}}</span>\n                        <input [(ngModel)]=\"topicSource\" style=\"width: 400px\" type=\"text\" [disabled]=\"isSubscriptionEdit()\">\n                    </div>\n                    <button mat-icon-button (click)=\"onDiscoveryTopics(topicSource)\" style=\"display:inline-block;\" *ngIf=\"!discoveryWait\" [disabled]=\"isSubscriptionEdit()\">\n                        <mat-icon>search</mat-icon>\n                    </button>\n                    <div style=\"display:inline-block; margin-left: 10px;width: 30px; vertical-align: middle;\" *ngIf=\"discoveryWait\">\n                        <mat-spinner diameter=\"20\"></mat-spinner>\n                    </div>\n                    <button mat-icon-button (click)=\"onClearDiscovery()\" style=\"display:inline-block;\" [disabled]=\"isSubscriptionEdit()\">\n                        <mat-icon>delete_outline</mat-icon>\n                    </button>\n                    <div *ngIf=\"discoveryError\" style=\"display: block; color: red;\">\n                        {{discoveryError}}\n                    </div>\n                </div>\n                <div style=\"height: 240px; border: 1px solid var(--formBorder); padding: 5px 5px 3px 8px; overflow: auto;\">\n                    <div *ngFor=\"let topic of topicsList | keyvalue\">\n                        <div class=\"topic\" (click)=\"selectTopic(topic);\" [ngClass]=\"{'topic-active': isTopicSelected(topic)}\">\n                            <div class=\"topic-text\">\n                                {{topic.key}}\n                            </div>\n                            <div class=\"topic-value\">\n                                {{topic.value.content}}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div style=\"margin-top: 10px; display: block;\">\n                    <div class=\"my-form-field\" style=\"display:inline-block; margin-right: 10px;\">\n                        <span>{{'device.topic-selected' | translate}}</span>\n                        <input [(ngModel)]=\"selectedTopic.key\" class=\"my-form-readonly-input\" style=\"width: 400px;\" type=\"text\" [readonly]=\"true\">\n                    </div>\n                    <mat-button-toggle-group [(ngModel)]=\"topicSelectedSubType\" (change)=\"onSubTopicValChange($event.value)\">\n                        <mat-button-toggle class=\"mytoogle\" value=\"raw\">{{'device.topic-raw' | translate}}</mat-button-toggle>\n                        <mat-button-toggle class=\"mytoogle\" value=\"json\">{{'device.topic-json' | translate}}</mat-button-toggle>\n                    </mat-button-toggle-group>\n                    <button style=\"margin-left: 20px\" mat-raised-button (click)=\"onAddToSubscribe()\" [disabled]=\"!isSubscriptionValid()\" color=\"primary\">\n                        {{'device.topic-subscribe' | translate}}\n                    </button>\n                </div>\n                <div class=\"my-form-field\" style=\"margin-top:10px;width: 100%;overflow-x: hidden;\">\n                    <span style=\"display:inline-block; width:230px\">{{'device.topic-subscription-name' | translate}}</span>\n                    <span style=\"display:inline-block\">{{'device.topic-subscription-address' | translate}}</span>\n                    <div class=\"topic-subscription-result\">\n                        <div *ngFor=\"let tcontent of topicContent\">\n                            <div class=\"topic\">\n                                <div class=\"topic-name\">\n                                    <input [(ngModel)]=\"tcontent.name\" type=\"text\">\n                                </div>     \n                                <div class=\"topic-text\">\n                                    {{tcontent.key}}\n                                </div>\n                                <div class=\"topic-value\">\n                                    {{tcontent.value}}\n                                </div>\n                                <div class=\"topic-check\">\n                                    <mat-checkbox [(ngModel)]=\"tcontent.checked\" (change)=\"isSubscriptionValid()\" value=\"true\"></mat-checkbox>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </mat-tab>\n            <mat-tab label=\"{{'device.browsetopics-property-pub' | translate}}\" #tabpub>\n                <div style=\"display: block;margin-top: 10px\">\n                    <div class=\"my-form-field\" style=\"display:block; margin-right: 10px;margin-bottom: 10px;\">\n                        <span>{{'device.topic-publish-name' | translate}}</span>\n                        <input [(ngModel)]=\"publishTopicName\" style=\"width: 400px;\" type=\"text\">\n                    </div>\n                    <div class=\"my-form-field\" style=\"display:inline-block; margin-right: 10px;margin-bottom: 10px;\">\n                        <span>{{'device.topic-publish-path' | translate}}</span>\n                        <input [(ngModel)]=\"publishTopicPath\" (keyup)=\"stringifyPublishItem()\" style=\"width: 400px;\" type=\"text\">\n                    </div>\n                    <mat-button-toggle-group [(ngModel)]=\"topicSelectedPubType\" (change)=\"onPubTopicValChange($event.value)\">\n                        <mat-button-toggle class=\"mytoogle\" value=\"raw\" [disabled]=\"!isPublishTypeToEnable('raw')\">{{'device.topic-raw' | translate}}</mat-button-toggle>\n                        <mat-button-toggle class=\"mytoogle\" value=\"json\" [disabled]=\"!isPublishTypeToEnable('json')\">{{'device.topic-json' | translate}}</mat-button-toggle>\n                    </mat-button-toggle-group>\n                    <button style=\"margin-left: 20px\" mat-raised-button (click)=\"onAddToPuplish()\" [disabled]=\"!isPublishValid()\" color=\"primary\">{{'device.topic-publish' |\n                        translate}}</button>\n                    <div class=\"my-form-field\" style=\"display: block;\">\n                        <button mat-icon-button (click)=\"onAddPublishItem()\">\n                            <mat-icon>add_circle_outline</mat-icon>\n                            {{'device.topic-publish-add-item' | translate}}\n                        </button>\n                        <div style=\"height: 200px; border: 1px solid var(--formBorder); padding: 5px 5px 3px 8px; overflow: auto;margin-bottom: 10px;\">\n                            <div *ngFor=\"let item of pubPayload.items; index as i\" class=\"item\">\n                                <div class=\"my-form-field\" style=\"margin-right: 10px;\">\n                                    <span>{{'device.topic-publish-key' | translate}}</span>\n                                    <input [(ngModel)]=\"item.key\" (keyup)=\"stringifyPublishItem()\" style=\"width: 140px;\" type=\"text\" [disabled]=\"topicSelectedPubType === 'raw'\">\n                                </div>\n                                <div class=\"my-form-field\" style=\"width: 120px;margin-right: 16px;\">\n                                    <span>{{'device.topic-publish-type' | translate}}</span>\n                                    <mat-select [(value)]=\"item.type\" (selectionChange)=\"stringifyPublishItem();onItemTypeChanged(item);\">\n                                        <mat-option *ngFor=\"let type of itemType | enumToArray\" [value]=\"type.key\">\n                                            {{ type.value }}\n                                        </mat-option>\n                                    </mat-select>\n                                </div>\n                                <div [ngSwitch]=\"item.type\" style=\"display: inline-block;\">\n                                    <div *ngSwitchCase=\"itemTag\">\n                                        <flex-variable style=\"display: block\" [data]=\"data\" (onchange)=\"onSetPublishItemTag(item, $event)\" [variableId]=\"item.value\"\n                                                [withStaticValue]=\"false\"></flex-variable>\n                                    </div>\n                                    <div *ngSwitchCase=\"itemTimestamp\" class=\"my-form-field\" style=\"margin-bottom: 5px;\">\n                                        <span>{{'device.topic-publish-timestamp' | translate}}</span>\n                                        <input [(ngModel)]=\"item.value\" style=\"width: 478px;\" type=\"text\" [disabled]=\"true\">\n                                    </div>\n                                    <div *ngSwitchCase=\"itemValue\" class=\"my-form-field\" style=\"margin-bottom: 5px;\">\n                                        <span>{{'device.topic-publish-value' | translate}}</span>\n                                        <input [(ngModel)]=\"item.value\" style=\"width: 478px;\" type=\"text\" [disabled]=\"true\">\n                                    </div>\n                                    <div *ngSwitchCase=\"itemStatic\" class=\"my-form-field\" style=\"margin-bottom: 5px;\">\n                                        <span>{{'device.topic-publish-static' | translate}}</span>\n                                        <input [(ngModel)]=\"item.value\" (keyup)=\"stringifyPublishItem()\" style=\"width: 478px;\" type=\"text\">\n                                    </div>                                    \n                                </div>\n                                <div style=\"float: right;padding-top: 5px;\">\n                                    <button mat-icon-button (click)=\"onRemovePublishItem(i)\" class=\"remove\">\n                                        <mat-icon>clear</mat-icon>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"my-form-field\" style=\"display:inline-block; width: 826px\">\n                            <span>{{'device.topic-publish-content' | translate}}</span>\n                            <div class=\"topic-publish-result\" [innerHTML]=\"pubPayloadResult\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </mat-tab>\n        </mat-tab-group>\n    </div>\n    <div mat-dialog-actions class=\"dialog-action\">\n        <button mat-raised-button (click)=\"onNoClick()\">{{'dlg.close' | translate}}</button>\n    </div>\n</div>"

            /***/
}),

/***/ "./app/device/topic-property/topic-property.component.ts":
/*!***************************************************************!*\
  !*** ./app/device/topic-property/topic-property.component.ts ***!
  \***************************************************************/
/*! exports provided: TopicPropertyComponent, MqttItemType, MqttPayload, MqttPayloadItem */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TopicPropertyComponent", function () { return TopicPropertyComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MqttItemType", function () { return MqttItemType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MqttPayload", function () { return MqttPayload; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MqttPayloadItem", function () { return MqttPayloadItem; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "../node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _services_hmi_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../_services/hmi.service */ "./app/_services/hmi.service.ts");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ngx-translate/core */ "../node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js");
/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../_helpers/utils */ "./app/_helpers/utils.ts");
/* harmony import */ var _models_device__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../_models/device */ "./app/_models/device.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };
            var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
                return function (target, key) { decorator(target, key, paramIndex); }
            };






            var TopicPropertyComponent = /** @class */ (function () {
                function TopicPropertyComponent(hmiService, translateService, dialogRef, data) {
                    this.hmiService = hmiService;
                    this.translateService = translateService;
                    this.dialogRef = dialogRef;
                    this.data = data;
                    this.editMode = false;
                    this.topicSource = '#';
                    this.topicsList = {};
                    this.topicContent = [];
                    this.topicSelectedSubType = 'raw';
                    this.discoveryError = '';
                    this.discoveryWait = false;
                    this.discoveryTimer = null;
                    this.selectedTopic = { name: '', key: '', value: null, subs: null };
                    this.topicToAdd = {};
                    this.invokeSubscribe = null;
                    this.invokePublish = null;
                    this.topicSelectedPubType = 'raw';
                    this.pubPayload = new MqttPayload();
                    this.pubPayloadResult = '';
                    this.itemType = MqttItemType;
                    this.itemTag = _helpers_utils__WEBPACK_IMPORTED_MODULE_4__["Utils"].getEnumKey(MqttItemType, MqttItemType.tag);
                    this.itemTimestamp = _helpers_utils__WEBPACK_IMPORTED_MODULE_4__["Utils"].getEnumKey(MqttItemType, MqttItemType.timestamp);
                    this.itemValue = _helpers_utils__WEBPACK_IMPORTED_MODULE_4__["Utils"].getEnumKey(MqttItemType, MqttItemType.value);
                    this.itemStatic = _helpers_utils__WEBPACK_IMPORTED_MODULE_4__["Utils"].getEnumKey(MqttItemType, MqttItemType.static);
                }
                TopicPropertyComponent.prototype.ngOnInit = function () {
                    var _this = this;
                    this.subscriptionBrowse = this.hmiService.onDeviceBrowse.subscribe(function (value) {
                        if (value.result === 'error') {
                            _this.discoveryError = value.result;
                        }
                        else if (value.topic) {
                            if (_this.topicsList[value.topic]) {
                                _this.topicsList[value.topic].value = value.msg;
                            }
                            else {
                                var checked = false;
                                var enabled = true;
                                if (_this.data.device.tags[value.topic]) {
                                    checked = true;
                                    enabled = false;
                                }
                                // key => value
                                _this.topicsList[value.topic] = { name: value.topic, content: value.msg, checked: checked, enabled: enabled };
                            }
                        }
                    });
                    Object.keys(this.itemType).forEach(function (key) {
                        _this.translateService.get(_this.itemType[key]).subscribe(function (txt) { _this.itemType[key] = txt; });
                    });
                    // check if edit the topic
                    if (this.data.topic) {
                        var tag = this.data.topic;
                        if (tag.options) {
                            if (tag.options.subs) {
                                // sure a subscription
                                this.grptabs.selectedIndex = 0;
                                this.tabpub.disabled = true;
                                this.topicSelectedSubType = tag.type;
                                this.editMode = true;
                                this.selectTopic({ name: tag.name, key: tag.address, value: { content: tag.value }, subs: tag.options.subs });
                            }
                            else {
                                // publish topic 
                                this.grptabs.selectedIndex = 1;
                                this.tabsub.disabled = true;
                                this.publishTopicPath = tag.address;
                                this.publishTopicName = tag.name;
                                this.topicSelectedPubType = tag.type;
                                if (tag.options.pubs) {
                                    // sure publish
                                    this.pubPayload.items = tag.options.pubs;
                                }
                            }
                        }
                    }
                    this.loadSelectedSubTopic();
                    this.stringifyPublishItem();
                };
                TopicPropertyComponent.prototype.ngAfterViewInit = function () {
                };
                TopicPropertyComponent.prototype.ngOnDestroy = function () {
                    // this.checkToSave();
                    try {
                        if (this.subscriptionBrowse) {
                            this.subscriptionBrowse.unsubscribe();
                        }
                    }
                    catch (e) {
                    }
                    if (this.discoveryTimer) {
                        clearInterval(this.discoveryTimer);
                    }
                    this.discoveryTimer = null;
                };
                //#region Subscription
                TopicPropertyComponent.prototype.onNoClick = function () {
                    this.dialogRef.close();
                };
                TopicPropertyComponent.prototype.onDiscoveryTopics = function (source) {
                    var _this = this;
                    this.discoveryError = '';
                    this.discoveryWait = true;
                    this.discoveryTimer = setTimeout(function () {
                        _this.discoveryWait = false;
                    }, 10000);
                    this.hmiService.askDeviceBrowse(this.data.device.id, source);
                };
                TopicPropertyComponent.prototype.onClearDiscovery = function () {
                    this.topicsList = {};
                    this.discoveryError = '';
                    this.discoveryWait = false;
                    try {
                        if (this.discoveryTimer) {
                            clearInterval(this.discoveryTimer);
                        }
                    }
                    catch (_a) { }
                };
                TopicPropertyComponent.prototype.selectTopic = function (topic) {
                    this.selectedTopic = topic;
                    this.loadSelectedSubTopic();
                };
                TopicPropertyComponent.prototype.loadSelectedSubTopic = function () {
                    var _this = this;
                    this.topicContent = [];
                    if (this.topicSelectedSubType === 'json') {
                        var obj_1 = JSON.parse(this.selectedTopic.value.content);
                        Object.keys(obj_1).forEach(function (key) {
                            var checked = (_this.selectedTopic.subs) ? false : true;
                            if (_this.selectedTopic.subs && _this.selectedTopic.subs.indexOf(key) !== -1) {
                                checked = true;
                            }
                            _this.topicContent.push({ key: key, value: obj_1[key], checked: checked, type: _this.topicSelectedSubType });
                        });
                    }
                    else if (this.selectedTopic.value && this.selectedTopic.value.content) {
                        this.topicContent = [{ name: this.selectedTopic.name, key: this.selectedTopic.key, value: this.selectedTopic.value.content, checked: true, type: this.topicSelectedSubType }];
                    }
                };
                TopicPropertyComponent.prototype.onSubTopicValChange = function (topicSelType) {
                    this.loadSelectedSubTopic();
                };
                TopicPropertyComponent.prototype.isTopicSelected = function (topic) {
                    return (this.selectedTopic === topic.key) ? true : false;
                };
                TopicPropertyComponent.prototype.isSubscriptionEdit = function () {
                    return this.editMode;
                };
                TopicPropertyComponent.prototype.isSubscriptionValid = function () {
                    if (this.topicContent && this.topicContent.length) {
                        var onechecked = false;
                        for (var i = 0; i < this.topicContent.length; i++) {
                            if (this.topicContent[i].checked) {
                                onechecked = true;
                            }
                        }
                        return onechecked;
                    }
                    return false;
                };
                TopicPropertyComponent.prototype.onAddToSubscribe = function () {
                    if (this.topicContent && this.topicContent.length && this.invokeSubscribe) {
                        // let items = [];
                        for (var i = 0; i < this.topicContent.length; i++) {
                            if (this.topicContent[i].checked) {
                                // items.push(this.topicContent[i].key);
                                var tag = new _models_device__WEBPACK_IMPORTED_MODULE_5__["Tag"](_helpers_utils__WEBPACK_IMPORTED_MODULE_4__["Utils"].getGUID(_models_device__WEBPACK_IMPORTED_MODULE_5__["TAG_PREFIX"]));
                                if (this.data.topic) {
                                    tag = new _models_device__WEBPACK_IMPORTED_MODULE_5__["Tag"](this.data.topic.id);
                                }
                                tag.type = this.topicSelectedSubType;
                                tag.address = this.selectedTopic.key;
                                tag.memaddress = this.topicContent[i].key;
                                tag.options = { subs: this.topicContent.map(function (tcnt) { return tcnt.key; }) };
                                if (this.topicContent[i].name) {
                                    tag.name = this.topicContent[i].name;
                                }
                                else {
                                    tag.name = this.selectedTopic.key;
                                    if (tag.type === 'json') {
                                        tag.name += '[' + tag.memaddress + ']';
                                    }
                                }
                                this.invokeSubscribe(this.data.topic, [tag]);
                            }
                        }
                    }
                };
                //#endregion
                //#region  Publish
                TopicPropertyComponent.prototype.isPublishTypeToEnable = function (type) {
                    if (type === 'raw' || (this.pubPayload.items && this.pubPayload.items.length)) {
                        return true;
                    }
                    return false;
                };
                TopicPropertyComponent.prototype.onAddToPuplish = function () {
                    if (this.publishTopicPath && this.invokePublish) {
                        var tag = new _models_device__WEBPACK_IMPORTED_MODULE_5__["Tag"](_helpers_utils__WEBPACK_IMPORTED_MODULE_4__["Utils"].getGUID(_models_device__WEBPACK_IMPORTED_MODULE_5__["TAG_PREFIX"]));
                        if (this.data.topic) {
                            tag = new _models_device__WEBPACK_IMPORTED_MODULE_5__["Tag"](this.data.topic.id);
                        }
                        tag.name = this.publishTopicName;
                        tag.address = this.publishTopicPath;
                        tag.type = this.topicSelectedPubType;
                        tag.options = { pubs: this.pubPayload.items };
                        this.invokePublish(this.data.topic, tag);
                    }
                };
                TopicPropertyComponent.prototype.onPubTopicValChange = function (topicSelType) {
                    this.stringifyPublishItem();
                };
                TopicPropertyComponent.prototype.onAddPublishItem = function () {
                    this.pubPayload.items.push(new MqttPayloadItem());
                    this.stringifyPublishItem();
                };
                TopicPropertyComponent.prototype.onRemovePublishItem = function (index) {
                    this.pubPayload.items.splice(index, 1);
                    this.stringifyPublishItem();
                };
                TopicPropertyComponent.prototype.onSetPublishItemTag = function (item, event) {
                    item.value = event.variableId;
                    if (event.variableRaw) {
                        item.name = event.variableRaw.address;
                    }
                    this.stringifyPublishItem();
                };
                TopicPropertyComponent.prototype.onItemTypeChanged = function (item) {
                    if (item.type === this.itemTimestamp) {
                        item.value = new Date().toISOString();
                    }
                    else if (item.type === this.itemStatic) {
                        item.value = '';
                    }
                    else if (item.type === this.itemValue) {
                        item.name = this.publishTopicPath;
                    }
                    this.stringifyPublishItem();
                };
                /**
                 * Render the payload content
                 */
                TopicPropertyComponent.prototype.stringifyPublishItem = function () {
                    var obj = {};
                    var row = '';
                    if (this.pubPayload.items.length) {
                        for (var i = 0; i < this.pubPayload.items.length; i++) {
                            var item = this.pubPayload.items[i];
                            var ivalue = item.value;
                            if (item.type === this.itemTimestamp) {
                                ivalue = new Date().toISOString();
                            }
                            else if (item.type === this.itemTag) {
                                ivalue = "$(" + item.name + ")";
                            }
                            else if (item.type === this.itemStatic) {
                                ivalue = "" + item.value;
                            }
                            else if (item.type === this.itemValue) {
                                item.value = this.publishTopicPath;
                                ivalue = "$(" + item.value + ")";
                            }
                            else {
                                ivalue = "" + item.value;
                            }
                            if (this.topicSelectedPubType === 'json') {
                                var keys = item.key.split('.');
                                var robj = obj;
                                for (var y = 0; y < keys.length; y++) {
                                    if (!robj[keys[y]]) {
                                        robj[keys[y]] = {};
                                    }
                                    if (y >= keys.length - 1) {
                                        robj[keys[y]] = ivalue;
                                    }
                                    robj = robj[keys[y]];
                                }
                            }
                            else {
                                // payload items in row format
                                if (row) {
                                    ivalue = ';' + ivalue;
                                }
                            }
                            row += ivalue;
                        }
                    }
                    else {
                        row = "$(" + this.publishTopicPath + ")";
                        obj = { '': row };
                    }
                    if (this.topicSelectedPubType === 'json') {
                        this.pubPayloadResult = JSON.stringify(obj, undefined, 2);
                    }
                    else {
                        this.pubPayloadResult = row;
                    }
                };
                TopicPropertyComponent.prototype.isPublishValid = function () {
                    return (this.publishTopicPath && this.publishTopicPath.length) ? true : false;
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('grptabs'),
                    __metadata("design:type", _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatTabGroup"])
                ], TopicPropertyComponent.prototype, "grptabs", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('tabsub'),
                    __metadata("design:type", _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatTab"])
                ], TopicPropertyComponent.prototype, "tabsub", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('tabpub'),
                    __metadata("design:type", _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatTab"])
                ], TopicPropertyComponent.prototype, "tabpub", void 0);
                TopicPropertyComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'app-topic-property',
                        template: __webpack_require__(/*! ./topic-property.component.html */ "./app/device/topic-property/topic-property.component.html"),
                        styles: [__webpack_require__(/*! ./topic-property.component.css */ "./app/device/topic-property/topic-property.component.css")]
                    }),
                    __param(3, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MAT_DIALOG_DATA"])),
                    __metadata("design:paramtypes", [_services_hmi_service__WEBPACK_IMPORTED_MODULE_2__["HmiService"],
                    _ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__["TranslateService"],
                    _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialogRef"], Object])
                ], TopicPropertyComponent);
                return TopicPropertyComponent;
            }());

            var MqttItemType;
            (function (MqttItemType) {
                MqttItemType["tag"] = "device.topic-type-tag";
                MqttItemType["timestamp"] = "device.topic-type-timestamp";
                MqttItemType["value"] = "device.topic-type-value";
                MqttItemType["static"] = "device.topic-type-static";
            })(MqttItemType || (MqttItemType = {}));
            var MqttPayload = /** @class */ (function () {
                function MqttPayload() {
                    this.items = [];
                }
                return MqttPayload;
            }());

            var MqttPayloadItem = /** @class */ (function () {
                function MqttPayloadItem() {
                    this.type = _helpers_utils__WEBPACK_IMPORTED_MODULE_4__["Utils"].getEnumKey(MqttItemType, MqttItemType.tag);
                    this.key = '';
                    this.value = '';
                }
                return MqttPayloadItem;
            }());



            /***/
}),

/***/ "./app/editor/app-settings/app-settings.component.css":
/*!************************************************************!*\
  !*** ./app/editor/app-settings/app-settings.component.css ***!
  \************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "\n::ng-deep .mat-tab-label {\n    height: 34px !important;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZWRpdG9yL2FwcC1zZXR0aW5ncy9hcHAtc2V0dGluZ3MuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7SUFDSSx1QkFBdUI7QUFDM0IiLCJmaWxlIjoic3JjL2FwcC9lZGl0b3IvYXBwLXNldHRpbmdzL2FwcC1zZXR0aW5ncy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG46Om5nLWRlZXAgLm1hdC10YWItbGFiZWwge1xuICAgIGhlaWdodDogMzRweCAhaW1wb3J0YW50O1xufSJdfQ== */"

            /***/
}),

/***/ "./app/editor/app-settings/app-settings.component.html":
/*!*************************************************************!*\
  !*** ./app/editor/app-settings/app-settings.component.html ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div>\n    <h1 mat-dialog-title style=\"display:inline-block;cursor:move;\" mat-dialog-draggable>{{'dlg.app-settings-title' | translate}}</h1>\n    <mat-icon (click)=\"onNoClick()\" style=\"float:right;margin-right:-10px;margin-top:-10px;color:gray;cursor:pointer;\">clear</mat-icon>\n    <div mat-dialog-content>\n        <mat-tab-group style=\"height: 500px; width: 620px;\">\n            <mat-tab label=\"{{'dlg.app-settings-system' | translate}}\">\n                <div style=\"width: 420px; margin-top: 20px;\">\n                    <div style=\"display: block; margin-top: 10px\">\n                        <div class=\"my-form-field\">\n                            <span>{{'dlg.app-settings-language' | translate}}</span>\n                            <mat-select [(value)]=\"settings.language\" style=\"width: 320px\" (selectionChange)=\"onLanguageChange($event.value)\">\n                                <mat-option *ngFor=\"let language of languageType\" [value]=\"language.value\">\n                                    {{ language.text }}\n                                </mat-option>\n                            </mat-select>\n                        </div>\n                    </div>\n                    <div style=\"display: block; margin-top: 20px\">\n                        <div class=\"my-form-field\">\n                            <span>{{'dlg.app-settings-server-port' | translate}}</span>\n                            <input numberOnly [(ngModel)]=\"settings.uiPort\" style=\"width: 320px\" type=\"text\" disabled=\"true\">\n                        </div>\n                    </div>\n                    <div style=\"display: block; margin-top: 20px\">\n                        <div class=\"my-form-field\">\n                            <span style=\"display: inline-block;\">{{'dlg.app-settings-auth-token' | translate}}</span>\n                            <mat-icon class=\"my-form-field-info\" style=\"display: block;\" matTooltip=\"{{authenticationTooltip}}\">info</mat-icon>\n                            <mat-select [(value)]=\"authentication\" style=\"width: 320px\">\n                                <mat-option *ngFor=\"let auth of authType\" [value]=\"auth.value\">\n                                    {{ auth.text }}\n                                </mat-option>\n                            </mat-select>\n                        </div>\n                    </div>\n                </div>\n            </mat-tab>\n        </mat-tab-group>\n    </div>\n    <div mat-dialog-actions class=\"dialog-action\">\n        <button mat-raised-button (click)=\"onNoClick()\">{{'dlg.cancel' | translate}}</button>\n        <button mat-raised-button color=\"primary\" (click)=\"onOkClick()\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\n    </div>\n</div>"

            /***/
}),

/***/ "./app/editor/app-settings/app-settings.component.ts":
/*!***********************************************************!*\
  !*** ./app/editor/app-settings/app-settings.component.ts ***!
  \***********************************************************/
/*! exports provided: AppSettingsComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppSettingsComponent", function () { return AppSettingsComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "../node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _services_settings_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../_services/settings.service */ "./app/_services/settings.service.ts");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ngx-translate/core */ "../node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js");
/* harmony import */ var _models_settings__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../_models/settings */ "./app/_models/settings.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };





            var AppSettingsComponent = /** @class */ (function () {
                function AppSettingsComponent(settingsService, translateService, dialogRef) {
                    this.settingsService = settingsService;
                    this.translateService = translateService;
                    this.dialogRef = dialogRef;
                    this.languageType = [{ text: 'dlg.app-language-en', value: 'en' }, { text: 'dlg.app-language-ru', value: 'ru' },
                    { text: 'dlg.app-language-ua', value: 'ua' }, { text: 'dlg.app-language-zh-cn', value: 'zh-cn' },
                    { text: 'dlg.app-language-pt', value: 'pt' }, { text: 'dlg.app-language-tr', value: 'tr' }];
                    this.authType = [{ text: 'dlg.app-auth-disabled', value: '' }, { text: 'dlg.app-auth-expiration-15m', value: '15m' },
                    { text: 'dlg.app-auth-expiration-1h', value: '1h' }, { text: 'dlg.app-auth-expiration-3h', value: '3h' },
                    { text: 'dlg.app-auth-expiration-1d', value: '1d' }];
                    this.settings = new _models_settings__WEBPACK_IMPORTED_MODULE_4__["AppSettings"]();
                    this.authentication = '';
                    this.authenticationTooltip = '';
                }
                AppSettingsComponent.prototype.ngOnInit = function () {
                    var _this = this;
                    this.settings = JSON.parse(JSON.stringify(this.settingsService.getSettings()));
                    var _loop_1 = function (i) {
                        this_1.translateService.get(this_1.languageType[i].text).subscribe(function (txt) { _this.languageType[i].text = txt; });
                    };
                    var this_1 = this;
                    for (var i = 0; i < this.languageType.length; i++) {
                        _loop_1(i);
                    }
                    var _loop_2 = function (i) {
                        this_2.translateService.get(this_2.authType[i].text).subscribe(function (txt) { _this.authType[i].text = txt; });
                    };
                    var this_2 = this;
                    for (var i = 0; i < this.authType.length; i++) {
                        _loop_2(i);
                    }
                    this.translateService.get('dlg.app-auth-tooltip').subscribe(function (txt) { _this.authenticationTooltip = txt; });
                    if (this.settings.secureEnabled) {
                        this.authentication = this.settings.tokenExpiresIn;
                    }
                };
                AppSettingsComponent.prototype.onNoClick = function () {
                    this.dialogRef.close();
                };
                AppSettingsComponent.prototype.onOkClick = function () {
                    this.settings.secureEnabled = (this.authentication) ? true : false;
                    this.settings.tokenExpiresIn = this.authentication;
                    if (this.settingsService.setSettings(this.settings)) {
                        this.settingsService.saveSettings();
                    }
                    this.dialogRef.close();
                };
                AppSettingsComponent.prototype.onLanguageChange = function (language) {
                    this.settings.language = language;
                };
                AppSettingsComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'app-app-settings',
                        template: __webpack_require__(/*! ./app-settings.component.html */ "./app/editor/app-settings/app-settings.component.html"),
                        styles: [__webpack_require__(/*! ./app-settings.component.css */ "./app/editor/app-settings/app-settings.component.css")]
                    }),
                    __metadata("design:paramtypes", [_services_settings_service__WEBPACK_IMPORTED_MODULE_2__["SettingsService"],
                    _ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__["TranslateService"],
                    _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialogRef"]])
                ], AppSettingsComponent);
                return AppSettingsComponent;
            }());



            /***/
}),

/***/ "./app/editor/card-config/card-config.component.css":
/*!**********************************************************!*\
  !*** ./app/editor/card-config/card-config.component.css ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXRvci9jYXJkLWNvbmZpZy9jYXJkLWNvbmZpZy5jb21wb25lbnQuY3NzIn0= */"

            /***/
}),

/***/ "./app/editor/card-config/card-config.component.html":
/*!***********************************************************!*\
  !*** ./app/editor/card-config/card-config.component.html ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div>\n    <h1 mat-dialog-title style=\"display:inline-block;cursor:move;\" mat-dialog-draggable>{{'card.config-title' | translate}}</h1>\n    <mat-icon (click)=\"onNoClick()\" class=\"dialog-close-btn\" cdkFocusInitial>clear</mat-icon>\n    <div mat-dialog-content  style=\"width: 700px; height: 500px\">\n        <div class=\"my-form-field\" style=\"margin-bottom: 10px;\">\n            <span>{{'card.config-content-type' | translate}}</span>\n            <mat-select [(value)]=\"card.type\" style=\"width: 320px;\">\n                <mat-option *ngFor=\"let type of cardType | enumToArray\" [value]=\"type.key\" [disabled]=\"type.key !== widgetView\">\n                    {{ type.value }}\n                </mat-option>\n            </mat-select>\n        </div>\n        <div class=\"my-form-field\" *ngIf=\"card.type === widgetView\" style=\"float: right; margin-bottom: 10px;\">\n            <span>{{'card.config-content-view' | translate}}</span>\n            <mat-select [(value)]=\"card.data\" style=\"width: 320px;\">\n                <mat-option *ngFor=\"let view of data.views\" [value]=\"view\">\n                    {{ view }}\n                </mat-option>\n            </mat-select>\n        </div>\n        <div [ngSwitch]=\"card.type\">\n            <div *ngSwitchCase=\"widgetView\">\n            </div>\n            <div *ngSwitchCase=\"widgetAlarms\">\n            </div>\n        </div>\n    </div>\n    <div mat-dialog-actions class=\"dialog-action\">\n        <button mat-raised-button (click)=\"onNoClick()\">{{'dlg.cancel' | translate}}</button>\n        <button mat-raised-button color=\"primary\" (click)=\"onOkClick()\" [mat-dialog-close]=\"data\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\n    </div>\n</div>"

            /***/
}),

/***/ "./app/editor/card-config/card-config.component.ts":
/*!*********************************************************!*\
  !*** ./app/editor/card-config/card-config.component.ts ***!
  \*********************************************************/
/*! exports provided: CardConfigComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CardConfigComponent", function () { return CardConfigComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "../node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ngx-translate/core */ "../node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js");
/* harmony import */ var _models_hmi__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../_models/hmi */ "./app/_models/hmi.ts");
/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../_helpers/utils */ "./app/_helpers/utils.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };
            var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
                return function (target, key) { decorator(target, key, paramIndex); }
            };





            var CardConfigComponent = /** @class */ (function () {
                function CardConfigComponent(translateService, dialogRef, data) {
                    this.translateService = translateService;
                    this.dialogRef = dialogRef;
                    this.data = data;
                    this.widgetView = _helpers_utils__WEBPACK_IMPORTED_MODULE_4__["Utils"].getEnumKey(_models_hmi__WEBPACK_IMPORTED_MODULE_3__["CardWidgetType"], _models_hmi__WEBPACK_IMPORTED_MODULE_3__["CardWidgetType"].view);
                    this.widgetAlarms = _helpers_utils__WEBPACK_IMPORTED_MODULE_4__["Utils"].getEnumKey(_models_hmi__WEBPACK_IMPORTED_MODULE_3__["CardWidgetType"], _models_hmi__WEBPACK_IMPORTED_MODULE_3__["CardWidgetType"].alarms);
                    this.widgetTable = _helpers_utils__WEBPACK_IMPORTED_MODULE_4__["Utils"].getEnumKey(_models_hmi__WEBPACK_IMPORTED_MODULE_3__["CardWidgetType"], _models_hmi__WEBPACK_IMPORTED_MODULE_3__["CardWidgetType"].table);
                    this.card = this.data.item.card;
                }
                CardConfigComponent.prototype.ngOnInit = function () {
                    var _this = this;
                    this.cardType = _models_hmi__WEBPACK_IMPORTED_MODULE_3__["CardWidgetType"];
                    Object.keys(this.cardType).forEach(function (key) {
                        _this.translateService.get(_this.cardType[key]).subscribe(function (txt) { _this.cardType[key] = txt; });
                    });
                };
                CardConfigComponent.prototype.onNoClick = function () {
                    this.dialogRef.close();
                };
                CardConfigComponent.prototype.onOkClick = function () {
                    this.dialogRef.close(this.card);
                };
                CardConfigComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'app-card-config',
                        template: __webpack_require__(/*! ./card-config.component.html */ "./app/editor/card-config/card-config.component.html"),
                        styles: [__webpack_require__(/*! ./card-config.component.css */ "./app/editor/card-config/card-config.component.css")]
                    }),
                    __param(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MAT_DIALOG_DATA"])),
                    __metadata("design:paramtypes", [_ngx_translate_core__WEBPACK_IMPORTED_MODULE_2__["TranslateService"],
                    _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialogRef"], Object])
                ], CardConfigComponent);
                return CardConfigComponent;
            }());



            /***/
}),

/***/ "./app/editor/chart-config/chart-config.component.css":
/*!************************************************************!*\
  !*** ./app/editor/chart-config/chart-config.component.css ***!
  \************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "\n.panelTop {\n    display: block;\n    width: 100%;\n    height: 480px;\n}\n\n.panelTop .chart-list, .device-list, .tag-list {\n    height: 480px;\n}\n\n.panelBottom {\n    display: block;\n    width: 100%;\n    height: 160px;\n}\n\n.list {\n    width: 100% !important; \n    height: 100% !important; \n    font-size: 16px !important; \n    padding-top: 0px !important;\n}\n\n.list > span  {\n    padding-left: 10px;\n}\n\n.list mat-list-option  {\n    padding-left: 10px;\n}\n\n.chart-list {\n    overflow-y: auto;\n}\n\n.list-item {\n    display: block;\n    font-size: 14px;\n    height: 26px !important;\n    cursor: pointer;\n    overflow: hidden;\n    padding-left: 10px;\n}\n\n.list-item mat-icon {\n    font-size: 20px;\n}\n\n.list-item span {\n    width: calc(100% - 26px);\n    text-overflow: ellipsis;\n    overflow: hidden;\n}\n\n.list-item-text {\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n}\n\n.list-item-hover:hover {\n    background-color: rgba(0, 0, 0, 0.1);\n}\n\n.list-item-selected {\n  background-color: rgba(0, 0, 0, 0.1);\n}\n\n.list-header {\n    background-color: rgba(0, 0, 0, 0.8);\n    color: #ffffff;\n    line-height: 26px;\n}\n\n.device-list {\n    margin-right: 2px;\n    overflow-y: auto;\n}\n\n.tag-list {\n    margin-right: 2px;\n    overflow-y: auto;\n}\n\n.color-line {\n    width: 30px;\n    border: unset;\n    border: 1px solid rgba(0,0,0,0.1);\n    border-radius: 2px;\n    opacity: 1;\n    background-color: #f1f3f4;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZWRpdG9yL2NoYXJ0LWNvbmZpZy9jaGFydC1jb25maWcuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7SUFDSSxjQUFjO0lBQ2QsV0FBVztJQUNYLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksY0FBYztJQUNkLFdBQVc7SUFDWCxhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksc0JBQXNCO0lBQ3RCLHVCQUF1QjtJQUN2QiwwQkFBMEI7SUFDMUIsMkJBQTJCO0FBQy9COztBQUVBO0lBQ0ksa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksY0FBYztJQUNkLGVBQWU7SUFDZix1QkFBdUI7SUFDdkIsZUFBZTtJQUNmLGdCQUFnQjtJQUNoQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxlQUFlO0FBQ25COztBQUVBO0lBQ0ksd0JBQXdCO0lBQ3hCLHVCQUF1QjtJQUN2QixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxtQkFBbUI7SUFDbkIsdUJBQXVCO0lBQ3ZCLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLG9DQUFvQztBQUN4Qzs7QUFFQTtFQUNFLG9DQUFvQztBQUN0Qzs7QUFFQTtJQUNJLG9DQUFvQztJQUNwQyxjQUFjO0lBQ2QsaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsYUFBYTtJQUNiLGlDQUFpQztJQUNqQyxrQkFBa0I7SUFDbEIsVUFBVTtJQUNWLHlCQUF5QjtBQUM3QiIsImZpbGUiOiJzcmMvYXBwL2VkaXRvci9jaGFydC1jb25maWcvY2hhcnQtY29uZmlnLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbi5wYW5lbFRvcCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiA0ODBweDtcbn1cblxuLnBhbmVsVG9wIC5jaGFydC1saXN0LCAuZGV2aWNlLWxpc3QsIC50YWctbGlzdCB7XG4gICAgaGVpZ2h0OiA0ODBweDtcbn1cblxuLnBhbmVsQm90dG9tIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDE2MHB4O1xufVxuXG4ubGlzdCB7XG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsgXG4gICAgaGVpZ2h0OiAxMDAlICFpbXBvcnRhbnQ7IFxuICAgIGZvbnQtc2l6ZTogMTZweCAhaW1wb3J0YW50OyBcbiAgICBwYWRkaW5nLXRvcDogMHB4ICFpbXBvcnRhbnQ7XG59XG5cbi5saXN0ID4gc3BhbiAge1xuICAgIHBhZGRpbmctbGVmdDogMTBweDtcbn1cblxuLmxpc3QgbWF0LWxpc3Qtb3B0aW9uICB7XG4gICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xufVxuXG4uY2hhcnQtbGlzdCB7XG4gICAgb3ZlcmZsb3cteTogYXV0bztcbn1cblxuLmxpc3QtaXRlbSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGhlaWdodDogMjZweCAhaW1wb3J0YW50O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHBhZGRpbmctbGVmdDogMTBweDtcbn1cblxuLmxpc3QtaXRlbSBtYXQtaWNvbiB7XG4gICAgZm9udC1zaXplOiAyMHB4O1xufVxuXG4ubGlzdC1pdGVtIHNwYW4ge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAyNnB4KTtcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4ubGlzdC1pdGVtLXRleHQge1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLmxpc3QtaXRlbS1ob3Zlcjpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjEpO1xufVxuXG4ubGlzdC1pdGVtLXNlbGVjdGVkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjEpO1xufVxuXG4ubGlzdC1oZWFkZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC44KTtcbiAgICBjb2xvcjogI2ZmZmZmZjtcbiAgICBsaW5lLWhlaWdodDogMjZweDtcbn1cblxuLmRldmljZS1saXN0IHtcbiAgICBtYXJnaW4tcmlnaHQ6IDJweDtcbiAgICBvdmVyZmxvdy15OiBhdXRvO1xufVxuXG4udGFnLWxpc3Qge1xuICAgIG1hcmdpbi1yaWdodDogMnB4O1xuICAgIG92ZXJmbG93LXk6IGF1dG87XG59XG5cbi5jb2xvci1saW5lIHtcbiAgICB3aWR0aDogMzBweDtcbiAgICBib3JkZXI6IHVuc2V0O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwwLDAsMC4xKTtcbiAgICBib3JkZXItcmFkaXVzOiAycHg7XG4gICAgb3BhY2l0eTogMTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjFmM2Y0O1xufVxuIl19 */"

            /***/
}),

/***/ "./app/editor/chart-config/chart-config.component.html":
/*!*************************************************************!*\
  !*** ./app/editor/chart-config/chart-config.component.html ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div style=\"width: 1150px;\" class=\"dialog-mdsd-vh\">\n    <h1 mat-dialog-title style=\"display:inline-block;cursor: move\" mat-dialog-draggable>{{'chart.config-title' | translate}}</h1>\n    <mat-icon (click)=\"onNoClick()\" style=\"float:right;margin-right:-10px;margin-top:-10px;cursor:pointer;color:gray;\">clear</mat-icon>\n    <div style=\"display: inline-block; width: 100%\">\n        <div class=\"panelTop\">\n            <mat-grid-list cols=\"3\" rowHeight=\"100%\">\n                <mat-grid-tile class=\"chart-list\">\n                    <mat-list class=\"list\" >\n                        <mat-list-item class=\"list-item list-header\">\n                            <span>{{'chart.config-charts' | translate}}</span>\n                            <mat-icon style=\"position: absolute; right: 10px;cursor:pointer;color:rgba(255, 255, 255, 0.9);\" (click)=\"editChart(null)\">add</mat-icon>\n                        </mat-list-item>\n                        <mat-list-item *ngFor=\"let chart of data.charts\" matTooltip=\"{{chart.name}}\" class=\"list-item list-item-text\" [ngClass]=\"isChartSelected(chart)\" (click)=\"selectedChart = chart;loadChartConfig();\">\n                            <span>{{chart.name}}</span>\n                            <mat-icon [matMenuTriggerFor]=\"configMenu\" style=\"position: absolute; right: 10px;cursor:pointer;color:gray;\">more_vert</mat-icon>\n                            <mat-menu #configMenu [overlapTrigger]=\"false\" style=\"color:#000000\">\n                                <button mat-menu-item (click)=\"editChart(chart)\" style=\"color:#000000;font-size: 14px;\">{{'chart.config-rename' | translate}}</button>\n                                <button mat-menu-item (click)=\"deleteChart(chart)\" style=\"color:#000000;font-size: 14px;\">{{'chart.config-delete' | translate}}</button>\n                            </mat-menu>\n                        </mat-list-item>\n                    </mat-list>\n                </mat-grid-tile>\n                <mat-grid-tile class=\"device-list\">\n                    <mat-list class=\"list\">\n                        <mat-list-item class=\"list-item list-header\">\n                            <span>{{'chart.config-devices' | translate}}</span>\n                        </mat-list-item>\n                        <mat-list-item *ngFor=\"let device of data.devices;\" matTooltip=\"{{device.name}}\" class=\"list-item list-item-text\" [ngClass]=\"isDeviceSelected(device)\" (click)=\"selectDevice(device);\">\n                            <span>{{device.name}}</span>\n                        </mat-list-item>\n                    </mat-list>\n                </mat-grid-tile>\n                <mat-grid-tile class=\"tag-list\">\n                    <mat-list class=\"list\">\n                        <mat-list-item class=\"list-item list-header\">\n                            <span>{{'chart.config-tags' | translate}}</span>\n                        </mat-list-item>\n                        <mat-selection-list #selTags [(ngModel)]=\"selectedTags\" [disabled]=\"(selectedChart.id)?false:true\" (selectionChange)=\"tagSelectionChanged($event)\" style=\"padding-top: 0px;\">\n                            <mat-list-option *ngFor=\"let tag of selectedDevice.tags\" matTooltip=\"{{getTagLabel(tag)}}\" [selected]=\"tag.selected\" [value]=\"tag\" class=\"list-item list-item-text\" checkboxPosition=\"before\">\n                                {{getTagLabel(tag)}}\n                            </mat-list-option>\n                        </mat-selection-list>\n                    </mat-list>\n                </mat-grid-tile>\n            </mat-grid-list>\n        </div>\n        <div class=\"panelBottom\">\n            <mat-list class=\"list\">\n                <mat-list-item class=\"list-item list-header\">\n                    <span style=\"width: 30%;max-width: 30%;\">{{'chart.config-line-name' | translate}}</span>\n                    <span style=\"width: 25%;max-width: 25%;\">{{'chart.config-line-label' | translate}}</span>\n                    <span style=\"width: 25%;max-width: 25%;\">{{'chart.config-devices' | translate}}</span>\n                    <span style=\"width: 10%;max-width: 10%;\">{{'chart.config-line-yaxis' | translate}}</span>\n                </mat-list-item>\n                <div style=\"height: calc(100% - 36px); overflow-y: auto\">\n                    <mat-list-item *ngFor=\"let line of selectedChart.lines\" class=\"list-item list-item-hover\" (click)=\"editChartLine(line)\">\n                        <mat-icon (click)=\"$event.stopPropagation();removeChartLine(line)\" style=\"color:gray;font-size: 20px\">delete</mat-icon>\n                        <div class=\"list-item-text\" style=\"width: 30%;max-width: 30%;\">\n                            <span>{{getDeviceTagName(line)}}</span>\n                        </div>\n                        <div class=\"list-item-text\" style=\"width: 25%;max-width: 25%;\">\n                            <span>{{line.label}}</span>\n                        </div>                        \n                        <div class=\"list-item-text\" style=\"width: 25%;max-width: 25%;\">\n                            <span>{{line.device}}</span>\n                        </div>\n                        <div class=\"list-item-text\" style=\"width: 10%;max-width: 10%;\">\n                            <span>{{line.yaxis}}</span>\n                        </div>                        \n                        <div [style.background-color]=\"line.color\" style=\"height:20px; width:30px\"></div>\n                    </mat-list-item>\n                </div>\n            </mat-list>\n        </div>\n    </div>\n\n    <div mat-dialog-actions class=\"dialog-action\">\n        <button mat-raised-button (click)=\"onNoClick()\">{{'dlg.cancel' | translate}}</button>\n        <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"data\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\n    </div>\n</div>\n"

            /***/
}),

/***/ "./app/editor/chart-config/chart-config.component.ts":
/*!***********************************************************!*\
  !*** ./app/editor/chart-config/chart-config.component.ts ***!
  \***********************************************************/
/*! exports provided: ChartConfigComponent, DialogListItem, DialogChartLine */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChartConfigComponent", function () { return ChartConfigComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DialogListItem", function () { return DialogListItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DialogChartLine", function () { return DialogChartLine; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "../node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../_helpers/utils */ "./app/_helpers/utils.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };
            var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
                return function (target, key) { decorator(target, key, paramIndex); }
            };



            var ChartConfigComponent = /** @class */ (function () {
                function ChartConfigComponent(dialog, dialogRef, param) {
                    var _this = this;
                    this.dialog = dialog;
                    this.dialogRef = dialogRef;
                    this.param = param;
                    this.selectedChart = { id: null, name: null, lines: [] };
                    this.selectedDevice = { id: null, name: null, tags: [] };
                    this.selectedTags = [];
                    this.data = { charts: [], devices: [] };
                    this.defaultColor = _helpers_utils__WEBPACK_IMPORTED_MODULE_2__["Utils"].defaultColor;
                    this.lineColor = _helpers_utils__WEBPACK_IMPORTED_MODULE_2__["Utils"].lineColor;
                    this.data.charts = param.charts;
                    Object.values(param.devices).forEach(function (device) {
                        var devicobj = Object.assign({}, device);
                        devicobj.tags = Object.values(device.tags);
                        _this.data.devices.push(devicobj);
                    });
                }
                ChartConfigComponent.prototype.ngOnInit = function () {
                };
                ChartConfigComponent.prototype.onNoClick = function () {
                    this.dialogRef.close();
                };
                ChartConfigComponent.prototype.onOkClick = function () {
                    this.dialogRef.close({ charts: this.data.charts });
                };
                ChartConfigComponent.prototype.editChart = function (chart) {
                    var _this = this;
                    var dialogRef = this.dialog.open(DialogListItem, {
                        position: { top: '60px' },
                        data: { name: (chart) ? chart.name : '' }
                    });
                    dialogRef.afterClosed().subscribe(function (result) {
                        if (result && result.name && result.name.length > 0) {
                            // this.dirty = true;
                            if (chart) {
                                chart.name = result.name;
                            }
                            else {
                                _this.data.charts.push({ id: _helpers_utils__WEBPACK_IMPORTED_MODULE_2__["Utils"].getShortGUID(), name: result.name, lines: [] });
                            }
                        }
                    });
                };
                ChartConfigComponent.prototype.deleteChart = function (chart) {
                    var found = -1;
                    for (var i = 0; i < this.data.charts.length; i++) {
                        if (chart.id === this.data.charts[i].id) {
                            found = i;
                        }
                    }
                    if (found >= 0) {
                        this.data.charts.splice(found, 1);
                        this.selectedChart = { id: null, name: null, lines: [] };
                    }
                };
                ChartConfigComponent.prototype.selectDevice = function (device) {
                    this.selectedDevice = JSON.parse(JSON.stringify(device));
                    this.loadDeviceConfig();
                };
                ChartConfigComponent.prototype.loadChartConfig = function () {
                    this.selectedDevice = { id: null, name: null, tags: [] };
                    this.loadDeviceConfig();
                };
                ChartConfigComponent.prototype.loadDeviceConfig = function () {
                    var _this = this;
                    if (this.selectedChart && this.selectedChart.lines && this.selectedDevice && this.selectedDevice.name) {
                        this.selectedDevice.tags.forEach(function (tag) {
                            tag.selected = false;
                            _this.selectedChart.lines.forEach(function (line) {
                                if (line.device === _this.selectedDevice.name && line.id === tag.id) {
                                    tag.selected = true;
                                }
                            });
                        });
                    }
                };
                /**
                 * add or remove the selected device tags to the selected chart in char-line list
                 * @param chart
                 * @param device
                 * @param tags
                 */
                ChartConfigComponent.prototype.checkChartTags = function (chart, device, tags) {
                    if (chart && chart.id) {
                        var toremove = [];
                        // check to remove
                        if (chart.lines) {
                            for (var i = 0; i < chart.lines.length; i++) {
                                if (chart.lines[i].device === device.name) {
                                    var found = -1;
                                    for (var x = 0; x < tags.length; x++) {
                                        if (chart.lines[i].id === tags[x].id) {
                                            found = i;
                                            break;
                                        }
                                    }
                                    if (found < 0) {
                                        toremove.push(i);
                                    }
                                    // if (tags.map(x => x.id).indexOf(chart.lines[i].id) === -1) {
                                    //     toremove.push(i);
                                    // }
                                }
                            }
                        }
                        // remove
                        for (var i = 0; i < toremove.length; i++) {
                            chart.lines.splice(toremove[i], 1);
                        }
                        // add if not exist
                        for (var x = 0; x < tags.length; x++) {
                            var found = false;
                            if (chart.lines) {
                                for (var i = 0; i < chart.lines.length; i++) {
                                    if (chart.lines[i].device === device.name && chart.lines[i].id === tags[x].id) {
                                        found = true;
                                    }
                                }
                            }
                            if (!found) {
                                var myCopiedObject = {
                                    id: tags[x].id, name: this.getTagLabel(tags[x]), device: device.name, color: this.getNextColor(),
                                    label: this.getTagLabel(tags[x]), yaxis: 1
                                };
                                chart.lines.push(myCopiedObject);
                            }
                        }
                    }
                };
                ChartConfigComponent.prototype.tagSelectionChanged = function (event) {
                    this.checkChartTags(this.selectedChart, this.selectedDevice, this.selectedTags);
                };
                ChartConfigComponent.prototype.editChartLine = function (line) {
                    var dialogRef = this.dialog.open(DialogChartLine, {
                        position: { top: '60px' },
                        data: { id: line.id, device: line.device, name: line.name, label: line.label, color: line.color, yaxis: line.yaxis }
                    });
                    dialogRef.afterClosed().subscribe(function (result) {
                        if (result) {
                            line.label = result.label;
                            line.color = result.color;
                            line.yaxis = result.yaxis;
                        }
                    });
                };
                ChartConfigComponent.prototype.removeChartLine = function (tag) {
                    for (var i = 0; i < this.selectedTags.length; i++) {
                        if (tag.id === this.selectedTags[i].id) {
                            this.selectedTags.splice(i, 1);
                            break;
                        }
                    }
                    for (var i = 0; i < this.selectedChart.lines.length; i++) {
                        if (this.selectedChart.lines[i].id === tag.id) {
                            this.selectedChart.lines.splice(i, 1);
                            break;
                        }
                    }
                    this.loadDeviceConfig();
                };
                ChartConfigComponent.prototype.isChartSelected = function (chart) {
                    if (chart === this.selectedChart) {
                        return 'list-item-selected';
                    }
                };
                ChartConfigComponent.prototype.isDeviceSelected = function (device) {
                    if (device && device.name === this.selectedDevice.name) {
                        return 'list-item-selected';
                    }
                };
                ChartConfigComponent.prototype.getTagLabel = function (tag) {
                    if (tag.label) {
                        return tag.label;
                    }
                    else {
                        return tag.name;
                    }
                };
                ChartConfigComponent.prototype.getDeviceTagName = function (line) {
                    var devices = this.data.devices.filter(function (x) { return x.name === line.device; });
                    if (devices && devices.length > 0) {
                        var tags = devices[0].tags;
                        for (var i = 0; i < tags.length; i++) {
                            if (line.id === tags[i].id) {
                                return this.getTagLabel(tags[i]);
                            }
                        }
                    }
                    return '';
                };
                ChartConfigComponent.prototype.getNextColor = function () {
                    for (var x = 0; x < this.lineColor.length; x++) {
                        var found = false;
                        if (this.selectedChart.lines) {
                            for (var i = 0; i < this.selectedChart.lines.length; i++) {
                                if (this.selectedChart.lines[i].color === this.lineColor[x]) {
                                    found = true;
                                }
                            }
                        }
                        if (!found) {
                            return this.lineColor[x];
                        }
                    }
                    return _helpers_utils__WEBPACK_IMPORTED_MODULE_2__["Utils"].lineColor[0];
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatSelectionList"]),
                    __metadata("design:type", _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatSelectionList"])
                ], ChartConfigComponent.prototype, "selTags", void 0);
                ChartConfigComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'app-chart-config',
                        template: __webpack_require__(/*! ./chart-config.component.html */ "./app/editor/chart-config/chart-config.component.html"),
                        styles: [__webpack_require__(/*! ./chart-config.component.css */ "./app/editor/chart-config/chart-config.component.css")]
                    }),
                    __param(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MAT_DIALOG_DATA"])),
                    __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialog"],
                    _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialogRef"], Object])
                ], ChartConfigComponent);
                return ChartConfigComponent;
            }());

            var DialogListItem = /** @class */ (function () {
                // defaultColor = Utils.defaultColor;
                function DialogListItem(dialogRef, data) {
                    this.dialogRef = dialogRef;
                    this.data = data;
                }
                DialogListItem.prototype.onNoClick = function () {
                    this.dialogRef.close();
                };
                DialogListItem.prototype.onOkClick = function () {
                    this.dialogRef.close(true);
                };
                DialogListItem = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'dialog-list-item',
                        template: __webpack_require__(/*! ./list-item.dialog.html */ "./app/editor/chart-config/list-item.dialog.html"),
                    }),
                    __param(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MAT_DIALOG_DATA"])),
                    __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialogRef"], Object])
                ], DialogListItem);
                return DialogListItem;
            }());

            var DialogChartLine = /** @class */ (function () {
                function DialogChartLine(dialogRef, data) {
                    this.dialogRef = dialogRef;
                    this.data = data;
                    this.defaultColor = _helpers_utils__WEBPACK_IMPORTED_MODULE_2__["Utils"].defaultColor;
                    this.chartAxesType = [1, 2, 3, 4];
                }
                DialogChartLine.prototype.onNoClick = function () {
                    this.dialogRef.close();
                };
                DialogChartLine.prototype.onOkClick = function () {
                    this.dialogRef.close(this.data);
                };
                DialogChartLine = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'dialog-chart-line',
                        template: __webpack_require__(/*! ./chart-line.dialog.html */ "./app/editor/chart-config/chart-line.dialog.html"),
                        styles: [__webpack_require__(/*! ./chart-config.component.css */ "./app/editor/chart-config/chart-config.component.css")]
                    }),
                    __param(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MAT_DIALOG_DATA"])),
                    __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialogRef"], Object])
                ], DialogChartLine);
                return DialogChartLine;
            }());



            /***/
}),

/***/ "./app/editor/chart-config/chart-line.dialog.html":
/*!********************************************************!*\
  !*** ./app/editor/chart-config/chart-line.dialog.html ***!
  \********************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div>\n    <h1 mat-dialog-title style=\"display:inline-block; cursor:move;\" mat-dialog-draggable>{{'chart.config-name-title' | translate}}</h1>\n    <mat-icon (click)=\"onNoClick()\" style=\"float:right;margin-right:-10px;margin-top:-10px;cursor:pointer;color:gray;\">clear</mat-icon>\n    <div mat-dialog-content>\n        <div class=\"my-form-field\" style=\"display: block;margin-bottom: 10px;\">\n            <span>{{'chart.config-line-name' | translate}}</span>\n            <input [(ngModel)]=\"data.name\" type=\"text\" style=\"width:300px\" [disabled]=\"true\">\n        </div>\n        <div class=\"my-form-field\" style=\"display: block;margin-bottom: 10px;\">\n            <span>{{'chart.config-line-label' | translate}}</span>\n            <input [(ngModel)]=\"data.label\" type=\"text\" style=\"width:300px\">\n        </div>\n        <div class=\"my-form-field\" style=\"width: 140px;\">\n            <span>{{'chart.config-line-yaxis' | translate}}</span>\n            <mat-select [(value)]=\"data.yaxis\">\n                <mat-option *ngFor=\"let yaxis of chartAxesType\" [value]=\"yaxis\">\n                    {{ yaxis }}\n                </mat-option>\n            </mat-select>\n        </div>\n        <div class=\"my-form-field slider-field color-field\" style=\"padding-left: 30px;\">\n            <span>{{'chart.property-color.background' | translate}}</span>\n            <input [(colorPicker)]=\"data.color\" [cpAlphaChannel]=\"'always'\" class=\"input-color\" [style.background]=\"data.color\"\n                [cpPresetColors]=\"defaultColor\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\" [cpCancelButtonClass]=\"'cpCancelButtonClass'\"\n                [cpCancelButtonText]=\"'Cancel'\" [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\" style=\"padding: 8px 0 0 0; width: 88px\"\n                [cpPosition]=\"'right'\" />\n        </div>\n        <div class=\"my-form-field\" style=\"display: block;height: 10px;\">\n        </div>\n    </div>\n    <div mat-dialog-actions class=\"dialog-action\">\n        <button mat-raised-button (click)=\"onNoClick()\">{{'dlg.cancel' | translate}}</button>\n        <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"data\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\n    </div>\n</div>"

            /***/
}),

/***/ "./app/editor/chart-config/list-item.dialog.html":
/*!*******************************************************!*\
  !*** ./app/editor/chart-config/list-item.dialog.html ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div>\n    <h1 mat-dialog-title style=\"display:inline-block; cursor:move;\" mat-dialog-draggable>{{'chart.config-name-title' | translate}}</h1>\n    <mat-icon (click)=\"onNoClick()\" style=\"float:right;margin-right:-10px;margin-top:-10px;cursor:pointer;color:gray;\">clear</mat-icon>\n    <div mat-dialog-content>\n        <div class=\"my-form-field\" style=\"display: block;margin-bottom: 10px;\">\n            <span>{{'chart.config-name' | translate}}</span>\n            <input [(ngModel)]=\"data.name\" type=\"text\" style=\"width:300px\">\n        </div>\n    </div>\n    <div mat-dialog-actions class=\"dialog-action\">\n        <button mat-raised-button (click)=\"onNoClick()\">{{'dlg.cancel' | translate}}</button>\n        <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"data\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\n    </div>\n</div>"

            /***/
}),

/***/ "./app/editor/docname.dialog.html":
/*!****************************************!*\
  !*** ./app/editor/docname.dialog.html ***!
  \****************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div>\n    <h1 mat-dialog-title style=\"display:inline-block;cursor:move;\" mat-dialog-draggable>{{'dlg.docname-title' | translate}}</h1>\n    <mat-icon (click)=\"onNoClick()\" class=\"dialog-close-btn\" cdkFocusInitial>clear</mat-icon>\n    <div mat-dialog-content>\n        <div class=\"my-form-field\" style=\"display: block;margin-bottom: 10px;\">\n            <span>{{'dlg.docname-name' | translate}}</span>\n            <input [(ngModel)]=\"data.name\" type=\"text\" style=\"width:300px\" [readonly]=\"data.readonly\">\n        </div>\n        <!-- <div style=\"display: grid; margin-bottom: 20px;\">\n      <input [(ngModel)]=\"data.name\" type=\"text\" width=\"100%\" [readonly]=\"data.readonly\">\n    </div> -->\n    </div>\n    <div mat-dialog-actions class=\"dialog-action\">\n        <button mat-raised-button (click)=\"onNoClick()\">{{'dlg.cancel' | translate}}</button>\n        <button mat-raised-button [disabled]=\"!isValid(data.name)\" color=\"primary\" [mat-dialog-close]=\"data\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\n    </div>\n</div>"

            /***/
}),

/***/ "./app/editor/docproperty.dialog.css":
/*!*******************************************!*\
  !*** ./app/editor/docproperty.dialog.css ***!
  \*******************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ".slider-field span {\n    padding-left: 2px;\n    text-overflow: clip;\n    max-width: 125px;\n    white-space: nowrap;\n    overflow: hidden;\n}\n\n.slider-field mat-slider {\n    background-color: var(--formSliderBackground);\n    height: 30px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZWRpdG9yL2RvY3Byb3BlcnR5LmRpYWxvZy5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsbUJBQW1CO0lBQ25CLGdCQUFnQjtJQUNoQixtQkFBbUI7SUFDbkIsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksNkNBQTZDO0lBQzdDLFlBQVk7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9lZGl0b3IvZG9jcHJvcGVydHkuZGlhbG9nLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zbGlkZXItZmllbGQgc3BhbiB7XG4gICAgcGFkZGluZy1sZWZ0OiAycHg7XG4gICAgdGV4dC1vdmVyZmxvdzogY2xpcDtcbiAgICBtYXgtd2lkdGg6IDEyNXB4O1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLnNsaWRlci1maWVsZCBtYXQtc2xpZGVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1mb3JtU2xpZGVyQmFja2dyb3VuZCk7XG4gICAgaGVpZ2h0OiAzMHB4O1xufSJdfQ== */"

            /***/
}),

/***/ "./app/editor/docproperty.dialog.html":
/*!********************************************!*\
  !*** ./app/editor/docproperty.dialog.html ***!
  \********************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div>\n    <h1 mat-dialog-title style=\"display:inline-block; cursor:move;\" mat-dialog-draggable>{{'dlg.docproperty-title' | translate}}</h1>\n    <mat-icon (click)=\"onNoClick()\" class=\"dialog-close-btn\" cdkFocusInitial>clear</mat-icon>\n    <div mat-dialog-content style=\"width: 300px;\">\n        <div *ngIf=\"data.type !== cardViewType\">\n            <div style=\"display: block; width: 100%; margin-top: 10px;\">\n                <div class=\"my-form-field\" style=\"display: inline-block;\">\n                    <span>{{'dlg.docproperty-width' | translate}}</span>\n                    <input numberOnly [(ngModel)]=\"data.profile.width\" style=\"width: 120px\" type=\"text\">\n                </div>\n                <div class=\"my-form-field\" style=\"float: right\">\n                    <span>{{'dlg.docproperty-height' | translate}}</span>\n                    <input numberOnly [(ngModel)]=\"data.profile.height\" style=\"width: 120px\" type=\"text\">\n                </div>\n            </div>\n            <div style=\"display: block; margin-top: 20px; width: 100%\">\n                <div class=\"my-form-field\">\n                    <span>{{'dlg.docproperty-size' | translate}}</span>\n                    <mat-select placeholder=\"{{'dlg.docproperty-select' | translate}}\" (selectionChange)=\"onSizeChange($event.value)\" style=\"width: 293px;\">\n                        <mat-option *ngFor=\"let prop of propSizeType\" [value]=\"prop.value\">\n                            {{ prop.text }}\n                        </mat-option>\n                    </mat-select>\n                </div>\n            </div>\n        </div>\n        <div *ngIf=\"data.type === cardViewType\">\n            <div class=\"my-form-field slider-field\" style=\"margin-top: 10px\">\n                <span>{{'dlg.docproperty-margin' | translate}}</span>\n                <mat-slider style=\"display:inline-block;width: 100px;\" [max]=\"20\" [min]=\"0\" [step]=\"1\" [thumbLabel]=\"true\" [(ngModel)]=\"data.profile.margin\">\n                </mat-slider>\n            </div>\n        </div>\n        <div style=\"display: block; margin-top: 20px; margin-bottom: 20px; width: 100%\">\n            <div class=\"my-form-field\" style=\"width: 300px;\">\n                <span style=\"font-size:12px;\">{{'dlg.docproperty-background' | translate}}</span>\n                <input style=\"width: 292px; border: 1px solid rgba(0,0,0,0.2); height:15px !important\" readonly [(colorPicker)]=\"data.profile.bkcolor\" class=\"input-color\"\n                    title=\"Change stroke color\" [style.background]=\"data.profile.bkcolor\" [cpPresetColors]=\"defaultColor\" [cpAlphaChannel]=\"'always'\" [cpPosition]=\"'bottom'\"\n                    [value]=\"data.profile.bkcolor\" [cpCancelButton]=\"true\" [cpCancelButtonClass]=\"'cpCancelButtonClass'\" [cpCancelButtonText]=\"'Cancel'\" [cpOKButton]=\"true\"\n                    [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\" />\n            </div>\n        </div>\n    </div>\n    <div mat-dialog-actions class=\"dialog-action\">\n        <button mat-raised-button (click)=\"onNoClick()\">{{'dlg.cancel' | translate}}</button>\n        <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"data\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\n    </div>\n</div>"

            /***/
}),

/***/ "./app/editor/editor.component.css":
/*!*****************************************!*\
  !*** ./app/editor/editor.component.css ***!
  \*****************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "#svg_editor_container {\n    background: #aaa;\n    height: 100%;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    position: absolute;\n    top: 0px;\n    left: 0px;\n}\n\n.svg-workarea-toolbar {\n    min-height: 46px;\n    height: 46px;\n}\n\n.svg-workarea-leftbar-p {\n    box-shadow: none !important;\n    background-color: var(--toolboxBackground);\n    color: var(--toolboxColor);\n}\n\n.svg-workarea-leftbar-h {\n    max-height: 23px;\n    text-align: center;\n    vertical-align: middle;\n    padding-left: 0px;\n    padding-right: 0px;\n    border-top: 1px solid var(--toolboxBorder);\n    margin-bottom: 0px;\n    box-shadow: 0px 1px 3px 0px #000;\n}\n\n.svg-workarea-leftbar-h span {\n    padding-top: 5px !important;\n    padding-left: 3px;\n    font-size: 11px;\n}\n\n.svg-workarea-leftbar-h:active {\n    /* margin-bottom: 4px; */\n}\n\n/* .mat-expansion-panel-content {\n  background-color: rgb(53, 3, 3);\n} */\n\n.svg-workarea-flybar-h {\n    max-height: 23px;\n    text-align: center;\n    vertical-align: middle;\n    padding-left: 0px;\n    padding-right: 0px;\n    border-top: 1px solid var(--toolboxBorder);\n    box-shadow: 0px 1px 3px 0px #000;\n }\n\n.svg-workarea-flybar-h span {\n     padding-top: 5px !important;\n     padding-left: 3px;\n     font-size: 11px;\n }\n\n/* .svg-workarea-flybar-h:hover {\n } */\n\n.svg-workarea-flybar-h:enabled .svg-workarea-flybar-h::-moz-selection{\n     color: rgba(255,255,255,1);\n }\n\n.svg-workarea-flybar-h:enabled .svg-workarea-flybar-h::selection{\n     color: rgba(255,255,255,1);\n }\n\n.svg-workarea-fly-p {\n    box-shadow: none !important;\n    background-color: var(--toolboxBackground);\n    color: var(--toolboxColor);\n    width: 200px;\n    padding-left: 0px;\n    padding-right: 0px;\n}\n\n.svg-property-split3:after {\n    display: table;\n    clear: both;\n}\n\n.svg-property-split3 div {\n    /* float: left; */\n    /* width: 49%; */\n    display: inline-block;\n}\n\n.svg-property-split2:after {\n    display: table;\n    clear: both;\n}\n\n.svg-property-split2 div {\n    /* float: left; */\n    /* width: 49%; */\n    display: inline-block;\n}\n\n.svg-property {\n    color: var(--toolboxFlyColor);\n}\n\n.svg-property span {\n    /* float: left; */\n    display: block;\n    font-size: 10px;\n    margin: 0px 5px 0px 10px;\n}\n\n.svg-property input {\n    /* float: right; */\n    /* position: relative; */\n    /* left: 0px; */\n    /* right: 0px; */\n    display: block;\n    margin: 0px 10px 12px 10px;\n    border: unset;\n    background-color: inherit;\n    color: inherit;\n    border-bottom: 1px solid var(--toolboxFlyColor);\n}\n\n.svg-workarea-container {\n    display: block;\n    height: 100%;\n}\n\n#rulers > div {\n    background-color: var(--svgEditRulersBackground) !important;\n    color: var(--svgEditRulersColor) !important;\n}\n\n#svgcanvas {\n    background-color: var(--svgEditWorkareaBackground) !important;\n}\n\n.contextMenu {\n    background-color: var(--svgEditWorkareaContextMenu) !important;\n}\n\n.contextMenu A {\n    color: var(--svgEditWorkareaContextColor) !important;\n}\n\n.contextMenu LI:not(.disabled) A:hover {\n    color: var(--toolboxItemActiveColor) !important;\n}\n\n.contextMenu LI.separator {\n    margin-top: 0px !important;\n    border-color: var(--svgEditWorkareaContextBorder) !important;\n}\n\n.svg-tools-fly {\n    z-index: 9999;\n    position: absolute;\n    right: 25px;\n    top: 55px;\n    /* overflow-y: auto; */\n    max-height: calc(100% - 75px);\n    background-color: var(--toolboxBackground);\n    box-shadow: 0px 1px 4px 0px #000;\n}\n\n.svg-tool-button {\n    vertical-align: middle;\n    display: inline-table;\n    /* display: inline-block; */\n    cursor: pointer;\n    height: 30px;\n    width: 30px;\n    border-radius: 50%;\n    margin: 2px 2px 2px 2px;\n    background-color: var(--toolboxButton);\n    /* padding-top: 5px; */\n}\n\n.svg-tool-button span {\n    display: block;\n    margin: auto;\n}\n\n.svg-tool-button:hover {\n    background: rgba(0, 0, 0, 0.1);\n}\n\n.svg-tool-active, .svg-tool-active:active, .svg-tool-active:hover {\n    background-color: rgba(48,89,175,1);\n}\n\n.leave-header-area {\n    margin-top: 36px;\n}\n\n.svg-sidenav {\n    min-width: 160px;\n    max-width: 200px;\n    width: 200px;\n    background: var(--sidenavBackgroung);\n}\n\n/* tool bar top */\n\n.tools_panel {\n    background-color: var(--headerBackground);\n    color: var(--headerColor);\n}\n\n.main-btn {\n    height: 34px;\n    width: 34px;\n    min-width: unset !important;\n    padding: unset !important;\n    line-height: 34px;\n    margin-left: 5px;\n    margin-right: 5px;\n}\n\n.main-btn mat-icon {\n    font-size: 24px;\n    height: unset;\n    width: unset;\n}\n\n.main-btn .to-top {\n    display: inline-block;    ;\n    height: 34px;\n    width: 34px;    \n}\n\n.main-btn .to-bottom  {\n    display: inline-block;\n    height: 34px;\n    width: 34px;\n}\n\n.main-btn .to-path {\n    display: inline-block;\n    height: 34px;\n    width: 34px;\n}\n\n.main-btn .group {\n    background: url(\"/assets/images/group.svg\") no-repeat center center;\n    background-size: contain;\n    display: inline-block;\n    height: 34px;\n    width: 34px;\n}\n\n.main-btn .ungroup {\n    background: url(\"/assets/images/ungroup.svg\") no-repeat center center;\n    background-size: contain;\n    display: inline-block;\n    height: 34px;\n    width: 34px;\n}\n\n.main-btn-sep {\n    width: 1px;\n    background: #888;\n    border-left: 1px outset #888;\n    margin: 5px 3px;\n    padding: 0;\n    height: 24px;\n}\n\n/* --------------- */\n\n/* left panel */\n\n/* --------------- */\n\n.view-panel {\n    max-height: 400px;\n    overflow: auto;\n}\n\n.leftbar-edit-btn {\n    margin-top: 2px;\n    font-size: 18px;\n    height: 18px;\n    width: 18px;\n    padding-right: 15px;\n}\n\n.leftbar-panel {\n    margin-top: 4px;\n    padding: 0px 0px 0px 0px;\n    font-size: 11px;\n    background-color: var(--toolboxPanelBackgroung);\n    color: var(--toolboxColor);\n    overflow: auto;\n    max-height: 200px;\n}\n\n.leftbar-item {\n    padding: 3px 0px 1px 0px;\n    display: flow-root;\n}\n\n.leftbar-item-active {\n    background-color: var(--toolboxItemActiveBackgroung);\n    color: var(--toolboxItemActiveColor);\n}\n\n.leftbar-item span {\n    float: left;\n}\n\n.leftbar-item .leftbar-item-type {\n    float: left;\n    padding-left: 4px;\n    font-size: 16px;\n    line-height: 20px;\n    opacity:0.5;\n}\n\n.leftbar-item mat-icon {\n    float: right;\n    font-size: 18px;\n}\n\n::ng-deep .svg-workarea-leftbar-p .mat-expansion-panel-body {\n    margin: 0px 0px 0px 0px !important;\n    padding: 0px 0px 0px 0px !important;\n    /* padding-left: 10px !important; */\n    flex-wrap: wrap !important;\n}\n\n::ng-deep .svg-workarea-fly-p .mat-expansion-panel-body {\n    margin: 0px 0px 0px 0px !important;\n    padding: 0px 0px 0px 0px !important;\n    /* padding-left: 10px !important; */\n    flex-wrap: wrap !important;\n}\n\n::ng-deep .mat-menu-item {\n    font-size: 11px;\n    height: 30px !important;\n    line-height: unset !important;\n}\n\n.rightbar-panel {\n    margin-top: 4px;\n    background-color: var(--toolboxPanelBackgroung);\n    color: var(--toolboxColor);\n}\n\n.rightbar-input {\n    width: 70px;\n}\n\n.mat-expansion-panel-header-title span {\n    padding-top: 3px;\n}\n\n.mat-expansion-panel-spacing {\n    margin: 0px 0px 0px 0px !important;\n}\n\n.bottom-bar {\n    position: absolute;\n    left: 0px;\n    right: 0;\n    bottom: 0;\n    height: 30px;\n    overflow: visible;\n}\n\n.zoom-menu {\n    float: left;\n    padding-left: 5px;\n    width: 90px;\n}\n\n.zoom-value {\n    border: unset;\n    display: inline-block;\n}\n\n.zoom-label {\n    display: inline-block;\n    height: 25px;\n}\n\n.zoom-value span {\n    display: inline-block;\n}\n\n.zoom-value .selection,\nbutton {\n    display: inline-block;\n}\n\n.zoom-value button {\n    /* width: unset; */\n    z-index: 9999;\n    background-color: var(--footZoomBackground);\n    color: var(--footZoomColor);\n    border: unset;\n}\n\n.zoom-value ul,\nli {\n    /* width: unset; */\n    background-color: var(--footZoomBackground);\n    color: var(--footZoomColor);\n    border: unset;\n}\n\n.zoom-value ul {\n    left: 0px;\n}\n\n.zoom-value li:hover {\n    background-color: var(--footZoomBackgroundHover);\n}\n\n.colors {\n    position: absolute;\n    left: 25px;\n    top: 0px;\n}\n\n.colors-palette {\n    position: absolute;\n    left: 165px;\n    top: 0px;\n    right: 0px;\n    bottom: 0px;\n}\n\n.color-fill {\n    position: relative;\n    top: 4px;\n    left: 12px;\n    cursor: pointer;\n    width: 13px;\n    height: 13px;\n    border: 1px solid rgba(71, 71, 71, 1);\n}\n\n.color-stroke {\n    position: absolute;\n    top: 4px;\n    left: 30px;\n    cursor: pointer;\n    width: 13px;\n    height: 13px;\n    border: 1px solid rgba(71, 71, 71, 1);\n}\n\n.style-stroke {\n    display: block !important;\n    margin: 0px 10px 12px 10px;\n    background-color: inherit;\n    color: inherit;\n    background-color: var(--toolboxPanelBackgroung);\n    color: var(--toolboxColor);\n}\n\n.style-stroke option {\n    background-color: var(--toolboxPanelBackgroung);\n    color: var(--toolboxColor);\n}\n\n.font-family {\n    display: block;\n    margin: 0px 10px 12px 10px;\n    background-color: inherit;\n    color: inherit;\n    width: 174px;\n}\n\n.font-family option {\n    background-color: var(--toolboxPanelBackgroung);\n    color: var(--toolboxColor);\n}\n\n.text-align {\n    display: block;\n    margin: 0px 10px 12px 10px;\n    background-color: inherit;\n    color: inherit;\n    width: 75px;\n}\n\n.text-align option {\n    background-color: var(--toolboxPanelBackgroung);\n    color: var(--toolboxColor);\n}\n\nselect#start_marker option[value=\"A\"] {\n    background: url(\"/assets/images/select-pointer.svg\");\n}\n\nselect#start_marker option[value=\"B\"] {\n    background: url(\"/assets/images/select-pointer.svg\");\n}\n\nselect#start_marker option[value=\"C\"] {\n    background: url(\"/assets/images/select-pointer.svg\");\n}\n\nselect#start_marker option[value=\"D\"] {\n    background: url(\"/assets/images/select-pointer.svg\");\n}\n\n.icon-select {\n    background: url(\"/assets/images/select-pointer.svg\") no-repeat center center;\n    background-size: contain;\n    height: 30px;\n    width: 30px;\n}\n\n.icon-pencil {\n    background: url(\"/assets/images/pencil.svg\") no-repeat center center;\n    background-size: contain;\n    height: 30px;\n    width: 30px;\n}\n\n.icon-line {\n    background: url(\"/assets/images/line.svg\") no-repeat center center;\n    background-size: contain;\n    height: 30px;\n    width: 30px;\n}\n\n.icon-rect {\n    background: url(\"/assets/images/rect.svg\") no-repeat center center;\n    background-size: contain;\n    height: 30px;\n    width: 30px;\n}\n\n.icon-circle {\n    background: url(\"/assets/images/circle.svg\") no-repeat center center;\n    background-size: contain;\n    height: 30px;\n    width: 30px;\n}\n\n.icon-ellipse {\n    background: url(\"/assets/images/ellipse.svg\") no-repeat center center;\n    background-size: contain;\n    height: 30px;\n    width: 30px;\n}\n\n.icon-path {\n    background: url(\"/assets/images/path.svg\") no-repeat center center;\n    background-size: contain;\n    height: 30px;\n    width: 30px;\n}\n\n.icon-text {\n    background: url(\"/assets/images/text.svg\") no-repeat center center;\n    background-size: contain;\n    height: 30px;\n    width: 30px;\n}\n\n.icon-image {\n    background: url(\"/assets/images/image.svg\") no-repeat center center;\n    background-size: contain;\n    height: 30px;\n    width: 30px;\n}\n\n.icon-align-left {\n    background: url(\"/assets/images/align-left.svg\") no-repeat center center;\n    background-size: contain;\n    height: 30px;\n    width: 30px;\n}\n\n.icon-align-center {\n    background: url(\"/assets/images/align-center.svg\") no-repeat center center;\n    background-size: contain;\n    height: 30px;\n    width: 30px;\n}\n\n.icon-align-right {\n    background: url(\"/assets/images/align-right.svg\") no-repeat center center;\n    background-size: contain;\n    height: 30px;\n    width: 30px;\n}\n\n.icon-align-top {\n    background: url(\"/assets/images/align-top.svg\") no-repeat center center;\n    background-size: contain;\n    height: 30px;\n    width: 30px;\n}\n\n.icon-align-middle {\n    background: url(\"/assets/images/align-middle.svg\") no-repeat center center;\n    background-size: contain;\n    height: 30px;\n    width: 30px;\n}\n\n.icon-align-bottom {\n    background: url(\"/assets/images/align-bottom.svg\") no-repeat center center;\n    background-size: contain;\n    height: 30px;\n    width: 30px;\n}\n\n.icon-flip-orizontal {\n    background: url(\"/assets/images/flip-orizontal.svg\") no-repeat center center;\n    background-size: contain;\n    height: 30px;\n    width: 30px;\n}\n\n.icon-flip-vertical {\n    background: url(\"/assets/images/flip-vertical.svg\") no-repeat center center;\n    background-size: contain;\n    height: 30px;\n    width: 30px;\n}\n\n.icon-linejoin-miter {\n    background: url(\"/assets/images/linejoin-miter.svg\") no-repeat center center;\n    background-size: contain;\n    height: 30px;\n    width: 30px;\n}\n\n.icon-linejoin-round {\n    background: url(\"/assets/images/linejoin-round.svg\") no-repeat center center;\n    background-size: contain;\n    height: 30px;\n    width: 30px;\n}\n\n.icon-linejoin-bevel {\n    background: url(\"/assets/images/linejoin-bevel.svg\") no-repeat center center;\n    background-size: contain;\n    height: 30px;\n    width: 30px;\n}\n\n.icon-linecap-butt {\n    background: url(\"/assets/images/linecap-butt.svg\") no-repeat center center;\n    background-size: contain;\n    height: 30px;\n    width: 30px;\n}\n\n.icon-linecap-square {\n    background: url(\"/assets/images/linecap-square.svg\") no-repeat center center;\n    background-size: contain;\n    height: 30px;\n    width: 30px;\n}\n\n.icon-linecap-round {\n    background: url(\"/assets/images/linecap-round.svg\") no-repeat center center;\n    background-size: contain;\n    height: 30px;\n    width: 30px;\n}\n\n.icon-tool {\n    background-size: auto;\n    height: 30px;\n    width: 30px;\n    color: rgba(255, 255, 255, 1);\n    background-position: center; /* Center the image */\n    background-repeat: no-repeat; /* Do not repeat the image */\n}\n\n.icon-switch {\n    background: url(\"/assets/images/switch.svg\") no-repeat center center;\n}\n\n.icon-value {\n    background: url(\"/assets/images/value.svg\") no-repeat center center;\n}\n\n.icon-editvalue {\n    background: url(\"/assets/images/editvalue.svg\") no-repeat center center;\n}\n\n.icon-selectvalue {\n    background: url(\"/assets/images/selectvalue.svg\") no-repeat center center;\n}\n\n.icon-progress-v {\n    background: url(\"/assets/images/progress-v.svg\") no-repeat center center;\n}\n\n.icon-semaphore {\n    background: url(\"/assets/images/semaphore.svg\") no-repeat center center;\n}\n\n.icon-button {\n    background: url(\"/assets/images/button.svg\") no-repeat center center;\n}\n\n.icon-chart {\n    background: url(\"/assets/images/chart.svg\") no-repeat center center;\n}\n\n.icon-bag {\n    background: url(\"/assets/images/bag.svg\") no-repeat center center;\n}\n\n.icon-pipe {\n    background: url(\"/assets/images/pipe.svg\") no-repeat center center;\n}\n\n.icon-slider {\n    background: url(\"/assets/images/slider.svg\") no-repeat center center;\n}\n\n/*# sourceMappingURL=data:application/json;base64, */"

            /***/
}),

/***/ "./app/editor/editor.component.html":
/*!******************************************!*\
  !*** ./app/editor/editor.component.html ***!
  \******************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div *ngIf=\"isLoading\" style=\"position:absolute;top:0px;left:0px;right:0px;bottom:0px;background-color:rgba(0,0,0,0.2); z-index: 99999;\">\n    <mat-progress-bar mode=\"indeterminate\" color=\"warn\" style=\"position: absolute; top: 0px; left: 0px; right: 0px; z-index: 99999;\">\n    </mat-progress-bar>\n</div>\n<div id=\"svg_editor_container\">\n    <mat-drawer-container class=\"svg-workarea-container\">\n        <!-- LEFT BAR -->\n        <mat-drawer mode=\"side\" opened=\"true\" class=\"svg-sidenav leave-header-area\" disableClose>\n            <mat-accordion multi=\"true\">\n                <mat-expansion-panel class=\"svg-workarea-leftbar-p\" (opened)=\"panelsState.panelView=true;savePanelState()\" (closed)=\"panelsState.panelView=false;savePanelState()\"\n                    hideToggle=\"true\" [expanded]=\"panelsState.panelView\">\n                    <mat-expansion-panel-header class=\"svg-workarea-leftbar-h\">\n                        <mat-panel-title>\n                            <mat-icon aria-label=\"Select\" *ngIf=\"panelsState.panelView\">expand_less</mat-icon>\n                            <mat-icon aria-label=\"Select\" *ngIf=\"!panelsState.panelView\">expand_more</mat-icon>\n                            <span>{{'editor.views' | translate}}</span> <!-- PROJECT VIEWS -->\n                        </mat-panel-title>\n                        <mat-icon aria-label=\"Add\" matTooltip=\"Add View\" *ngIf=\"panelsState.panelView\" class=\"leftbar-edit-btn\" (click)=\"onAddDoc();$event.stopPropagation()\">add\n                        </mat-icon>\n                        <mat-icon aria-label=\"Import\" matTooltip=\"{{'editor.view-import' | translate}}\" *ngIf=\"panelsState.panelView\" class=\"leftbar-edit-btn\"\n                            (click)=\"onImportView($event);$event.stopPropagation()\">system_update_alt</mat-icon>\n                        <input type=\"file\" #viewFileImportInput style=\"display: none\" id=\"viewFileUpload\" (click)=\"$event.stopPropagation()\"\n                            (change)=\"onViewFileChangeListener($event)\" accept=\".fuxav\" />\n                    </mat-expansion-panel-header>\n                    <div class=\"leftbar-panel view-panel\">\n                        <div *ngIf=\"hmi.views && hmi.views.length <= 0\">\n                            <br>\n                        </div>\n                        <div *ngFor=\"let item of getViewsSorted()\" (click)=\"onSelectView(item)\" [ngClass]=\"{'leftbar-item-active': isViewActive(item)}\"\n                            class=\"leftbar-item mycursor-pointer\">\n                            <mat-icon *ngIf=\"!item.type || item.type === svgViewType\" matTooltip=\"{{'editor.view-svg' | translate}}\" class=\"leftbar-item-type\">\n                                insert_drive_file\n                            </mat-icon>\n                            <mat-icon *ngIf=\"item.type === cardViewType\" matTooltip=\"{{'editor.view-cards' | translate}}\" class=\"leftbar-item-type\">\n                                dashboard\n                            </mat-icon>\n                            <span>{{item.name}}</span>\n                            <mat-icon aria-label=\"More\" [matMenuTriggerFor]=\"menuview\">more_vert</mat-icon>\n                            <mat-menu #menuview=\"matMenu\" class=\"leftbar-item-menu\">\n                                <button mat-menu-item (click)=\"onDeleteView(item)\">{{'editor.view-delete' | translate}}</button>\n                                <button mat-menu-item (click)=\"onRenameView(item)\">{{'editor.view-rename' | translate}}</button>\n                                <button mat-menu-item (click)=\"onPropertyView(item)\">{{'editor.view-property' | translate}}</button>\n                                <button mat-menu-item (click)=\"onCloneView(item)\" *ngIf=\"item.type !== cardViewType\">{{'editor.view-clone' | translate}}</button>\n                                <button mat-menu-item (click)=\"onExportView(item)\" *ngIf=\"item.type !== cardViewType\">{{'editor.view-export' | translate}}</button>\n                            </mat-menu>\n                        </div>\n                    </div>\n                </mat-expansion-panel>\n                <div *ngIf=\"editorMode === editorModeType.SVG\">\n                    <mat-expansion-panel class=\"svg-workarea-leftbar-p\" (opened)=\"panelsState.panelGeneral=true;savePanelState()\"\n                        (closed)=\"panelsState.panelGeneral=false;savePanelState()\" hideToggle=\"true\" [expanded]=\"panelsState.panelGeneral\">\n                        <mat-expansion-panel-header class=\"svg-workarea-leftbar-h\">\n                            <mat-panel-title>\n                                <mat-icon aria-label=\"Select\" *ngIf=\"panelsState.panelGeneral\">expand_less</mat-icon>\n                                <mat-icon aria-label=\"Select\" *ngIf=\"!panelsState.panelGeneral\">expand_more</mat-icon>\n                                <span>{{'editor.general' | translate}}</span> <!-- GENERAL -->\n                            </mat-panel-title>\n                        </mat-expansion-panel-header>\n\n                        <div id=\"__tools_left\" class=\"leftbar-panel\">\n                            <div class=\"svg-tool-button\" [ngClass]=\"{'svg-tool-active': isModeActive('select')}\" (click)=\"setMode('select')\">\n                                <span class=\"icon-select\"></span>\n                            </div>\n                            <div class=\"svg-tool-button\" [ngClass]=\"{'svg-tool-active': isModeActive('fhpath')}\" (click)=\"setMode('fhpath')\">\n                                <span class=\"icon-pencil\"></span>\n                            </div>\n                            <div class=\"svg-tool-button\" [ngClass]=\"{'svg-tool-active': isModeActive('line')}\" (click)=\"setMode('line')\">\n                                <span class=\"icon-line\"></span>\n                            </div>\n                            <div class=\"svg-tool-button\" [ngClass]=\"{'svg-tool-active': isModeActive('rect')}\" (click)=\"setMode('rect')\">\n                                <span class=\"icon-rect\"></span>\n                            </div>\n                            <div class=\"svg-tool-button\" [ngClass]=\"{'svg-tool-active': isModeActive('circle')}\" (click)=\"setMode('circle')\">\n                                <span class=\"icon-circle\"></span>\n                            </div>\n                            <div class=\"svg-tool-button\" [ngClass]=\"{'svg-tool-active': isModeActive('ellipse')}\" (click)=\"setMode('ellipse')\">\n                                <span class=\"icon-ellipse\"></span>\n                            </div>\n                            <div class=\"svg-tool-button\" [ngClass]=\"{'svg-tool-active': isModeActive('path')}\" (click)=\"setMode('path')\">\n                                <span class=\"icon-path\"></span>\n                            </div>\n                            <div class=\"svg-tool-button\" [ngClass]=\"{'svg-tool-active': isModeActive('text')}\" (click)=\"setMode('text')\">\n                                <span class=\"icon-text\"></span>\n                            </div>\n                            <div class=\"svg-tool-button\" [ngClass]=\"{'svg-tool-active': (isModeActive('image') || isModeActive('svg-image'))}\"\n                                (click)=\"imagefile.value = '';imagefile.click();\">\n                                <span class=\"icon-image\"></span>\n                                <input #imagefile type=\"file\" style=\"display: none;\" (change)=\"onSetImage($event)\" accept=\"image/png|jpg|svg\" />\n                            </div>\n                            <div id=\"tool_line\" style=\"display: none;\">\n                                <span class=\"icon-image\"></span>\n                            </div>\n                        </div>\n                    </mat-expansion-panel>\n                    <!-- CONTROLS  -->\n                    <mat-expansion-panel class=\"svg-workarea-leftbar-p\" (opened)=\"panelsState.panelD=true;savePanelState()\" (closed)=\"panelsState.panelD=false;savePanelState()\"\n                        hideToggle=\"true\" [expanded]=\"panelsState.panelD\">\n                        <mat-expansion-panel-header class=\"svg-workarea-leftbar-h\">\n                            <mat-panel-title>\n                                <mat-icon aria-label=\"Select\" *ngIf=\"panelsState.panelD\">expand_less</mat-icon>\n                                <mat-icon aria-label=\"Select\" *ngIf=\"!panelsState.panelD\">expand_more</mat-icon>\n                                <span>{{'editor.controls' | translate}}</span>\n                            </mat-panel-title>\n                        </mat-expansion-panel-header>\n                        <div id=\"__tools_left\" class=\"leftbar-panel\">\n                            <div class=\"svg-tool-button\" matTooltip=\"{{'editor.controls-input' | translate}}\" [ngClass]=\"{'svg-tool-active': isModeActive('html_input')}\"\n                                (click)=\"setMode('html_input')\">\n                                <span class=\"icon-tool icon-editvalue\"></span>\n                            </div>\n                            <div class=\"svg-tool-button\" matTooltip=\"{{'editor.controls-output' | translate}}\" [ngClass]=\"{'svg-tool-active': isModeActive('value')}\"\n                                (click)=\"setMode('value')\">\n                                <span class=\"icon-tool icon-value\"></span>\n                            </div>\n                            <div class=\"svg-tool-button\" matTooltip=\"{{'editor.controls-button' | translate}}\" [ngClass]=\"{'svg-tool-active': isModeActive('html_button')}\"\n                                (click)=\"setMode('html_button')\">\n                                <span class=\"icon-tool icon-button\"></span>\n                            </div>\n                            <div class=\"svg-tool-button\" matTooltip=\"{{'editor.controls-select' | translate}}\" [ngClass]=\"{'svg-tool-active': isModeActive('html_select')}\"\n                                (click)=\"setMode('html_select')\">\n                                <span class=\"icon-tool icon-selectvalue\"></span>\n                            </div>\n                            <div class=\"svg-tool-button\" matTooltip=\"{{'editor.controls-progress' | translate}}\" [ngClass]=\"{'svg-tool-active': isModeActive('gauge_progress')}\"\n                                (click)=\"setMode('gauge_progress')\">\n                                <span class=\"icon-tool icon-progress-v\"></span>\n                            </div>\n                            <div class=\"svg-tool-button\" matTooltip=\"{{'editor.controls-semaphore' | translate}}\" [ngClass]=\"{'svg-tool-active': isModeActive('gauge_semaphore')}\"\n                                (click)=\"setMode('gauge_semaphore')\">\n                                <span class=\"icon-tool icon-semaphore\"></span>\n                            </div>\n                            <div class=\"svg-tool-button\" matTooltip=\"{{'editor.controls-chart' | translate}}\" [ngClass]=\"{'svg-tool-active': isModeActive('html_chart')}\"\n                                (click)=\"setMode('html_chart')\">\n                                <span class=\"icon-tool icon-chart\"></span>\n                            </div>\n                            <div class=\"svg-tool-button\" matTooltip=\"{{'editor.controls-bag' | translate}}\" [ngClass]=\"{'svg-tool-active': isModeActive('html_bag')}\"\n                                (click)=\"setMode('html_bag')\">\n                                <span class=\"icon-tool icon-bag\"></span>\n                            </div>\n                            <div class=\"svg-tool-button\" matTooltip=\"{{'editor.controls-pipe' | translate}}\" [ngClass]=\"{'svg-tool-active': isModeActive('pipe')}\"\n                                (click)=\"setMode('pipe')\">\n                                <span class=\"icon-tool icon-pipe\"></span>\n                            </div>\n                            <div class=\"svg-tool-button\" matTooltip=\"{{'editor.controls-slider' | translate}}\" [ngClass]=\"{'svg-tool-active': isModeActive('html_slider')}\"\n                                (click)=\"setMode('html_slider')\">\n                                <span class=\"icon-tool icon-slider\"></span>\n                            </div>\n                            <div class=\"svg-tool-button\" matTooltip=\"{{'editor.controls-switch' | translate}}\" [ngClass]=\"{'svg-tool-active': isModeActive('html_switch')}\"\n                                (click)=\"setMode('html_switch')\">\n                                <span class=\"icon-tool icon-switch\"></span>\n                            </div>\n                        </div>\n                    </mat-expansion-panel>\n                    <!-- SHAPES -->\n                    <mat-expansion-panel *ngFor=\"let shGrp of shapesGrps\" class=\"svg-workarea-leftbar-p\" (opened)=\"panelsState[shGrp.name]=true;savePanelState()\"\n                        (closed)=\"panelsState[shGrp.name]=false;savePanelState()\" hideToggle=\"true\" [expanded]=\"panelsState[shGrp.name]\">\n                        <mat-expansion-panel-header class=\"svg-workarea-leftbar-h\">\n                            <mat-panel-title>\n                                <mat-icon aria-label=\"Select\" *ngIf=\"panelsState[shGrp.name]\">expand_less</mat-icon>\n                                <mat-icon aria-label=\"Select\" *ngIf=\"!panelsState[shGrp.name]\">expand_more</mat-icon>\n                                <span>{{shGrp.name | translate}}</span>\n                            </mat-panel-title>\n                        </mat-expansion-panel-header>\n                        <div id=\"__tools_left\" class=\"leftbar-panel\">\n                            <div *ngFor=\"let shape of shGrp.shapes\" style=\"margin-left: 3px;margin-right: 3px;\" class=\"svg-tool-button\"\n                                [ngClass]=\"{'svg-tool-active': isModeActive(shape.name)}\" (click)=\"setMode(shape.name)\">\n                                <span class=\"icon-tool\" [style.backgroundImage]=\"'url(' + shape.ico + ')'\"> </span>\n                            </div>\n                        </div>\n                    </mat-expansion-panel>\n                </div>\n            </mat-accordion>\n        </mat-drawer>\n        <!-- END LEFT BAR -->\n        <!-- WORK AREA -->\n        <mat-drawer-content>\n            <!-- SVG-EDITOR -->\n            <div [style.display]=\"(editorMode === editorModeType.SVG)?'block':'none' \">\n                <!-- RIGHT BAR -->\n                <div class=\"svg-tools-fly\">\n                    <mat-expansion-panel class=\"svg-workarea-fly-p\" (opened)=\"panelPropertyIdOpenState = true\" (closed)=\"panelPropertyIdOpenState = false\" hideToggle=\"true\"\n                        expanded=\"true\" style=\"display:none\">\n                        <mat-expansion-panel-header class=\"svg-workarea-flybar-h\">\n                            <mat-panel-title>\n                                <mat-icon aria-label=\"Select\" *ngIf=\"panelPropertyIdOpenState\">expand_less</mat-icon>\n                                <mat-icon aria-label=\"Select\" *ngIf=\"!panelPropertyIdOpenState\">expand_more</mat-icon>\n                                <span>{{'editor.interactivity' | translate}}</span> <!-- INTERACTIVITY -->\n                            </mat-panel-title>\n                        </mat-expansion-panel-header>\n                        <div id=\"_selected_panel\">\n                            <div class=\"_toolset\">\n                                <label id=\"idLabel\" matTooltip=\"{{'editor.interactivity-id-title' | translate}}\" class=\"svg-property\">\n                                    <span>{{'editor.interactivity-id' | translate}}</span>\n                                    <input id=\"elem_id\" #selid class=\"attr_changer\" data-attr=\"id\" type=\"text\" />\n                                </label>\n                                <label id=\"classLabel\" matTooltip=\"{{'editor.interactivity-class-title' | translate}}\" class=\"svg-property\">\n                                    <span>{{'editor.interactivity-class' | translate}}</span>\n                                    <input id=\"elem_class\" class=\"attr_changer\" data-attr=\"class\" type=\"text\" />\n                                </label>\n                            </div>\n                        </div>\n                    </mat-expansion-panel>\n                    <mat-expansion-panel class=\"svg-workarea-fly-p\" (opened)=\"panelPropertyTransformOpenState = true\" (closed)=\"panelPropertyTransformOpenState = false\"\n                        hideToggle=\"true\" expanded=\"true\">\n                        <mat-expansion-panel-header class=\"svg-workarea-leftbar-h\">\n                            <mat-panel-title>\n                                <mat-icon aria-label=\"Select\" *ngIf=\"panelPropertyTransformOpenState\">expand_less</mat-icon>\n                                <mat-icon aria-label=\"Select\" *ngIf=\"!panelPropertyTransformOpenState\">expand_more</mat-icon>\n                                <span>{{'editor.transform' | translate}}</span> <!-- TRANSFORM SIZE/POSITION-->\n                            </mat-panel-title>\n                        </mat-expansion-panel-header>\n                        <div id=\"_selected_panel\" class=\"rightbar-panel\">\n                            <div class=\"_toolset\">\n                                <div id=\"xy_panel\" class=\"_toolset\">\n                                    <div class=\"svg-property-split2\">\n                                        <div class=\"svg-property\">\n                                            <span>{{'editor.transform-x' | translate}}</span>\n                                            <input numberOnly id=\"selected_x\" class=\"attr_changer rightbar-input\" type=\"number\" matTooltip=\"{{'editor.transform-x-title' | translate}}\" \n                                                    size=\"4\" data-attr=\"x\" />\n                                        </div>\n                                        <div class=\"svg-property\">\n                                            <span>{{'editor.transform-y' | translate}}</span>\n                                            <input numberOnly id=\"selected_y\" class=\"attr_changer rightbar-input\" type=\"number\" matTooltip=\"{{'editor.transform-y-title' | translate}}\"\n                                                    size=\"4\" data-attr=\"y\" />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div id=\"line_panel\">\n                                    <div class=\"svg-property-split2\">\n                                        <div class=\"svg-property\">\n                                            <span>{{'editor.transform-x1' | translate}}</span>\n                                            <input numberOnly id=\"line_x1\" class=\"attr_changer rightbar-input\" type=\"number\" matTooltip=\"{{'editor.transform-x1-title' | translate}}\"\n                                                    size=\"4\" data-attr=\"x1\" />\n                                        </div>\n                                        <div class=\"svg-property\">\n                                            <span>{{'editor.transform-y1' | translate}}</span>\n                                            <input numberOnly id=\"line_y1\" class=\"attr_changer rightbar-input\" type=\"number\" matTooltip=\"{{'editor.transform-y1-title' | translate}}\"\n                                                    size=\"4\" data-attr=\"y1\" />\n                                        </div>\n                                    </div>\n                                    <div class=\"svg-property-split2\">\n                                        <div class=\"svg-property\">\n                                            <span>{{'editor.transform-x2' | translate}}</span>\n                                            <input numberOnly id=\"line_x2\" class=\"attr_changer rightbar-input\" type=\"number\" matTooltip=\"{{'editor.transform-x2-title' | translate}}\"\n                                                    size=\"4\" data-attr=\"x2\" />\n                                        </div>\n                                        <div class=\"svg-property\">\n                                            <span>{{'editor.transform-y2' | translate}}</span>\n                                            <input numberOnly id=\"line_y2\" class=\"attr_changer rightbar-input\" type=\"number\" matTooltip=\"{{'editor.transform-y2-title' | translate}}\"\n                                                    size=\"4\" data-attr=\"y2\" />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div id=\"rect_panel\">\n                                    <div class=\"svg-property-split2\">\n                                        <div class=\"svg-property\" matTooltip=\"{{'editor.transform-rect-width-title' | translate}}\">\n                                            <span>{{'editor.transform-width' | translate}}</span>\n                                            <input numberOnly id=\"rect_width\" class=\"attr_changer rightbar-input\" type=\"number\" size=\"4\" data-attr=\"width\" />\n                                        </div>\n                                        <div class=\"svg-property\" matTooltip=\"{{'editor.transform-rect-height-title' | translate}}\">\n                                            <span>{{'editor.transform-height' | translate}}</span>\n                                            <input numberOnly id=\"rect_height\" class=\"attr_changer rightbar-input\" type=\"number\" size=\"4\" data-attr=\"height\" />\n                                        </div>\n                                    </div>\n                                    <div class=\"svg-property-split2\">\n                                        <div class=\"svg-property\" matTooltip=\"{{'editor.transform-rect-radius-title' | translate}}\">\n                                            <span>{{'editor.transform-radiuscorner' | translate}}</span>\n                                            <input numberOnly id=\"rect_rx\" size=\"4\" value=\"0\" type=\"number\" class=\"rightbar-input\" data-attr=\"Corner Radius\" />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div id=\"htmlctrl_panel\">\n                                    <div class=\"svg-property-split2\">\n                                        <div class=\"svg-property\" matTooltip=\"{{'editor.transform-rect-width-title' | translate}}\">\n                                            <span>{{'editor.transform-width' | translate}}</span>\n                                            <input numberOnly id=\"htmlctrl_width\" type=\"number\" class=\"attr_changer rightbar-input\" size=\"4\" data-attr=\"width\" />\n                                        </div>\n                                        <div class=\"svg-property\" matTooltip=\"{{'editor.transform-rect-height-title' | translate}}\">\n                                            <span>{{'editor.transform-height' | translate}}</span>\n                                            <input numberOnly id=\"htmlctrl_height\" type=\"number\" class=\"attr_changer rightbar-input\" size=\"4\" data-attr=\"height\" />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div id=\"shape_panel\">\n                                    <div class=\"svg-property-split2\">\n                                        <div class=\"svg-property\" matTooltip=\"{{'editor.transform-rect-width-title' | translate}}\">\n                                            <span>{{'editor.transform-width' | translate}}</span>\n                                            <input numberOnly id=\"shape_width\" type=\"number\" class=\"attr_changer rightbar-input\" size=\"4\" data-attr=\"width\" />\n                                        </div>\n                                        <div class=\"svg-property\" matTooltip=\"{{'editor.transform-rect-height-title' | translate}}\">\n                                            <span>{{'editor.transform-height' | translate}}</span>\n                                            <input numberOnly id=\"shape_height\" type=\"number\" class=\"attr_changer rightbar-input\" size=\"4\" data-attr=\"height\" />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div id=\"circle_panel\">\n                                    <div class=\"svg-property-split2\">\n                                        <div class=\"svg-property\">\n                                            <span>{{'editor.transform-circlecx' | translate}}</span>\n                                            <input numberOnly id=\"circle_cx\" type=\"number\" class=\"attr_changer rightbar-input\" matTooltip=\"{{'editor.transform-circlecx-title' | translate}}\"\n                                                    size=\"4\" data-attr=\"cx\" />\n                                        </div>\n                                        <div class=\"svg-property\">\n                                            <span>{{'editor.transform-circlecy' | translate}}</span>\n                                            <input numberOnly id=\"circle_cy\" type=\"number\" class=\"attr_changer rightbar-input\" matTooltip=\"{{'editor.transform-circlecy-title' | translate}}\"\n                                                    size=\"4\" data-attr=\"cy\" />\n                                        </div>\n                                    </div>\n                                    <div class=\"svg-property-split2\">\n                                        <div class=\"svg-property\">\n                                            <span>{{'editor.transform-circler' | translate}}</span>\n                                            <input numberOnly id=\"circle_r\" type=\"number\" class=\"attr_changer rightbar-input\" matTooltip=\"{{'editor.transform-circler-title' | translate}}\"\n                                                    size=\"4\" data-attr=\"r\" />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div id=\"ellipse_panel\">\n                                    <div class=\"svg-property-split2\">\n                                        <div class=\"svg-property\">\n                                            <span>{{'editor.transform-ellipsecx' | translate}}</span>\n                                            <input numberOnly id=\"ellipse_cx\" type=\"number\" class=\"attr_changer rightbar-input\" matTooltip=\"{{'editor.transform-ellipsecx-title' | translate}}\"\n                                                    size=\"4\" data-attr=\"cx\" />\n                                        </div>\n                                        <div class=\"svg-property\">\n                                            <span>{{'editor.transform-ellipsecy' | translate}}</span>\n                                            <input numberOnly id=\"ellipse_cy\" type=\"number\" class=\"attr_changer rightbar-input\" matTooltip=\"{{'editor.transform-ellipsecy-title' | translate}}\"\n                                                    size=\"4\" data-attr=\"cy\" />\n                                        </div>\n                                    </div>\n                                    <div class=\"svg-property-split2\">\n                                        <div class=\"svg-property\">\n                                            <span>{{'editor.transform-ellipserx' | translate}}</span>\n                                            <input numberOnly id=\"ellipse_rx\" type=\"number\" class=\"attr_changer rightbar-input\" matTooltip=\"{{'editor.transform-ellipserx-title' | translate}}\"\n                                                    size=\"4\" data-attr=\"rx\" />\n                                        </div>\n                                        <div class=\"svg-property\">\n                                            <span>{{'editor.transform-ellipsery' | translate}}</span>\n                                            <input numberOnly id=\"ellipse_ry\" type=\"number\" class=\"attr_changer rightbar-input\" matTooltip=\"{{'editor.transform-ellipsery-title' | translate}}\"\n                                                    size=\"4\" data-attr=\"ry\" />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div id=\"text_panel\">\n                                    <div class=\"svg-property\">\n                                        <span>{{'editor.transform-fontfamily' | translate}}</span>\n                                        <select class=\"font-family\" id=\"font_family\" #fontfamily (change)=\"onFontFamilyChange(fontfamily.value)\">\n                                            <option *ngFor=\"let font of fonts\" [style.fontFamily]=\"font\" [value]=\"font\">{{font}}</option>\n                                        </select>\n                                    </div>\n                                    <div class=\"svg-property-split2\">\n                                        <div class=\"svg-property\">\n                                            <span>{{'editor.transform-fontsize' | translate}}</span>\n                                            <input numberOnly id=\"font_size\" size=\"4\" value=\"0\" type=\"number\" class=\"rightbar-input\" matTooltip=\"{{'editor.transform-fontsize-title' | translate}}\" />\n                                        </div>\n                                        <div class=\"svg-property\">\n                                            <span>{{'editor.transform-textalign' | translate}}</span>\n                                            <select class=\"text-align\" id=\"text_anchor\" #textalign (change)=\"onTextAlignChange(textalign.value)\">\n                                                <option value=\"start\">{{'editor.transform-left' | translate}}</option>\n                                                <option value=\"middle\">{{'editor.transform-center' | translate}}</option>\n                                                <option value=\"end\">{{'editor.transform-right' | translate}}</option>\n                                            </select>\n                                        </div>\n                                    </div>\n\n                                    <!-- Not visible, but still used -->\n                                    <input id=\"text\" type=\"text\" size=\"35\" />\n                                </div>\n                                <div id=\"image_panel\">\n                                    <div class=\"svg-property-split2\">\n                                        <div class=\"svg-property\">\n                                            <span>{{'editor.transform-width' | translate}}</span>\n                                            <input id=\"image_width\" class=\"attr_changer\" matTooltip=\"{{'editor.transform-image-width-title' | translate}}\" size=\"4\" data-attr=\"width\" />\n                                        </div>\n                                        <div class=\"svg-property\">\n                                            <span>{{'editor.transform-height' | translate}}</span>\n                                            <input id=\"image_height\" class=\"attr_changer\" matTooltip=\"{{'editor.transform-image-height-title' | translate}}\" size=\"4\"\n                                                data-attr=\"height\" />\n                                        </div>\n                                    </div>\n                                    <div class=\"svg-property\" style=\"display: none;\">\n                                        <div class=\"svg-property\">\n                                            <span>{{'editor.transform-url' | translate}}</span>\n                                            <input id=\"image_url\" class=\"attr_changer\" type=\"text\" matTooltip=\"{{'editor.transform-image-url-title' | translate}}\" />\n                                        </div>\n                                        <div class=\"svg-property\">\n                                            <div class=\"svg-property\">\n                                                <button id=\"change_image_url\" style=\"display:none;\">{{'editor.transform-change-image' | translate}}</button>\n                                                <span id=\"url_notice\" matTooltip=\"{{'editor.transform-change-image-title' | translate}}\"></span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div id=\"tool_angle\" matTooltip=\"{{'editor.transform-angle-title' | translate}}\" class=\"svg-property\">\n                                    <div class=\"svg-property-split2\">\n                                        <div class=\"svg-property\">\n                                            <span>{{'editor.transform-angle' | translate}}</span>\n                                            <input numberOnly id=\"angle\" size=\"4\" value=\"0\" type=\"number\" class=\"rightbar-input\"/>\n                                        </div>\n                                        <div class=\"svg-property\">\n                                            <!-- <div class=\"svg-tool-button\" (click)=\"flipSelected('vertical')\" matTooltip=\"Flip vertically\">\n                                        <span class=\"icon-flip-vertical\"></span>\n                                        </div>\n                                        <div class=\"svg-tool-button\" (click)=\"flipSelected('orizontal')\" matTooltip=\"Flip orizontally\">\n                                        <span class=\"icon-flip-orizontal\"></span>\n                                        </div> -->\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </mat-expansion-panel>\n                    <mat-expansion-panel class=\"svg-workarea-fly-p\" (opened)=\"panelAlignOpenState = true\" (closed)=\"panelAlignOpenState = false\" hideToggle=\"true\" expanded=\"true\">\n                        <mat-expansion-panel-header class=\"svg-workarea-leftbar-h\">\n                            <mat-panel-title>\n                                <mat-icon aria-label=\"Select\" *ngIf=\"panelAlignOpenState\">expand_less</mat-icon>\n                                <mat-icon aria-label=\"Select\" *ngIf=\"!panelAlignOpenState\">expand_more</mat-icon>\n                                <span>{{'editor.align' | translate}}</span> <!-- ALIGN-->\n                            </mat-panel-title>\n                        </mat-expansion-panel-header>\n                        <div id=\"align_panel\" class=\"rightbar_panel\">\n                            <div class=\"svg-tool-button\" (click)=\"onAlignSelected('left')\" matTooltip=\"{{'editor.align-left-title' | translate}}\">\n                                <span class=\"icon-align-left\"></span>\n                            </div>\n                            <div class=\"svg-tool-button\" (click)=\"onAlignSelected('center')\" matTooltip=\"{{'editor.align-center-title' | translate}}Align Center\">\n                                <span class=\"icon-align-center\"></span>\n                            </div>\n                            <div class=\"svg-tool-button\" (click)=\"onAlignSelected('right')\" matTooltip=\"{{'editor.align-right-title' | translate}}Align Right\">\n                                <span class=\"icon-align-right\"></span>\n                            </div>\n                            <div class=\"svg-tool-button\" (click)=\"onAlignSelected('top')\" matTooltip=\"{{'editor.align-top-title' | translate}}Align Top\">\n                                <span class=\"icon-align-top\"></span>\n                            </div>\n                            <div class=\"svg-tool-button\" (click)=\"onAlignSelected('middle')\" matTooltip=\"{{'editor.align-middle-title' | translate}}Align Middle\">\n                                <span class=\"icon-align-middle\"></span>\n                            </div>\n                            <div class=\"svg-tool-button\" (click)=\"onAlignSelected('bottom')\" matTooltip=\"{{'editor.align-bottom-title' | translate}}Align Bottom\">\n                                <span class=\"icon-align-bottom\"></span>\n                            </div>\n                        </div>\n                    </mat-expansion-panel>\n                    <mat-expansion-panel class=\"svg-workarea-fly-p\" (opened)=\"panelFillOpenState = true\" (closed)=\"panelFillOpenState = false\" hideToggle=\"true\" expanded=\"true\">\n                        <mat-expansion-panel-header class=\"svg-workarea-leftbar-h\">\n                            <mat-panel-title>\n                                <mat-icon aria-label=\"Select\" *ngIf=\"panelFillOpenState\">expand_less</mat-icon>\n                                <mat-icon aria-label=\"Select\" *ngIf=\"!panelFillOpenState\">expand_more</mat-icon>\n                                <span>{{'editor.stroke' | translate}}</span> <!-- STROKE-->\n                            </mat-panel-title>\n                        </mat-expansion-panel-header>\n                        <div class=\"rightbar_panel\">\n                            <div class=\"_color_tool\" id=\"tool_stroke\">\n                                <div class=\"svg-property-split2\">\n                                    <div class=\"svg-property\">\n                                        <span>{{'editor.stroke-width' | translate}}</span>\n                                        <input numberOnly id=\"stroke_width\" type=\"number\" class=\"rightbar-input\" matTooltip=\"{{'editor.stroke-width-title' | translate}}\"\n                                                size=\"4\" value=\"1\" data-attr=\"Stroke Width\" />\n                                    </div>\n                                    <div class=\"svg-property\">\n                                        <span>{{'editor.stroke-style' | translate}}</span>\n                                        <select id=\"stroke_style\" class=\"style-stroke\" matTooltip=\"{{'editor.stroke-style-title' | translate}}\">\n                                            <option selected=\"selected\" value=\"none\">&#8212;</option>\n                                            <option value=\"2,2\">...</option>\n                                            <option value=\"5,5\">- -</option>\n                                            <option value=\"5,2,2,2\">- .</option>\n                                            <option value=\"5,2,2,2,2,2\">- ..</option>\n                                        </select>\n                                    </div>\n                                </div>\n                                <div class=\"svg-property\">\n                                    <div class=\"svg-tool-button\" id=\"linejoin_miter\" #linejoinmiter (click)=\"onSetStrokeOption(linejoinmiter)\"\n                                        matTooltip=\"{{'editor.stroke-joinmiter-title' | translate}}\">\n                                        <span class=\"icon-linejoin-miter\"></span>\n                                    </div>\n                                    <div class=\"svg-tool-button\" id=\"linejoin_round\" #linejoinround (click)=\"onSetStrokeOption(linejoinround)\"\n                                        matTooltip=\"{{'editor.stroke-joinround-title' | translate}}\">\n                                        <span class=\"icon-linejoin-round\"></span>\n                                    </div>\n                                    <div class=\"svg-tool-button\" id=\"linejoin_bevel\" #linejoinbevel (click)=\"onSetStrokeOption(linejoinbevel)\"\n                                        matTooltip=\"{{'editor.stroke-joinbevel-title' | translate}}\">\n                                        <span class=\"icon-linejoin-bevel\"></span>\n                                    </div>\n                                </div>\n                                <div class=\"svg-property\">\n                                    <div class=\"svg-tool-button\" id=\"linecap_butt\" #linecapbutt (click)=\"onSetStrokeOption(linecapbutt)\"\n                                        matTooltip=\"{{'editor.stroke-capbutt-title' | translate}}\">\n                                        <span class=\"icon-linecap-butt\"></span>\n                                    </div>\n                                    <div class=\"svg-tool-button\" id=\"linecap_square\" #linecapsquare (click)=\"onSetStrokeOption(linecapsquare)\"\n                                        matTooltip=\"{{'editor.stroke-capsquare-title' | translate}}\">\n                                        <span class=\"icon-linecap-square\"></span>\n                                    </div>\n                                    <div class=\"svg-tool-button\" id=\"linecap_round\" #linecapround (click)=\"onSetStrokeOption(linecapround)\"\n                                        matTooltip=\"{{'editor.stroke-capround-title' | translate}}\">\n                                        <span class=\"icon-linecap-round\"></span>\n                                    </div>\n                                </div>\n                                <div class=\"svg-property-split2\" style=\"display: none\">\n                                    <div class=\"svg-property\">\n                                        <span for=\"class_shadow\">{{'editor.stroke-shadow' | translate}}</span>\n                                        <input type=\"checkbox\" id=\"class_shadow\" name=\"class_shadow\" class=\"attr_changer\" matTooltip=\"{{'editor.stroke-shadow-title' | translate}}\"\n                                            (change)=\"onSetShadowOption($event.target.checked)\" label=\"shadow\" />\n                                    </div>\n                                    <div class=\"svg-property\">\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </mat-expansion-panel>\n                    <mat-expansion-panel class=\"svg-workarea-fly-p\" (opened)=\"panelMarkerOpenState = true\" (closed)=\"panelMarkerOpenState = false\" hideToggle=\"true\"\n                        expanded=\"true\">\n                        <mat-expansion-panel-header class=\"svg-workarea-leftbar-h\">\n                            <mat-panel-title>\n                                <mat-icon aria-label=\"Select\" *ngIf=\"panelMarkerOpenState\">expand_less</mat-icon>\n                                <mat-icon aria-label=\"Select\" *ngIf=\"!panelMarkerOpenState\">expand_more</mat-icon>\n                                <span>{{'editor.marker' | translate}}</span> <!-- MARKER-->\n                            </mat-panel-title>\n                        </mat-expansion-panel-header>\n                        <div id=\"marker_panel\" class=\"rightbar_panel\">\n                            <div class=\"svg-property-split3\">\n                                <div class=\"svg-property\">\n                                    <span>{{'editor.marker-start' | translate}}</span>\n                                    <select id=\"start_marker\" #smarker class=\"style-stroke\" matTooltip=\"{{'editor.marker-start-title' | translate}}\"\n                                        (click)=\"onSetMarker('start_marker', smarker.selectedIndex);\" onfocus=\"this.selectedIndex=-1;this.blur();\">\n                                    </select>\n                                </div>\n                                <div class=\"svg-property\">\n                                    <span>{{'editor.marker-middle' | translate}}</span>\n                                    <select id=\"mid_marker\" #mmarker class=\"style-stroke\" matTooltip=\"{{'editor.marker-middle-title' | translate}}\"\n                                        (click)=\"onSetMarker('mid_marker', mmarker.selectedIndex);\" onfocus=\"this.selectedIndex=-1;this.blur();\">\n                                    </select>\n                                </div>\n                                <div class=\"svg-property\">\n                                    <span>{{'editor.marker-end' | translate}}</span>\n                                    <select id=\"end_marker\" #emarker class=\"style-stroke\" matTooltip=\"{{'editor.marker-end-title' | translate}}\"\n                                        (click)=\"onSetMarker('end_marker', emarker.selectedIndex);\" onfocus=\"this.selectedIndex=-1;this.blur();\">\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                    </mat-expansion-panel>\n                    <mat-expansion-panel class=\"svg-workarea-fly-p\" (opened)=\"panelHyperlinkOpenState = true\" (closed)=\"panelHyperlinkOpenState = false\" hideToggle=\"true\"\n                        expanded=\"true\">\n                        <mat-expansion-panel-header class=\"svg-workarea-leftbar-h\">\n                            <mat-panel-title>\n                                <mat-icon aria-label=\"Select\" *ngIf=\"panelHyperlinkOpenState\">expand_less</mat-icon>\n                                <mat-icon aria-label=\"Select\" *ngIf=\"!panelHyperlinkOpenState\">expand_more</mat-icon>\n                                <span>{{'editor.hyperlink' | translate}}</span> <!-- HYPELINK -->\n                            </mat-panel-title>\n                        </mat-expansion-panel-header>\n                        <div id=\"a_panel\" class=\"rightbar_panel\">\n                            <div class=\"svg-property\" style=\"display:table\">\n                                <span>{{'editor.hyperlink-url' | translate}}</span>\n                                <input id=\"link_url\" type=\"text\" />\n                            </div>\n                        </div>\n                    </mat-expansion-panel>\n                    <mat-expansion-panel class=\"svg-workarea-fly-p\" (opened)=\"panelEventOpenState = true\" (closed)=\"panelEventOpenState = false\" hideToggle=\"true\" expanded=\"true\">\n                        <mat-expansion-panel-header class=\"svg-workarea-leftbar-h\">\n                            <mat-panel-title>\n                                <mat-icon aria-label=\"Select\" *ngIf=\"panelEventOpenState\">expand_less</mat-icon>\n                                <mat-icon aria-label=\"Select\" *ngIf=\"!panelEventOpenState\">expand_more</mat-icon>\n                                <span>{{'editor.interactivity' | translate}}</span> <!-- INTERACTIVITY -->\n                            </mat-panel-title>\n                        </mat-expansion-panel-header>\n                        <div id=\"interaction_panel\" class=\"rightbar_panel\">\n                            <gauge-base #gaugepanel *ngIf=\"selectedElement\" [settings]=getGaugeSettings(selectedElement) (edit)=\"onGaugeEdit($event)\"></gauge-base>\n                        </div>\n                    </mat-expansion-panel>\n                </div>\n                <!-- END RIGHT BAR -->\n                <!-- Work Area -->\n                <div id=\"svg_editor\" style=\"z-index:-1\">\n                    <!-- Rules bar -->\n                    <div id=\"rulers\">\n                        <div id=\"ruler_corner\"></div>\n                        <div id=\"ruler_x\">\n                            <div>\n                                <canvas height=\"15\"></canvas>\n                            </div>\n                        </div>\n                        <div id=\"ruler_y\">\n                            <div>\n                                <canvas width=\"15\"></canvas>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- END Rules bar -->\n                    <!-- Draw Area -->\n                    <div id=\"workarea\">\n                        <style id=\"styleoverrides\" type=\"text/css\" media=\"screen\" scoped=\"scoped\"></style>\n                        <div id=\"svgcanvas\" style=\"position:relative\">\n                        </div>\n                    </div>\n                    <!-- END Draw Area -->\n                    <!-- Draw top tool bar -->\n                    <div id=\"tools_top\" class=\"tools_panel\">\n                        <div id=\"editor_panel\">\n                            <div class=\"main-btn-sep\"></div>\n                            <button mat-button matTooltip=\"{{'editor.tools-launch-title' | translate}}\" class=\"main-btn\" (click)=\"onStartCurrent()\">\n                                <mat-icon aria-label=\"Launch Current View\">play_arrow</mat-icon>\n                            </button>\n                            <div class=\"main-btn-sep\"></div>\n                            <button mat-button matTooltip=\"{{'editor.tools-zoom-title' | translate}}\" class=\"main-btn\" (click)=\"onZoomSelect()\">\n                                <mat-icon aria-label=\"Zoom Tool [Ctrl+Up/Down]\">zoom_in</mat-icon>\n                            </button>\n                            <button mat-button matTooltip=\"{{'editor.tools-grid-title' | translate}}\" class=\"main-btn\" (click)=\"onShowGrid()\">\n                                <mat-icon aria-label=\"Show Hide Grid\" *ngIf=\"!gridOn\">grid_on</mat-icon>\n                                <mat-icon aria-label=\"Show Hide Grid\" *ngIf=\"gridOn\">grid_off</mat-icon>\n                            </button>\n                            <div id=\"history_panel\">\n                                <button mat-button id=\"tool_undo\" matTooltip=\"{{'editor.tools-undo-title' | translate}}\" class=\"main-btn\">\n                                    <mat-icon aria-label=\"Undo [Z]\">undo</mat-icon>\n                                </button>\n                                <button mat-button id=\"tool_redo\" matTooltip=\"{{'editor.tools-redo-title' | translate}}\" class=\"main-btn\">\n                                    <mat-icon aria-label=\"Redo [Y]\">redo</mat-icon>\n                                </button>\n                            </div>\n                        </div>\n                        <div id=\"selected_panel\">\n                            <div class=\"main-btn-sep\"></div>\n                            <button mat-button id=\"tool_clone\" matTooltip=\"{{'editor.tools-clone-title' | translate}}\" class=\"main-btn\">\n                                <mat-icon aria-label=\"Duplicate Element [D]\">content_copy</mat-icon>\n                            </button>\n                            <button mat-button id=\"tool_delete\" matTooltip=\"{{'editor.tools-delete-title' | translate}}\" class=\"main-btn\">\n                                <mat-icon aria-label=\"Delete Element [Delete/Backspace]\">content_cut</mat-icon>\n                            </button>\n                            <button mat-button id=\"tool_move_bottom\" matTooltip=\"{{'editor.tools-movebottom-title' | translate}}\" class=\"main-btn\">\n                                <mat-icon style=\"font-size: 28px;\">low_priority</mat-icon>\n                            </button>\n                            <button mat-button id=\"tool_move_top\" matTooltip=\"{{'editor.tools-movetop-title' | translate}}\" class=\"main-btn\">\n                                <mat-icon style=\"font-size: 28px;transform: scaleX(-1) scaleY(-1) translateX(-28px) translateY(-27px);\">low_priority</mat-icon>\n                            </button>\n                            <button mat-button id=\"tool_topath\" matTooltip=\"{{'editor.tools-topath-title' | translate}}\" class=\"main-btn\">\n                                <mat-icon>linear_scale</mat-icon>\n                            </button>\n                            <button mat-button id=\"tool_make_link\" matTooltip=\"{{'editor.tools-hyperlink-title' | translate}}\" class=\"main-btn\" (click)=\"onMakeHyperlink()\">\n                                <mat-icon style=\"font-size: 28px;\">link</mat-icon>\n                            </button>\n                        </div>\n                        <div id=\"multiselected_panel\">\n                            <div class=\"main-btn-sep\"></div>\n                            <button mat-button id=\"tool_clone_multi\" matTooltip=\"{{'editor.tools-clonemulti-title' | translate}}\" class=\"main-btn\">\n                                <mat-icon aria-label=\"Clone Elements [C]\">content_copy</mat-icon>\n                            </button>\n                            <button mat-button id=\"tool_delete_multi\" matTooltip=\"{{'editor.tools-deletemulti-title' | translate}}\" class=\"main-btn\">\n                                <mat-icon aria-label=\"Delete Selected Elements [Delete/Backspace]\">content_cut</mat-icon>\n                            </button>\n                            <button mat-button id=\"tool_group_elements\" matTooltip=\"{{'editor.tools-group-title' | translate}}\" class=\"main-btn\">\n                                <span class=\"group\"></span>\n                            </button>\n                            <button mat-button id=\"tool_alignleft\" matTooltip=\"{{'editor.tools-alignleft-title' | translate}}\" class=\"main-btn\">\n                                <mat-icon>format_align_left</mat-icon>\n                            </button>\n                            <button mat-button id=\"tool_aligncenter\" matTooltip=\"{{'editor.tools-aligncenter-title' | translate}}\" class=\"main-btn\">\n                                <mat-icon>format_align_center</mat-icon>\n                            </button>\n                            <button mat-button id=\"tool_alignright\" matTooltip=\"{{'editor.tools-alignright-title' | translate}}\" class=\"main-btn\">\n                                <mat-icon>format_align_right</mat-icon>\n                            </button>\n                            <button mat-button id=\"tool_aligntop\" matTooltip=\"{{'editor.tools-aligntop-title' | translate}}\" class=\"main-btn\">\n                                <mat-icon>vertical_align_top</mat-icon>\n                            </button>\n                            <button mat-button id=\"tool_alignmiddle\" matTooltip=\"{{'editor.tools-alignmiddle-title' | translate}}\" class=\"main-btn\">\n                                <mat-icon>vertical_align_center</mat-icon>\n                            </button>\n                            <button mat-button id=\"tool_alignbottom\" matTooltip=\"{{'editor.tools-alignbottom-title' | translate}}\" class=\"main-btn\">\n                                <mat-icon>vertical_align_bottom</mat-icon>\n                            </button>\n                        </div>\n                        <div id=\"threemoreselected_panel\">\n                            <button mat-button id=\"tool_dividevertical\" matTooltip=\"{{'editor.tools-dividevertical-title' | translate}}\" class=\"main-btn\">\n                                <mat-icon>format_line_spacing</mat-icon>\n                            </button>\n                            <button mat-button id=\"tool_dividehorizontal\" matTooltip=\"{{'editor.tools-dividehorizontal-title' | translate}}\" class=\"main-btn\">\n                                <mat-icon style=\"transform-origin: center center;transform: rotate(90deg);\">format_line_spacing</mat-icon>\n                            </button>\n                        </div>\n                        <div id=\"g_panel\">\n                            <button mat-button id=\"tool_ungroup\" matTooltip=\"{{'editor.tools-ungroup-title' | translate}}\" class=\"main-btn\">\n                                <span class=\"ungroup\"></span>\n                            </button>\n                        </div>\n                    </div>\n                    <!-- tools_top -->\n                    <div id=\"cur_context_panel\">\n\n                    </div>\n\n                    <!-- tool bottom -->\n                    <div class=\"bottom-bar tools_panel\">\n                        <!-- Zoom buttons -->\n                        <div class=\"zoom-menu\" matTooltip=\"{{'editor.tools-zoomlevel-title' | translate}}\">\n                            <div class=\"zoom-value\">\n                                <input id=\"zoom\" size=\"3\" value=\"100\" type=\"text\" #zoomValue hidden />\n                                <div id=\"zoom_dropdown\" class=\"dropdown selection\" style=\"margin-top: 0px; margin-bottom: 0px;margin-right: 0px;\">\n                                    <button style=\"margin-top: 2px; width: 80px;cursor: pointer; font-size: 12px;\">\n                                        {{zoomValue.value}} %\n                                    </button>\n                                    <ul>\n                                        <li>1000%</li>\n                                        <li>400%</li>\n                                        <li>200%</li>\n                                        <li>100%</li>\n                                        <li>50%</li>\n                                        <li>25%</li>\n                                        <li id=\"fit_to_canvas\" data-val=\"canvas\">{{'editor.tools-zoomlevel-fitcanvas' | translate}}</li>\n                                        <li id=\"fit_to_sel\" data-val=\"selection\">{{'editor.tools-zoomlevel-fitsection' | translate}}</li>\n                                        <li id=\"fit_to_all\" data-val=\"content\">{{'editor.tools-zoomlevel-fitcontent' | translate}}</li>\n                                        <li>100%</li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div id=\"tools_bottom_2\" class=\"colors\">\n                            <input readonly [(colorPicker)]=\"colorFill\" class=\"color-fill\" matTooltip=\"{{'editor.tools-fillcolor-title' | translate}}\" [style.background]=\"colorFill\"\n                                [cpAlphaChannel]=\"'always'\" [cpPosition]=\"'top'\" (colorPickerChange)=\"onChangeFillColor($event)\" [cpPresetColors]=\"defaultColor\"\n                                [cpCancelButton]=\"true\" [cpCancelButtonClass]=\"'cpCancelButtonClass'\" [cpCancelButtonText]=\"'Cancel'\" [cpOKButton]=\"true\" [cpOKButtonText]=\"'OK'\"\n                                [cpOKButtonClass]=\"'cpOKButtonClass'\" />\n                            <input readonly [(colorPicker)]=\"colorStroke\" class=\"color-stroke\" matTooltip=\"{{'editor.tools-strokecolor-title' | translate}}\"\n                                [style.background]=\"colorStroke\" [cpAlphaChannel]=\"'always'\" [cpPosition]=\"'top'\" (colorPickerChange)=\"onChangeStrokeColor($event)\"\n                                [cpPresetColors]=\"defaultColor\" [cpCancelButton]=\"true\" [cpCancelButtonClass]=\"'cpCancelButtonClass'\" [cpCancelButtonText]=\"'Cancel'\"\n                                [cpOKButton]=\"true\" [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\" />\n                            <div class=\"color_tool\" id=\"tool_fill\" hidden>\n                                <label class=\"icon_label\" for=\"fill_color\" matTooltip=\"{{'editor.tools-fillcolor-title' | translate}}\"></label>\n                                <div class=\"color_block\">\n                                    <div id=\"fill_color\" class=\"color_block\" [style.border-color]=\"colorFill\"></div>\n                                </div>\n                            </div>\n                            <div class=\"color_tool\" id=\"tool_stroke\" hidden>\n                                <label class=\"icon_label\" matTooltip=\"Change stroke color\"></label>\n                                <div class=\"color_block\">\n                                    <div id=\"stroke_bg\"></div>\n                                    <div id=\"stroke_color\" class=\"color_block\" matTooltip=\"{{'editor.tools-strokecolor-title' | translate}}\" [style.border-color]=\"colorStroke\"></div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div id=\"tools_bottom_3\" class=\"colors-palette\">\n                            <div id=\"palette_holder\">\n                                <div id=\"palette\" matTooltip=\"{{'editor.tools-palettecolor-title' | translate}}\"></div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div id=\"option_lists\" class=\"dropdown\">\n                        <ul id=\"position_opts\" class=\"optcols3\">\n                            <li class=\"push_button\" id=\"tool_posleft\" matTooltip=\"Align Left\"></li>\n                            <li class=\"push_button\" id=\"tool_poscenter\" matTooltip=\"Align Center\"></li>\n                            <li class=\"push_button\" id=\"tool_posright\" matTooltip=\"Align Right\"></li>\n                            <li class=\"push_button\" id=\"tool_postop\" matTooltip=\"Align Top\"></li>\n                            <li class=\"push_button\" id=\"tool_posmiddle\" matTooltip=\"Align Middle\"></li>\n                            <li class=\"push_button\" id=\"tool_posbottom\" matTooltip=\"Align Bottom\"></li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n            <div *ngIf=\"editorMode === editorModeType.CARDS\" style=\"width:100%; height:100%\">\n                <div class=\"tools_panel\" style=\"display: inline-flex; width: 100%; height: 37px;\">\n                    <div class=\"main-btn-sep\" style=\"display: inline-block;\"></div>\n                    <button mat-button class=\"main-btn\" style=\"display: inline-block;\" matTooltip=\"{{'editor.tools-launch-title' | translate}}\" (click)=\"onStartCurrent()\">\n                        <mat-icon aria-label=\"Launch Current View\">play_arrow</mat-icon>\n                    </button>\n                </div>\n                <div style=\"position: absolute; top: 37px; left: 0px;right: 0px; bottom: 0px; background-color: rgba(247, 247, 247, 1);\">\n                    <app-cards-view #cardsview [edit]=\"true\" [view]=\"currentView\" [hmi]=\"hmi\" [gaugesManager]=\"gaugesManager\" \n                                (editCard)=\"editCardsWidget($event)\" (save)=\"onSaveProject()\"></app-cards-view>\n                    <!-- <div class=\"grid-stack\"></div> -->\n                    <button mat-fab color=\"primary\" (click)=\"addCard()\" class=\"fab-add\">\n                        <mat-icon class=\"\">add</mat-icon>\n                    </button>\n                </div>\n            </div>\n        </mat-drawer-content>\n        <!-- work area END -->\n    </mat-drawer-container>\n\n    <!-- svg_editor -->\n\n    <!-- NOT USED -->\n    <div id=\"svg_source_editor\">\n        <div class=\"overlay\"></div>\n        <div id=\"svg_source_container\">\n            <div id=\"tool_source_back\" class=\"toolbar_button\">\n                <button id=\"tool_source_save\">Apply Changes</button>\n                <button id=\"tool_source_cancel\">Cancel</button>\n            </div>\n            <div id=\"save_output_btns\">\n                <p id=\"copy_save_note\">Copy the contents of this box into a text editor, then save the file with a .svg\n                    extension.</p>\n                <button id=\"copy_save_done\">Done</button>\n            </div>\n            <form>\n                <textarea id=\"svg_source_textarea\" spellcheck=\"false\"></textarea>\n            </form>\n        </div>\n    </div>\n\n    <div id=\"svg_docprops\">\n        <div class=\"overlay\"></div>\n        <div id=\"svg_docprops_container\">\n            <div id=\"tool_docprops_back\" class=\"toolbar_button\">\n                <button id=\"tool_docprops_save\">OK</button>\n                <button id=\"tool_docprops_cancel\">Cancel</button>\n            </div>\n\n\n            <fieldset id=\"svg_docprops_docprops\">\n                <legend id=\"svginfo_image_props\">Image Properties</legend>\n                <label>\n                    <span id=\"svginfo_title\">Title:</span>\n                    <input type=\"text\" id=\"canvas_title\" />\n                </label>\n\n                <fieldset id=\"change_resolution\">\n                    <legend id=\"svginfo_dim\">Canvas Dimensions</legend>\n\n                    <label>\n                        <span id=\"svginfo_width\">width:</span>\n                        <input type=\"text\" id=\"canvas_width\" size=\"6\" />\n                    </label>\n\n                    <label>\n                        <span id=\"svginfo_height\">height:</span>\n                        <input type=\"text\" id=\"canvas_height\" size=\"6\" />\n                    </label>\n\n                    <label>\n                        <select id=\"resolution\">\n                            <option id=\"selectedPredefined\" selected=\"selected\">Select predefined:</option>\n                            <option>640x480</option>\n                            <option>800x600</option>\n                            <option>1024x768</option>\n                            <option>1280x960</option>\n                            <option>1600x1200</option>\n                            <option id=\"fitToContent\" value=\"content\">Fit to Content</option>\n                        </select>\n                    </label>\n                </fieldset>\n\n                <fieldset id=\"image_save_opts\">\n                    <legend id=\"includedImages\">Included Images</legend>\n                    <label>\n                        <input type=\"radio\" name=\"image_opt\" value=\"embed\" checked=\"checked\" />\n                        <span id=\"image_opt_embed\">Embed data (local files)</span>\n                    </label>\n                    <label>\n                        <input type=\"radio\" name=\"image_opt\" value=\"ref\" />\n                        <span id=\"image_opt_ref\">Use file reference</span>\n                    </label>\n                </fieldset>\n            </fieldset>\n\n        </div>\n    </div>\n\n    <div id=\"svg_prefs\">\n        <div class=\"overlay\"></div>\n        <div id=\"svg_prefs_container\">\n            <div id=\"tool_prefs_back\" class=\"toolbar_button\">\n                <button id=\"tool_prefs_save\">OK</button>\n                <button id=\"tool_prefs_cancel\">Cancel</button>\n            </div>\n\n            <fieldset>\n                <legend id=\"svginfo_editor_prefs\">Editor Preferences</legend>\n\n                <label>\n                    <span id=\"svginfo_lang\">Language:</span>\n                    <select id=\"lang_select\">\n                        <option id=\"lang_ar\" value=\"ar\">العربية</option>\n                        <option id=\"lang_cs\" value=\"cs\">Čeština</option>\n                        <option id=\"lang_de\" value=\"de\">Deutsch</option>\n                        <option id=\"lang_en\" value=\"en\" selected=\"selected\">English</option>\n                        <option id=\"lang_es\" value=\"es\">Español</option>\n                        <option id=\"lang_fa\" value=\"fa\">فارسی</option>\n                        <option id=\"lang_fr\" value=\"fr\">Français</option>\n                        <option id=\"lang_fy\" value=\"fy\">Frysk</option>\n                        <option id=\"lang_hi\" value=\"hi\">&#2361;&#2367;&#2344;&#2381;&#2342;&#2368;,\n                            &#2361;&#2367;&#2306;&#2342;&#2368;</option>\n                        <option id=\"lang_it\" value=\"it\">Italiano</option>\n                        <option id=\"lang_ja\" value=\"ja\">日本語</option>\n                        <option id=\"lang_nl\" value=\"nl\">Nederlands</option>\n                        <option id=\"lang_pl\" value=\"pl\">Polski</option>\n                        <option id=\"lang_pt-BR\" value=\"pt-BR\">Português (BR)</option>\n                        <option id=\"lang_ro\" value=\"ro\">Română</option>\n                        <option id=\"lang_ru\" value=\"ru\">Русский</option>\n                        <option id=\"lang_sk\" value=\"sk\">Slovenčina</option>\n                        <option id=\"lang_sl\" value=\"sl\">Slovenščina</option>\n                        <option id=\"lang_zh-TW\" value=\"zh-TW\">繁體中文</option>\n                    </select>\n                </label>\n\n                <label>\n                    <span id=\"svginfo_icons\">Icon size:</span>\n                    <select id=\"iconsize\">\n                        <option id=\"icon_small\" value=\"s\">Small</option>\n                        <option id=\"icon_medium\" value=\"m\" selected=\"selected\">Medium</option>\n                        <option id=\"icon_large\" value=\"l\">Large</option>\n                        <option id=\"icon_xlarge\" value=\"xl\">Extra Large</option>\n                    </select>\n                </label>\n\n                <fieldset id=\"change_background\">\n                    <legend id=\"svginfo_change_background\">Editor Background</legend>\n                    <div id=\"bg_blocks\"></div>\n                    <label>\n                        <span id=\"svginfo_bg_url\">URL:</span>\n                        <input type=\"text\" id=\"canvas_bg_url\" />\n                    </label>\n                    <p id=\"svginfo_bg_note\">Note: Background will not be saved with image.</p>\n                </fieldset>\n\n                <fieldset id=\"change_grid\">\n                    <legend id=\"svginfo_grid_settings\">Grid</legend>\n                    <label>\n                        <span id=\"svginfo_snap_onoff\">Snapping on/off</span>\n                        <input type=\"checkbox\" value=\"snapping_on\" id=\"grid_snapping_on\" />\n                    </label>\n                    <label>\n                        <span id=\"svginfo_snap_step\">Snapping Step-Size:</span>\n                        <input type=\"text\" id=\"grid_snapping_step\" size=\"3\" value=\"10\" />\n                    </label>\n                    <label>\n                        <span id=\"svginfo_grid_color\">Grid color:</span>\n                        <input type=\"text\" id=\"grid_color\" size=\"3\" value=\"#000\" />\n                    </label>\n                </fieldset>\n\n                <fieldset id=\"units_rulers\">\n                    <legend id=\"svginfo_units_rulers\">Units &amp; Rulers</legend>\n                    <label>\n                        <span id=\"svginfo_rulers_onoff\">Show rulers</span>\n                        <input type=\"checkbox\" value=\"show_rulers\" id=\"show_rulers\" checked=\"checked\" />\n                    </label>\n                    <label>\n                        <span id=\"svginfo_unit\">Base Unit:</span>\n                        <select id=\"base_unit\">\n                            <option value=\"px\">Pixels</option>\n                            <option value=\"cm\">Centimeters</option>\n                            <option value=\"mm\">Millimeters</option>\n                            <option value=\"in\">Inches</option>\n                            <option value=\"pt\">Points</option>\n                            <option value=\"pc\">Picas</option>\n                            <option value=\"em\">Ems</option>\n                            <option value=\"ex\">Exs</option>\n                        </select>\n                    </label>\n                </fieldset>\n\n            </fieldset>\n\n        </div>\n    </div>\n    <!-- NOT USED END -->\n\n    <div id=\"dialog_box\">\n        <div class=\"overlay\"></div>\n        <div id=\"dialog_container\">\n            <div id=\"dialog_content\"></div>\n            <div id=\"dialog_buttons\"></div>\n        </div>\n    </div>\n\n    <!-- canvas context menu -->\n    <ul id=\"cmenu_canvas\" class=\"contextMenu svg-workarea-contextmenu\">\n        <li>\n            <a id=\"#interactivity\" (click)=\"isInteractivtyEnabled(selectedElement) && onGaugeEditEx()\">{{'editor.interactivity' | translate}}</a>\n        </li>\n        <li class=\"separator\">\n            <a id=\"#cut\">{{'editor.cmenu-cut' | translate}}</a>\n        </li>\n        <li>\n            <a id=\"#copy\">{{'editor.cmenu-copy' | translate}}</a>\n        </li>\n        <li>\n            <a id=\"#paste\">{{'editor.cmenu-paste' | translate}}</a>\n        </li>\n        <li>\n            <a id=\"#paste_in_place\">{{'editor.cmenu-paste-place' | translate}}</a>\n        </li>\n        <li class=\"separator\">\n            <a id=\"#delete\">{{'editor.cmenu-delete' | translate}}</a>\n        </li>\n        <li class=\"separator\">\n            <a id=\"#group\">{{'editor.cmenu-group' | translate}}\n                <span class=\"shortcut\">G</span>\n            </a>\n        </li>\n        <li>\n            <a id=\"#ungroup\">{{'editor.cmenu-ungroup' | translate}}\n                <span class=\"shortcut\">G</span>\n            </a>\n        </li>\n        <li class=\"separator\">\n            <a id=\"#move_front\">{{'editor.cmenu-bring-front' | translate}}\n                <span class=\"shortcut\">SHFT+CTRL+]</span>\n            </a>\n        </li>\n        <li>\n            <a id=\"#move_up\">{{'editor.cmenu-bring-forward' | translate}}\n                <span class=\"shortcut\">CTRL+]</span>\n            </a>\n        </li>\n        <li>\n            <a id=\"#move_down\">{{'editor.cmenu-send-backward' | translate}}\n                <span class=\"shortcut\">CTRL+[</span>\n            </a>\n        </li>\n        <li>\n            <a id=\"#move_back\">{{'editor.cmenu-send-back' | translate}}\n                <span class=\"shortcut\">SHFT+CTRL+[</span>\n            </a>\n        </li>\n    </ul>\n    <!-- canvas context menu END -->\n\n    <!-- layers context menu -->\n    <ul id=\"cmenu_layers\" class=\"contextMenu\" style=\"display: none\">\n        <li>\n            <a href=\"#dupe\">{{'editor.cmenu-layer-duplicate' | translate}}</a>\n        </li>\n        <li>\n            <a href=\"#delete\">{{'editor.cmenu-layer-delete' | translate}}</a>\n        </li>\n        <li>\n            <a href=\"#merge_down\">{{'editor.cmenu-layer-marge-down' | translate}}</a>\n        </li>\n        <li>\n            <a href=\"#merge_all\">{{'editor.cmenu-layer-marge-all' | translate}}</a>\n        </li>\n    </ul>\n    <!-- layers context menu END -->\n</div>"

            /***/
}),

/***/ "./app/editor/editor.component.ts":
/*!****************************************!*\
  !*** ./app/editor/editor.component.ts ***!
  \****************************************/
/*! exports provided: EditorComponent, DialogNewDoc, DialogDocProperty, DialogDocName, DialogLinkProperty, EditorModeType */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditorComponent", function () { return EditorComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DialogNewDoc", function () { return DialogNewDoc; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DialogDocProperty", function () { return DialogDocProperty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DialogDocName", function () { return DialogDocName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DialogLinkProperty", function () { return DialogLinkProperty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditorModeType", function () { return EditorModeType; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "../node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/platform-browser */ "../node_modules/@angular/platform-browser/fesm5/platform-browser.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ngx-translate/core */ "../node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js");
/* harmony import */ var _services_project_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../_services/project.service */ "./app/_services/project.service.ts");
/* harmony import */ var _models_hmi__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../_models/hmi */ "./app/_models/hmi.ts");
/* harmony import */ var _helpers_windowref__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../_helpers/windowref */ "./app/_helpers/windowref.ts");
/* harmony import */ var _gauges_gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../gauges/gauge-property/gauge-property.component */ "./app/gauges/gauge-property/gauge-property.component.ts");
/* harmony import */ var _gauges_controls_html_chart_chart_property_chart_property_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../gauges/controls/html-chart/chart-property/chart-property.component */ "./app/gauges/controls/html-chart/chart-property/chart-property.component.ts");
/* harmony import */ var _gauges_gauges_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../gauges/gauges.component */ "./app/gauges/gauges.component.ts");
/* harmony import */ var _gauges_gauge_base_gauge_base_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../gauges/gauge-base/gauge-base.component */ "./app/gauges/gauge-base/gauge-base.component.ts");
/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../_helpers/utils */ "./app/_helpers/utils.ts");
/* harmony import */ var _gui_helpers_confirm_dialog_confirm_dialog_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../gui-helpers/confirm-dialog/confirm-dialog.component */ "./app/gui-helpers/confirm-dialog/confirm-dialog.component.ts");
/* harmony import */ var _helpers_define__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../_helpers/define */ "./app/_helpers/define.ts");
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! file-saver */ "../node_modules/file-saver/dist/FileSaver.min.js");
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(file_saver__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var _gauges_controls_html_bag_bag_property_bag_property_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../gauges/controls/html-bag/bag-property/bag-property.component */ "./app/gauges/controls/html-bag/bag-property/bag-property.component.ts");
/* harmony import */ var _gauges_controls_pipe_pipe_property_pipe_property_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../gauges/controls/pipe/pipe-property/pipe-property.component */ "./app/gauges/controls/pipe/pipe-property/pipe-property.component.ts");
/* harmony import */ var _gauges_controls_slider_slider_property_slider_property_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../gauges/controls/slider/slider-property/slider-property.component */ "./app/gauges/controls/slider/slider-property/slider-property.component.ts");
/* harmony import */ var _gauges_controls_html_input_html_input_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../gauges/controls/html-input/html-input.component */ "./app/gauges/controls/html-input/html-input.component.ts");
/* harmony import */ var _gauges_controls_html_button_html_button_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../gauges/controls/html-button/html-button.component */ "./app/gauges/controls/html-button/html-button.component.ts");
/* harmony import */ var _gauges_controls_html_select_html_select_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../gauges/controls/html-select/html-select.component */ "./app/gauges/controls/html-select/html-select.component.ts");
/* harmony import */ var _gauges_controls_value_value_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../gauges/controls/value/value.component */ "./app/gauges/controls/value/value.component.ts");
/* harmony import */ var _gauges_controls_gauge_progress_gauge_progress_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../gauges/controls/gauge-progress/gauge-progress.component */ "./app/gauges/controls/gauge-progress/gauge-progress.component.ts");
/* harmony import */ var _gauges_controls_gauge_semaphore_gauge_semaphore_component__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../gauges/controls/gauge-semaphore/gauge-semaphore.component */ "./app/gauges/controls/gauge-semaphore/gauge-semaphore.component.ts");
/* harmony import */ var _gauges_controls_html_switch_html_switch_property_html_switch_property_component__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../gauges/controls/html-switch/html-switch-property/html-switch-property.component */ "./app/gauges/controls/html-switch/html-switch-property/html-switch-property.component.ts");
/* harmony import */ var _card_config_card_config_component__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./card-config/card-config.component */ "./app/editor/card-config/card-config.component.ts");
/* harmony import */ var _cards_view_cards_view_component__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../cards-view/cards-view.component */ "./app/cards-view/cards-view.component.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };
            var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
                return function (target, key) { decorator(target, key, paramIndex); }
            };





























            var EditorComponent = /** @class */ (function () {
                function EditorComponent(projectService, winRef, dialog, changeDetector, translateService, gaugesManager, viewContainerRef, resolver, mdIconRegistry, sanitizer) {
                    this.projectService = projectService;
                    this.winRef = winRef;
                    this.dialog = dialog;
                    this.changeDetector = changeDetector;
                    this.translateService = translateService;
                    this.gaugesManager = gaugesManager;
                    this.viewContainerRef = viewContainerRef;
                    this.resolver = resolver;
                    this.mdIconRegistry = mdIconRegistry;
                    this.sanitizer = sanitizer;
                    this.colorDefault = { fill: '#FFFFFF', stroke: '#000000' };
                    this.fonts = _helpers_define__WEBPACK_IMPORTED_MODULE_13__["Define"].fonts;
                    this.isLoading = true;
                    this.editorModeType = EditorModeType;
                    this.editorMode = EditorModeType.SVG;
                    this.defaultColor = _helpers_utils__WEBPACK_IMPORTED_MODULE_11__["Utils"].defaultColor;
                    this.colorFill = this.colorDefault.fill;
                    this.colorStroke = this.colorDefault.stroke;
                    this.currentView = null;
                    this.hmi = new _models_hmi__WEBPACK_IMPORTED_MODULE_5__["Hmi"](); // = {_id: '', name: '', networktype: '', ipaddress: '', maskaddress: '' };
                    this.currentMode = '';
                    this.gridOn = false;
                    this.selectedElement = new _models_hmi__WEBPACK_IMPORTED_MODULE_5__["SelElement"]();
                    this.panelsState = {
                        enabled: false,
                        panelView: true,
                        panelGeneral: true,
                        panelC: true,
                        panelD: true,
                        panelS: true
                    };
                    this.cardViewType = _helpers_utils__WEBPACK_IMPORTED_MODULE_11__["Utils"].getEnumKey(_models_hmi__WEBPACK_IMPORTED_MODULE_5__["ViewType"], _models_hmi__WEBPACK_IMPORTED_MODULE_5__["ViewType"].cards);
                    this.svgViewType = _helpers_utils__WEBPACK_IMPORTED_MODULE_11__["Utils"].getEnumKey(_models_hmi__WEBPACK_IMPORTED_MODULE_5__["ViewType"], _models_hmi__WEBPACK_IMPORTED_MODULE_5__["ViewType"].svg);
                    this.shapesGrps = [];
                    this.gaugesRef = [];
                    mdIconRegistry.addSvgIcon('group', sanitizer.bypassSecurityTrustResourceUrl('/assets/images/group.svg'));
                    mdIconRegistry.addSvgIcon('to_bottom', sanitizer.bypassSecurityTrustResourceUrl('/assets/images/to-bottom.svg'));
                    mdIconRegistry.addSvgIcon('to_top', sanitizer.bypassSecurityTrustResourceUrl('/assets/images/to-top.svg'));
                    // this.gaugesManager.stopDemo();
                }
                //#region Implemented onInit / onAfterInit event
                /**
                 * Init Save Project event and clear gauge memory (to manage event signal/gauge)
                 */
                EditorComponent.prototype.ngOnInit = function () {
                    var _this = this;
                    try {
                        this.subscriptionSave = this.projectService.onSaveCurrent.subscribe(function (mode) {
                            if (mode === _services_project_service__WEBPACK_IMPORTED_MODULE_4__["SaveMode"].Current) {
                                _this.onSaveProject();
                            }
                            else if (mode === _services_project_service__WEBPACK_IMPORTED_MODULE_4__["SaveMode"].SaveAs) {
                                _this.projectService.saveAs();
                            }
                            else if (mode === _services_project_service__WEBPACK_IMPORTED_MODULE_4__["SaveMode"].Save) {
                                _this.onSaveProject();
                            }
                        });
                        this.gaugesManager.clearMemory();
                    }
                    catch (err) {
                        console.error(err);
                    }
                };
                /**
                 * after init event
                 */
                EditorComponent.prototype.ngAfterViewInit = function () {
                    var _this = this;
                    this.myInit();
                    this.setMode('select');
                    var hmi = this.projectService.getHmi();
                    if (hmi) {
                        this.loadHmi();
                    }
                    this.subscriptionLoad = this.projectService.onLoadHmi.subscribe(function (load) {
                        _this.loadHmi();
                    }, function (error) {
                        console.error('Error loadHMI');
                    });
                    this.changeDetector.detectChanges();
                };
                EditorComponent.prototype.ngOnDestroy = function () {
                    try {
                        if (this.subscriptionSave) {
                            this.subscriptionSave.unsubscribe();
                        }
                        if (this.subscriptionLoad) {
                            this.subscriptionLoad.unsubscribe();
                        }
                    }
                    catch (e) {
                    }
                    this.onSaveProject();
                };
                //#endregion
                //#region General private function
                /**
                 * Init, first init the svg-editor component
                 */
                EditorComponent.prototype.myInit = function () {
                    var _this = this;
                    try {
                        // first init svg-editor component
                        mypathseg.initPathSeg();
                        mybrowser.initBrowser();
                        mysvgutils.initSvgutils();
                        myselect.initSelect();
                        mydraw.initDraw();
                        mysvgcanvas.initSvgCanvas();
                        // init svg-editor
                        var toinit = mysvgeditor.initSvgEditor($, function (selected) {
                            _this.onSelectedElement(selected);
                            var ga = _this.getGaugeSettings(selected);
                        }, function (type, args) {
                            _this.onExtensionLoaded(args);
                            _this.clearSelection();
                            if (type === 'shapes') {
                                _this.setShapes();
                            }
                        }, function (type, color) {
                            if (type === 'fill') {
                                _this.colorFill = color;
                                _this.setFillColor(_this.colorFill);
                                _this.checkMySelectedToSetColor(_this.colorFill, null, _this.winRef.nativeWindow.svgEditor.getSelectedElements());
                            }
                            else if (type === 'stroke') {
                                _this.colorStroke = color;
                                _this.checkMySelectedToSetColor(null, _this.colorStroke, _this.winRef.nativeWindow.svgEditor.getSelectedElements());
                            }
                        }, function (eleadded) {
                            var ga = _this.getGaugeSettings(eleadded);
                            _this.checkGaugeAdded(ga);
                            setTimeout(function () {
                                _this.setMode('select', false);
                            }, 700);
                            // this.hmiService.addGauge(this.hmi, eleadded);
                        }, function (eleremoved) {
                            _this.onRemoveElement(eleremoved);
                        }, function (eleresized) {
                            if (eleresized && eleresized.id) {
                                var ga = _this.getGaugeSettings(eleresized);
                                _this.gaugesManager.checkElementToResize(ga, _this.resolver, _this.viewContainerRef, eleresized.size);
                            }
                        }, function (copiedpasted) {
                            if (copiedpasted && copiedpasted.copy && copiedpasted.past) {
                                copiedpasted.copy = copiedpasted.copy.filter(function (e) { return e; });
                                if (copiedpasted.copy.length == copiedpasted.past.length) {
                                    for (var i = 0; i < copiedpasted.copy.length; i++) {
                                        var srctype = copiedpasted.copy[i].getAttribute("type");
                                        var srcid = copiedpasted.copy[i].getAttribute("id");
                                        if (srcid && srctype) {
                                            var gasrc = _this.searchGaugeSettings({ id: srcid, type: srctype });
                                            var gadest = _this.gaugesManager.createSettings(copiedpasted.past[i].id, gasrc.type);
                                            gadest.property = JSON.parse(JSON.stringify(gasrc.property));
                                            _this.setGaugeSettings(gadest);
                                            _this.checkGaugeAdded(gadest);
                                        }
                                    }
                                }
                            }
                        });
                        this.winRef.nativeWindow.svgEditor.init();
                        $(initContextmenu);
                    }
                    catch (err) {
                        console.error(err);
                    }
                    this.setFillColor(this.colorFill);
                    this.setFillColor(this.colorStroke);
                };
                /**
                 * Load the hmi resource and bind it
                 */
                EditorComponent.prototype.loadHmi = function () {
                    this.currentView = null;
                    this.hmi = this.projectService.getHmi();
                    // check new hmi
                    if (!this.hmi.views || this.hmi.views.length <= 0) {
                        this.hmi.views = [];
                        this.addView();
                        // this.selectView(this.hmi.views[0].name);
                    }
                    else {
                        var oldsel = localStorage.getItem("@frango.webeditor.currentview");
                        if (!oldsel && this.hmi.views.length) {
                            oldsel = this.hmi.views[0].name;
                        }
                        for (var i = 0; i < this.hmi.views.length; i++) {
                            if (this.hmi.views[i].name === oldsel) {
                                this.onSelectView(this.hmi.views[i]);
                                break;
                            }
                        }
                    }
                    this.loadPanelState();
                    this.isLoading = false;
                };
                /**
                 * Set or Add the View to Project
                 * Save the View to Server
                 */
                EditorComponent.prototype.saveView = function (view) {
                    this.projectService.setView(view);
                };
                /**
                 * Remove the View from Project
                 * Remove the View from Server
                 * @param view
                 */
                EditorComponent.prototype.removeView = function (view) {
                    this.projectService.removeView(view);
                };
                EditorComponent.prototype.getContent = function () {
                    if (this.currentView.type === _helpers_utils__WEBPACK_IMPORTED_MODULE_11__["Utils"].getEnumKey(_models_hmi__WEBPACK_IMPORTED_MODULE_5__["ViewType"], _models_hmi__WEBPACK_IMPORTED_MODULE_5__["ViewType"].cards)) {
                        this.currentView.svgcontent = this.cardsview.getContent();
                        return this.currentView.svgcontent;
                        // let temp = JSON.parse(JSON.stringify(this.dashboard));
                        // for (let i = 0; i < temp.length; i++) {
                        //     delete temp[i]['content'];
                        //     delete temp[i]['background'];
                        // }
                        // return JSON.stringify(temp);
                    }
                    else {
                        return this.winRef.nativeWindow.svgEditor.getSvgString();
                    }
                };
                /**
                 * Take shapes from svg-editor to show in panel
                 */
                EditorComponent.prototype.setShapes = function () {
                    var temp = this.winRef.nativeWindow.svgEditor.getShapes();
                    var grps = [];
                    Object.keys(temp).forEach(function (grpk) {
                        grps.push({ name: grpk, shapes: temp[grpk] });
                    }),
                        this.shapesGrps = grps;
                };
                /**
                 * get gauge settings from current view items, if not exist create void settings from GaugesManager
                 * @param ele gauge id
                 */
                EditorComponent.prototype.getGaugeSettings = function (ele) {
                    if (ele && this.currentView) {
                        if (this.currentView.items[ele.id]) {
                            return this.currentView.items[ele.id];
                        }
                        return this.gaugesManager.createSettings(ele.id, ele.type);
                    }
                    return null;
                };
                /**
                 * search gauge settings on all views items, if not exist create void settings from GaugesManager
                 * @param ele gauge element
                 */
                EditorComponent.prototype.searchGaugeSettings = function (ele) {
                    if (ele) {
                        if (this.currentView) {
                            if (this.currentView.items[ele.id]) {
                                return this.currentView.items[ele.id];
                            }
                        }
                        for (var i = 0; i < this.hmi.views.length; i++) {
                            if (this.hmi.views[i].items[ele.id]) {
                                return this.hmi.views[i].items[ele.id];
                            }
                        }
                        return this.gaugesManager.createSettings(ele.id, ele.type);
                    }
                    return null;
                };
                /**
                 * add the gauge settings to the current view items list
                 * @param ga GaugeSettings
                 */
                EditorComponent.prototype.setGaugeSettings = function (ga) {
                    this.currentView.items[ga.id] = ga;
                };
                /**
                 * check the gauge in current view of element
                 * @param ele element to check
                 */
                EditorComponent.prototype.checkGaugeInView = function (ele) {
                    var g = this.getGaugeSettings(ele);
                    if (!g) {
                    }
                };
                /**
                 * check and set the color panel with selected element
                 * @param ele selected element
                 */
                EditorComponent.prototype.checkColors = function (ele) {
                    var eles = this.winRef.nativeWindow.svgEditor.getSelectedElements();
                    var clrfill = null;
                    var clrstroke = null;
                    if (eles && (eles.length <= 1 || !eles[1]) && eles[0]) {
                        // check for gauge fill and stroke color
                        var colors = { fill: clrfill, stroke: clrstroke };
                        if (_gauges_gauges_component__WEBPACK_IMPORTED_MODULE_9__["GaugesManager"].checkGaugeColor(ele, eles, colors)) {
                            if (colors.fill) {
                                this.colorFill = colors.fill;
                            }
                            if (colors.stroke) {
                                this.colorStroke = colors.stroke;
                            }
                        }
                        else {
                            if (eles[0].attributes['fill']) {
                                clrfill = eles[0].attributes['fill'].value;
                                this.colorFill = clrfill;
                            }
                            if (eles[0].attributes['stroke']) {
                                clrstroke = eles[0].attributes['stroke'].value;
                                this.colorStroke = clrstroke;
                            }
                            // this.setFillColor(this.colorFill);
                        }
                    }
                };
                /**
                 * return the fill color of svg element 'g'
                 * @param eleId
                 */
                EditorComponent.prototype.getFillColor = function (eleId) {
                    if (eleId) {
                        var ele = document.getElementById(eleId);
                        if (ele) {
                            return ele.getAttribute('fill');
                        }
                    }
                };
                /**
                 * load the view to svg-editor and canvas
                 * @param view view to load
                 */
                EditorComponent.prototype.loadView = function (view) {
                    var _this = this;
                    if (view) {
                        this.clearEditor();
                        if (this.editorMode !== EditorModeType.CARDS) {
                            var svgcontent = '';
                            var v_1 = this.getView(view.name);
                            if (v_1) {
                                svgcontent = v_1.svgcontent;
                            }
                            if (svgcontent.length <= 0) {
                                svgcontent = '<svg id="' + view.name + '" width="' + view.profile.width + '" height="' + view.profile.height +
                                    '" xmlns="http://www.w3.org/2000/svg" xmlns:svg="http://www.w3.org/2000/svg">' +
                                    '<filter id="blur-filter" x="-3" y="-3" width="200" height="200"><feGaussianBlur in="SourceGraphic" stdDeviation="3" /></filter>' +
                                    '<g><title>Layer 1</title></g></svg>';
                            }
                            if (this.winRef.nativeWindow.svgEditor) {
                                this.winRef.nativeWindow.svgEditor.setDocProperty(view.name, view.profile.width, view.profile.height, view.profile.bkcolor);
                                this.winRef.nativeWindow.svgEditor.setSvgString(svgcontent);
                            }
                            // check gauge to init
                            this.gaugesRef = [];
                            setTimeout(function () {
                                for (var key in v_1.items) {
                                    var ga = _this.getGaugeSettings(v_1.items[key]);
                                    _this.checkGaugeAdded(ga);
                                }
                                _this.winRef.nativeWindow.svgEditor.refreshCanvas();
                            }, 500);
                        }
                        else if (this.cardsview) {
                            this.cardsview.view = view;
                            this.cardsview.reload();
                        }
                    }
                };
                /**
                 * get view from hmi views list
                 * @param name view name
                 */
                EditorComponent.prototype.getView = function (name) {
                    for (var i = 0; i < this.hmi.views.length; i++) {
                        if (this.hmi.views[i].name === name) {
                            return this.hmi.views[i];
                        }
                    }
                    return null;
                };
                EditorComponent.prototype.getViewsSorted = function () {
                    return this.hmi.views.sort(function (a, b) {
                        if (a.name > b.name) {
                            return 1;
                        }
                        return -1;
                    });
                };
                //#endregion
                //#region Cards Widget
                EditorComponent.prototype.editCardsWidget = function (item) {
                    var _this = this;
                    var exist = this.cardsview.getWindgetViewName();
                    if (item.card.data && exist.indexOf(item.card.data) >= 0) {
                        exist = exist.filter(function (n) { return n !== item.card.data; });
                    }
                    var cardType = _helpers_utils__WEBPACK_IMPORTED_MODULE_11__["Utils"].getEnumKey(_models_hmi__WEBPACK_IMPORTED_MODULE_5__["ViewType"], _models_hmi__WEBPACK_IMPORTED_MODULE_5__["ViewType"].cards);
                    var views = this.hmi.views.filter(function (v) { return v.type !== cardType && exist.indexOf(v.name) < 0; }).map(function (v) { return v.name; });
                    var dialogRef = this.dialog.open(_card_config_card_config_component__WEBPACK_IMPORTED_MODULE_25__["CardConfigComponent"], {
                        position: { top: '60px' },
                        data: { item: item, views: views }
                    });
                    dialogRef.afterClosed().subscribe(function (result) {
                        if (result) {
                            var view = _this.hmi.views.filter(function (v) { return v.name === item.card.data; });
                            if (view && view.length) {
                                item.content = view[0];
                            }
                            else {
                                item.content = null;
                            }
                            _this.onSaveProject();
                            _this.cardsview.render();
                        }
                    });
                };
                EditorComponent.prototype.addCard = function () {
                    this.cardsview.addCardsWidget();
                };
                EditorComponent.prototype.saveCards = function (dashboard) {
                    // this.dashboard.splice(this.dashboard.indexOf(item), 1);
                };
                // #region 
                //#region Svg-editor event and function interface
                /**
                 * set the mode to svg-editor (line,text,...)
                 * @param mode mode to set
                 */
                EditorComponent.prototype.setMode = function (mode, clearSelection) {
                    if (clearSelection === void 0) { clearSelection = true; }
                    this.currentMode = mode;
                    if (clearSelection) {
                        this.clearSelection();
                        this.checkFillAndStrokeColor();
                    }
                    this.winRef.nativeWindow.svgEditor.clickToSetMode(mode);
                };
                /**
                 * check with the current mode
                 * @param mode mode to check
                 */
                EditorComponent.prototype.isModeActive = function (mode) {
                    return (this.currentMode === mode);
                };
                /**
                 * clear svg-editor and the canvas
                 */
                EditorComponent.prototype.clearEditor = function () {
                    if (this.winRef.nativeWindow.svgEditor) {
                        this.winRef.nativeWindow.svgEditor.clickClearAll();
                    }
                };
                /**
                 * check if fill and stroke not the same color is, text and label set all to black
                 */
                EditorComponent.prototype.checkFillAndStrokeColor = function () {
                    if (this.colorFill && this.colorStroke && this.colorFill === this.colorStroke) {
                        this.setFillColor(this.colorDefault.fill);
                        this.setStrokeColor(this.colorDefault.stroke);
                    }
                };
                /**
                 * event from svg-editor by new selection svg element
                 * @param event svg element
                 */
                EditorComponent.prototype.onSelectedElement = function (elems) {
                    this.selectedElement = null;
                    try {
                        // to remove some strange effects
                        if (document.activeElement !== document.body)
                            document.activeElement.blur();
                    }
                    catch (e) { }
                    if (elems) {
                        if (elems.length <= 1) {
                            this.selectedElement = elems[0];
                            this.selectedElement.type = elems[0].type || 'svg-ext-shapes-' + (this.currentMode || 'default');
                            this.checkColors(this.selectedElement);
                            this.checkGaugeInView(this.selectedElement);
                        }
                    }
                };
                /**
                 * event from svg-editor: for every loaded extension
                 * @param args
                 */
                EditorComponent.prototype.onExtensionLoaded = function (args) {
                };
                /**
                 * event from svg-editor: change fill color
                 * @param event color code
                 */
                EditorComponent.prototype.onChangeFillColor = function (event) {
                    this.setFillColor(event);
                    this.checkMySelectedToSetColor(this.colorFill, null, this.winRef.nativeWindow.svgEditor.getSelectedElements());
                };
                /**
                 * event change stroke color (from bottom color panel)
                 * @param event color code
                 */
                EditorComponent.prototype.onChangeStrokeColor = function (event) {
                    this.setStrokeColor(event);
                    this.checkMySelectedToSetColor(null, this.colorStroke, this.winRef.nativeWindow.svgEditor.getSelectedElements());
                };
                /**
                 * event from svg-editor: svg element removed
                 * @param ele svg element
                 */
                EditorComponent.prototype.onRemoveElement = function (ele) {
                    if (this.currentView && this.currentView.items && ele) {
                        for (var i = 0; i < ele.length; i++) {
                            if (this.currentView.items[ele[i].id]) {
                                delete this.currentView.items[ele[i].id];
                            }
                        }
                    }
                };
                /**
                 * set the fill color (to svg-editor)
                 * @param event color code
                 */
                EditorComponent.prototype.setFillColor = function (event) {
                    var color = event;
                    if (color.charAt(0) === '#')
                        color = color.slice(1);
                    var alfa = 100;
                    if (this.winRef.nativeWindow.svgEditor) {
                        this.winRef.nativeWindow.svgEditor.setColor(color, alfa, "fill");
                    }
                    // this.fillcolor;
                };
                /**
                 * set stroke color (to svg-editor)
                 * @param event color code
                 */
                EditorComponent.prototype.setStrokeColor = function (event) {
                    var color = event;
                    if (color.charAt(0) === '#')
                        color = color.slice(1);
                    var alfa = 100;
                    this.winRef.nativeWindow.svgEditor.setColor(color, alfa, "stroke");
                    // this.fillcolor;
                };
                /**
                 * set the marker to selected element (->, <->, <-)
                 * @param id marker id (start,mid,end)
                 * @param marker marker type
                 */
                EditorComponent.prototype.onSetMarker = function (id, marker) {
                    if (marker >= 0) {
                        this.winRef.nativeWindow.svgEditor.setMarker(id, marker);
                    }
                };
                /**
                 * align the selected element
                 * @param letter align type (left,center,right,top,middle,bottom)
                 */
                EditorComponent.prototype.onAlignSelected = function (letter) {
                    this.winRef.nativeWindow.svgEditor.alignSelectedElements(letter.charAt(0));
                };
                /**
                 * select the zoom area function
                 */
                EditorComponent.prototype.onZoomSelect = function () {
                    this.winRef.nativeWindow.svgEditor.clickZoom();
                };
                /**
                 * show grid in canvas
                 */
                EditorComponent.prototype.onShowGrid = function () {
                    this.gridOn = this.gridOn = !this.gridOn;
                    this.winRef.nativeWindow.svgEditor.clickExtension("view_grid");
                    this.winRef.nativeWindow.svgEditor.enableGridSnapping(this.gridOn);
                };
                /**
                 * add image to view
                 * @param event selected file
                 */
                EditorComponent.prototype.onSetImage = function (event) {
                    if (event.target.files) {
                        this.imagefile = 'assets/images/' + event.target.files[0].name;
                        var self_1 = this;
                        if (this.imagefile.split('.').pop().toLowerCase() === 'svg') {
                            var reader = new FileReader();
                            reader.onloadend = function (e) {
                                self_1.winRef.nativeWindow.svgEditor.setSvgImageToAdd(e.target.result);
                                self_1.setMode('svg-image');
                            };
                            reader.readAsText(event.target.files[0]);
                        }
                        else {
                            this.getBase64Image(event.target.files[0], function (imgdata) {
                                var data = imgdata;
                                self_1.winRef.nativeWindow.svgEditor.promptImgURLcallback = data;
                                self_1.setMode('image');
                            });
                        }
                    }
                };
                /**
                 * convert image file to code to attach in svg
                 * @param file image file
                 * @param callback event for end load image
                 */
                EditorComponent.prototype.getBase64Image = function (file, callback) {
                    var fr = new FileReader();
                    fr.onload = function () {
                        callback(fr.result);
                    };
                    fr.readAsDataURL(file);
                };
                /**
                 * set stroke to svg selected (joinmieter, joinround, joinbevel, capbutt, capsquare, capround)
                 * @param option stroke type
                 */
                EditorComponent.prototype.onSetStrokeOption = function (option) {
                    this.winRef.nativeWindow.svgEditor.setStrokeOption(option);
                };
                /**
                 * set shadow to svg selected
                 * @param event shadow
                 */
                EditorComponent.prototype.onSetShadowOption = function (event) {
                    this.winRef.nativeWindow.svgEditor.onSetShadowOption(event);
                };
                /**
                 * set font to svg selected
                 * @param font font family
                 */
                EditorComponent.prototype.onFontFamilyChange = function (font) {
                    this.winRef.nativeWindow.svgEditor.setFontFamily(font);
                };
                /**
                 * align the svg text (left,middle,right)
                 * @param align type
                 */
                EditorComponent.prototype.onTextAlignChange = function (align) {
                    this.winRef.nativeWindow.svgEditor.setTextAlign(align);
                };
                EditorComponent.prototype.checkMySelectedToSetColor = function (bkcolor, color, elems) {
                    _gauges_gauges_component__WEBPACK_IMPORTED_MODULE_9__["GaugesManager"].initElementColor(bkcolor, color, elems);
                };
                /**
                 * check and set the special gauge like ngx-uplot, ngx-gauge, ... if added
                 * if return true then the GaugeSettings is changed have to set again
                 * @param ga
                 */
                EditorComponent.prototype.checkGaugeAdded = function (ga) {
                    var gauge = this.gaugesManager.initElementAdded(ga, this.resolver, this.viewContainerRef, false);
                    if (gauge) {
                        if (gauge !== true) {
                            if (this.gaugesRef.indexOf(ga.id) === -1) {
                                this.gaugesRef[ga.id] = { type: ga.type, ref: gauge };
                            }
                        }
                        this.setGaugeSettings(ga);
                    }
                };
                /**
                 * dialog to define hyperlink
                 */
                EditorComponent.prototype.onMakeHyperlink = function () {
                    var _this = this;
                    var dialogRef = this.dialog.open(DialogLinkProperty, {
                        data: { url: 'https://' },
                        position: { top: '60px' }
                    });
                    dialogRef.afterClosed().subscribe(function (result) {
                        if (result && result.url) {
                            _this.winRef.nativeWindow.svgEditor.makeHyperlink(result.url);
                        }
                    });
                };
                //#endregion
                //#region Toolbar Top Events
                /**
                 * save current project and launch the Test in new Windows 'lab'
                 */
                EditorComponent.prototype.onStartCurrent = function () {
                    this.onSaveProject();
                    this.winRef.nativeWindow.open('lab', 'MyTest', 'width=800,height=640,menubar=0');
                };
                //#endregion
                //#region Project Events
                /**
                 * Save Project
                 * Save the current View
                 */
                EditorComponent.prototype.onSaveProject = function () {
                    if (this.currentView) {
                        this.currentView.svgcontent = this.getContent();
                        this.saveView(this.currentView);
                    }
                };
                //#endregion
                //#region View Events (Add/Rename/Delete/...)
                EditorComponent.prototype.onAddDoc = function () {
                    var _this = this;
                    var exist = this.hmi.views.map(function (v) { return v.name; });
                    var dialogRef = this.dialog.open(DialogNewDoc, {
                        position: { top: '60px' },
                        data: { name: '', type: _helpers_utils__WEBPACK_IMPORTED_MODULE_11__["Utils"].getEnumKey(_models_hmi__WEBPACK_IMPORTED_MODULE_5__["ViewType"], _models_hmi__WEBPACK_IMPORTED_MODULE_5__["ViewType"].svg), exist: exist }
                    });
                    dialogRef.afterClosed().subscribe(function (result) {
                        if (result && result.name && result.type) {
                            _this.addView(result.name, result.type);
                        }
                    });
                };
                /**
                 * Add View to Project with a default name View_[x]
                 */
                EditorComponent.prototype.addView = function (name, type) {
                    if (this.hmi.views) {
                        var nn = "View_";
                        var idx = 1;
                        for (idx = 1; idx < this.hmi.views.length + 2; idx++) {
                            var found = false;
                            for (var i = 0; i < this.hmi.views.length; i++) {
                                if (this.hmi.views[i].name === nn + idx) {
                                    found = true;
                                    break;
                                }
                            }
                            if (!found)
                                break;
                        }
                        var v = new _models_hmi__WEBPACK_IMPORTED_MODULE_5__["View"]();
                        v.type = type;
                        if (name) {
                            v.name = name;
                        }
                        else if (this.hmi.views.length <= 0) {
                            v.name = 'MainView';
                        }
                        else {
                            v.name = nn + idx;
                            v.profile.bkcolor = '#ffffffff';
                        }
                        if (type === _helpers_utils__WEBPACK_IMPORTED_MODULE_11__["Utils"].getEnumKey(_models_hmi__WEBPACK_IMPORTED_MODULE_5__["ViewType"], _models_hmi__WEBPACK_IMPORTED_MODULE_5__["ViewType"].cards)) {
                            v.profile.bkcolor = 'rgba(67, 67, 67, 1)';
                        }
                        v.id = 'v_' + _helpers_utils__WEBPACK_IMPORTED_MODULE_11__["Utils"].getShortGUID();
                        this.hmi.views.push(v);
                        this.onSelectView(v);
                        this.saveView(this.currentView);
                    }
                };
                /**
                 * Clone the View, copy and change all ids
                 * @param view
                 */
                EditorComponent.prototype.onCloneView = function (view) {
                    if (view) {
                        var nn = "View_";
                        var idx = 1;
                        for (idx = 1; idx < this.hmi.views.length + 2; idx++) {
                            var found = false;
                            for (var i = 0; i < this.hmi.views.length; i++) {
                                if (this.hmi.views[i].name === nn + idx) {
                                    found = true;
                                    break;
                                }
                            }
                            if (!found)
                                break;
                        }
                        var torename = { content: JSON.stringify(view), id: '' };
                        // change all gauge ids
                        var idrenamed = [];
                        for (var key in view.items) {
                            torename.id = key;
                            var newid = this.winRef.nativeWindow.svgEditor.renameSvgExtensionId(torename);
                            idrenamed.push(newid);
                        }
                        var strv = this.winRef.nativeWindow.svgEditor.renameAllSvgExtensionId(torename.content, idrenamed);
                        var v = JSON.parse(strv);
                        v.id = 'v_' + _helpers_utils__WEBPACK_IMPORTED_MODULE_11__["Utils"].getShortGUID();
                        v.name = nn + idx;
                        this.hmi.views.push(v);
                        this.onSelectView(v);
                        this.saveView(this.currentView);
                    }
                };
                /**
                 * Delete the View from hmi.views list
                 * @param view View to delete
                 */
                EditorComponent.prototype.onDeleteView = function (view) {
                    var _this = this;
                    var msg = '';
                    this.translateService.get('msg.view-remove', { value: view.name }).subscribe(function (txt) { msg = txt; });
                    var dialogRef = this.dialog.open(_gui_helpers_confirm_dialog_confirm_dialog_component__WEBPACK_IMPORTED_MODULE_12__["ConfirmDialogComponent"], {
                        data: { msg: msg },
                        position: { top: '60px' }
                    });
                    dialogRef.afterClosed().subscribe(function (result) {
                        if (result && _this.hmi.views) {
                            var toselect = null;
                            for (var i = 0; i < _this.hmi.views.length; i++) {
                                if (_this.hmi.views[i].id === view.id) {
                                    _this.hmi.views.splice(i, 1);
                                    if (i > 0 && i < _this.hmi.views.length) {
                                        toselect = _this.hmi.views[i];
                                    }
                                    break;
                                }
                            }
                            _this.currentView = null;
                            if (toselect) {
                                _this.onSelectView(toselect);
                            }
                            else if (_this.hmi.views.length > 0) {
                                _this.onSelectView(_this.hmi.views[0]);
                            }
                            _this.removeView(view);
                        }
                    });
                };
                /**
                 * Rename the View (only name)
                 * @param view View to rename
                 */
                EditorComponent.prototype.onRenameView = function (view) {
                    var _this = this;
                    var exist = this.hmi.views.filter(function (v) { return v.id !== view.id; }).map(function (v) { return v.name; });
                    var dialogRef = this.dialog.open(DialogDocName, {
                        position: { top: '60px' },
                        data: { name: view.name, exist: exist }
                    });
                    dialogRef.afterClosed().subscribe(function (result) {
                        if (result && result.name) {
                            view.name = result.name;
                            _this.saveView(view);
                        }
                    });
                };
                /**
                 * Edit View property
                 * @param view View to change property (height, width, background)
                 */
                EditorComponent.prototype.onPropertyView = function (view) {
                    var _this = this;
                    var dialogRef = this.dialog.open(DialogDocProperty, {
                        position: { top: '60px' },
                        data: { name: view.name, type: view.type, profile: view.profile }
                    });
                    dialogRef.afterClosed().subscribe(function (result) {
                        if (result && result.profile) {
                            if (result.profile.height)
                                view.profile.height = parseInt(result.profile.height);
                            if (result.profile.width)
                                view.profile.width = parseInt(result.profile.width);
                            if (result.profile.margin >= 0)
                                view.profile.margin = parseInt(result.profile.margin);
                            view.profile.bkcolor = result.profile.bkcolor;
                            _this.winRef.nativeWindow.svgEditor.setDocProperty(view.name, view.profile.width, view.profile.height, view.profile.bkcolor);
                            _this.onSelectView(view);
                        }
                    });
                };
                /**
                 * select the view, save current vieww before
                 * @param view selected view to load resource
                 */
                EditorComponent.prototype.onSelectView = function (view) {
                    if (this.currentView) {
                        this.currentView.svgcontent = this.getContent();
                        // this.hmi.views[this.currentView].svgcontent = this.winRef.nativeWindow.svgEditor.getSvgString();
                    }
                    else {
                        this.setFillColor(this.colorFill);
                    }
                    if (this.currentView) {
                        this.saveView(this.currentView);
                    }
                    this.currentView = view;
                    if (this.currentView.type === _helpers_utils__WEBPACK_IMPORTED_MODULE_11__["Utils"].getEnumKey(_models_hmi__WEBPACK_IMPORTED_MODULE_5__["ViewType"], _models_hmi__WEBPACK_IMPORTED_MODULE_5__["ViewType"].cards)) {
                        this.editorMode = EditorModeType.CARDS;
                    }
                    else {
                        this.editorMode = EditorModeType.SVG;
                    }
                    localStorage.setItem("@frango.webeditor.currentview", this.currentView.name);
                    this.loadView(this.currentView);
                };
                /**
                 * check with the current view
                 * @param view view to check
                 */
                EditorComponent.prototype.isViewActive = function (view) {
                    return (this.currentView && this.currentView.name === view.name);
                };
                /**
                 * Export view in a file json format MyView.fuxav
                 * @param view
                 */
                EditorComponent.prototype.onExportView = function (view) {
                    var filename = 'fuxa-view.json';
                    var date = new Date();
                    var content = JSON.stringify(view);
                    var blob = new Blob([content], { type: 'text/plain;charset=utf-8' });
                    file_saver__WEBPACK_IMPORTED_MODULE_14__["saveAs"](blob, filename);
                };
                /**
                 * Import view from file (exported in json format MyView.fuxav)
                 */
                EditorComponent.prototype.onImportView = function () {
                    var ele = document.getElementById('viewFileUpload');
                    ele.click();
                };
                /**
                 * open Project event file loaded
                 * @param event file resource
                 */
                EditorComponent.prototype.onViewFileChangeListener = function (event) {
                    var _this = this;
                    var text = [];
                    var files = event.srcElement.files;
                    var input = event.target;
                    var reader = new FileReader();
                    reader.onload = function (data) {
                        var view = JSON.parse(reader.result.toString());
                        if (view) {
                            var idx = 1;
                            var startname = view.name;
                            var existView = null;
                            while (existView = _this.hmi.views.find(function (v) { return v.name === view.name; })) {
                                view.name = startname + '_' + idx++;
                            }
                            view.id = 'v_' + _helpers_utils__WEBPACK_IMPORTED_MODULE_11__["Utils"].getShortGUID();
                            _this.hmi.views.push(view);
                            _this.onSelectView(view);
                            _this.saveView(_this.currentView);
                        }
                        // this.projectService.setProject(prj, true);
                    };
                    reader.onerror = function () {
                        var msg = 'Unable to read ' + input.files[0];
                        // this.translateService.get('msg.project-load-error', {value: input.files[0]}).subscribe((txt: string) => { msg = txt });
                        alert(msg);
                    };
                    reader.readAsText(input.files[0]);
                    this.viewFileImportInput.nativeElement.value = null;
                };
                //#endregion
                //#region Panels State
                /**
                 * Load the left panels state copied in localstorage
                 */
                EditorComponent.prototype.loadPanelState = function () {
                    var ps = localStorage.getItem("@frango.webeditor.panelsState");
                    this.panelsState.enabled = true;
                    if (ps) {
                        this.panelsState = JSON.parse(ps);
                    }
                };
                /**
                 * Save the panels state in localstorage (after every toggled)
                 */
                EditorComponent.prototype.savePanelState = function () {
                    if (this.panelsState.enabled) {
                        localStorage.setItem("@frango.webeditor.panelsState", JSON.stringify(this.panelsState));
                    }
                };
                //#endregion
                //#region Interactivity
                /**
                 * to check from DOM and to control open close interaction panel
                 * @param ele selected gauge element
                 */
                EditorComponent.prototype.isInteractivtyEnabled = function (ele) {
                    if (ele && ele.type) {
                        return this.gaugesManager.isGauge(ele.type);
                    }
                    return false;
                };
                /**
                 * callback to open edit gauge property form (from GaugeBase)
                 * @param event
                 */
                EditorComponent.prototype.onGaugeEdit = function (event) {
                    var _this = this;
                    var settings = this.gaugePanelComponent.settings;
                    this.openEditGauge(settings, function (data) {
                        _this.setGaugeSettings(data);
                    });
                };
                /**
                 * callback to open edit gauge property form (from selected element context menu)
                 */
                EditorComponent.prototype.onGaugeEditEx = function () {
                    var _this = this;
                    setTimeout(function () {
                        _this.gaugePanelComponent.onEdit();
                    }, 500);
                };
                EditorComponent.prototype.isWithEvents = function (type) {
                    return this.gaugesManager.isWithEvents(type);
                };
                EditorComponent.prototype.isWithActions = function (type) {
                    return this.gaugesManager.isWithActions(type);
                };
                /**
                 * edit the gauges/chart settings property, the settings are composed from gauge id... and property
                 * in property will be the result values saved
                 *
                 * @param settings
                 * @param callback
                 */
                EditorComponent.prototype.openEditGauge = function (settings, callback) {
                    var _this = this;
                    var tempsettings = JSON.parse(JSON.stringify(settings));
                    var hmi = this.projectService.getHmi();
                    var dlgType = _gauges_gauges_component__WEBPACK_IMPORTED_MODULE_9__["GaugesManager"].getEditDialogTypeToUse(settings.type);
                    var eventsSupported = this.isWithEvents(settings.type);
                    var actionsSupported = this.isWithActions(settings.type);
                    var defaultValue = _gauges_gauges_component__WEBPACK_IMPORTED_MODULE_9__["GaugesManager"].getDefaultValue(settings.type);
                    var names = Object.values(this.currentView.items).map(function (gs) { return gs.name; });
                    // set default name
                    if (!tempsettings.name) {
                        tempsettings.name = _helpers_utils__WEBPACK_IMPORTED_MODULE_11__["Utils"].getNextName(_gauges_gauges_component__WEBPACK_IMPORTED_MODULE_9__["GaugesManager"].getPrefixGaugeName(settings.type), names);
                    }
                    // settings.property = JSON.parse(settings.property);
                    var dialogRef;
                    if (dlgType === _gauges_gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_7__["GaugeDialogType"].Chart) {
                        dialogRef = this.dialog.open(_gauges_controls_html_chart_chart_property_chart_property_component__WEBPACK_IMPORTED_MODULE_8__["ChartPropertyComponent"], {
                            position: { top: '60px' },
                            data: {
                                settings: tempsettings, devices: Object.values(this.projectService.getDevices()),
                                views: hmi.views, dlgType: dlgType, charts: this.projectService.getCharts(),
                                names: names
                            }
                        });
                    }
                    else if (dlgType === _gauges_gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_7__["GaugeDialogType"].Gauge) {
                        dialogRef = this.dialog.open(_gauges_controls_html_bag_bag_property_bag_property_component__WEBPACK_IMPORTED_MODULE_15__["BagPropertyComponent"], {
                            position: { top: '30px' },
                            data: {
                                settings: tempsettings, devices: Object.values(this.projectService.getDevices()), dlgType: dlgType,
                                names: names
                            }
                        });
                    }
                    else if (dlgType === _gauges_gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_7__["GaugeDialogType"].Pipe) {
                        dialogRef = this.dialog.open(_gauges_controls_pipe_pipe_property_pipe_property_component__WEBPACK_IMPORTED_MODULE_16__["PipePropertyComponent"], {
                            position: { top: '60px' },
                            data: {
                                settings: tempsettings, devices: Object.values(this.projectService.getDevices()),
                                withEvents: eventsSupported, withActions: actionsSupported,
                                names: names
                            }
                        });
                    }
                    else if (dlgType === _gauges_gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_7__["GaugeDialogType"].Slider) {
                        dialogRef = this.dialog.open(_gauges_controls_slider_slider_property_slider_property_component__WEBPACK_IMPORTED_MODULE_17__["SliderPropertyComponent"], {
                            position: { top: '60px' },
                            data: {
                                settings: tempsettings, devices: Object.values(this.projectService.getDevices()),
                                withEvents: eventsSupported, withActions: actionsSupported,
                                names: names
                            }
                        });
                    }
                    else if (dlgType === _gauges_gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_7__["GaugeDialogType"].Switch) {
                        dialogRef = this.dialog.open(_gauges_controls_html_switch_html_switch_property_html_switch_property_component__WEBPACK_IMPORTED_MODULE_24__["HtmlSwitchPropertyComponent"], {
                            position: { top: '60px' },
                            data: {
                                settings: tempsettings, devices: Object.values(this.projectService.getDevices()),
                                withEvents: eventsSupported, withActions: actionsSupported,
                                names: names
                            }
                        });
                    }
                    else {
                        var title = this.getGaugeTitle(settings.type);
                        dialogRef = this.dialog.open(_gauges_gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_7__["GaugePropertyComponent"], {
                            position: { top: '60px' },
                            data: {
                                settings: tempsettings, devices: Object.values(this.projectService.getDevices()), title: title,
                                views: hmi.views, dlgType: dlgType, withEvents: eventsSupported, withActions: actionsSupported, default: defaultValue,
                                inputs: Object.values(this.currentView.items).filter(function (gs) { return gs.name && (gs.id.startsWith('HXS_') || gs.id.startsWith('HXI_')); }),
                                names: names
                            }
                        });
                    }
                    dialogRef.afterClosed().subscribe(function (result) {
                        if (result) {
                            callback(result.settings);
                            _this.saveView(_this.currentView);
                            var result_gauge = _this.gaugesManager.initInEditor(result.settings, _this.resolver, _this.viewContainerRef);
                            if (dlgType === _gauges_gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_7__["GaugeDialogType"].Pipe && result_gauge && result_gauge.element && result_gauge.element.id !== result.settings.id) {
                                // by init a path we need to change the id
                                delete _this.currentView.items[result.settings.id];
                                result.settings.id = result_gauge.element.id;
                                callback(result.settings);
                                _this.saveView(_this.currentView);
                            }
                        }
                    });
                };
                EditorComponent.prototype.getGaugeTitle = function (type) {
                    var msg = '';
                    if (type.startsWith(_gauges_controls_html_input_html_input_component__WEBPACK_IMPORTED_MODULE_18__["HtmlInputComponent"].TypeTag)) {
                        this.translateService.get('editor.controls-input-settings').subscribe(function (txt) { msg = txt; });
                    }
                    else if (type.startsWith(_gauges_controls_value_value_component__WEBPACK_IMPORTED_MODULE_21__["ValueComponent"].TypeTag)) {
                        this.translateService.get('editor.controls-output-settings').subscribe(function (txt) { msg = txt; });
                    }
                    else if (type.startsWith(_gauges_controls_html_button_html_button_component__WEBPACK_IMPORTED_MODULE_19__["HtmlButtonComponent"].TypeTag)) {
                        this.translateService.get('editor.controls-button-settings').subscribe(function (txt) { msg = txt; });
                    }
                    else if (type.startsWith(_gauges_controls_html_select_html_select_component__WEBPACK_IMPORTED_MODULE_20__["HtmlSelectComponent"].TypeTag)) {
                        this.translateService.get('editor.controls-select-settings').subscribe(function (txt) { msg = txt; });
                    }
                    else if (type.startsWith(_gauges_controls_gauge_progress_gauge_progress_component__WEBPACK_IMPORTED_MODULE_22__["GaugeProgressComponent"].TypeTag)) {
                        this.translateService.get('editor.controls-progress-settings').subscribe(function (txt) { msg = txt; });
                    }
                    else if (type.startsWith(_gauges_controls_gauge_semaphore_gauge_semaphore_component__WEBPACK_IMPORTED_MODULE_23__["GaugeSemaphoreComponent"].TypeTag)) {
                        this.translateService.get('editor.controls-semaphore-settings').subscribe(function (txt) { msg = txt; });
                    }
                    else {
                        this.translateService.get('editor.controls-shape-settings').subscribe(function (txt) { msg = txt; });
                    }
                    return msg;
                };
                //#endregion
                EditorComponent.prototype.isWithShadow = function () {
                    if (this.selectedElement) {
                    }
                    return false;
                };
                EditorComponent.prototype.fileNew = function () {
                };
                EditorComponent.prototype.checkValid = function (hmi) {
                    if (!hmi.views) {
                        hmi.views = [];
                        return false;
                    }
                    return true;
                };
                EditorComponent.prototype.clearSelection = function () {
                    this.winRef.nativeWindow.svgEditor.clearSelection();
                };
                EditorComponent.prototype.cloneElement = function () {
                    this.winRef.nativeWindow.svgEditor.clickExtension("view_grid");
                };
                EditorComponent.prototype.flipSelected = function (fliptype) {
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('gaugepanel'),
                    __metadata("design:type", _gauges_gauge_base_gauge_base_component__WEBPACK_IMPORTED_MODULE_10__["GaugeBaseComponent"])
                ], EditorComponent.prototype, "gaugePanelComponent", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('viewFileImportInput'),
                    __metadata("design:type", Object)
                ], EditorComponent.prototype, "viewFileImportInput", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('cardsview'),
                    __metadata("design:type", _cards_view_cards_view_component__WEBPACK_IMPORTED_MODULE_26__["CardsViewComponent"])
                ], EditorComponent.prototype, "cardsview", void 0);
                EditorComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        template: __webpack_require__(/*! ./editor.component.html */ "./app/editor/editor.component.html"),
                        styles: [__webpack_require__(/*! ./editor.component.css */ "./app/editor/editor.component.css")]
                    }),
                    __metadata("design:paramtypes", [_services_project_service__WEBPACK_IMPORTED_MODULE_4__["ProjectService"],
                    _helpers_windowref__WEBPACK_IMPORTED_MODULE_6__["WindowRef"],
                    _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialog"],
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"],
                    _ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__["TranslateService"],
                    _gauges_gauges_component__WEBPACK_IMPORTED_MODULE_9__["GaugesManager"],
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"],
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ComponentFactoryResolver"],
                    _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatIconRegistry"], _angular_platform_browser__WEBPACK_IMPORTED_MODULE_2__["DomSanitizer"]])
                ], EditorComponent);
                return EditorComponent;
            }());

            var DialogNewDoc = /** @class */ (function () {
                function DialogNewDoc(dialogRef, translateService, data) {
                    var _this = this;
                    this.dialogRef = dialogRef;
                    this.translateService = translateService;
                    this.data = data;
                    this.docType = _models_hmi__WEBPACK_IMPORTED_MODULE_5__["ViewType"];
                    Object.keys(this.docType).forEach(function (key) {
                        _this.translateService.get(_this.docType[key]).subscribe(function (txt) { _this.docType[key] = txt; });
                    });
                }
                DialogNewDoc.prototype.onNoClick = function () {
                    this.dialogRef.close();
                };
                DialogNewDoc.prototype.isValid = function (name) {
                    if (!this.data.type)
                        return false;
                    if (!this.data.name)
                        return false;
                    return (this.data.exist.find(function (n) { return n === name; })) ? false : true;
                };
                DialogNewDoc = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'dialog-new-doc',
                        template: __webpack_require__(/*! ./newdoc.dialog.html */ "./app/editor/newdoc.dialog.html"),
                    }),
                    __param(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MAT_DIALOG_DATA"])),
                    __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialogRef"],
                    _ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__["TranslateService"], Object])
                ], DialogNewDoc);
                return DialogNewDoc;
            }());

            var DialogDocProperty = /** @class */ (function () {
                function DialogDocProperty(translateService, dialogRef, data) {
                    var _this = this;
                    this.translateService = translateService;
                    this.dialogRef = dialogRef;
                    this.data = data;
                    this.defaultColor = _helpers_utils__WEBPACK_IMPORTED_MODULE_11__["Utils"].defaultColor;
                    this.cardViewType = _helpers_utils__WEBPACK_IMPORTED_MODULE_11__["Utils"].getEnumKey(_models_hmi__WEBPACK_IMPORTED_MODULE_5__["ViewType"], _models_hmi__WEBPACK_IMPORTED_MODULE_5__["ViewType"].cards);
                    this.propSizeType = [{ text: 'dlg.docproperty-size-320-240', value: { width: 320, height: 240 } }, { text: 'dlg.docproperty-size-460-360', value: { width: 460, height: 360 } },
                    { text: 'dlg.docproperty-size-640-480', value: { width: 640, height: 480 } }, { text: 'dlg.docproperty-size-800-600', value: { width: 800, height: 600 } },
                    { text: 'dlg.docproperty-size-1024-768', value: { width: 1024, height: 768 } }, { text: 'dlg.docproperty-size-1280-960', value: { width: 1280, height: 960 } },
                    { text: 'dlg.docproperty-size-1600-1200', value: { width: 1600, height: 1200 } }, { text: 'dlg.docproperty-size-1920-1080', value: { width: 1920, height: 1080 } }];
                    var _loop_1 = function (i) {
                        this_1.translateService.get(this_1.propSizeType[i].text).subscribe(function (txt) { _this.propSizeType[i].text = txt; });
                    };
                    var this_1 = this;
                    for (var i = 0; i < this.propSizeType.length; i++) {
                        _loop_1(i);
                    }
                }
                DialogDocProperty.prototype.onNoClick = function () {
                    this.dialogRef.close();
                };
                DialogDocProperty.prototype.onSizeChange = function (size) {
                    if (size && size.width && size.height) {
                        this.data.profile.width = size.width;
                        this.data.profile.height = size.height;
                    }
                };
                DialogDocProperty = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'dialog-doc-property',
                        template: __webpack_require__(/*! ./docproperty.dialog.html */ "./app/editor/docproperty.dialog.html"),
                        styles: [__webpack_require__(/*! ./docproperty.dialog.css */ "./app/editor/docproperty.dialog.css")]
                    }),
                    __param(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MAT_DIALOG_DATA"])),
                    __metadata("design:paramtypes", [_ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__["TranslateService"],
                    _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialogRef"], Object])
                ], DialogDocProperty);
                return DialogDocProperty;
            }());

            var DialogDocName = /** @class */ (function () {
                function DialogDocName(dialogRef, data) {
                    this.dialogRef = dialogRef;
                    this.data = data;
                }
                DialogDocName.prototype.onNoClick = function () {
                    this.dialogRef.close();
                };
                DialogDocName.prototype.isValid = function (name) {
                    return (this.data.exist.find(function (n) { return n === name; })) ? false : true;
                };
                DialogDocName = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'dialog-doc-name',
                        template: __webpack_require__(/*! ./docname.dialog.html */ "./app/editor/docname.dialog.html"),
                    }),
                    __param(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MAT_DIALOG_DATA"])),
                    __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialogRef"], Object])
                ], DialogDocName);
                return DialogDocName;
            }());

            var DialogLinkProperty = /** @class */ (function () {
                function DialogLinkProperty(dialogRef, data) {
                    this.dialogRef = dialogRef;
                    this.data = data;
                }
                DialogLinkProperty.prototype.onNoClick = function () {
                    this.dialogRef.close();
                };
                DialogLinkProperty = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'dialog-link-property',
                        template: __webpack_require__(/*! ./linkproperty.dialog.html */ "./app/editor/linkproperty.dialog.html"),
                    }),
                    __param(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MAT_DIALOG_DATA"])),
                    __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialogRef"], Object])
                ], DialogLinkProperty);
                return DialogLinkProperty;
            }());

            var EditorModeType;
            (function (EditorModeType) {
                EditorModeType[EditorModeType["SVG"] = 0] = "SVG";
                EditorModeType[EditorModeType["CARDS"] = 1] = "CARDS";
            })(EditorModeType || (EditorModeType = {}));


            /***/
}),

/***/ "./app/editor/layout-property/layout-property.component.html":
/*!*******************************************************************!*\
  !*** ./app/editor/layout-property/layout-property.component.html ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div style=\"position: relative;\" class=\"dialog-mdsd-v\">\n    <h1 mat-dialog-title style=\"display:inline-block; cursor:move\" mat-dialog-draggable>{{'dlg.layout-title' | translate}}</h1>\n    <mat-icon (click)=\"onNoClick()\" style=\"float:right;margin-right:-10px;margin-top:-10px;cursor:pointer;color:gray;\">clear</mat-icon>\n    <mat-tab-group style=\"width: 950px;height: 700px\">\n        <mat-tab label=\"{{'dlg.layout-general' | translate}}\">\n            <div style=\"display: block;\">\n                <div class=\"my-form-field\" style=\"display: inline-block;margin-top: 25px;\">\n                    <span>{{'dlg.layout-lbl-sview' | translate}}</span>\n                    <mat-select [(value)]=\"data.layout.start\" style=\"width: 400px\">\n                        <mat-option *ngFor=\"let view of data.views\" [value]=\"view.id\">\n                            {{ view.name }}\n                        </mat-option>\n                    </mat-select>\n                </div>\n                <div style=\"display: inline-block;margin-left: 180px;\">\n                    <button mat-icon-button style=\"color: rgba(255,255,255,1);background-color: rgba(68,138,255, 1);\">\n                        <mat-icon>menu</mat-icon>\n                    </button>\n                </div>\n                <div class=\"my-form-field\" style=\"display: inline-block;margin-left: 30px;\">\n                    <span>{{'dlg.layout-show-dev' | translate}}</span>\n                    <mat-slide-toggle color=\"primary\" [(ngModel)]=\"data.layout.showdev\"></mat-slide-toggle>\n                </div>\n            </div>\n            <div style=\"display: block;margin-top: 5px;\">\n                <div class=\"my-form-field\" style=\"display: inline-block\">\n                    <span>{{'dlg.layout-lbl-zoom' | translate}}</span>\n                    <mat-select [(value)]=\"data.layout.zoom\" style=\"width: 400px\">\n                        <mat-option *ngFor=\"let type of zoomMode | enumToArray\" [value]=\"type.key\">\n                            {{ type.value }}\n                        </mat-option>\n                    </mat-select>\n                </div>\n            </div>\n            <div style=\"display: block;margin-top: 10px;\">\n                <div class=\"my-form-field\" style=\"display: inline-block\">\n                    <span>{{'dlg.layout-input-dialog' | translate}}</span>\n                    <mat-select [(value)]=\"data.layout.inputdialog\" style=\"width: 400px\">\n                        <mat-option *ngFor=\"let type of inputMode | enumToArray\" [value]=\"type.key\">\n                            {{ type.value }}\n                        </mat-option>\n                    </mat-select>\n                </div>\n            </div>\n            <div style=\"display: block;margin-top: 10px;\">\n                <div class=\"my-form-field\" style=\"display: inline-block\">\n                    <span>{{'dlg.layout-navigation-mode' | translate}}</span>\n                    <mat-select [(value)]=\"data.layout.hidenavigation\" style=\"width: 400px\">\n                        <mat-option *ngFor=\"let type of headerMode | enumToArray\" [value]=\"type.key\">\n                            {{ type.value }}\n                        </mat-option>\n                    </mat-select>\n                </div>\n            </div> \n        </mat-tab>\n        <mat-tab label=\"{{'dlg.layout-navigation' | translate}}\" *ngIf=\"data.layout.hidenavigation !== 'true'\">\n            <div style=\"display: inline-block;margin-top: 10px;width:100%; min-height: 500px; overflow-y: auto; height: 620px\">\n                <div [style.background-color]=\"data.layout.header.bkcolor\" [style.color]=\"data.layout.header.fgcolor\">\n                    <button mat-icon-button>\n                        <mat-icon aria-label=\"Menu\">menu</mat-icon>\n                    </button>\n                    <div style=\"display: inline-block;padding-left: 140px\">\n                        <button mat-icon-button (click)=\"onAddMenuItem(null)\">\n                            <mat-icon aria-label=\"Add\">control_point</mat-icon>\n                        </button>\n                    </div>\n                </div>\n                <div class=\"sidenav-menu\" [style.background-color]=\"data.layout.navigation.bkcolor\" [style.color]=\"data.layout.navigation.fgcolor\"\n                    style=\"height: calc(100% - 50px);\" [ngClass]=\"'sidenav-menu-' + data.layout.navigation.type\">\n                    <mat-list class=\"dndList\"\n                        style=\"padding-top: 10px;\">\n                        <mat-list-item *ngFor=\"let item of draggableListLeft; let i = index\"\n                            [ngClass]=\"'menu-item-' + data.layout.navigation.type\">\n                            <button type=\"button\" mat-button class=\"sidenav-btn\" [style.color]=\"data.layout.navigation.fgcolor\" [ngSwitch]=\"data.layout.navigation.type\">\n                                <!-- <mat-icon *ngIf=\"mode.value === navMode.icon || mode.value === navMode.block\">{{item.icon}}</mat-icon> -->\n                                <div *ngSwitchCase=\"'icon'\" class=\"menu-item-content-icon\">\n                                    <mat-icon>{{item.icon}}</mat-icon>\n                                </div>\n                                <div *ngSwitchCase=\"'text'\" class=\"menu-item-content-text\">\n                                    <span>{{item.text}}</span>\n                                </div>\n                                <div *ngSwitchCase=\"'block'\" class=\"menu-item-content-block\">\n                                    <mat-icon style=\"display: block;\">{{item.icon}}</mat-icon>\n                                    <span>{{item.text}}</span>\n                                </div>\n                                <div *ngSwitchCase=\"'inline'\" class=\"menu-item-content-inline\">\n                                    <mat-icon style=\"display: inline-block\">{{item.icon}}</mat-icon>\n                                    <span style=\"display: inline-block\">{{item.text}}</span>\n                                </div>\n                            </button>\n                            <div style=\"padding-left:15px;padding-top: 3px;display: block;width: 50px;\">\n                                <mat-icon (click)=\"onMoveMenuItem(i, 'top')\"  class=\"layout-menu-item-icon\" style=\"display: block;\">arrow_upward</mat-icon>\n                                <mat-icon (click)=\"onMoveMenuItem(i, 'bottom')\" class=\"layout-menu-item-icon\" style=\"display: block;\">arrow_downward</mat-icon>\n                            </div>\n                            <div style=\"padding-left:15px;\">\n                                <div style=\"display: block;width: 50px;\">\n                                    <mat-icon (click)=\"onAddMenuItem(item)\" class=\"layout-menu-item-icon layout-menu-item-edit\">edit</mat-icon>\n                                    <mat-icon (click)=\"onRemoveMenuItem(i, item)\" class=\"layout-menu-item-icon layout-menu-item-delete\">clear</mat-icon>\n                                </div>\n                                <div class=\"layout-menu-item-link\">{{getViewName(item)}}</div>\n                            </div>\n                        </mat-list-item>\n                    </mat-list>\n                </div>\n                <div style=\"top: 70px; right: 10px;position: absolute;\">\n                    <div class=\"my-form-field\" style=\"display: block;\">\n                        <span>{{'dlg.layout-lbl-smode' | translate}}</span>\n                        <mat-select [(value)]=\"data.layout.navigation.mode\" style=\"width: 300px\">\n                            <mat-option *ngFor=\"let mode of navMode | enumToArray\" [value]=\"mode.key\">\n                                {{ mode.value }}\n                            </mat-option>\n                        </mat-select>\n                    </div>\n                    <div class=\"my-form-field\" style=\"display: block; margin-top: 10px\">\n                        <span>{{'dlg.layout-lbl-type' | translate}}</span>\n                        <mat-select [(value)]=\"data.layout.navigation.type\" style=\"width: 300px\">\n                            <mat-option *ngFor=\"let type of navType | enumToArray\" [value]=\"type.key\">\n                                {{ type.value }}\n                            </mat-option>\n                        </mat-select>\n                    </div>\n                    <div style=\"display: block; margin-top: 10px\">\n                        <div class=\"my-form-field\" style=\"display: inline-block\">\n                            <span>{{'dlg.layout-nav-bkcolor' | translate}}</span>\n                            <input [(colorPicker)]=\"data.layout.navigation.bkcolor\" [style.background]=\"data.layout.navigation.bkcolor\" [cpAlphaChannel]=\"'always'\" class=\"input-color\"\n                                [cpPresetColors]=\"defaultColor\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\" [cpCancelButtonClass]=\"'cpCancelButtonClass'\"\n                                [cpCancelButtonText]=\"'Cancel'\" [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\" style=\"width:126px;\"\n                                [cpPosition]=\"'bottom'\"/>\n                        </div>\n                        <div class=\"my-form-field\" style=\"float:right\">\n                            <span>{{'dlg.layout-nav-fgcolor' | translate}}</span>\n                            <input [(colorPicker)]=\"data.layout.navigation.fgcolor\" [style.background]=\"data.layout.navigation.fgcolor\" [cpAlphaChannel]=\"'always'\" class=\"input-color\"\n                                [cpPresetColors]=\"defaultColor\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\" [cpCancelButtonClass]=\"'cpCancelButtonClass'\"\n                                [cpCancelButtonText]=\"'Cancel'\" [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\" style=\"width:126px;\"\n                                [cpPosition]=\"'bottom'\"/>\n                        </div>\n                    </div>\n                </div>                \n            </div>\n        </mat-tab>\n        <mat-tab label=\"{{'dlg.layout-header' | translate}}\" *ngIf=\"data.layout.hidenavigation !== 'true'\">\n            <div style=\"overflow-y: hidden; overflow-x: hidden; margin-top: 10px; min-height: 500px;\">\n                <div class=\"header-layout\" [style.background-color]=\"data.layout.header.bkcolor\" [style.color]=\"data.layout.header.fgcolor\">\n                    <div class=\"header-menu\">\n                        <button mat-icon-button>\n                            <mat-icon aria-label=\"Menu\">menu</mat-icon>\n                        </button>\n                    </div>\n                    <div class=\"header-title\">\n                        {{data.layout.header.title}}\n                    </div>\n                    <div *ngIf=\"data.securityEnabled\" class=\"header-login\">\n                        <button mat-icon-button>\n                            <mat-icon aria-label=\"Login\">account_circle</mat-icon>\n                        </button>\n                    </div>\n                    <div class=\"header-button\">\n                        <button mat-icon-button class=\"alarm-layout\">\n                            <mat-icon aria-label=\"Alarms\">notifications_none</mat-icon>\n                        </button>\n                        <button mat-icon-button class=\"info-layout\">\n                            <mat-icon aria-label=\"Info\">error_outline</mat-icon>\n                        </button>\n                    </div>\n                </div>\n                <div class=\"header-config\">\n                    <div class=\"config\">\n                        <div class=\"my-form-field\" style=\"width: 300px\">\n                            <span>{{'dlg.layout-lbl-title' | translate}}</span>\n                            <input [(ngModel)]=\"data.layout.header.title\" type=\"text\" style=\"width:293px\">\n                        </div>\n                        <div style=\"display: block; margin-top: 20px;width: 300px\">\n                            <div class=\"my-form-field\" style=\"display: inline-block\">\n                                <span>{{'dlg.layout-header-bkcolor' | translate}}</span>\n                                <input [(colorPicker)]=\"data.layout.header.bkcolor\" [style.background]=\"data.layout.header.bkcolor\" [cpAlphaChannel]=\"'always'\" class=\"input-color\"\n                                    [cpPresetColors]=\"defaultColor\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\" [cpCancelButtonClass]=\"'cpCancelButtonClass'\"\n                                    [cpCancelButtonText]=\"'Cancel'\" [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\" style=\"width:126px;\"\n                                    [cpPosition]=\"'bottom'\"/>\n                            </div>\n                            <div class=\"my-form-field\" style=\"float: right;\">\n                                <span>{{'dlg.layout-header-fgcolor' | translate}}</span>\n                                <input [(colorPicker)]=\"data.layout.header.fgcolor\" [style.background]=\"data.layout.header.fgcolor\" [cpAlphaChannel]=\"'always'\" class=\"input-color\"\n                                    [cpPresetColors]=\"defaultColor\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\" [cpCancelButtonClass]=\"'cpCancelButtonClass'\"\n                                    [cpCancelButtonText]=\"'Cancel'\" [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\" style=\"width:126px;\"\n                                    [cpPosition]=\"'bottom'\"/>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"config\">\n                        <div class=\"my-form-field\">\n                            <span>{{'dlg.layout-lbl-alarms' | translate}}</span>\n                            <mat-select [(value)]=\"data.layout.header.alarms\" style=\"width: 260px\">\n                                <mat-option *ngFor=\"let mode of notifyMode | enumToArray\" [value]=\"mode.key\">\n                                    {{ mode.value }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-icon aria-label=\"Alarms\">notifications_none</mat-icon>\n                        </div>\n                        <div class=\"my-form-field\" style=\"margin-top: 20px;\">\n                            <span>{{'dlg.layout-lbl-infos' | translate}}</span>\n                            <mat-select [(value)]=\"data.layout.header.infos\" style=\"width: 260px\">\n                                <mat-option *ngFor=\"let mode of notifyMode | enumToArray\" [value]=\"mode.key\">\n                                    {{ mode.value }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-icon aria-label=\"Info\">error_outline</mat-icon>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </mat-tab>\n    </mat-tab-group>\n    <div mat-dialog-actions class=\"dialog-action\">\n        <button mat-raised-button [mat-dialog-close]=\"\">{{'dlg.cancel' | translate}}</button>\n        <button mat-raised-button color=\"primary\" (click)=\"onOkClick\" [mat-dialog-close]=\"data\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\n    </div>\n</div>"

            /***/
}),

/***/ "./app/editor/layout-property/layout-property.component.scss":
/*!*******************************************************************!*\
  !*** ./app/editor/layout-property/layout-property.component.scss ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ".layout-menu-item-icon {\n  /* position: absolute; */\n  font-size: 17px;\n  height: 18px;\n  width: 18px;\n  /* color: rgba(255,255,255,0.8); */\n  cursor: pointer; }\n\n.layout-menu-item-link {\n  /* min-width: 150px; */\n  /* color: rgba(0,0,0,0.3); */\n  display: block;\n  font-size: 12px;\n  white-space: nowrap; }\n\n.header-layout {\n  display: block;\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.12), 0 1px 5px 0 rgba(0, 0, 0, 0.2) !important;\n  /* min-height: 46px !important; */\n  /* max-height: 46px !important; */\n  height: 46px !important;\n  padding-left: 4px;\n  padding-right: 10px;\n  background-color: white; }\n\n.header-menu {\n  display: inline-block; }\n\n.header-title {\n  display: inline-block;\n  margin-left: 20px;\n  min-width: 200px;\n  text-align: right;\n  line-height: 46px; }\n\n.header-login {\n  float: right;\n  line-height: 46px;\n  border-left-width: 1px;\n  border-left-style: solid;\n  padding-left: 10px; }\n\n.header-button {\n  float: right;\n  width: 240px;\n  line-height: 46px;\n  text-align: right;\n  margin-right: 10px;\n  padding-right: 50px; }\n\n.header-button mat-icon {\n  font-size: 28px;\n  width: 28px;\n  height: 28px; }\n\n.alarm-layout {\n  margin-right: 20px; }\n\n.header-config {\n  display: flex;\n  padding-top: 30px;\n  margin-left: 80px; }\n\n.config {\n  display: inline-block;\n  width: 50%; }\n\n.my-form-field mat-icon {\n  padding-left: 10px;\n  vertical-align: middle; }\n\n.dndList {\n  transition: all 600ms ease; }\n\n::ng-deep .mat-tab-label {\n  height: 34px !important; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9iaWxhbC9Eb2N1bWVudHMvRlVYQS9jbGllbnQvc3JjL2FwcC9lZGl0b3IvbGF5b3V0LXByb3BlcnR5L2xheW91dC1wcm9wZXJ0eS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLHdCQUFBO0VBQ0EsZUFBZTtFQUNmLFlBQVk7RUFDWixXQUFXO0VBQ1gsa0NBQUE7RUFDQSxlQUFjLEVBQUE7O0FBR2xCO0VBQ0ksc0JBQUE7RUFDQSw0QkFBQTtFQUNBLGNBQWM7RUFDZCxlQUFlO0VBQ2YsbUJBQW1CLEVBQUE7O0FBR3ZCO0VBQ0ksY0FBYztFQUNkLDBIQUFpSDtFQUNqSCxpQ0FBQTtFQUNBLGlDQUFBO0VBQ0EsdUJBQXVCO0VBQ3ZCLGlCQUFpQjtFQUNqQixtQkFBbUI7RUFDbkIsdUJBQXdDLEVBQUE7O0FBRzVDO0VBQ0kscUJBQXFCLEVBQUE7O0FBR3pCO0VBQ0kscUJBQXFCO0VBQ3JCLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCLGlCQUNKLEVBQUE7O0FBRUE7RUFDSSxZQUFZO0VBQ1osaUJBQWlCO0VBQ2pCLHNCQUFzQjtFQUN0Qix3QkFBd0I7RUFDeEIsa0JBQWtCLEVBQUE7O0FBR3RCO0VBQ0ksWUFBWTtFQUNaLFlBQVk7RUFDWixpQkFBaUI7RUFDakIsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixtQkFBbUIsRUFBQTs7QUFHdkI7RUFDSSxlQUFlO0VBQ2YsV0FBVztFQUNYLFlBQVcsRUFBQTs7QUFFZjtFQUNJLGtCQUFrQixFQUFBOztBQU10QjtFQUNJLGFBQWE7RUFDYixpQkFBaUI7RUFDakIsaUJBQWlCLEVBQUE7O0FBR3JCO0VBQ0kscUJBQXFCO0VBQ3JCLFVBQVUsRUFBQTs7QUFHZDtFQUNJLGtCQUFrQjtFQUNsQixzQkFBc0IsRUFBQTs7QUFHMUI7RUFDSSwwQkFBMEIsRUFBQTs7QUFHOUI7RUFDSSx1QkFBdUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2VkaXRvci9sYXlvdXQtcHJvcGVydHkvbGF5b3V0LXByb3BlcnR5LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG5cbi5sYXlvdXQtbWVudS1pdGVtLWljb24ge1xuICAgIC8qIHBvc2l0aW9uOiBhYnNvbHV0ZTsgKi9cbiAgICBmb250LXNpemU6IDE3cHg7XG4gICAgaGVpZ2h0OiAxOHB4O1xuICAgIHdpZHRoOiAxOHB4O1xuICAgIC8qIGNvbG9yOiByZ2JhKDI1NSwyNTUsMjU1LDAuOCk7ICovXG4gICAgY3Vyc29yOnBvaW50ZXI7XG59XG5cbi5sYXlvdXQtbWVudS1pdGVtLWxpbmsge1xuICAgIC8qIG1pbi13aWR0aDogMTUwcHg7ICovXG4gICAgLyogY29sb3I6IHJnYmEoMCwwLDAsMC4zKTsgKi9cbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbn1cblxuLmhlYWRlci1sYXlvdXQge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGJveC1zaGFkb3c6IDAgMnB4IDJweCAwIHJnYmEoMCwwLDAsMC4xNCksIDAgM3B4IDFweCAtMnB4IHJnYmEoMCwwLDAsMC4xMiksIDAgMXB4IDVweCAwIHJnYmEoMCwwLDAsMC4yKSAhaW1wb3J0YW50OyBcbiAgICAvKiBtaW4taGVpZ2h0OiA0NnB4ICFpbXBvcnRhbnQ7ICovXG4gICAgLyogbWF4LWhlaWdodDogNDZweCAhaW1wb3J0YW50OyAqL1xuICAgIGhlaWdodDogNDZweCAhaW1wb3J0YW50O1xuICAgIHBhZGRpbmctbGVmdDogNHB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAxKTtcbn1cblxuLmhlYWRlci1tZW51IHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi5oZWFkZXItdGl0bGUge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBtYXJnaW4tbGVmdDogMjBweDtcbiAgICBtaW4td2lkdGg6IDIwMHB4O1xuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgIGxpbmUtaGVpZ2h0OiA0NnB4XG59XG5cbi5oZWFkZXItbG9naW4ge1xuICAgIGZsb2F0OiByaWdodDtcbiAgICBsaW5lLWhlaWdodDogNDZweDtcbiAgICBib3JkZXItbGVmdC13aWR0aDogMXB4O1xuICAgIGJvcmRlci1sZWZ0LXN0eWxlOiBzb2xpZDtcbiAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XG59XG5cbi5oZWFkZXItYnV0dG9uIHsgIFxuICAgIGZsb2F0OiByaWdodDtcbiAgICB3aWR0aDogMjQwcHg7XG4gICAgbGluZS1oZWlnaHQ6IDQ2cHg7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDUwcHg7XG59XG5cbi5oZWFkZXItYnV0dG9uIG1hdC1pY29uIHtcbiAgICBmb250LXNpemU6IDI4cHg7XG4gICAgd2lkdGg6IDI4cHg7XG4gICAgaGVpZ2h0OjI4cHg7XG59XG4uYWxhcm0tbGF5b3V0IHtcbiAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XG59XG5cbi5pbmZvLWxheW91dCB7XG59XG5cbi5oZWFkZXItY29uZmlnIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIHBhZGRpbmctdG9wOiAzMHB4O1xuICAgIG1hcmdpbi1sZWZ0OiA4MHB4O1xufVxuXG4uY29uZmlnIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgd2lkdGg6IDUwJTtcbn1cblxuLm15LWZvcm0tZmllbGQgbWF0LWljb24ge1xuICAgIHBhZGRpbmctbGVmdDogMTBweDtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuICBcbi5kbmRMaXN0IHtcbiAgICB0cmFuc2l0aW9uOiBhbGwgNjAwbXMgZWFzZTtcbn1cblxuOjpuZy1kZWVwIC5tYXQtdGFiLWxhYmVsIHtcbiAgICBoZWlnaHQ6IDM0cHggIWltcG9ydGFudDtcbn0iXX0= */"

            /***/
}),

/***/ "./app/editor/layout-property/layout-property.component.ts":
/*!*****************************************************************!*\
  !*** ./app/editor/layout-property/layout-property.component.ts ***!
  \*****************************************************************/
/*! exports provided: LayoutPropertyComponent, DialogMenuItem */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LayoutPropertyComponent", function () { return LayoutPropertyComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DialogMenuItem", function () { return DialogMenuItem; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "../node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ngx-translate/core */ "../node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js");
/* harmony import */ var _gui_helpers_sel_options_sel_options_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../gui-helpers/sel-options/sel-options.component */ "./app/gui-helpers/sel-options/sel-options.component.ts");
/* harmony import */ var _models_hmi__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../_models/hmi */ "./app/_models/hmi.ts");
/* harmony import */ var _helpers_define__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../_helpers/define */ "./app/_helpers/define.ts");
/* harmony import */ var _models_user__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../_models/user */ "./app/_models/user.ts");
/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../_helpers/utils */ "./app/_helpers/utils.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };
            var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
                return function (target, key) { decorator(target, key, paramIndex); }
            };








            var LayoutPropertyComponent = /** @class */ (function () {
                function LayoutPropertyComponent(data, dialog, dialogRef, translateService) {
                    this.data = data;
                    this.dialog = dialog;
                    this.dialogRef = dialogRef;
                    this.translateService = translateService;
                    this.draggableListLeft = [];
                    this.defaultColor = _helpers_utils__WEBPACK_IMPORTED_MODULE_7__["Utils"].defaultColor;
                    this.inputMode = _models_hmi__WEBPACK_IMPORTED_MODULE_4__["InputModeType"];
                    this.headerMode = _models_hmi__WEBPACK_IMPORTED_MODULE_4__["HeaderBarModeType"];
                    if (!data.layout) {
                        data.layout = new _models_hmi__WEBPACK_IMPORTED_MODULE_4__["LayoutSettings"]();
                    }
                    this.startView = data.layout.start;
                    this.sideMode = data.layout.navigation.mode;
                    if (!data.layout.navigation.items) {
                        data.layout.navigation.items = [];
                    }
                    this.draggableListLeft = data.layout.navigation.items;
                }
                LayoutPropertyComponent.prototype.ngOnInit = function () {
                    var _this = this;
                    this.navMode = _models_hmi__WEBPACK_IMPORTED_MODULE_4__["NaviModeType"];
                    this.navType = _models_hmi__WEBPACK_IMPORTED_MODULE_4__["NaviItemType"];
                    this.notifyMode = _models_hmi__WEBPACK_IMPORTED_MODULE_4__["NotificationModeType"];
                    this.zoomMode = _models_hmi__WEBPACK_IMPORTED_MODULE_4__["ZoomModeType"];
                    Object.keys(this.navMode).forEach(function (key) {
                        _this.translateService.get(_this.navMode[key]).subscribe(function (txt) { _this.navMode[key] = txt; });
                    });
                    Object.keys(this.navType).forEach(function (key) {
                        _this.translateService.get(_this.navType[key]).subscribe(function (txt) { _this.navType[key] = txt; });
                    });
                    Object.keys(this.notifyMode).forEach(function (key) {
                        _this.translateService.get(_this.notifyMode[key]).subscribe(function (txt) { _this.notifyMode[key] = txt; });
                    });
                    Object.keys(this.zoomMode).forEach(function (key) {
                        _this.translateService.get(_this.zoomMode[key]).subscribe(function (txt) { _this.zoomMode[key] = txt; });
                    });
                    Object.keys(this.inputMode).forEach(function (key) {
                        _this.translateService.get(_this.inputMode[key]).subscribe(function (txt) { _this.inputMode[key] = txt; });
                    });
                    Object.keys(this.headerMode).forEach(function (key) {
                        _this.translateService.get(_this.headerMode[key]).subscribe(function (txt) { _this.headerMode[key] = txt; });
                    });
                };
                LayoutPropertyComponent.prototype.onAddMenuItem = function (item) {
                    var _this = this;
                    var eitem = new _models_hmi__WEBPACK_IMPORTED_MODULE_4__["NaviItem"]();
                    if (item) {
                        eitem = JSON.parse(JSON.stringify(item));
                    }
                    var views = JSON.parse(JSON.stringify(this.data.views));
                    views.unshift({ id: '', name: '' });
                    var dialogRef = this.dialog.open(DialogMenuItem, {
                        position: { top: '60px' },
                        data: { item: eitem, views: views, permission: eitem.permission }
                    });
                    dialogRef.afterClosed().subscribe(function (result) {
                        if (result) {
                            if (item) {
                                item.icon = result.item.icon;
                                item.text = result.item.text;
                                item.view = result.item.view;
                                item.link = result.item.link;
                                item.permission = result.permission;
                                if (item.view) {
                                    item.link = '';
                                }
                            }
                            else {
                                var nitem = new _models_hmi__WEBPACK_IMPORTED_MODULE_4__["NaviItem"]();
                                nitem.icon = result.item.icon;
                                nitem.text = result.item.text;
                                nitem.view = result.item.view;
                                nitem.link = result.item.link;
                                nitem.permission = result.permission;
                                if (nitem.view) {
                                    nitem.link = '';
                                }
                                _this.draggableListLeft.push(nitem);
                            }
                        }
                    });
                    // this.winRef.nativeWindow.svgEditor.showDocProperties();
                };
                LayoutPropertyComponent.prototype.onRemoveMenuItem = function (index, item) {
                    this.draggableListLeft.splice(index, 1);
                };
                LayoutPropertyComponent.prototype.onMoveMenuItem = function (index, direction) {
                    if (direction === 'top' && index > 0) {
                        this.draggableListLeft.splice(index - 1, 0, this.draggableListLeft.splice(index, 1)[0]);
                    }
                    else if (direction === 'bottom' && index < this.draggableListLeft.length) {
                        this.draggableListLeft.splice(index + 1, 0, this.draggableListLeft.splice(index, 1)[0]);
                    }
                };
                LayoutPropertyComponent.prototype.onOkClick = function () {
                    var _this = this;
                    this.data.layout.navigation.items = [];
                    this.draggableListLeft.forEach(function (item) {
                        var nitem = new _models_hmi__WEBPACK_IMPORTED_MODULE_4__["NaviItem"]();
                        nitem.icon = item.icon;
                        nitem.text = item.text;
                        nitem.view = item.view;
                        nitem.link = item.link;
                        _this.data.layout.navigation.items.push(nitem);
                    });
                };
                LayoutPropertyComponent.prototype.onNoClick = function () {
                    this.dialogRef.close();
                };
                LayoutPropertyComponent.prototype.getViewName = function (vid) {
                    if (vid.view) {
                        var view = this.data.views.find(function (x) { return x.id === vid.view; });
                        if (view) {
                            return view.name;
                        }
                    }
                    else if (vid.link) {
                        return vid.link;
                    }
                    else {
                        return '';
                    }
                };
                LayoutPropertyComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'app-layout-property',
                        template: __webpack_require__(/*! ./layout-property.component.html */ "./app/editor/layout-property/layout-property.component.html"),
                        styles: [__webpack_require__(/*! ./layout-property.component.scss */ "./app/editor/layout-property/layout-property.component.scss")]
                    }),
                    __param(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MAT_DIALOG_DATA"])),
                    __metadata("design:paramtypes", [Object, _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialog"],
                        _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialogRef"],
                        _ngx_translate_core__WEBPACK_IMPORTED_MODULE_2__["TranslateService"]])
                ], LayoutPropertyComponent);
                return LayoutPropertyComponent;
            }());

            var DialogMenuItem = /** @class */ (function () {
                function DialogMenuItem(dialogRef, data) {
                    this.dialogRef = dialogRef;
                    this.data = data;
                    // defaultColor = Utils.defaultColor;
                    this.selectedGroups = [];
                    this.groups = _models_user__WEBPACK_IMPORTED_MODULE_6__["UserGroups"].Groups;
                    this.icons = _helpers_define__WEBPACK_IMPORTED_MODULE_5__["Define"].materialIcons;
                    this.selectedGroups = _models_user__WEBPACK_IMPORTED_MODULE_6__["UserGroups"].ValueToGroups(this.data.permission);
                }
                DialogMenuItem.prototype.onNoClick = function () {
                    this.dialogRef.close();
                };
                DialogMenuItem.prototype.onOkClick = function () {
                    this.data.permission = _models_user__WEBPACK_IMPORTED_MODULE_6__["UserGroups"].GroupsToValue(this.seloptions.selected);
                    this.dialogRef.close(this.data);
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])(_gui_helpers_sel_options_sel_options_component__WEBPACK_IMPORTED_MODULE_3__["SelOptionsComponent"]),
                    __metadata("design:type", _gui_helpers_sel_options_sel_options_component__WEBPACK_IMPORTED_MODULE_3__["SelOptionsComponent"])
                ], DialogMenuItem.prototype, "seloptions", void 0);
                DialogMenuItem = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'dialog-menuitem',
                        template: __webpack_require__(/*! ./menuitem.dialog.html */ "./app/editor/layout-property/menuitem.dialog.html"),
                    }),
                    __param(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MAT_DIALOG_DATA"])),
                    __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialogRef"], Object])
                ], DialogMenuItem);
                return DialogMenuItem;
            }());



            /***/
}),

/***/ "./app/editor/layout-property/menuitem.dialog.html":
/*!*********************************************************!*\
  !*** ./app/editor/layout-property/menuitem.dialog.html ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div>\n    <h1 mat-dialog-title style=\"display:inline-block;cursor: move;\" mat-dialog-draggable>{{'dlg.menuitem-title' | translate}}</h1>\n    <mat-icon (click)=\"onNoClick()\" style=\"float:right;margin-right:-10px;margin-top:-10px;cursor:pointer;color:gray;\">clear</mat-icon>\n    <div mat-dialog-content>\n        <div class=\"my-form-field\" style=\"display: block;margin-bottom: 10px;\">\n            <span>{{'dlg.menuitem-icon' | translate}}</span>\n            <mat-select [(value)]=\"data.item.icon\" style=\"width: 60px; height: 30px\" #iconsel>\n                <mat-select-trigger>\n                    <mat-icon>{{iconsel.value}}</mat-icon>\n                </mat-select-trigger>\n                <mat-option *ngFor=\"let icon of icons\" [value]=\"icon\" style=\"display: inline-block !important;\">\n                    <mat-icon class=\"\">{{ icon }}</mat-icon>\n                </mat-option>\n            </mat-select>\n        </div>\n        <div class=\"my-form-field\" style=\"display: block;margin-bottom: 10px;\">\n            <span>{{'dlg.menuitem-text' | translate}}</span>\n            <input [(ngModel)]=\"data.item.text\" type=\"text\" style=\"width: 300px\">\n        </div>\n        <div class=\"my-form-field\" style=\"display: block;margin-bottom: 10px;\">\n            <span>{{'dlg.menuitem-view' | translate}}</span>\n            <mat-select [(value)]=\"data.item.view\" style=\"width: 300px\">\n                <mat-option *ngFor=\"let view of data.views\" [value]=\"view.id\">\n                    {{ view.name }}\n                </mat-option>\n            </mat-select>\n        </div>\n        <div class=\"my-form-field\" style=\"display: block;margin-bottom: 10px;\">\n            <span>{{'dlg.menuitem-link' | translate}}</span>\n            <input [(ngModel)]=\"data.item.link\" type=\"text\" style=\"width: 300px\" [readonly]=\"data.item.view\">\n        </div>    \n        <div class=\"my-form-field\" style=\"display: block;margin-bottom: 10px;\">\n            <span>{{'dlg.useraccess-groups' | translate}}</span>\n            <sel-options #seloptions [selected]=\"selectedGroups\" [options]=\"groups\"></sel-options>\n        </div>   \n    </div>\n    <div mat-dialog-actions class=\"dialog-action\">\n        <button mat-raised-button (click)=\"onNoClick()\">{{'dlg.cancel' | translate}}</button>\n        <button mat-raised-button color=\"primary\" (click)=\"onOkClick()\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\n    </div>\n</div>"

            /***/
}),

/***/ "./app/editor/linkproperty.dialog.html":
/*!*********************************************!*\
  !*** ./app/editor/linkproperty.dialog.html ***!
  \*********************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div>\n    <h1 mat-dialog-title style=\"display:inline-block;cursor:move;\" mat-dialog-draggable>{{'dlg.linkproperty-title' | translate}}</h1>\n    <mat-icon (click)=\"onNoClick()\" style=\"float:right;margin-right:-10px;margin-top:-10px;cursor:pointer;color:gray;\">clear</mat-icon>\n    <div mat-dialog-content>\n        <div class=\"my-form-field\" style=\"display: block;margin-bottom: 10px\">\n            <span>{{'dlg.linkproperty-url' | translate}}</span>\n            <input [(ngModel)]=\"data.url\" type=\"text\" style=\"width: 300px\">\n        </div>\n    </div>\n    <div mat-dialog-actions class=\"dialog-action\">\n        <button mat-raised-button (click)=\"onNoClick()\">{{'dlg.cancel' | translate}}</button>\n        <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"data\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\n    </div>\n</div>"

            /***/
}),

/***/ "./app/editor/newdoc.dialog.html":
/*!***************************************!*\
  !*** ./app/editor/newdoc.dialog.html ***!
  \***************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div>\n    <h1 mat-dialog-title style=\"display:inline-block;cursor:move;\" mat-dialog-draggable>{{'dlg.docname-title' | translate}}</h1>\n    <mat-icon (click)=\"onNoClick()\" class=\"dialog-close-btn\" cdkFocusInitial>clear</mat-icon>\n    <div mat-dialog-content>\n        <div class=\"my-form-field\" style=\"display: block;margin-bottom: 10px;\">\n            <span>{{'dlg.docname-name' | translate}}</span>\n            <input [(ngModel)]=\"data.name\" type=\"text\" style=\"width:300px\" [readonly]=\"data.readonly\">\n        </div>\n        <div class=\"my-form-field\" style=\"margin-bottom: 10px;;\">\n            <span>{{'dlg.docproperty-type' | translate}}</span>\n            <mat-select [(value)]=\"data.type\" placeholder=\"{{'dlg.doctype' | translate}}\" style=\"width: 300px;\">\n                <mat-option *ngFor=\"let type of docType | enumToArray\" [value]=\"type.key\">\n                    {{ type.value }}\n                </mat-option>\n            </mat-select>\n        </div>\n    </div>\n    <div mat-dialog-actions class=\"dialog-action\">\n        <button mat-raised-button (click)=\"onNoClick()\">{{'dlg.cancel' | translate}}</button>\n        <button mat-raised-button [disabled]=\"!isValid(data.name)\" color=\"primary\" [mat-dialog-close]=\"data\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\n    </div>\n</div>"

            /***/
}),

/***/ "./app/editor/plugins/plugins.component.css":
/*!**************************************************!*\
  !*** ./app/editor/plugins/plugins.component.css ***!
  \**************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ".list {\n    min-width: 600px;\n    height: 400px; \n    font-size: 16px !important; \n    padding-top: 0px !important;\n}\n\n.list-header {\n    display: block;\n    height: 20px !important;\n}\n\n.list-header span {\n    text-overflow: ellipsis;\n    overflow: hidden;\n    color: gray;\n    font-size: 12px;\n}\n\n.list-item {\n    display: block;\n    font-size: 14px;\n    height: 40px !important;\n    /* cursor: pointer; */\n    overflow: hidden;\n}\n\n.list-item span {\n    width: 160px;\n    text-overflow: ellipsis;\n    overflow: hidden;\n}\n\n.list-item-text {\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZWRpdG9yL3BsdWdpbnMvcGx1Z2lucy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGFBQWE7SUFDYiwwQkFBMEI7SUFDMUIsMkJBQTJCO0FBQy9COztBQUVBO0lBQ0ksY0FBYztJQUNkLHVCQUF1QjtBQUMzQjs7QUFFQTtJQUNJLHVCQUF1QjtJQUN2QixnQkFBZ0I7SUFDaEIsV0FBVztJQUNYLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsZUFBZTtJQUNmLHVCQUF1QjtJQUN2QixxQkFBcUI7SUFDckIsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksWUFBWTtJQUNaLHVCQUF1QjtJQUN2QixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxtQkFBbUI7SUFDbkIsdUJBQXVCO0lBQ3ZCLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL2VkaXRvci9wbHVnaW5zL3BsdWdpbnMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5saXN0IHtcbiAgICBtaW4td2lkdGg6IDYwMHB4O1xuICAgIGhlaWdodDogNDAwcHg7IFxuICAgIGZvbnQtc2l6ZTogMTZweCAhaW1wb3J0YW50OyBcbiAgICBwYWRkaW5nLXRvcDogMHB4ICFpbXBvcnRhbnQ7XG59XG5cbi5saXN0LWhlYWRlciB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgaGVpZ2h0OiAyMHB4ICFpbXBvcnRhbnQ7XG59XG5cbi5saXN0LWhlYWRlciBzcGFuIHtcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGNvbG9yOiBncmF5O1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbn1cblxuLmxpc3QtaXRlbSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGhlaWdodDogNDBweCAhaW1wb3J0YW50O1xuICAgIC8qIGN1cnNvcjogcG9pbnRlcjsgKi9cbiAgICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4ubGlzdC1pdGVtIHNwYW4ge1xuICAgIHdpZHRoOiAxNjBweDtcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4ubGlzdC1pdGVtLXRleHQge1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbn0iXX0= */"

            /***/
}),

/***/ "./app/editor/plugins/plugins.component.html":
/*!***************************************************!*\
  !*** ./app/editor/plugins/plugins.component.html ***!
  \***************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div style=\"position: relative;\">\n    <h1 mat-dialog-title style=\"display:inline-block;cursor:move;\" mat-dialog-draggable>{{'dlg.plugins-title' | translate}}</h1>\n    <mat-icon (click)=\"onNoClick()\" style=\"float:right;margin-right:-10px;margin-top:-10px;color:gray;cursor:pointer;\">clear</mat-icon>\n    <div mat-dialog-content>\n        <mat-list class=\"list\" >\n            <mat-list-item class=\"list-header\">\n                <span style=\"width:320px\">{{'dlg.plugins-name' | translate}}</span>\n                <span style=\"width:160px\">{{'dlg.plugins-version' | translate}}</span>\n                <span style=\"width:160px\">{{'dlg.plugins-current' | translate}}</span>\n            </mat-list-item>\n            <mat-list-item *ngFor=\"let plugin of plugins\" class=\"list-item list-item-text\">\n                <span style=\"font-weight: 700;\">{{plugin.type}}</span>\n                <span>{{plugin.name}}</span>\n                <span>{{plugin.version}}</span>\n                <span>{{plugin.current}}</span>\n                <span style=\"width:200px\">{{plugin.status}}</span>\n                <div style=\"width:40px\">\n\t\t\t\t\t<mat-spinner *ngIf=\"plugin.working\" diameter=\"20\"></mat-spinner>\n                </div>\n                <div *ngIf=\"plugin.dinamic\">\n                    <button mat-icon-button [disabled]=\"plugin.current.length > 0\" (click)=\"install(plugin)\">\n                        <mat-icon>add_circle_outline</mat-icon>\n                    </button>\n                    <button mat-icon-button [disabled]=\"!plugin.pkg || !plugin.current.length\" (click)=\"remove(plugin)\">\n                        <mat-icon>remove_circle_outline</mat-icon>\n                    </button>\n                </div>\n            </mat-list-item>\n        </mat-list>\n    </div>\n    <div mat-dialog-actions class=\"dialog-action\">\n        <button mat-raised-button [mat-dialog-close]=\"\">{{'dlg.ok' | translate}}</button>\n    </div>\n</div>"

            /***/
}),

/***/ "./app/editor/plugins/plugins.component.ts":
/*!*************************************************!*\
  !*** ./app/editor/plugins/plugins.component.ts ***!
  \*************************************************/
/*! exports provided: PluginsComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PluginsComponent", function () { return PluginsComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "../node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ngx-translate/core */ "../node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js");
/* harmony import */ var _services_project_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../_services/project.service */ "./app/_services/project.service.ts");
/* harmony import */ var _services_plugin_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../_services/plugin.service */ "./app/_services/plugin.service.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };
            var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
                return function (target, key) { decorator(target, key, paramIndex); }
            };





            var PluginsComponent = /** @class */ (function () {
                function PluginsComponent(data, dialog, dialogRef, translateService, pluginService, projectService) {
                    this.data = data;
                    this.dialog = dialog;
                    this.dialogRef = dialogRef;
                    this.translateService = translateService;
                    this.pluginService = pluginService;
                    this.projectService = projectService;
                    this.plugins = [];
                }
                PluginsComponent.prototype.ngOnInit = function () {
                    var _this = this;
                    this.translateService.get('dlg.plugins-status-installing').subscribe(function (txt) { _this.installing = txt; });
                    this.translateService.get('dlg.plugins-status-removing').subscribe(function (txt) { _this.removing = txt; });
                    this.translateService.get('dlg.plugins-status-installed').subscribe(function (txt) { _this.installed = txt; });
                    this.translateService.get('dlg.plugins-status-removed').subscribe(function (txt) { _this.removed = txt; });
                    this.translateService.get('dlg.plugins-status-error').subscribe(function (txt) { _this.error = txt; });
                    this.pluginService.getPlugins().subscribe(function (plugins) {
                        _this.plugins = plugins;
                    }, function (error) {
                        console.error('Error getPlugin');
                    });
                };
                PluginsComponent.prototype.onNoClick = function () {
                    this.dialogRef.close();
                };
                PluginsComponent.prototype.install = function (plugin) {
                    var _this = this;
                    plugin.status = this.installing;
                    plugin['working'] = true;
                    var pg = JSON.parse(JSON.stringify(plugin));
                    pg.pkg = true;
                    this.pluginService.installPlugin(pg).subscribe(function (plugins) {
                        plugin.status = _this.installed;
                        plugin.current = plugin.version;
                        plugin['working'] = false;
                    }, function (error) {
                        plugin.status = _this.error + error;
                        plugin['working'] = false;
                    });
                };
                PluginsComponent.prototype.remove = function (plugin) {
                    var _this = this;
                    plugin.status = this.removing;
                    plugin['working'] = true;
                    this.pluginService.removePlugin(plugin).subscribe(function (plugins) {
                        plugin.status = _this.removed;
                        plugin.current = '';
                        plugin['working'] = false;
                    }, function (error) {
                        plugin.status = _this.error + error;
                        plugin['working'] = false;
                    });
                };
                PluginsComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'app-plugins',
                        template: __webpack_require__(/*! ./plugins.component.html */ "./app/editor/plugins/plugins.component.html"),
                        styles: [__webpack_require__(/*! ./plugins.component.css */ "./app/editor/plugins/plugins.component.css")]
                    }),
                    __param(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MAT_DIALOG_DATA"])),
                    __metadata("design:paramtypes", [Object, _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialog"],
                        _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialogRef"],
                        _ngx_translate_core__WEBPACK_IMPORTED_MODULE_2__["TranslateService"],
                        _services_plugin_service__WEBPACK_IMPORTED_MODULE_4__["PluginService"],
                        _services_project_service__WEBPACK_IMPORTED_MODULE_3__["ProjectService"]])
                ], PluginsComponent);
                return PluginsComponent;
            }());



            /***/
}),

/***/ "./app/editor/setup/setup.component.html":
/*!***********************************************!*\
  !*** ./app/editor/setup/setup.component.html ***!
  \***********************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div class=\"dlg-container\">\n    <h1 mat-dialog-title style=\"display:inline-block;cursor:move;\" mat-dialog-draggable>{{'dlg.setup-title' | translate}}</h1>\n    <mat-icon (click)=\"onNoClick()\" class=\"dialog-close-btn\" >clear</mat-icon>\n    <div mat-dialog-content>\n        <div class=\"separator\">\n            <div class=\"separator-line\" style=\"position:absolute;left: 0px\"></div>\n            <div class=\"separator-text\">\n                {{'dlg.setup-gui' | translate}}\n            </div>\n            <div class=\"separator-line\" style=\"position:absolute;right: 0px\"></div>\n        </div>\n        <div class=\"btn-cards\">\n            <div class=\"btn-card\">\n                <button mat-button (click)=\"goTo('/editor')\" class=\"card-btn\">\n                    <div class=\"card-btn-content\">\n                        <mat-icon>dashboard</mat-icon>\n                        <span>{{'dlg.setup-views' | translate}}</span>\n                    </div>\n                </button>\n            </div>\n            <div class=\"btn-card\">\n                <button mat-button (click)=\"onChartConfig()\" class=\"card-btn\">\n                    <div class=\"card-btn-content\">\n                        <mat-icon>multiline_chart</mat-icon>\n                        <span>{{'dlg.setup-line-charts' | translate}}</span>\n                    </div>\n                </button>\n            </div>\n            <div class=\"btn-card\">\n                <button mat-button (click)=\"onLayoutConfig()\" class=\"card-btn\">\n                    <div class=\"card-btn-content\">\n                        <mat-icon>view_compact</mat-icon>\n                        <span>{{'dlg.setup-layout' | translate}}</span>\n                    </div>\n                </button>\n            </div>\n            <div class=\"btn-card\">\n                <button mat-button (click)=\"onChartConfig()\" class=\"card-btn\" [disabled]=\"true\">\n                    <div class=\"card-btn-content\">\n                        <mat-icon>insert_chart</mat-icon>\n                        <span>{{'dlg.setup-bar-charts' | translate}}</span>\n                    </div>\n                </button>\n            </div>            \n        </div>\n        <div class=\"separator\">\n            <div class=\"separator-line\" style=\"position:absolute;left: 0px\"></div>\n            <div class=\"separator-text\">\n                {{'dlg.setup-diverse' | translate}}\n            </div>\n            <div class=\"separator-line\" style=\"position:absolute;right: 0px\"></div>\n        </div>\n        <div class=\"btn-cards\">\n            <div class=\"btn-card\">\n                <button mat-button (click)=\"goTo('/device')\" class=\"card-btn\">\n                    <div class=\"card-btn-content\">\n                        <mat-icon>device_hub</mat-icon>\n                        <span>{{'dlg.setup-connections' | translate}}</span>\n                    </div>\n                </button>\n            </div>\n            <div class=\"btn-card\">\n                <button mat-button (click)=\"goTo('/users')\" class=\"card-btn\" [disabled]=\"isToDisable('users')\">\n                    <div class=\"card-btn-content\">\n                        <mat-icon>people</mat-icon>\n                        <span>{{'dlg.setup-users' | translate}}</span>\n                    </div>\n                </button>\n            </div>\n            <div class=\"btn-card\">\n                <button mat-button (click)=\"onPlugins()\" class=\"card-btn\" [disabled]=\"isToDisable('plugins')\">\n                    <div class=\"card-btn-content\">\n                        <mat-icon>extension</mat-icon>\n                        <span>{{'dlg.setup-plugins' | translate}}</span>\n                    </div>\n                </button>\n            </div>\n            <div class=\"btn-card\">\n                <button mat-button (click)=\"onSettings()\" class=\"card-btn\">\n                    <div class=\"card-btn-content\">\n                        <mat-icon>settings</mat-icon>\n                        <span>{{'dlg.setup-settings' | translate}}</span>\n                    </div>\n                </button>\n            </div>            \n        </div>        \n        <div class=\"separator\">\n            <div class=\"separator-line\" style=\"position:absolute;left: 0px\"></div>\n            <div class=\"separator-text\">\n                {{'dlg.setup-logic' | translate}}\n            </div>\n            <div class=\"separator-line\" style=\"position:absolute;right: 0px\"></div>\n        </div>\n        <div class=\"btn-cards\">\n            <div class=\"btn-card\">\n                <button mat-button (click)=\"goTo('/messages')\" class=\"card-btn\" [disabled]=\"isToDisable('messages')\">\n                    <div class=\"card-btn-content\">\n                        <mat-icon>warning</mat-icon>\n                        <span>{{'dlg.setup-alarms' | translate}}</span>\n                    </div>\n                </button>\n            </div>\n            <div class=\"btn-card\">\n                <button mat-button (click)=\"goTo('/scripts')\" class=\"card-btn\" [disabled]=\"true\">\n                    <div class=\"card-btn-content\">\n                        <mat-icon>code</mat-icon>\n                        <span>{{'dlg.setup-scripts' | translate}}</span>\n                    </div>\n                </button>\n            </div>                \n        </div>\n    </div>\n</div>"

            /***/
}),

/***/ "./app/editor/setup/setup.component.scss":
/*!***********************************************!*\
  !*** ./app/editor/setup/setup.component.scss ***!
  \***********************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ".mat-button .mat-button-focus-overlay {\n  background-color: transparent; }\n\n.dlg-container {\n  position: relative;\n  height: 500px; }\n\n.separator {\n  align-items: center;\n  display: flex;\n  position: relative;\n  margin-top: 10px;\n  margin-bottom: 10px; }\n\n.separator-line {\n  border-bottom: 1px solid var(--setupSeparatorColor);\n  height: 1px;\n  width: 35%; }\n\n.separator-text {\n  left: 50%;\n  position: absolute;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  font-size: 13px; }\n\n.btn-cards {\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: -8px;\n  margin-right: -8px;\n  margin-top: 15px;\n  margin-bottom: 20px; }\n\n.btn-card {\n  margin-left: 10px;\n  margin-right: 10px;\n  padding-left: 8px;\n  padding-right: 8px; }\n\n.card-btn {\n  min-width: 100px;\n  font-size: 16px;\n  text-align: center;\n  align-content: center; }\n\n.card-btn span {\n  display: block;\n  font-weight: normal !important;\n  font-size: 13px;\n  text-align: center; }\n\n.card-btn-content {\n  display: block;\n  padding: 10px 0px 5px 0px;\n  text-align: -webkit-center;\n  text-align: -moz-center; }\n\n.card-btn-content .mat-icon {\n  display: block;\n  font-size: 32px;\n  height: 32px;\n  width: 32px; }\n\n.card-btn-content span {\n  display: block;\n  font-size: 14px; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9iaWxhbC9Eb2N1bWVudHMvRlVYQS9jbGllbnQvc3JjL2FwcC9lZGl0b3Ivc2V0dXAvc2V0dXAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSw2QkFBNkIsRUFBQTs7QUFHakM7RUFDSSxrQkFBa0I7RUFFbEIsYUFBYSxFQUFBOztBQUdqQjtFQUNJLG1CQUFtQjtFQUNuQixhQUFhO0VBQ2Isa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixtQkFBbUIsRUFBQTs7QUFHdkI7RUFDSSxtREFBbUQ7RUFDbkQsV0FBVztFQUNYLFVBQVUsRUFBQTs7QUFFZDtFQUNJLFNBQVM7RUFDVCxrQkFBa0I7RUFDbEIsUUFBUTtFQUNSLGdDQUFnQztFQUNoQyxlQUFlLEVBQUE7O0FBR25CO0VBQ0ksYUFBYTtFQUNiLGVBQWU7RUFDZixpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixtQkFBbUIsRUFBQTs7QUFHdkI7RUFFSSxpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLGlCQUFpQjtFQUNqQixrQkFBa0IsRUFBQTs7QUFHdEI7RUFDSSxnQkFBZ0I7RUFDaEIsZUFBZTtFQUNmLGtCQUFrQjtFQUVsQixxQkFBcUIsRUFBQTs7QUFJekI7RUFDSSxjQUFjO0VBQ2QsOEJBQThCO0VBQzlCLGVBQWU7RUFDZixrQkFBa0IsRUFBQTs7QUFHdEI7RUFDSSxjQUFjO0VBQ2QseUJBQXlCO0VBQ3pCLDBCQUEwQjtFQUMxQix1QkFBdUIsRUFBQTs7QUFFM0I7RUFDSSxjQUFjO0VBQ2QsZUFBZTtFQUNmLFlBQVk7RUFDWixXQUFXLEVBQUE7O0FBRWY7RUFDSSxjQUFjO0VBQ2QsZUFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvZWRpdG9yL3NldHVwL3NldHVwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1idXR0b24gLm1hdC1idXR0b24tZm9jdXMtb3ZlcmxheSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIH1cblxuLmRsZy1jb250YWluZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAvLyB3aWR0aDogMzAwcHg7XG4gICAgaGVpZ2h0OiA1MDBweDtcbn1cblxuLnNlcGFyYXRvciB7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG5cbi5zZXBhcmF0b3ItbGluZSB7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHZhcigtLXNldHVwU2VwYXJhdG9yQ29sb3IpO1xuICAgIGhlaWdodDogMXB4O1xuICAgIHdpZHRoOiAzNSU7XG59XG4uc2VwYXJhdG9yLXRleHQge1xuICAgIGxlZnQ6IDUwJTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gICAgZm9udC1zaXplOiAxM3B4O1xufVxuXG4uYnRuLWNhcmRzIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICBtYXJnaW4tbGVmdDogLThweDtcbiAgICBtYXJnaW4tcmlnaHQ6IC04cHg7XG4gICAgbWFyZ2luLXRvcDogMTVweDtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuXG4uYnRuLWNhcmQge1xuICAgIC8vIGZsZXgtYmFzaXM6IDI1JTtcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gICAgcGFkZGluZy1sZWZ0OiA4cHg7XG4gICAgcGFkZGluZy1yaWdodDogOHB4O1xufVxuXG4uY2FyZC1idG4ge1xuICAgIG1pbi13aWR0aDogMTAwcHg7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAtd2Via2l0LWFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XG4gICAgLy8gcGFkZGluZzogMHB4ICFpbXBvcnRhbnQ7XG59XG4gIFxuLmNhcmQtYnRuIHNwYW4ge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWwgIWltcG9ydGFudDtcbiAgICBmb250LXNpemU6IDEzcHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uY2FyZC1idG4tY29udGVudCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcGFkZGluZzogMTBweCAwcHggNXB4IDBweDtcbiAgICB0ZXh0LWFsaWduOiAtd2Via2l0LWNlbnRlcjtcbiAgICB0ZXh0LWFsaWduOiAtbW96LWNlbnRlcjtcbn1cbi5jYXJkLWJ0bi1jb250ZW50IC5tYXQtaWNvbiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZm9udC1zaXplOiAzMnB4O1xuICAgIGhlaWdodDogMzJweDtcbiAgICB3aWR0aDogMzJweDtcbn1cbi5jYXJkLWJ0bi1jb250ZW50IHNwYW4ge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbn0iXX0= */"

            /***/
}),

/***/ "./app/editor/setup/setup.component.ts":
/*!*********************************************!*\
  !*** ./app/editor/setup/setup.component.ts ***!
  \*********************************************/
/*! exports provided: SetupComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SetupComponent", function () { return SetupComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "../node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "../node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _services_project_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../_services/project.service */ "./app/_services/project.service.ts");
/* harmony import */ var _services_app_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../_services/app.service */ "./app/_services/app.service.ts");
/* harmony import */ var _editor_chart_config_chart_config_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../editor/chart-config/chart-config.component */ "./app/editor/chart-config/chart-config.component.ts");
/* harmony import */ var _editor_layout_property_layout_property_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../editor/layout-property/layout-property.component */ "./app/editor/layout-property/layout-property.component.ts");
/* harmony import */ var _editor_plugins_plugins_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../editor/plugins/plugins.component */ "./app/editor/plugins/plugins.component.ts");
/* harmony import */ var _editor_app_settings_app_settings_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../editor/app-settings/app-settings.component */ "./app/editor/app-settings/app-settings.component.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };









            var SetupComponent = /** @class */ (function () {
                function SetupComponent(router, appService, dialog, projectService, dialogRef) {
                    this.router = router;
                    this.appService = appService;
                    this.dialog = dialog;
                    this.projectService = projectService;
                    this.dialogRef = dialogRef;
                }
                SetupComponent.prototype.ngOnInit = function () {
                };
                SetupComponent.prototype.ngAfterViewInit = function () {
                };
                SetupComponent.prototype.onNoClick = function () {
                    this.dialogRef.close();
                };
                SetupComponent.prototype.goTo = function (destination) {
                    this.onNoClick();
                    this.router.navigate([destination]);
                };
                /**
                 * edit the chart configuration
                 */
                SetupComponent.prototype.onChartConfig = function () {
                    var _this = this;
                    this.onNoClick();
                    var chartscopy = JSON.parse(JSON.stringify(this.projectService.getCharts()));
                    var devices = this.projectService.getDevices();
                    var dialogRef = this.dialog.open(_editor_chart_config_chart_config_component__WEBPACK_IMPORTED_MODULE_5__["ChartConfigComponent"], {
                        position: { top: '60px' },
                        data: { charts: chartscopy, devices: devices }
                    });
                    dialogRef.afterClosed().subscribe(function (result) {
                        if (result) {
                            _this.projectService.setCharts(result.charts);
                        }
                    });
                };
                /**
                 * edit the layout property of views: menu, header
                 */
                SetupComponent.prototype.onLayoutConfig = function () {
                    var _this = this;
                    this.onNoClick();
                    var templayout = null;
                    var hmi = this.projectService.getHmi();
                    if (hmi.layout) {
                        templayout = JSON.parse(JSON.stringify(hmi.layout));
                    }
                    if (templayout && templayout.showdev !== false) {
                        templayout.showdev = true;
                    }
                    var dialogRef = this.dialog.open(_editor_layout_property_layout_property_component__WEBPACK_IMPORTED_MODULE_6__["LayoutPropertyComponent"], {
                        position: { top: '60px' },
                        data: { layout: templayout, views: hmi.views, securityEnabled: this.projectService.isSecurityEnabled() }
                    });
                    dialogRef.afterClosed().subscribe(function (result) {
                        if (result) {
                            hmi.layout = JSON.parse(JSON.stringify(result.layout));
                            _this.projectService.setLayout(hmi.layout);
                        }
                    });
                };
                /**
                 * edit the plugins to install or remove
                 */
                SetupComponent.prototype.onPlugins = function () {
                    this.onNoClick();
                    var dialogRef = this.dialog.open(_editor_plugins_plugins_component__WEBPACK_IMPORTED_MODULE_7__["PluginsComponent"], {
                        position: { top: '60px' },
                    });
                    dialogRef.afterClosed().subscribe(function (result) {
                    });
                };
                /**
                 * edit application settings
                 */
                SetupComponent.prototype.onSettings = function () {
                    this.onNoClick();
                    var dialogRef = this.dialog.open(_editor_app_settings_app_settings_component__WEBPACK_IMPORTED_MODULE_8__["AppSettingsComponent"], {
                        position: { top: '60px' },
                    });
                    dialogRef.afterClosed().subscribe(function (result) {
                    });
                };
                SetupComponent.prototype.isToDisable = function (section) {
                    if (section === 'messages') {
                        return this.appService.isClientApp;
                    }
                    else if (section === 'users') {
                        return this.appService.isClientApp;
                    }
                    else if (section === 'plugins') {
                        return this.appService.isClientApp;
                    }
                    return false;
                };
                SetupComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'app-setup',
                        template: __webpack_require__(/*! ./setup.component.html */ "./app/editor/setup/setup.component.html"),
                        styles: [__webpack_require__(/*! ./setup.component.scss */ "./app/editor/setup/setup.component.scss")]
                    }),
                    __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"],
                    _services_app_service__WEBPACK_IMPORTED_MODULE_4__["AppService"],
                    _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialog"],
                    _services_project_service__WEBPACK_IMPORTED_MODULE_3__["ProjectService"],
                    _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialogRef"]])
                ], SetupComponent);
                return SetupComponent;
            }());



            /***/
}),

/***/ "./app/fuxa-view/fuxa-view.component.css":
/*!***********************************************!*\
  !*** ./app/fuxa-view/fuxa-view.component.css ***!
  \***********************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ".view-container {\n    display: table;\n}\n\n.fab-card {\n    position: absolute;\n    width: 1300px;\n    height: 800px;\n    /* background-color:black; */\n    /* box-shadow: 0 2px 5px 0 rgba(0,0,0,.26); */\n    box-shadow: 0px 1px 4px 1px #888888;\n}\n\n.card-close {\n    position: absolute;\n    top: 0px;\n    right: 0px;\n    height: 22px;\n    width: 100%;\n    color: rgba(0, 0, 0, 0.7);\n    background-color: transparent;\n    font-size: 12px;\n    cursor: move !important;\n}\n\n.card-close i {\n    float: right;\n}\n\n.fab-iframe {\n    position: absolute;\n    width: 800px;\n    height: 600px;\n    background-color: black;\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.26);\n    /* box-shadow: 0px 2px 6px -1px #888888; */\n}\n\n.iframe-header {\n    display: block;\n    height: 22px;\n    width: 100%;\n    color: white;\n    background-color: black;\n    font-size: 12px;\n    text-align: center;\n    line-height: 22px;\n}\n\n.iframe-header i {\n    float: right;\n    color: white;\n}\n\n.iframe-class {\n    display: block;\n    height: 100%;\n    transform-origin: 0 0;\n    /* transform-origin:left top; */\n}\n\n.ng-draggable {\n    cursor: move;\n}\n\n.dialog-modal {\n    /* display: none; */\n    position: fixed; /* Stay in place */\n    z-index: 1; /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    /*background-color: rgb(0,0,0); /* Fallback color */\n    /*background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n}\n\n/* Modal Content/Box */\n\n.dialog-modal-content {\n    border: 1px solid #888;\n    box-shadow: 0 0 12px #000000 !important;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n\n.dialog-modal-close {\n    position: relative;\n    top: 0px;\n    right: 0px;\n    height: 22px;\n    width: 100%;\n    color: rgba(0, 0, 0, 0.7);\n    background-color: transparent;\n    font-size: 12px;\n    cursor: move !important;\n}\n\n.dialog-modal-close i {\n    float: right;\n}\n\n/* input */\n\n.dialog-input {\n    z-index: 1; /* Sit on top */\n    box-shadow: 1px 2px 5px -1px #888;\n    position: absolute;\n    padding: 5px;\n    background-color: #fff;\n    min-width: 80px;\n}\n\n.dialog-input input {\n    border: 0.5px solid rgba(0,0,0,0.1);\n    border-radius: 2px;\n    padding: 6px 3px 7px 4px;\n    width: 100%;\n    display: block;\n    margin: 0 auto;\n}\n\n.dialog-input button {\n    min-width: 80px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnV4YS12aWV3L2Z1eGEtdmlldy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksY0FBYztBQUNsQjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixhQUFhO0lBQ2IsYUFBYTtJQUNiLDRCQUE0QjtJQUM1Qiw2Q0FBNkM7SUFDN0MsbUNBQW1DO0FBQ3ZDOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLFFBQVE7SUFDUixVQUFVO0lBQ1YsWUFBWTtJQUNaLFdBQVc7SUFDWCx5QkFBeUI7SUFDekIsNkJBQTZCO0lBQzdCLGVBQWU7SUFDZix1QkFBdUI7QUFDM0I7O0FBRUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLDJDQUEyQztJQUMzQywwQ0FBMEM7QUFDOUM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsWUFBWTtJQUNaLFdBQVc7SUFDWCxZQUFZO0lBQ1osdUJBQXVCO0lBQ3ZCLGVBQWU7SUFDZixrQkFBa0I7SUFDbEIsaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksWUFBWTtJQUNaLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsWUFBWTtJQUNaLHFCQUFxQjtJQUNyQiwrQkFBK0I7QUFDbkM7O0FBRUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksbUJBQW1CO0lBQ25CLGVBQWUsRUFBRSxrQkFBa0I7SUFDbkMsVUFBVSxFQUFFLGVBQWU7SUFDM0IsT0FBTztJQUNQLE1BQU07SUFDTixXQUFXLEVBQUUsZUFBZTtJQUM1QixZQUFZLEVBQUUsZ0JBQWdCO0lBQzlCLGNBQWMsRUFBRSw0QkFBNEI7SUFDNUMsbURBQW1EO0lBQ25ELDBEQUEwRDtBQUM5RDs7QUFFQSxzQkFBc0I7O0FBQ3RCO0lBQ0ksc0JBQXNCO0lBQ3RCLHVDQUF1QztJQUN2QyxrQkFBa0I7SUFDbEIsUUFBUTtJQUNSLFNBQVM7SUFDVCxnQ0FBZ0M7QUFDcEM7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsUUFBUTtJQUNSLFVBQVU7SUFDVixZQUFZO0lBQ1osV0FBVztJQUNYLHlCQUF5QjtJQUN6Qiw2QkFBNkI7SUFDN0IsZUFBZTtJQUNmLHVCQUF1QjtBQUMzQjs7QUFFQTtJQUNJLFlBQVk7QUFDaEI7O0FBRUEsVUFBVTs7QUFDVjtJQUNJLFVBQVUsRUFBRSxlQUFlO0lBQzNCLGlDQUFpQztJQUNqQyxrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLHNCQUFzQjtJQUN0QixlQUFlO0FBQ25COztBQUVBO0lBQ0ksbUNBQW1DO0lBQ25DLGtCQUFrQjtJQUNsQix3QkFBd0I7SUFDeEIsV0FBVztJQUNYLGNBQWM7SUFDZCxjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksZUFBZTtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL2Z1eGEtdmlldy9mdXhhLXZpZXcuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi52aWV3LWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogdGFibGU7XG59XG5cbi5mYWItY2FyZCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHdpZHRoOiAxMzAwcHg7XG4gICAgaGVpZ2h0OiA4MDBweDtcbiAgICAvKiBiYWNrZ3JvdW5kLWNvbG9yOmJsYWNrOyAqL1xuICAgIC8qIGJveC1zaGFkb3c6IDAgMnB4IDVweCAwIHJnYmEoMCwwLDAsLjI2KTsgKi9cbiAgICBib3gtc2hhZG93OiAwcHggMXB4IDRweCAxcHggIzg4ODg4ODtcbn1cblxuLmNhcmQtY2xvc2Uge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDBweDtcbiAgICByaWdodDogMHB4O1xuICAgIGhlaWdodDogMjJweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjcpO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICBjdXJzb3I6IG1vdmUgIWltcG9ydGFudDtcbn1cblxuLmNhcmQtY2xvc2UgaSB7XG4gICAgZmxvYXQ6IHJpZ2h0O1xufVxuXG4uZmFiLWlmcmFtZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHdpZHRoOiA4MDBweDtcbiAgICBoZWlnaHQ6IDYwMHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xuICAgIGJveC1zaGFkb3c6IDAgMnB4IDVweCAwIHJnYmEoMCwgMCwgMCwgMC4yNik7XG4gICAgLyogYm94LXNoYWRvdzogMHB4IDJweCA2cHggLTFweCAjODg4ODg4OyAqL1xufVxuXG4uaWZyYW1lLWhlYWRlciB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgaGVpZ2h0OiAyMnB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGxpbmUtaGVpZ2h0OiAyMnB4O1xufVxuXG4uaWZyYW1lLWhlYWRlciBpIHtcbiAgICBmbG9hdDogcmlnaHQ7XG4gICAgY29sb3I6IHdoaXRlO1xufVxuXG4uaWZyYW1lLWNsYXNzIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgdHJhbnNmb3JtLW9yaWdpbjogMCAwO1xuICAgIC8qIHRyYW5zZm9ybS1vcmlnaW46bGVmdCB0b3A7ICovXG59XG5cbi5uZy1kcmFnZ2FibGUge1xuICAgIGN1cnNvcjogbW92ZTtcbn1cblxuLmRpYWxvZy1tb2RhbCB7XG4gICAgLyogZGlzcGxheTogbm9uZTsgKi9cbiAgICBwb3NpdGlvbjogZml4ZWQ7IC8qIFN0YXkgaW4gcGxhY2UgKi9cbiAgICB6LWluZGV4OiAxOyAvKiBTaXQgb24gdG9wICovXG4gICAgbGVmdDogMDtcbiAgICB0b3A6IDA7XG4gICAgd2lkdGg6IDEwMCU7IC8qIEZ1bGwgd2lkdGggKi9cbiAgICBoZWlnaHQ6IDEwMCU7IC8qIEZ1bGwgaGVpZ2h0ICovXG4gICAgb3ZlcmZsb3c6IGF1dG87IC8qIEVuYWJsZSBzY3JvbGwgaWYgbmVlZGVkICovXG4gICAgLypiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMCwwLDApOyAvKiBGYWxsYmFjayBjb2xvciAqL1xuICAgIC8qYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwwLjQpOyAvKiBCbGFjayB3LyBvcGFjaXR5ICovXG59XG5cbi8qIE1vZGFsIENvbnRlbnQvQm94ICovXG4uZGlhbG9nLW1vZGFsLWNvbnRlbnQge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICM4ODg7XG4gICAgYm94LXNoYWRvdzogMCAwIDEycHggIzAwMDAwMCAhaW1wb3J0YW50O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDUwJTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG59XG5cbi5kaWFsb2ctbW9kYWwtY2xvc2Uge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB0b3A6IDBweDtcbiAgICByaWdodDogMHB4O1xuICAgIGhlaWdodDogMjJweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjcpO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICBjdXJzb3I6IG1vdmUgIWltcG9ydGFudDtcbn1cblxuLmRpYWxvZy1tb2RhbC1jbG9zZSBpIHtcbiAgICBmbG9hdDogcmlnaHQ7XG59XG5cbi8qIGlucHV0ICovXG4uZGlhbG9nLWlucHV0IHtcbiAgICB6LWluZGV4OiAxOyAvKiBTaXQgb24gdG9wICovXG4gICAgYm94LXNoYWRvdzogMXB4IDJweCA1cHggLTFweCAjODg4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBwYWRkaW5nOiA1cHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICBtaW4td2lkdGg6IDgwcHg7XG59XG5cbi5kaWFsb2ctaW5wdXQgaW5wdXQge1xuICAgIGJvcmRlcjogMC41cHggc29saWQgcmdiYSgwLDAsMCwwLjEpO1xuICAgIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgICBwYWRkaW5nOiA2cHggM3B4IDdweCA0cHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luOiAwIGF1dG87XG59XG5cbi5kaWFsb2ctaW5wdXQgYnV0dG9uIHtcbiAgICBtaW4td2lkdGg6IDgwcHg7XG59Il19 */"

            /***/
}),

/***/ "./app/fuxa-view/fuxa-view.component.html":
/*!************************************************!*\
  !*** ./app/fuxa-view/fuxa-view.component.html ***!
  \************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div #dataContainer class=\"view-container\" id=\"content\">\n</div>\n<div *ngFor=\"let card of cards; let i = index\" [style.height]=\"getCardHeight(card.height) + 'px'\" [style.left]=\"card.x + 'px'\" [style.top]=\"card.y +'px'\"\n    [style.width]=\"card.width +'px'\" class=\"fab-card\" style=\"cursor: auto  !important;\" ngDraggable>\n    <a (click)=\"onCloseCard(card);\" class=\"card-close\">\n        <i class=\"material-icons\" style=\"font-size: 22px; cursor: pointer;\">close</i>\n    </a>\n    <app-fuxa-view (onclose)=\"onCloseCard(card)\" [child]='true' [gaugesManager]=\"gaugesManager\" [hmi]=\"hmi\" [parentcards]=\"cards\" [variablesMapping]=\"card.variablesMapping\"\n        [view]=\"card.view\"></app-fuxa-view>\n</div>\n<div *ngIf=\"dialog\" class=\"dialog-modal\">\n    <div [style.background-color]=\"dialog.bkcolor\" [style.height]=\"dialog.height + 'px'\" [style.width]=\"dialog.width +'px'\" class=\"dialog-modal-content\">\n        <a (click)=\"onCloseDialog();\" class=\"dialog-modal-close\">\n            <i class=\"material-icons\" style=\"font-size: 22px; cursor: pointer;\">close</i>\n        </a>\n        <app-fuxa-view (onclose)=\"onCloseDialog()\" [child]='true' [gaugesManager]=\"gaugesManager\" [hmi]=\"hmi\" [variablesMapping]=\"dialog.variablesMapping\" [view]=\"dialog.view\">\n        </app-fuxa-view>\n    </div>\n</div>\n<div (rzResizing)=\"onIframeResizing(iframe, $event)\" *ngFor=\"let iframe of iframes; let i = index\" [handle]=\"iframeHandle\" [style.height]=\"(iframe.height + 22) + 'px'\"\n    [style.left]=\"iframe.x + 'px'\" [style.top]=\"iframe.y + 'px'\" [style.width]=\"iframe.width + 'px'\" class=\"fab-iframe\" ngDraggable ngResizable>\n    <div #iframeHandle class=\"iframe-header\">\n        <span>{{iframe.name}}</span>\n        <a (click)=\"onCloseIframe(iframe);\">\n            <i class=\"material-icons\" style=\"font-size: 22px; cursor: pointer;\">close</i>\n        </a>\n    </div>\n    <app-iframe [link]=\"iframe.link\" [style.height]=\"iframe.height + 'px'\" [style.transform]=\"'scale(' + iframe.scale + ')'\" [style.width]=\"iframe.width + 'px'\"\n        [style.zoom]=\"1 / iframe.scale\" class=\"iframe-class\"></app-iframe>\n</div>\n<div #inputDialogRef [style.display]=\"(inputDialog.show) ? 'inline-block' : 'none'\" class=\"dialog-input\" [style.top.px]=\"inputDialog.y\" [style.left.px]=\"inputDialog.x\">\n    <input matInput #inputValueRef [(ngModel)]=\"gaugeInput\" autocomplete=\"off\" type=\"text\" (focus)=\"toggleShowInputDialog(true)\" (focusout)=\"toggleShowInputDialog(false)\">\n    <div style=\"display: block; padding-top: 5px;\">\n        <button mat-raised-button (click)=\"onOkClick(gaugeInput)\" style=\"float: right;min-width: 16px;padding-left: 4px;padding-right: 4px;margin-left: 5px;\" color=\"primary\" cdkFocusInitial>\n            <mat-icon>done</mat-icon>\n        </button>\n        <button mat-raised-button (click)=\"onNoClick()\" style=\"float: right; min-width:16px;padding-left: 4px;padding-right: 4px;\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </div>\n</div>"

            /***/
}),

/***/ "./app/fuxa-view/fuxa-view.component.ts":
/*!**********************************************!*\
  !*** ./app/fuxa-view/fuxa-view.component.ts ***!
  \**********************************************/
/*! exports provided: FuxaViewComponent, CardModel, DialogModalModel */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FuxaViewComponent", function () { return FuxaViewComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CardModel", function () { return CardModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DialogModalModel", function () { return DialogModalModel; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _models_hmi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_models/hmi */ "./app/_models/hmi.ts");
/* harmony import */ var _gauges_gauges_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../gauges/gauges.component */ "./app/gauges/gauges.component.ts");
/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! util */ "../node_modules/util/util.js");
/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(util__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../_helpers/utils */ "./app/_helpers/utils.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };






            var FuxaViewComponent = /** @class */ (function () {
                function FuxaViewComponent(el, changeDetector, viewContainerRef, resolver) {
                    this.el = el;
                    this.changeDetector = changeDetector;
                    this.viewContainerRef = viewContainerRef;
                    this.resolver = resolver;
                    this.variablesMapping = [];
                    this.child = false;
                    this.onclose = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
                    this.cards = [];
                    this.iframes = [];
                    this.mapGaugeStatus = {};
                    this.inputDialog = { show: false, timer: null, x: 0, y: 0, target: null };
                    this.gaugeInput = '';
                    this.cardViewType = _helpers_utils__WEBPACK_IMPORTED_MODULE_4__["Utils"].getEnumKey(_models_hmi__WEBPACK_IMPORTED_MODULE_1__["ViewType"], _models_hmi__WEBPACK_IMPORTED_MODULE_1__["ViewType"].cards);
                    this.staticValues = {};
                    this.plainVariableMapping = {};
                }
                FuxaViewComponent_1 = FuxaViewComponent;
                FuxaViewComponent.prototype.ngOnInit = function () {
                    var _this = this;
                    try {
                        if (this.variablesMapping) {
                            this.variablesMapping.forEach(function (variableMapping) {
                                _this.plainVariableMapping[variableMapping.from.variableId] = variableMapping.to.variableId;
                            });
                        }
                    }
                    catch (err) {
                        console.error(err);
                    }
                };
                FuxaViewComponent.prototype.ngAfterViewInit = function () {
                    this.loadHmi(this.view);
                    try {
                        this.gaugesManager.emitBindedSignals(this.id);
                    }
                    catch (err) {
                        console.error(err);
                    }
                };
                FuxaViewComponent.prototype.ngOnDestroy = function () {
                    try {
                        this.gaugesManager.unbindGauge(this.id);
                        this.clearGaugeStatus();
                        if (this.subscriptionOnChange) {
                            this.subscriptionOnChange.unsubscribe();
                        }
                    }
                    catch (err) {
                        console.error(err);
                    }
                };
                FuxaViewComponent.prototype.clearGaugeStatus = function () {
                    Object.values(this.mapGaugeStatus).forEach(function (gs) {
                        try {
                            if (gs.actionRef) {
                                if (gs.actionRef.timer) {
                                    clearTimeout(gs.actionRef.timer);
                                    gs.actionRef.timer = null;
                                }
                                if (gs.actionRef.animr) {
                                    if (gs.actionRef.animr.reset) {
                                        gs.actionRef.animr.reset();
                                    }
                                    delete gs.actionRef.animr;
                                }
                            }
                        }
                        catch (err) {
                            console.error(err);
                        }
                    });
                    this.mapGaugeStatus = {};
                };
                /**
                 * load the svg content to show in browser, clear all binded to this view
                 * @param view
                 */
                FuxaViewComponent.prototype.loadHmi = function (view) {
                    if (this.id) {
                        try {
                            this.gaugesManager.unbindGauge(this.id);
                            this.clearGaugeStatus();
                            this.viewContainerRef.clear();
                            this.dataContainer.nativeElement.innerHTML = '';
                        }
                        catch (err) {
                            console.error(err);
                        }
                    }
                    if (view) {
                        this.id = view.id;
                        this.view = view;
                        if (view.type === this.cardViewType) {
                            var cards = JSON.parse(view.svgcontent);
                            if (cards.content) {
                                this.dataContainer.nativeElement.innerHTML = cards.content.replace('<title>Layer 1</title>', '');
                            }
                        }
                        else {
                            this.dataContainer.nativeElement.innerHTML = view.svgcontent.replace('<title>Layer 1</title>', '');
                        }
                        if (view.profile.bkcolor && this.child) {
                            this.dataContainer.nativeElement.style.backgroundColor = view.profile.bkcolor;
                        }
                    }
                    this.changeDetector.detectChanges();
                    this.loadWatch(this.view);
                };
                /**
                 * load all gauge settings, bind gauge with signals, bind gauge event
                 * @param view
                 */
                FuxaViewComponent.prototype.loadWatch = function (view) {
                    var _this = this;
                    if (view && view.items) {
                        var items = this.applyVariableMapping(view.items);
                        var _loop_1 = function (key) {
                            if (!items.hasOwnProperty(key)) {
                                return "continue";
                            }
                            try {
                                var gauge = this_1.gaugesManager.initElementAdded(items[key], this_1.resolver, this_1.viewContainerRef, true);
                                this_1.gaugesManager.bindGauge(gauge, this_1.id, items[key], function (gatobindclick) {
                                    _this.onBindClick(gatobindclick);
                                }, function (gatobindhtmlevent) {
                                    _this.onBindHtmlEvent(gatobindhtmlevent);
                                });
                                if (items[key].property) {
                                    var gaugeSetting_1 = items[key];
                                    var gaugeStatus_1 = this_1.getGaugeStatus(gaugeSetting_1);
                                    var variables = [];
                                    // prepare the start value to precess
                                    if (items[key].property.variableValue && gaugeSetting_1.property.variableId) {
                                        var variable = { id: gaugeSetting_1.property.variableId, value: gaugeSetting_1.property.variableValue };
                                        if (this_1.checkStatusValue(gaugeSetting_1.id, gaugeStatus_1, variable)) {
                                            variables = [variable];
                                        }
                                    }
                                    // get the the last signal value in memory of gauge, is important that last one is the value (variableId)
                                    variables = variables.concat(this_1.gaugesManager.getBindSignalsValue(items[key]));
                                    if (variables.length) {
                                        var svgeles_1 = FuxaViewComponent_1.getSvgElements(gaugeSetting_1.id);
                                        var _loop_2 = function (y) {
                                            variables.forEach(function (variable) {
                                                _this.gaugesManager.processValue(gaugeSetting_1, svgeles_1[y], variable, gaugeStatus_1);
                                            });
                                        };
                                        for (var y = 0; y < svgeles_1.length; y++) {
                                            _loop_2(y);
                                        }
                                    }
                                }
                            }
                            catch (err) {
                                console.error('loadWatch: ' + err);
                            }
                        };
                        var this_1 = this;
                        // this.gaugesManager.initGaugesMap();
                        for (var key in items) {
                            _loop_1(key);
                        }
                        if (!this.subscriptionOnChange) {
                            this.subscriptionOnChange = this.gaugesManager.onchange.subscribe(this.handleSignal.bind(this));
                        }
                        for (var variableId in this.staticValues) {
                            if (!this.staticValues.hasOwnProperty(variableId)) {
                                continue;
                            }
                            this.handleSignal({
                                id: variableId,
                                value: this.staticValues[variableId]
                            });
                        }
                    }
                };
                FuxaViewComponent.prototype.handleSignal = function (sig) {
                    if (!Object(util__WEBPACK_IMPORTED_MODULE_3__["isUndefined"])(sig.value)) {
                        try {
                            // take all gauges settings binded to the signal id in this view
                            var gas = this.gaugesManager.getGaugeSettings(this.id, sig.id);
                            if (gas) {
                                for (var i = 0; i < gas.length; i++) {
                                    var gaugeSetting = gas[i];
                                    var gaugeStatus = this.getGaugeStatus(gaugeSetting);
                                    if (this.checkStatusValue(gaugeSetting.id, gaugeStatus, sig)) {
                                        var svgeles = FuxaViewComponent_1.getSvgElements(gaugeSetting.id);
                                        for (var y = 0; y < svgeles.length; y++) {
                                            this.gaugesManager.processValue(gaugeSetting, svgeles[y], sig, gaugeStatus);
                                        }
                                    }
                                }
                            }
                        }
                        catch (err) {
                        }
                    }
                };
                /**
                 * return the mapped gauge status, if it doesn't exist add it
                 * @param ga
                 */
                FuxaViewComponent.prototype.getGaugeStatus = function (ga) {
                    if (this.mapGaugeStatus[ga.id]) {
                        return this.mapGaugeStatus[ga.id];
                    }
                    else {
                        this.mapGaugeStatus[ga.id] = this.gaugesManager.createGaugeStatus(ga);
                        return this.mapGaugeStatus[ga.id];
                    }
                };
                /**
                 * Replace variables by defined mapping
                 * @param items
                 * @protected
                 */
                FuxaViewComponent.prototype.applyVariableMapping = function (items) {
                    var _this = this;
                    // Deep clone
                    items = JSON.parse(JSON.stringify(items));
                    for (var gaId in items) {
                        if (!items.hasOwnProperty(gaId)) {
                            continue;
                        }
                        var property = items[gaId].property;
                        if (!property) {
                            continue;
                        }
                        this.applyVariableMappingTo(property);
                        if (property.actions) {
                            property.actions.forEach(function (action) {
                                _this.applyVariableMappingTo(action);
                            });
                        }
                        if (property.events) {
                            property.events.forEach(function (event) {
                                if (event.actoptions) {
                                    if (_helpers_utils__WEBPACK_IMPORTED_MODULE_4__["Utils"].isObject(event.actoptions['variable'])) {
                                        _this.applyVariableMappingTo(event.actoptions['variable']);
                                    }
                                    else {
                                        _this.applyVariableMappingTo(event.actoptions);
                                    }
                                }
                            });
                        }
                        if (property.ranges) {
                            property.ranges.forEach(function (range) {
                                if (range.textId) {
                                    _this.applyVariableMappingTo(range.textId);
                                }
                            });
                        }
                    }
                    return items;
                };
                FuxaViewComponent.prototype.applyVariableMappingTo = function (target) {
                    if (!target || !target['variableId']) {
                        return;
                    }
                    if (this.plainVariableMapping.hasOwnProperty(target.variableId)) {
                        target.variableId = this.plainVariableMapping[target.variableId];
                    }
                };
                /**
                 * check the change of variable value in gauge status
                 * @param gaugeId
                 * @param gaugeStatus
                 * @param signal
                 */
                FuxaViewComponent.prototype.checkStatusValue = function (gaugeId, gaugeStatus, signal) {
                    var result = true;
                    if (gaugeStatus.onlyChange) {
                        if (gaugeStatus.takeValue) {
                            var value = this.gaugesManager.getGaugeValue(gaugeId);
                            gaugeStatus.variablesValue[signal.id] = value;
                        }
                        if (gaugeStatus.variablesValue[signal.id] === signal.value) {
                            result = false;
                        }
                    }
                    gaugeStatus.variablesValue[signal.id] = signal.value;
                    return result;
                };
                /**
                 * bind the gauge svg element with click event
                 * @param ga
                 */
                FuxaViewComponent.prototype.onBindClick = function (ga) {
                    var self = this;
                    var svgele = FuxaViewComponent_1.getSvgElement(ga.id);
                    if (svgele) {
                        svgele.click(function (ev) {
                            var event = self.gaugesManager.getBindClick(ga);
                            if (event && event.length > 0) {
                                for (var i = 0; i < event.length; i++) {
                                    var actindex = Object.keys(_models_hmi__WEBPACK_IMPORTED_MODULE_1__["GaugeEventActionType"]).indexOf(event[i].action);
                                    var eventTypes = Object.values(_models_hmi__WEBPACK_IMPORTED_MODULE_1__["GaugeEventActionType"]);
                                    if (eventTypes.indexOf(_models_hmi__WEBPACK_IMPORTED_MODULE_1__["GaugeEventActionType"].onpage) === actindex) {
                                        self.loadPage(ev, event[i].actparam);
                                    }
                                    else if (eventTypes.indexOf(_models_hmi__WEBPACK_IMPORTED_MODULE_1__["GaugeEventActionType"].onwindow) === actindex) {
                                        self.onOpenCard(ga.id, ev, event[i].actparam, event[i].actoptions);
                                    }
                                    else if (eventTypes.indexOf(_models_hmi__WEBPACK_IMPORTED_MODULE_1__["GaugeEventActionType"].ondialog) === actindex) {
                                        self.openDialog(ev, event[i].actparam, event[i].actoptions);
                                    }
                                    else if (eventTypes.indexOf(_models_hmi__WEBPACK_IMPORTED_MODULE_1__["GaugeEventActionType"].onSetValue) === actindex) {
                                        self.onSetValue(ga, event[i]);
                                    }
                                    else if (eventTypes.indexOf(_models_hmi__WEBPACK_IMPORTED_MODULE_1__["GaugeEventActionType"].onToggleValue) === actindex) {
                                        self.onToggleValue(ga, event[i]);
                                    }
                                    else if (eventTypes.indexOf(_models_hmi__WEBPACK_IMPORTED_MODULE_1__["GaugeEventActionType"].onSetInput) === actindex) {
                                        self.onSetInput(ga, event[i]);
                                    }
                                    else if (eventTypes.indexOf(_models_hmi__WEBPACK_IMPORTED_MODULE_1__["GaugeEventActionType"].oniframe) === actindex) {
                                        self.openIframe(ga.id, ev, event[i].actparam, event[i].actoptions);
                                    }
                                    else if (eventTypes.indexOf(_models_hmi__WEBPACK_IMPORTED_MODULE_1__["GaugeEventActionType"].oncard) === actindex) {
                                        self.openWindow(ga.id, ev, event[i].actparam, event[i].actoptions);
                                    }
                                    else if (eventTypes.indexOf(_models_hmi__WEBPACK_IMPORTED_MODULE_1__["GaugeEventActionType"].onclose) === actindex) {
                                        self.onClose(ev);
                                    }
                                }
                            }
                        });
                    }
                };
                FuxaViewComponent.prototype.onToggleValue = function (ga, event) {
                    if (event.actoptions && event.actoptions['variableId']) {
                        this.gaugesManager.toggleSignalValue(event.actoptions['variableId']);
                    }
                    else if (ga.property && ga.property.variableId) {
                        this.gaugesManager.toggleSignalValue(ga.property.variableId);
                    }
                };
                /**
                 * bind the html input control with key-enter event and select control with change event
                 * @param htmlevent
                 */
                FuxaViewComponent.prototype.onBindHtmlEvent = function (htmlevent) {
                    var self = this;
                    // let htmlevent = this.getHtmlElement(ga.id);
                    if (htmlevent.type === 'key-enter') {
                        htmlevent.dom.onkeypress = function (ev) {
                            if (ev.keyCode === 13) {
                                htmlevent.dbg = 'key pressed ' + htmlevent.dom.id + ' ' + htmlevent.dom.value;
                                htmlevent.id = htmlevent.dom.id;
                                htmlevent.value = htmlevent.dom.value;
                                self.gaugesManager.putEvent(htmlevent);
                            }
                        };
                        if (this.hmi.layout.inputdialog === 'true') {
                            htmlevent.dom.onfocus = function (ev) {
                                if (ev.currentTarget) {
                                    var inputRect = ev.currentTarget.getBoundingClientRect();
                                    self.toggleShowInputDialog(true, inputRect.left, inputRect.top, htmlevent);
                                    self.toggleShowInputDialog(true, inputRect.left + ((inputRect.width < 80) ? -((80 - inputRect.width) / 2) : 0), inputRect.top - 5, htmlevent);
                                    for (var i = 0; i < ev.currentTarget.attributes.length; i++) {
                                        if (ev.currentTarget.attributes['style']) {
                                            self.setInputDialogStyle(self.inputDialogRef.nativeElement, ev.currentTarget.attributes['style'].textContent, inputRect);
                                        }
                                    }
                                    document.body.appendChild(self.inputDialogRef.nativeElement);
                                    setTimeout(function () {
                                        self.inputValueRef.nativeElement.focus();
                                    }, 300);
                                }
                            };
                            htmlevent.dom.onblur = function (ev) {
                                self.toggleShowInputDialog(false);
                            };
                        }
                    }
                    else if (htmlevent.type === 'change') {
                        htmlevent.dom.onchange = function (ev) {
                            htmlevent.dbg = 'key pressed ' + htmlevent.dom.id + ' ' + htmlevent.dom.value;
                            htmlevent.id = htmlevent.dom.id;
                            htmlevent.value = htmlevent.dom.value;
                            self.gaugesManager.putEvent(htmlevent);
                        };
                    }
                };
                FuxaViewComponent.prototype.setInputDialogStyle = function (element, style, sourceBound) {
                    for (var i = 0; i < element.children.length; i++) {
                        var el = element.children[i];
                        if (el.tagName.toLowerCase() === 'input') {
                            el.value = '';
                            style += 'width: ' + sourceBound.width + 'px !important;';
                            el.setAttribute('style', style);
                        }
                    }
                    element.style.backgroundColor = this.view.profile.bkcolor;
                };
                FuxaViewComponent.prototype.getView = function (viewref) {
                    var view;
                    for (var i = 0; i < this.hmi.views.length; i++) {
                        if (this.hmi.views[i] && this.hmi.views[i].id === viewref) {
                            view = this.hmi.views[i];
                            break;
                        }
                    }
                    return view;
                };
                FuxaViewComponent.getSvgElements = function (svgid) {
                    var ele = document.getElementsByTagName('svg');
                    var result = [];
                    for (var i = 0; i < ele.length; i++) {
                        var svgItems = ele[i].getElementById(svgid);
                        if (svgItems) {
                            result.push(SVG.adopt(svgItems));
                        }
                    }
                    return result;
                };
                FuxaViewComponent.getSvgElement = function (svgid) {
                    var ele = document.getElementsByTagName('svg');
                    for (var i = 0; i < ele.length; i++) {
                        var svgItems = ele[i].getElementById(svgid);
                        if (svgItems) {
                            return SVG.adopt(svgItems);
                        }
                    }
                };
                FuxaViewComponent.prototype.loadPage = function (event, viewref) {
                    var view = this.getView(viewref);
                    if (view) {
                        this.loadHmi(view);
                    }
                };
                FuxaViewComponent.prototype.openDialog = function (event, viewref, options) {
                    if (options === void 0) { options = {}; }
                    var view = this.getView(viewref);
                    if (!view) {
                        return;
                    }
                    this.dialog = new DialogModalModel(viewref);
                    this.dialog.width = view.profile.width;
                    this.dialog.height = view.profile.height + 26;
                    this.dialog.view = view;
                    this.dialog.bkcolor = 'trasparent';
                    this.dialog.variablesMapping = options.variablesMapping;
                    if (view.profile.bkcolor) {
                        this.dialog.bkcolor = view.profile.bkcolor;
                    }
                };
                FuxaViewComponent.prototype.onOpenCard = function (id, event, viewref, options) {
                    if (options === void 0) { options = {}; }
                    var view = this.getView(viewref);
                    if (!view) {
                        return;
                    }
                    // check existing card
                    var card = null;
                    this.cards.forEach(function (c) {
                        if (c.id === id) {
                            card = c;
                        }
                    });
                    if (card) {
                        return;
                    }
                    card = new CardModel(id);
                    card.x = event.clientX;
                    card.y = event.clientY;
                    if (this.hmi.layout.hidenavigation) {
                        card.y -= 48;
                    }
                    card.width = view.profile.width;
                    card.height = view.profile.height;
                    card.view = view;
                    card.variablesMapping = options.variablesMapping;
                    if (this.parentcards) {
                        this.parentcards.push(card);
                    }
                    else {
                        this.cards.push(card);
                    }
                };
                FuxaViewComponent.prototype.openIframe = function (id, event, link, options) {
                    // check existing iframe
                    var iframe = null;
                    this.iframes.forEach(function (f) {
                        if (f.id === id) {
                            iframe = f;
                        }
                    });
                    if (iframe) {
                        return;
                    }
                    iframe = new CardModel(id);
                    iframe.x = event.clientX;
                    iframe.y = event.clientY;
                    iframe.width = 600;
                    iframe.height = 400;
                    iframe.scale = 1;
                    if (!isNaN(parseInt(options.width))) {
                        iframe.width = parseInt(options.width);
                    }
                    if (!isNaN(parseInt(options.height))) {
                        iframe.height = parseInt(options.height);
                    }
                    if (!isNaN(parseFloat(options.scale))) {
                        iframe.scale = parseFloat(options.scale);
                    }
                    iframe.link = link;
                    iframe.name = link;
                    this.iframes.push(iframe);
                    this.onIframeResizing(iframe, { size: { width: iframe.width, height: iframe.height } });
                };
                FuxaViewComponent.prototype.onIframeResizing = function (iframe, event) {
                    iframe.width = event.size.width;
                    iframe.height = event.size.height;
                };
                FuxaViewComponent.prototype.onCloseIframe = function (iframe) {
                    var _this = this;
                    this.iframes.forEach(function (f) {
                        if (f.id === iframe.id) {
                            _this.iframes.splice(_this.cards.indexOf(f), 1);
                        }
                    });
                };
                FuxaViewComponent.prototype.openWindow = function (id, event, link, options) {
                    var width = 600;
                    var height = 400;
                    if (!isNaN(parseInt(options.width))) {
                        width = parseInt(options.width);
                    }
                    if (!isNaN(parseInt(options.height))) {
                        height = parseInt(options.height);
                    }
                    window.open(link, '_blank', 'height=' + height + ',width=' + width + ',left=' + event.clientX + ',top=' + event.clientY);
                };
                FuxaViewComponent.prototype.onCloseCard = function (card) {
                    this.cards.splice(this.cards.indexOf(card), 1);
                };
                FuxaViewComponent.prototype.onCloseDialog = function () {
                    delete this.dialog;
                };
                FuxaViewComponent.prototype.onClose = function ($event) {
                    if (this.onclose) {
                        this.onclose.emit($event);
                    }
                    // if (this.dialog && this.dialog.view && this.dialog.view.name === viewref) {
                    // 	this.onCloseDialog();
                    // } else if (this.cards.find((c) => c.name === viewref)) {
                    // 	this.onCloseCard(this.cards.find((c) => c.name === viewref));
                    // }
                };
                FuxaViewComponent.prototype.onSetValue = function (ga, event) {
                    if (event.actparam) {
                        var variableId = this.fetchVariableId(event) || ga.property.variableId;
                        this.gaugesManager.putSignalValue(variableId, event.actparam);
                    }
                };
                FuxaViewComponent.prototype.onSetInput = function (ga, event) {
                    if (event.actparam) {
                        var ele = document.getElementById(event.actparam);
                        if (ele) {
                            var input = null;
                            for (var i = 0; i < _gauges_gauges_component__WEBPACK_IMPORTED_MODULE_2__["GaugesManager"].GaugeWithInput.length; i++) {
                                input = _helpers_utils__WEBPACK_IMPORTED_MODULE_4__["Utils"].searchTreeStartWith(ele, _gauges_gauges_component__WEBPACK_IMPORTED_MODULE_2__["GaugesManager"].GaugeWithInput[i]);
                                if (input) {
                                    break;
                                }
                            }
                            if (input && !isNaN(input.value)) {
                                var variableId = this.fetchVariableId(event) || ga.property.variableId;
                                this.gaugesManager.putSignalValue(variableId, input.value);
                            }
                        }
                    }
                };
                FuxaViewComponent.prototype.getCardHeight = function (height) {
                    return parseInt(height) + 4;
                };
                FuxaViewComponent.prototype.fetchVariableId = function (event) {
                    if (!event.actoptions) {
                        return null;
                    }
                    if (_helpers_utils__WEBPACK_IMPORTED_MODULE_4__["Utils"].isObject(event.actoptions['variable']) && event.actoptions['variable']['variableId']) {
                        return event.actoptions['variable']['variableId'];
                    }
                    // For legacy events
                    if (event.actoptions['variableId']) {
                        return event.actoptions['variableId'];
                    }
                    return null;
                };
                FuxaViewComponent.prototype.toggleShowInputDialog = function (show, x, y, htmlev) {
                    var _this = this;
                    if (x === void 0) { x = -1; }
                    if (y === void 0) { y = -1; }
                    if (htmlev === void 0) { htmlev = null; }
                    if (show) {
                        this.inputDialog.show = true;
                        if (x >= 0 && y >= 0) {
                            this.inputDialog.target = htmlev;
                            this.inputDialog.x = x;
                            this.inputDialog.y = y;
                        }
                        clearTimeout(this.inputDialog.timer);
                    }
                    else {
                        this.inputDialog.timer = setTimeout(function () {
                            _this.inputDialog.show = false;
                        }, 300);
                    }
                };
                FuxaViewComponent.prototype.onNoClick = function () {
                };
                FuxaViewComponent.prototype.onOkClick = function (evintput) {
                    if (this.inputDialog.target.dom) {
                        this.inputDialog.target.dom.value = evintput;
                        this.inputDialog.target.dbg = 'key pressed ' + this.inputDialog.target.dom.id + ' ' + this.inputDialog.target.dom.value;
                        this.inputDialog.target.id = this.inputDialog.target.dom.id;
                        this.inputDialog.target.value = this.inputDialog.target.dom.value;
                        this.gaugesManager.putEvent(this.inputDialog.target);
                    }
                };
                var FuxaViewComponent_1;
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", String)
                ], FuxaViewComponent.prototype, "id", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Object)
                ], FuxaViewComponent.prototype, "variablesMapping", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", _models_hmi__WEBPACK_IMPORTED_MODULE_1__["View"])
                ], FuxaViewComponent.prototype, "view", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", _models_hmi__WEBPACK_IMPORTED_MODULE_1__["Hmi"])
                ], FuxaViewComponent.prototype, "hmi", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Boolean)
                ], FuxaViewComponent.prototype, "child", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", _gauges_gauges_component__WEBPACK_IMPORTED_MODULE_2__["GaugesManager"])
                ], FuxaViewComponent.prototype, "gaugesManager", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Array)
                ], FuxaViewComponent.prototype, "parentcards", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
                    __metadata("design:type", Object)
                ], FuxaViewComponent.prototype, "onclose", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('dataContainer'),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"])
                ], FuxaViewComponent.prototype, "dataContainer", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('inputDialogRef'),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"])
                ], FuxaViewComponent.prototype, "inputDialogRef", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('inputValueRef'),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"])
                ], FuxaViewComponent.prototype, "inputValueRef", void 0);
                FuxaViewComponent = FuxaViewComponent_1 = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'app-fuxa-view',
                        template: __webpack_require__(/*! ./fuxa-view.component.html */ "./app/fuxa-view/fuxa-view.component.html"),
                        styles: [__webpack_require__(/*! ./fuxa-view.component.css */ "./app/fuxa-view/fuxa-view.component.css")]
                    }),
                    __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"],
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"],
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"],
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ComponentFactoryResolver"]])
                ], FuxaViewComponent);
                return FuxaViewComponent;
            }());

            var CardModel = /** @class */ (function () {
                function CardModel(id) {
                    this.variablesMapping = [];
                    this.id = id;
                }
                return CardModel;
            }());

            var DialogModalModel = /** @class */ (function () {
                function DialogModalModel(id) {
                    this.variablesMapping = [];
                    this.id = id;
                }
                return DialogModalModel;
            }());



            /***/
}),

/***/ "./app/gauges/controls/gauge-progress/gauge-progress.component.css":
/*!*************************************************************************!*\
  !*** ./app/gauges/controls/gauge-progress/gauge-progress.component.css ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dhdWdlcy9jb250cm9scy9nYXVnZS1wcm9ncmVzcy9nYXVnZS1wcm9ncmVzcy5jb21wb25lbnQuY3NzIn0= */"

            /***/
}),

/***/ "./app/gauges/controls/gauge-progress/gauge-progress.component.html":
/*!**************************************************************************!*\
  !*** ./app/gauges/controls/gauge-progress/gauge-progress.component.html ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ""

            /***/
}),

/***/ "./app/gauges/controls/gauge-progress/gauge-progress.component.ts":
/*!************************************************************************!*\
  !*** ./app/gauges/controls/gauge-progress/gauge-progress.component.ts ***!
  \************************************************************************/
/*! exports provided: GaugeProgressComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GaugeProgressComponent", function () { return GaugeProgressComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _gauge_base_gauge_base_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../gauge-base/gauge-base.component */ "./app/gauges/gauge-base/gauge-base.component.ts");
/* harmony import */ var _models_hmi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../_models/hmi */ "./app/_models/hmi.ts");
/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../_helpers/utils */ "./app/_helpers/utils.ts");
/* harmony import */ var _gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../gauge-property/gauge-property.component */ "./app/gauges/gauge-property/gauge-property.component.ts");
            var __extends = (undefined && undefined.__extends) || (function () {
                var extendStatics = function (d, b) {
                    extendStatics = Object.setPrototypeOf ||
                        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
                    return extendStatics(d, b);
                };
                return function (d, b) {
                    extendStatics(d, b);
                    function __() { this.constructor = d; }
                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
                };
            })();
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };





            var GaugeProgressComponent = /** @class */ (function (_super) {
                __extends(GaugeProgressComponent, _super);
                function GaugeProgressComponent() {
                    return _super.call(this) || this;
                }
                GaugeProgressComponent.prototype.ngOnInit = function () {
                };
                GaugeProgressComponent.getSignals = function (pro) {
                    var res = [];
                    if (pro.variableId) {
                        res.push(pro.variableId);
                    }
                    return res;
                };
                GaugeProgressComponent.getDialogType = function () {
                    return _gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_4__["GaugeDialogType"].MinMax;
                };
                GaugeProgressComponent.processValue = function (ga, svgele, sig, gaugeStatus) {
                    try {
                        if (svgele.node && svgele.node.children && svgele.node.children.length === 3 && ga.property && ga.property.ranges.length > 0) {
                            var gap = ga.property.ranges[0];
                            var g = svgele.node.children[0];
                            var val = parseFloat(sig.value);
                            var rectBase = _helpers_utils__WEBPACK_IMPORTED_MODULE_3__["Utils"].searchTreeStartWith(svgele.node, this.prefixA);
                            var heightBase = parseFloat(rectBase.getAttribute('height'));
                            var yBase = parseFloat(rectBase.getAttribute('y'));
                            var rect = _helpers_utils__WEBPACK_IMPORTED_MODULE_3__["Utils"].searchTreeStartWith(svgele.node, this.prefixB);
                            if (rectBase && rect) {
                                if (val > gap.max)
                                    val = gap.max;
                                if (val < gap.min)
                                    val = gap.min;
                                var k = (heightBase - 0) / (gap.max - gap.min);
                                var vtoy = k * (val - gap.min);
                                rect.setAttribute('y', yBase + heightBase - vtoy);
                                rect.setAttribute('height', vtoy);
                                if (gap.style[1]) {
                                    var htmlValue = _helpers_utils__WEBPACK_IMPORTED_MODULE_3__["Utils"].searchTreeStartWith(svgele.node, this.prefixValue);
                                    if (htmlValue) {
                                        htmlValue.innerHTML = val;
                                        if (gap.text) {
                                            htmlValue.innerHTML += ' ' + gap.text;
                                        }
                                        htmlValue.style.top = (heightBase - vtoy - 7).toString() + 'px';
                                    }
                                }
                            }
                        }
                    }
                    catch (err) {
                        console.error(err);
                    }
                };
                GaugeProgressComponent.initElement = function (ga, isview) {
                    if (isview === void 0) { isview = false; }
                    var ele = document.getElementById(ga.id);
                    if (ele) {
                        if (!ga.property) {
                            ga.property = new _models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeProperty"]();
                            var ip = new _models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeRangeProperty"]();
                            ip.type = this.getDialogType();
                            ip.min = 0;
                            ip.max = 100;
                            ip.style = [true, true];
                            ip.color = '#1565c0';
                            ga.property.ranges = [ip];
                        }
                        if (ga.property.ranges.length > 0) {
                            var gap = ga.property.ranges[0];
                            // label min
                            var htmlLabel = _helpers_utils__WEBPACK_IMPORTED_MODULE_3__["Utils"].searchTreeStartWith(ele, this.prefixMin);
                            if (htmlLabel) {
                                htmlLabel.innerHTML = gap.min.toString();
                                htmlLabel.style.display = (gap.style[0]) ? 'block' : 'none';
                            }
                            // label max
                            htmlLabel = _helpers_utils__WEBPACK_IMPORTED_MODULE_3__["Utils"].searchTreeStartWith(ele, this.prefixMax);
                            if (htmlLabel) {
                                htmlLabel.innerHTML = gap.max.toString();
                                htmlLabel.style.display = (gap.style[0]) ? 'block' : 'none';
                            }
                            // value
                            var htmlValue = _helpers_utils__WEBPACK_IMPORTED_MODULE_3__["Utils"].searchTreeStartWith(ele, this.prefixValue);
                            if (htmlValue) {
                                htmlValue.style.display = (gap.style[1]) ? 'block' : 'none';
                            }
                            // bar color
                            var rect = _helpers_utils__WEBPACK_IMPORTED_MODULE_3__["Utils"].searchTreeStartWith(ele, this.prefixB);
                            if (rect) {
                                rect.setAttribute('fill', gap.color);
                            }
                        }
                    }
                };
                GaugeProgressComponent.initElementColor = function (bkcolor, color, ele) {
                    var rectArea = _helpers_utils__WEBPACK_IMPORTED_MODULE_3__["Utils"].searchTreeStartWith(ele, this.prefixA);
                    if (rectArea) {
                        if (bkcolor) {
                            rectArea.setAttribute('fill', bkcolor);
                        }
                        if (color) {
                            rectArea.setAttribute('stroke', color);
                        }
                    }
                    rectArea = _helpers_utils__WEBPACK_IMPORTED_MODULE_3__["Utils"].searchTreeStartWith(ele, this.prefixB);
                    if (rectArea) {
                        if (color) {
                            rectArea.setAttribute('stroke', color);
                        }
                    }
                };
                GaugeProgressComponent.getFillColor = function (ele) {
                    var rectArea = _helpers_utils__WEBPACK_IMPORTED_MODULE_3__["Utils"].searchTreeStartWith(ele, this.prefixA);
                    if (rectArea) {
                        return rectArea.getAttribute('fill');
                    }
                };
                GaugeProgressComponent.getStrokeColor = function (ele) {
                    var rectArea = _helpers_utils__WEBPACK_IMPORTED_MODULE_3__["Utils"].searchTreeStartWith(ele, this.prefixA);
                    if (rectArea) {
                        return rectArea.getAttribute('stroke');
                    }
                };
                GaugeProgressComponent.getDefaultValue = function () {
                    return { color: this.barColor };
                };
                GaugeProgressComponent.TypeTag = 'svg-ext-gauge_progress';
                GaugeProgressComponent.LabelTag = 'HtmlProgress';
                GaugeProgressComponent.prefixA = 'A-GXP_';
                GaugeProgressComponent.prefixB = 'B-GXP_';
                GaugeProgressComponent.prefixH = 'H-GXP_';
                GaugeProgressComponent.prefixMax = 'M-GXP_';
                GaugeProgressComponent.prefixMin = 'm-GXP_';
                GaugeProgressComponent.prefixValue = 'V-GXP_';
                GaugeProgressComponent.barColor = '#1565c0';
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Object)
                ], GaugeProgressComponent.prototype, "data", void 0);
                GaugeProgressComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'gauge-progress',
                        template: __webpack_require__(/*! ./gauge-progress.component.html */ "./app/gauges/controls/gauge-progress/gauge-progress.component.html"),
                        styles: [__webpack_require__(/*! ./gauge-progress.component.css */ "./app/gauges/controls/gauge-progress/gauge-progress.component.css")]
                    }),
                    __metadata("design:paramtypes", [])
                ], GaugeProgressComponent);
                return GaugeProgressComponent;
            }(_gauge_base_gauge_base_component__WEBPACK_IMPORTED_MODULE_1__["GaugeBaseComponent"]));



            /***/
}),

/***/ "./app/gauges/controls/gauge-semaphore/gauge-semaphore.component.css":
/*!***************************************************************************!*\
  !*** ./app/gauges/controls/gauge-semaphore/gauge-semaphore.component.css ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dhdWdlcy9jb250cm9scy9nYXVnZS1zZW1hcGhvcmUvZ2F1Z2Utc2VtYXBob3JlLmNvbXBvbmVudC5jc3MifQ== */"

            /***/
}),

/***/ "./app/gauges/controls/gauge-semaphore/gauge-semaphore.component.html":
/*!****************************************************************************!*\
  !*** ./app/gauges/controls/gauge-semaphore/gauge-semaphore.component.html ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ""

            /***/
}),

/***/ "./app/gauges/controls/gauge-semaphore/gauge-semaphore.component.ts":
/*!**************************************************************************!*\
  !*** ./app/gauges/controls/gauge-semaphore/gauge-semaphore.component.ts ***!
  \**************************************************************************/
/*! exports provided: GaugeSemaphoreComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GaugeSemaphoreComponent", function () { return GaugeSemaphoreComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _gauge_base_gauge_base_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../gauge-base/gauge-base.component */ "./app/gauges/gauge-base/gauge-base.component.ts");
/* harmony import */ var _models_hmi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../_models/hmi */ "./app/_models/hmi.ts");
/* harmony import */ var _gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../gauge-property/gauge-property.component */ "./app/gauges/gauge-property/gauge-property.component.ts");
            var __extends = (undefined && undefined.__extends) || (function () {
                var extendStatics = function (d, b) {
                    extendStatics = Object.setPrototypeOf ||
                        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
                    return extendStatics(d, b);
                };
                return function (d, b) {
                    extendStatics(d, b);
                    function __() { this.constructor = d; }
                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
                };
            })();
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };




            var GaugeSemaphoreComponent = /** @class */ (function (_super) {
                __extends(GaugeSemaphoreComponent, _super);
                function GaugeSemaphoreComponent() {
                    return _super.call(this) || this;
                }
                GaugeSemaphoreComponent_1 = GaugeSemaphoreComponent;
                GaugeSemaphoreComponent.prototype.ngOnInit = function () {
                };
                GaugeSemaphoreComponent.getSignals = function (pro) {
                    var res = [];
                    if (pro.variableId) {
                        res.push(pro.variableId);
                    }
                    if (pro.actions && pro.actions.length) {
                        pro.actions.forEach(function (act) {
                            res.push(act.variableId);
                        });
                    }
                    return res;
                };
                GaugeSemaphoreComponent.getDialogType = function () {
                    return _gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_3__["GaugeDialogType"].Range;
                };
                GaugeSemaphoreComponent.getActions = function () {
                    return this.actionsType;
                };
                GaugeSemaphoreComponent.processValue = function (ga, svgele, sig, gaugeStatus) {
                    try {
                        if (svgele.node && svgele.node.children && svgele.node.children.length <= 1) {
                            var g = svgele.node.children[0];
                            var clr = '';
                            var val_1 = parseFloat(sig.value);
                            if (Number.isNaN(val_1)) {
                                // maybe boolean
                                val_1 = Number(sig.value);
                            }
                            if (ga.property && ga.property.ranges) {
                                for (var idx = 0; idx < ga.property.ranges.length; idx++) {
                                    if (ga.property.ranges[idx].min <= val_1 && ga.property.ranges[idx].max >= val_1) {
                                        clr = ga.property.ranges[idx].color;
                                    }
                                }
                                g.setAttribute('fill', clr);
                                // check actions
                                if (ga.property.actions) {
                                    ga.property.actions.forEach(function (act) {
                                        if (act.variableId === sig.id) {
                                            GaugeSemaphoreComponent_1.processAction(act, svgele, val_1, gaugeStatus);
                                        }
                                    });
                                }
                            }
                        }
                    }
                    catch (err) {
                        console.error(err);
                    }
                };
                GaugeSemaphoreComponent.getFillColor = function (ele) {
                    if (ele.children && ele.children[0]) {
                        return ele.children[0].getAttribute('fill');
                    }
                    return ele.getAttribute('fill');
                };
                GaugeSemaphoreComponent.getStrokeColor = function (ele) {
                    if (ele.children && ele.children[0]) {
                        return ele.children[0].getAttribute('stroke');
                    }
                    return ele.getAttribute('stroke');
                };
                GaugeSemaphoreComponent.processAction = function (act, svgele, value, gaugeStatus) {
                    if (this.actionsType[act.type] === this.actionsType.hide) {
                        if (act.range.min <= value && act.range.max >= value) {
                            var element = SVG.adopt(svgele.node);
                            this.runActionHide(element, act.type, gaugeStatus);
                        }
                    }
                    else if (this.actionsType[act.type] === this.actionsType.show) {
                        if (act.range.min <= value && act.range.max >= value) {
                            var element = SVG.adopt(svgele.node);
                            this.runActionShow(element, act.type, gaugeStatus);
                        }
                    }
                    else if (this.actionsType[act.type] === this.actionsType.blink) {
                        var element = SVG.adopt(svgele.node);
                        var inRange = (act.range.min <= value && act.range.max >= value);
                        this.checkActionBlink(element, act.type, gaugeStatus, inRange, act.options, false);
                    }
                };
                var GaugeSemaphoreComponent_1;
                GaugeSemaphoreComponent.TypeTag = 'svg-ext-gauge_semaphore';
                GaugeSemaphoreComponent.LabelTag = 'HtmlSemaphore';
                GaugeSemaphoreComponent.actionsType = { hide: _models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeActionsType"].hide, show: _models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeActionsType"].show, blink: _models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeActionsType"].blink };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Object)
                ], GaugeSemaphoreComponent.prototype, "data", void 0);
                GaugeSemaphoreComponent = GaugeSemaphoreComponent_1 = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'gauge-semaphore',
                        template: __webpack_require__(/*! ./gauge-semaphore.component.html */ "./app/gauges/controls/gauge-semaphore/gauge-semaphore.component.html"),
                        styles: [__webpack_require__(/*! ./gauge-semaphore.component.css */ "./app/gauges/controls/gauge-semaphore/gauge-semaphore.component.css")]
                    }),
                    __metadata("design:paramtypes", [])
                ], GaugeSemaphoreComponent);
                return GaugeSemaphoreComponent;
            }(_gauge_base_gauge_base_component__WEBPACK_IMPORTED_MODULE_1__["GaugeBaseComponent"]));



            /***/
}),

/***/ "./app/gauges/controls/html-bag/bag-property/bag-property.component.css":
/*!******************************************************************************!*\
  !*** ./app/gauges/controls/html-bag/bag-property/bag-property.component.css ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "\n.slider {\n    display:inline-block; \n    width: 100px;\n}\n\n.gauge {\n    display: inline-block;\n    position: absolute;\n    top: 0px;\n    width: 360px;\n    height: 350px;\n    margin: 0 auto;\n    padding-top: 30px;\n    padding-left: 70px;\n}\n\n.gauge-select {\n    width: 280px; \n    text-align: center;\n}\n\n.gauge-view {\n    border: 1px solid var(--formSeparatorColor);\n    width: 280px; \n    height: 220px;\n    margin-top: -5px;\n    padding-top: 30px;\n}\n\n.btn-gauge {\n    z-index: 99;\n    display: inline-block;\n    width: 50px;\n    height:38px;\n    border: 1px solid var(--formSeparatorColor);\n}\n\n.btn-gauge-mat {\n    background: url('/assets/images/gauge-mat.png') no-repeat center center;\n    background-size: 45px 30px;\n}\n\n.btn-gauge-donut {\n    background: url('/assets/images/gauge-donut.png') no-repeat center center;\n    background-size: 52px 28px;\n}\n\n.btn-gauge-zone {\n    background: url('/assets/images/gauge-zone.png') no-repeat center center;\n    background-size: 45px 30px;\n}\n\n.toolbox {\n    position: absolute;\n    width: 100%;\n    height: 310px;\n}\n\n.toolbox-left {\n    display: inline-block;\n    width: 460px;\n    padding-top: 20px;\n}\n\n.toolbox-right {\n    width: 300px;\n    position: absolute;\n    top: 0px;\n    right: 0px;\n    height: 270px;\n}\n\n.toolbox-det {\n    display: inline-block;\n    width: 312px;\n    height: 300px;\n    position: absolute;\n    top: 15px;\n    right: 0px;\n}\n\n.slider-field span {\n    padding-left: 2px;\n    text-overflow: clip;\n    max-width: 125px;\n    white-space: nowrap;\n    overflow: hidden;\n}\n\n.slider-field mat-slider {\n    background-color: var(--formSliderBackground);\n    height: 30px;\n}\n\n.field-row {\n    display: block;\n    margin-bottom: 5px;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZ2F1Z2VzL2NvbnRyb2xzL2h0bWwtYmFnL2JhZy1wcm9wZXJ0eS9iYWctcHJvcGVydHkuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7SUFDSSxvQkFBb0I7SUFDcEIsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHFCQUFxQjtJQUNyQixrQkFBa0I7SUFDbEIsUUFBUTtJQUNSLFlBQVk7SUFDWixhQUFhO0lBQ2IsY0FBYztJQUNkLGlCQUFpQjtJQUNqQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksMkNBQTJDO0lBQzNDLFlBQVk7SUFDWixhQUFhO0lBQ2IsZ0JBQWdCO0lBQ2hCLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLFdBQVc7SUFDWCxxQkFBcUI7SUFDckIsV0FBVztJQUNYLFdBQVc7SUFDWCwyQ0FBMkM7QUFDL0M7O0FBRUE7SUFDSSx1RUFBdUU7SUFDdkUsMEJBQTBCO0FBQzlCOztBQUVBO0lBQ0kseUVBQXlFO0lBQ3pFLDBCQUEwQjtBQUM5Qjs7QUFFQTtJQUNJLHdFQUF3RTtJQUN4RSwwQkFBMEI7QUFDOUI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsV0FBVztJQUNYLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxxQkFBcUI7SUFDckIsWUFBWTtJQUNaLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsUUFBUTtJQUNSLFVBQVU7SUFDVixhQUFhO0FBQ2pCOztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLFlBQVk7SUFDWixhQUFhO0lBQ2Isa0JBQWtCO0lBQ2xCLFNBQVM7SUFDVCxVQUFVO0FBQ2Q7O0FBRUE7SUFDSSxpQkFBaUI7SUFDakIsbUJBQW1CO0lBQ25CLGdCQUFnQjtJQUNoQixtQkFBbUI7SUFDbkIsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksNkNBQTZDO0lBQzdDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2Qsa0JBQWtCO0FBQ3RCIiwiZmlsZSI6InNyYy9hcHAvZ2F1Z2VzL2NvbnRyb2xzL2h0bWwtYmFnL2JhZy1wcm9wZXJ0eS9iYWctcHJvcGVydHkuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLnNsaWRlciB7XG4gICAgZGlzcGxheTppbmxpbmUtYmxvY2s7IFxuICAgIHdpZHRoOiAxMDBweDtcbn1cblxuLmdhdWdlIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMHB4O1xuICAgIHdpZHRoOiAzNjBweDtcbiAgICBoZWlnaHQ6IDM1MHB4O1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIHBhZGRpbmctdG9wOiAzMHB4O1xuICAgIHBhZGRpbmctbGVmdDogNzBweDtcbn1cblxuLmdhdWdlLXNlbGVjdCB7XG4gICAgd2lkdGg6IDI4MHB4OyBcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5nYXVnZS12aWV3IHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1mb3JtU2VwYXJhdG9yQ29sb3IpO1xuICAgIHdpZHRoOiAyODBweDsgXG4gICAgaGVpZ2h0OiAyMjBweDtcbiAgICBtYXJnaW4tdG9wOiAtNXB4O1xuICAgIHBhZGRpbmctdG9wOiAzMHB4O1xufVxuXG4uYnRuLWdhdWdlIHtcbiAgICB6LWluZGV4OiA5OTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgd2lkdGg6IDUwcHg7XG4gICAgaGVpZ2h0OjM4cHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tZm9ybVNlcGFyYXRvckNvbG9yKTtcbn1cblxuLmJ0bi1nYXVnZS1tYXQge1xuICAgIGJhY2tncm91bmQ6IHVybCgnL2Fzc2V0cy9pbWFnZXMvZ2F1Z2UtbWF0LnBuZycpIG5vLXJlcGVhdCBjZW50ZXIgY2VudGVyO1xuICAgIGJhY2tncm91bmQtc2l6ZTogNDVweCAzMHB4O1xufVxuXG4uYnRuLWdhdWdlLWRvbnV0IHtcbiAgICBiYWNrZ3JvdW5kOiB1cmwoJy9hc3NldHMvaW1hZ2VzL2dhdWdlLWRvbnV0LnBuZycpIG5vLXJlcGVhdCBjZW50ZXIgY2VudGVyO1xuICAgIGJhY2tncm91bmQtc2l6ZTogNTJweCAyOHB4O1xufSBcblxuLmJ0bi1nYXVnZS16b25lIHtcbiAgICBiYWNrZ3JvdW5kOiB1cmwoJy9hc3NldHMvaW1hZ2VzL2dhdWdlLXpvbmUucG5nJykgbm8tcmVwZWF0IGNlbnRlciBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1zaXplOiA0NXB4IDMwcHg7XG59XG5cbi50b29sYm94IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAzMTBweDtcbn1cblxuLnRvb2xib3gtbGVmdCB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHdpZHRoOiA0NjBweDtcbiAgICBwYWRkaW5nLXRvcDogMjBweDtcbn1cblxuLnRvb2xib3gtcmlnaHQge1xuICAgIHdpZHRoOiAzMDBweDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwcHg7XG4gICAgcmlnaHQ6IDBweDtcbiAgICBoZWlnaHQ6IDI3MHB4O1xufVxuXG4udG9vbGJveC1kZXQge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB3aWR0aDogMzEycHg7XG4gICAgaGVpZ2h0OiAzMDBweDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAxNXB4O1xuICAgIHJpZ2h0OiAwcHg7XG59XG5cbi5zbGlkZXItZmllbGQgc3BhbiB7XG4gICAgcGFkZGluZy1sZWZ0OiAycHg7XG4gICAgdGV4dC1vdmVyZmxvdzogY2xpcDtcbiAgICBtYXgtd2lkdGg6IDEyNXB4O1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLnNsaWRlci1maWVsZCBtYXQtc2xpZGVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1mb3JtU2xpZGVyQmFja2dyb3VuZCk7XG4gICAgaGVpZ2h0OiAzMHB4O1xufVxuXG4uZmllbGQtcm93IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW4tYm90dG9tOiA1cHg7XG59XG4iXX0= */"

            /***/
}),

/***/ "./app/gauges/controls/html-bag/bag-property/bag-property.component.html":
/*!*******************************************************************************!*\
  !*** ./app/gauges/controls/html-bag/bag-property/bag-property.component.html ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div style=\"width: 750px;height: 810px; position: relative\" class=\"dialog-mdsd-v\">\n    <h1 mat-dialog-title style=\"display:inline-block;cursor:move;\" mat-dialog-draggable>{{'editor.controls-bag-settings' | translate}}</h1>\n    <mat-icon (click)=\"onNoClick()\" style=\"float:right;margin-right:-10px;margin-top:-10px;cursor:pointer;color:gray;\">clear</mat-icon>\n    <div style=\"display: block; width: 660px\">\n        <div style=\"display: block;\">\n            <div class=\"my-form-field\">\n                <span>{{'gauges.property-name' | translate}}</span>\n                <input [(ngModel)]=\"data.settings.name\" style=\"width: 220px\" type=\"text\">\n            </div>\n            <div class=\"my-form-field\" style=\"vertical-align: bottom; margin-left: 13px;\">\n                <span>{{'gauges.property-permission' | translate}}</span>\n                <div style=\"text-align:center;cursor:pointer;\" class=\"my-form-field-permission\" (click)=\"onEditPermission()\">\n                    <mat-icon class=\"header-icon\" style=\"line-height: 30px;\" *ngIf=\"!property || !property.permission\">lock_open</mat-icon>\n                    <mat-icon class=\"header-icon\" style=\"line-height: 30px;\" *ngIf=\"property && property.permission\">lock</mat-icon>\n                </div>\n            </div>\n        </div>\n        <div mat-dialog-content style=\"overflow: hidden; width:100%\">\n            <flex-head [data]=\"data\" [property]=\"property\" #flexhead></flex-head>\n        </div>\n    </div>\n    <div style=\"width: 750px; height: 660px; position: relative\">\n        <div style=\"display: block; height: 360px;\">\n            <div class=\"gauge\">\n                <div class=\"gauge-select\">\n                    <div (click)=\"onGaugeChange(gaugeTypeEnum.Gauge)\" class=\"btn-gauge btn-gauge-mat\"\n                        [ngStyle]=\"{'background-color': gaugeType === gaugeTypeEnum.Gauge ? 'transparent' : 'rgba(0,0,0,0.1)'}\"></div>\n                    <div (click)=\"onGaugeChange(gaugeTypeEnum.Donut)\" class=\"btn-gauge btn-gauge-donut\"\n                        [ngStyle]=\"{'background-color': gaugeType === gaugeTypeEnum.Donut ? 'transparent' : 'rgba(0,0,0,0.1)'}\"></div>\n                    <div (click)=\"onGaugeChange(gaugeTypeEnum.Zones)\" class=\"btn-gauge btn-gauge-zone\"\n                        [ngStyle]=\"{'background-color': gaugeType === gaugeTypeEnum.Zones ? 'transparent' : 'rgba(0,0,0,0.1)'}\"></div>\n                </div>\n                <div class=\"gauge-view\">\n                    <ngx-gauge [options]=\"options\" #ngauge [value]=\"gauge.value\"></ngx-gauge>\n                </div>\n            </div>\n            <div class=\"toolbox-det\" *ngIf=\"gaugeType!=gaugeTypeEnum.Donut\">\n                <div class=\"field-row\">\n                    <div class=\"my-form-field\" style=\"padding-left: 12px\">\n                        <span>{{'bag.property-ticks' | translate}}</span>\n                        <mat-slide-toggle color=\"primary\" [(ngModel)]=\"optcfg.ticksEnabled\" (change)=\"onChangeTicks($event.checked)\"></mat-slide-toggle>\n                    </div>\n                </div>\n                <div class=\"field-row\">\n                    <div class=\"my-form-field slider-field\" style=\"padding-left: 12px\">\n                        <span>{{'bag.property-divisions' | translate}}</span>\n                        <mat-slider [disabled]=\"!optcfg.ticksEnabled\" style=\"display:inline-block;\" [max]=\"20\" [min]=\"0\" [step]=\"1\" [thumbLabel]=\"true\"\n                            [(ngModel)]=\"optcfg.renderTicks.divisions\" (input)=\"onChangeOptionsTicks('divisions', $event.value)\">\n                        </mat-slider>\n                    </div>\n                    <div class=\"my-form-field slider-field\" style=\"padding-left: 12px\">\n                        <span>{{'bag.property-subdivisions' | translate}}</span>\n                        <mat-slider [disabled]=\"!optcfg.ticksEnabled\" style=\"display:inline-block;\" [max]=\"20\" [min]=\"0\" [step]=\"1\" [thumbLabel]=\"true\"\n                            [(ngModel)]=\"optcfg.renderTicks.subDivisions\" (input)=\"onChangeOptionsTicks('subDivisions', $event.value)\">\n                        </mat-slider>\n                    </div>\n                </div>\n                <div class=\"field-row\">\n                    <div class=\"my-form-field slider-field\" style=\"padding-left: 12px\">\n                        <span>{{'bag.property-divisions-length' | translate}}</span>\n                        <mat-slider [disabled]=\"!optcfg.ticksEnabled\" style=\"display:inline-block;\" [max]=\"100\" [min]=\"0\" [step]=\"1\" [thumbLabel]=\"true\"\n                            [(ngModel)]=\"optcfg.renderTicks.divLength\" (input)=\"onChangeOptionsTicks('divLength', $event.value)\">\n                        </mat-slider>\n                    </div>\n                    <div class=\"my-form-field slider-field\" style=\"padding-left: 12px\">\n                        <span>{{'bag.property-subdivisions-length' | translate}}</span>\n                        <mat-slider [disabled]=\"!optcfg.ticksEnabled\" style=\"display:inline-block;\" [max]=\"100\" [min]=\"0\" [step]=\"1\" [thumbLabel]=\"true\"\n                            [(ngModel)]=\"optcfg.renderTicks.subLength\" (input)=\"onChangeOptionsTicks('subLength', $event.value)\">\n                        </mat-slider>\n                    </div>\n                </div>\n                <div class=\"field-row\">\n                    <div class=\"my-form-field slider-field\" style=\"padding-left: 12px\">\n                        <span>{{'bag.property-divisions-width' | translate}}</span>\n                        <mat-slider [disabled]=\"!optcfg.ticksEnabled\" style=\"display:inline-block;\" [max]=\"100\" [min]=\"0\" [step]=\"1\" [thumbLabel]=\"true\"\n                            [(ngModel)]=\"optcfg.renderTicks.divWidth\" (input)=\"onChangeOptionsTicks('divWidth', $event.value)\">\n                        </mat-slider>\n                    </div>\n                    <div class=\"my-form-field slider-field\" style=\"padding-left: 12px\">\n                        <span>{{'bag.property-subdivisions-width' | translate}}</span>\n                        <mat-slider [disabled]=\"!optcfg.ticksEnabled\" style=\"display:inline-block;\" [max]=\"100\" [min]=\"0\" [step]=\"1\" [thumbLabel]=\"true\"\n                            [(ngModel)]=\"optcfg.renderTicks.subWidth\" (input)=\"onChangeOptionsTicks('subWidth', $event.value)\">\n                        </mat-slider>\n                    </div>\n                </div>\n                <div class=\"field-row\">\n                    <div class=\"my-form-field slider-field color-field\" style=\"padding-left: 12px\">\n                        <span>{{'bag.property-divisions-color' | translate}}</span>\n                        <input [disabled]=\"!optcfg.ticksEnabled\" [(colorPicker)]=\"optcfg.renderTicks.divColor\" [cpAlphaChannel]=\"'always'\" class=\"input-color\"\n                            [style.background]=\"optcfg.renderTicks.divColor\" [cpPresetColors]=\"defaultColor\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\"\n                            [cpCancelButtonClass]=\"'cpCancelButtonClass'\" [cpCancelButtonText]=\"'Cancel'\" [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\"\n                            style=\"width: 121px\" [cpPosition]=\"'left'\" (colorPickerChange)=\"onChangeOptionsTicks('divColor', $event)\" />\n                    </div>\n                    <div class=\"my-form-field slider-field color-field\" style=\"padding-left: 12px;\">\n                        <span>{{'bag.property-subdivisions-color' | translate}}</span>\n                        <input [disabled]=\"!optcfg.ticksEnabled\" [(colorPicker)]=\"optcfg.renderTicks.subColor\" [cpAlphaChannel]=\"'always'\" class=\"input-color\"\n                            [style.background]=\"optcfg.renderTicks.subColor\" [cpPresetColors]=\"defaultColor\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\"\n                            [cpCancelButtonClass]=\"'cpCancelButtonClass'\" [cpCancelButtonText]=\"'Cancel'\" [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\"\n                            style=\"width: 121px\" [cpPosition]=\"'left'\" (colorPickerChange)=\"onChangeOptionsTicks('subColor', $event)\" />\n                    </div>\n                </div>\n                <div class=\"field-row\">\n                    <div class=\"my-form-field slider-field\" style=\"padding-left: 12px\">\n                        <span>{{'bag.property-divisionfont-size' | translate}}</span>\n                        <mat-slider [disabled]=\"!optcfg.ticksEnabled\" style=\"display:inline-block;\" [max]=\"100\" [min]=\"0\" [step]=\"1\" [thumbLabel]=\"true\"\n                            [(ngModel)]=\"optcfg.staticFontSize\" (input)=\"onChangeOptionsLabels('fontSize', $event.value)\">\n                        </mat-slider>\n                    </div>\n                    <div class=\"my-form-field slider-field color-field\" style=\"padding-left: 12px\">\n                        <span>{{'bag.property-divisionfont-color' | translate}}</span>\n                        <input [(colorPicker)]=\"optcfg.staticFontColor\" [cpDisabled]=\"!optcfg.ticksEnabled\" [cpAlphaChannel]=\"'always'\" class=\"input-color\"\n                            [style.background]=\"optcfg.staticFontColor\" [cpPresetColors]=\"defaultColor\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\"\n                            [cpCancelButtonClass]=\"'cpCancelButtonClass'\" [cpCancelButtonText]=\"'Cancel'\" [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\"\n                            style=\"width: 121px\" [cpPosition]=\"'left'\" (colorPickerChange)=\"onChangeOptionsLabels('labelsColor', $event)\" />\n                    </div>\n                </div>\n                <div class=\"field-row\">\n                    <div class=\"my-form-field slider-field\" style=\"padding-left: 12px\">\n                        <span style=\"max-width: 180px\">{{'bag.property-divisions-labels' | translate}}</span>\n                        <input [disabled]=\"!optcfg.ticksEnabled\" [(ngModel)]=\"optcfg.staticLabelsText\" (change)=\"onChangeOptionsLabels('labels', optcfg.staticLabelsText)\"\n                            style=\"width: 265px;\" type=\"text\">\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"toolbox\">\n            <div class=\"toolbox-left\">\n                <div class=\"field-row\">\n                    <div class=\"my-form-field slider-field\" style=\"padding-left: 12px\">\n                        <span>{{'bag.property-current-value' | translate}}</span>\n                        <mat-slider style=\"display:inline-block;\" [max]=\"optcfg.maxValue\" [min]=\"optcfg.minValue\" [step]=\"1\" [thumbLabel]=\"true\" [(ngModel)]=\"gauge.value\"\n                            (input)=\"onChangeValue($event.value)\">\n                        </mat-slider>\n                    </div>\n                    <div class=\"my-form-field slider-field\" style=\"padding-left: 12px\">\n                        <span>{{'bag.property-min' | translate}}</span>\n                        <input numberOnly [(ngModel)]=\"optcfg.minValue\" (change)=\"onChangeOptions('minValue', optcfg.minValue)\"\n                            style=\"width: 50px;text-align: center;display:inline-block;\" type=\"text\">\n                    </div>\n                    <div class=\"my-form-field slider-field\" style=\"padding-left: 14px\">\n                        <span>{{'bag.property-max' | translate}}</span>\n                        <input numberOnly [(ngModel)]=\"optcfg.maxValue\" (change)=\"onChangeOptions('maxValue', optcfg.maxValue)\"\n                            style=\"width: 50px;text-align: center;display:inline-block;\" type=\"text\">\n                    </div>\n                    <div class=\"my-form-field slider-field\" style=\"padding-left: 12px\">\n                        <span>{{'bag.property-bar-width' | translate}}</span>\n                        <mat-slider style=\"display:inline-block;\" [max]=\"70\" [min]=\"0\" [step]=\"1\" [thumbLabel]=\"true\" [(ngModel)]=\"optcfg.lineWidth\"\n                            (input)=\"onChangeOptions('lineWidth', $event.value)\">\n                        </mat-slider>\n                    </div>\n                </div>\n                <div class=\"field-row\">\n                    <div class=\"my-form-field slider-field\" style=\"padding-left: 12px\">\n                        <span>{{'bag.property-animation-speed' | translate}}</span>\n                        <mat-slider style=\"display:inline-block;\" [max]=\"128\" [min]=\"1\" [step]=\"1\" [thumbLabel]=\"true\" [(ngModel)]=\"optcfg.animationSpeed\"\n                            (input)=\"onChangeOptions('animationSpeed', $event.value)\">\n                        </mat-slider>\n                    </div>\n                    <div class=\"my-form-field slider-field\" style=\"padding-left: 12px\">\n                        <span>{{'bag.property-angle' | translate}}</span>\n                        <mat-slider style=\"display:inline-block;\" [max]=\"50\" [min]=\"-50\" [step]=\"1\" [thumbLabel]=\"true\" [(ngModel)]=\"optcfg.angle\"\n                            (input)=\"onChangeOptions('angle', $event.value)\">\n                        </mat-slider>\n                    </div>\n                    <div class=\"my-form-field slider-field\" style=\"padding-left: 12px\">\n                        <span>{{'bag.property-radius' | translate}}</span>\n                        <mat-slider style=\"display:inline-block;\" [max]=\"100\" [min]=\"50\" [step]=\"1\" [thumbLabel]=\"true\" [(ngModel)]=\"optcfg.radiusScale\"\n                            (input)=\"onChangeOptions('radiusScale', $event.value)\">\n                        </mat-slider>\n                    </div>\n                </div>\n                <div class=\"field-row\">\n                    <div class=\"my-form-field slider-field\" style=\"padding-left: 12px\">\n                        <span>{{'bag.property-font-size' | translate}}</span>\n                        <mat-slider style=\"display:inline-block;\" [max]=\"100\" [min]=\"0\" [step]=\"1\" [thumbLabel]=\"true\" [(ngModel)]=\"optcfg.fontSize\"\n                            (input)=\"onChangeOptions('fontSize', $event.value)\">\n                        </mat-slider>\n                    </div>\n                    <div class=\"my-form-field slider-field\" style=\"padding-left: 12px\">\n                        <span>{{'bag.property-textfield-position' | translate}}</span>\n                        <mat-slider style=\"display:inline-block;\" [max]=\"100\" [min]=\"0\" [step]=\"1\" [thumbLabel]=\"true\" [(ngModel)]=\"optcfg.textFilePosition\"\n                            (input)=\"onChangeOptions('textFilePosition', $event.value)\">\n                        </mat-slider>\n                    </div>\n                    <div class=\"my-form-field slider-field\" style=\"padding-left: 12px\">\n                        <span>{{'bag.property-format-digits' | translate}}</span>\n                        <mat-slider style=\"display:inline-block;\" [max]=\"5\" [min]=\"0\" [step]=\"1\" [thumbLabel]=\"true\" [(ngModel)]=\"optcfg.fractionDigits\"\n                            (input)=\"onChangeOptions('fractionDigits', $event.value)\">\n                        </mat-slider>\n                    </div>\n                </div>\n                <div class=\"field-row\">\n                    <div class=\"my-form-field slider-field\" style=\"padding-left: 12px\">\n                        <span>{{'bag.property-pointer-length' | translate}}</span>\n                        <mat-slider style=\"display:inline-block;\" [max]=\"100\" [min]=\"0\" [step]=\"1\" [thumbLabel]=\"true\" [(ngModel)]=\"optcfg.pointer.length\"\n                            (input)=\"onChangeOptionsPointer('pointerLength', $event.value)\">\n                        </mat-slider>\n                    </div>\n                    <div class=\"my-form-field slider-field\" style=\"padding-left: 12px\">\n                        <span>{{'bag.property-pointer-stroke' | translate}}</span>\n                        <mat-slider style=\"display:inline-block;\" [max]=\"300\" [min]=\"0\" [step]=\"1\" [thumbLabel]=\"true\" [(ngModel)]=\"optcfg.pointer.strokeWidth\"\n                            (input)=\"onChangeOptionsPointer('pointerStrokeWidth', $event.value)\">\n                        </mat-slider>\n                    </div>\n                    <div class=\"my-form-field slider-field color-field\" style=\"padding-left: 12px\">\n                        <span>{{'bag.property-pointer-color' | translate}}</span>\n                        <input [(colorPicker)]=\"optcfg.pointer.color\" [cpAlphaChannel]=\"'always'\" [style.background]=\"optcfg.pointer.color\" class=\"input-color\"\n                            [cpPresetColors]=\"defaultColor\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\" [cpCancelButtonClass]=\"'cpCancelButtonClass'\"\n                            [cpCancelButtonText]=\"'Cancel'\" [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\" style=\"width: 121px\"\n                            [cpPosition]=\"'top'\" (colorPickerChange)=\"onChangeOptionsPointer('color', $event)\" />\n                    </div>\n                </div>\n                <div class=\"field-row slider-field\">\n                    <div class=\"my-form-field color-field\" style=\"padding-left: 12px\">\n                        <span>{{'bag.property-color-start' | translate}}</span>\n                        <input [(colorPicker)]=\"optcfg.colorStart\" [style.background]=\"optcfg.colorStart\" [cpAlphaChannel]=\"'always'\" class=\"input-color\"\n                            [cpPresetColors]=\"defaultColor\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\" [cpCancelButtonClass]=\"'cpCancelButtonClass'\"\n                            [cpCancelButtonText]=\"'Cancel'\" [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\" style=\"width: 121px\"\n                            [cpPosition]=\"'top'\" (colorPickerChange)=\"onChangeOptions('colorStart', $event)\" />\n                    </div>\n                    <div class=\"my-form-field slider-field color-field\" style=\"padding-left: 12px\">\n                        <span>{{'bag.property-color-stop' | translate}}</span>\n                        <input [(colorPicker)]=\"optcfg.colorStop\" [style.background]=\"optcfg.colorStop\" [cpAlphaChannel]=\"'always'\" class=\"input-color\"\n                            [cpPresetColors]=\"defaultColor\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\" [cpCancelButtonClass]=\"'cpCancelButtonClass'\"\n                            [cpCancelButtonText]=\"'Cancel'\" [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\" style=\"width: 121px\"\n                            [cpPosition]=\"'top'\" (colorPickerChange)=\"onChangeOptions('colorStop', $event)\" />\n                    </div>\n                    <div class=\"my-form-field slider-field color-field\" style=\"padding-left: 12px\">\n                        <span>{{'bag.property-background' | translate}}</span>\n                        <input [(colorPicker)]=\"optcfg.strokeColor\" [style.background]=\"optcfg.strokeColor\" [cpAlphaChannel]=\"'always'\" class=\"input-color\"\n                            [cpPresetColors]=\"defaultColor\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\" [cpCancelButtonClass]=\"'cpCancelButtonClass'\"\n                            [cpCancelButtonText]=\"'Cancel'\" [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\" style=\"width: 121px\"\n                            [cpPosition]=\"'top'\" (colorPickerChange)=\"onChangeOptions('strokeColor', $event)\" />\n                    </div>\n                </div>\n                <div class=\"field-row slider-field\">\n                    <div class=\"my-form-field\" style=\"padding-left: 12px;width:160px\">\n                        <span>{{'bag.property-font' | translate}}</span>\n                        <mat-select [(value)]=\"options.fontFamily\" (selectionChange)=\"onChangeOptionsLabels('fontFamily',  $event.value)\">\n                            <mat-option *ngFor=\"let font of fonts\" [style.fontFamily]=\"font\" [value]=\"font\">\n                                {{font}}\n                            </mat-option>\n                        </mat-select>\n                    </div>\n                    <!-- <div class=\"my-form-field slider-field color-field\" style=\"padding-left: 12px\">\n                        <span>{{'bag.property-background' | translate}}</span>\n                        <input [(colorPicker)]=\"optcfg.backgroundColor\" [style.background]=\"optcfg.backgroundColor\" [cpAlphaChannel]=\"'always'\" class=\"input-color\" [cpPresetColors]=\"defaultColor\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\" [cpCancelButtonClass]=\"'cpCancelButtonClass'\" [cpCancelButtonText]=\"'Cancel'\" [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\" style=\"padding: 8px 0 0 0; width: 126px\" [cpPosition]=\"'top'\" (colorPickerChange)=\"onChangeOptions('backgroundColor', $event)\" />\n                    </div> -->\n                </div>\n            </div>\n            <div class=\"toolbox-right\" *ngIf=\"gaugeType==gaugeTypeEnum.Zones\">\n                <div style=\"position: absolute; top: 0px; right: 0px\">\n                    <span>{{'bag.property-zones' | translate}}</span>\n                    <button mat-icon-button (click)=\"onAddZone()\" [disabled]=\"optcfg.staticZones && optcfg.staticZones.length >= 5\">\n                        <mat-icon>add_circle_outline</mat-icon>\n                    </button>\n                </div>\n                <div style=\"margin-top: 20px; margin-bottom:20px; height:250px\">\n                    <div *ngFor=\"let item of optcfg.staticZones; index as i\" style=\"display: block;\">\n                        <div class=\"my-form-field slider-field\">\n                            <span>{{'bag.property-min' | translate}}</span>\n                            <input [(ngModel)]=\"item.min\" style=\"width: 60px; text-align: center;\" type=\"text\" (change)=\"onChangeStaticZones()\">\n                        </div>\n                        <div class=\"my-form-field slider-field\" style=\"padding-left: 12px;\">\n                            <span>{{'bag.property-max' | translate}}</span>\n                            <input [(ngModel)]=\"item.max\" style=\"width: 60px\" type=\"text\" (change)=\"onChangeStaticZones()\">\n                        </div>\n                        <div class=\"my-form-field slider-field color-field\" style=\"padding-left: 12px\">\n                            <span>{{'bag.property-color' | translate}}</span>\n                            <input [cpDialogDisplay]=\"'popup'\" [(colorPicker)]=\"item.strokeStyle\" [cpAlphaChannel]=\"'always'\" class=\"input-color\"\n                                [style.background]=\"item.strokeStyle\" [cpPresetColors]=\"defaultColor\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\"\n                                [cpCancelButtonClass]=\"'cpCancelButtonClass'\" [cpCancelButtonText]=\"'Cancel'\" [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\"\n                                style=\"width: 58px\" [cpPosition]=\"'top'\" (colorPickerChange)=\"onChangeStaticZones()\" />\n                        </div>\n                        <div class=\"my-form-field\" style=\"line-height: 40px;\">\n                            <button mat-icon-button (click)=\"onRemoveZone(i)\" class=\"remove\">\n                                <mat-icon>clear</mat-icon>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div mat-dialog-actions class=\"dialog-action\">\n        <button mat-raised-button (click)=\"onNoClick()\">{{'dlg.cancel' | translate}}</button>\n        <button mat-raised-button color=\"primary\" (click)=\"onOkClick()\" [mat-dialog-close]=\"data\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\n    </div>\n</div>"

            /***/
}),

/***/ "./app/gauges/controls/html-bag/bag-property/bag-property.component.ts":
/*!*****************************************************************************!*\
  !*** ./app/gauges/controls/html-bag/bag-property/bag-property.component.ts ***!
  \*****************************************************************************/
/*! exports provided: BagPropertyComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BagPropertyComponent", function () { return BagPropertyComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../_helpers/utils */ "./app/_helpers/utils.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "../node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _gui_helpers_ngx_gauge_gaugeOptions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../gui-helpers/ngx-gauge/gaugeOptions */ "./app/gui-helpers/ngx-gauge/gaugeOptions.ts");
/* harmony import */ var _gui_helpers_ngx_gauge_ngx_gauge_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../gui-helpers/ngx-gauge/ngx-gauge.component */ "./app/gui-helpers/ngx-gauge/ngx-gauge.component.ts");
/* harmony import */ var _models_hmi__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../_models/hmi */ "./app/_models/hmi.ts");
/* harmony import */ var _gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../gauge-property/gauge-property.component */ "./app/gauges/gauge-property/gauge-property.component.ts");
/* harmony import */ var _gauge_property_flex_head_flex_head_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../gauge-property/flex-head/flex-head.component */ "./app/gauges/gauge-property/flex-head/flex-head.component.ts");
/* harmony import */ var _helpers_define__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../_helpers/define */ "./app/_helpers/define.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };
            var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
                return function (target, key) { decorator(target, key, paramIndex); }
            };









            var BagPropertyComponent = /** @class */ (function () {
                function BagPropertyComponent(cdRef, dialog, dialogRef, data) {
                    this.cdRef = cdRef;
                    this.dialog = dialog;
                    this.dialogRef = dialogRef;
                    this.data = data;
                    this.gauge = {
                        value: 30
                    };
                    this.gaugeTypeEnum = _gui_helpers_ngx_gauge_gaugeOptions__WEBPACK_IMPORTED_MODULE_3__["GaugeType"];
                    this.gaugeType = _gui_helpers_ngx_gauge_gaugeOptions__WEBPACK_IMPORTED_MODULE_3__["GaugeType"].Gauge;
                    this.options = new _gui_helpers_ngx_gauge_gaugeOptions__WEBPACK_IMPORTED_MODULE_3__["GaugeOptions"]();
                    this.optionsGauge = new _gui_helpers_ngx_gauge_gaugeOptions__WEBPACK_IMPORTED_MODULE_3__["GaugeOptions"]();
                    this.optionsDonut = new _gui_helpers_ngx_gauge_gaugeOptions__WEBPACK_IMPORTED_MODULE_3__["GaugeOptions"]();
                    this.optionsZones = new _gui_helpers_ngx_gauge_gaugeOptions__WEBPACK_IMPORTED_MODULE_3__["GaugeOptions"]();
                    this.optcfg = new _gui_helpers_ngx_gauge_gaugeOptions__WEBPACK_IMPORTED_MODULE_3__["GaugeOptions"]();
                    this.defaultColor = _helpers_utils__WEBPACK_IMPORTED_MODULE_1__["Utils"].defaultColor;
                    this.fonts = _helpers_define__WEBPACK_IMPORTED_MODULE_8__["Define"].fonts;
                    this.optionsGauge = this.getDefaultOptions(_gui_helpers_ngx_gauge_gaugeOptions__WEBPACK_IMPORTED_MODULE_3__["GaugeType"].Gauge);
                    this.optionsDonut = this.getDefaultOptions(_gui_helpers_ngx_gauge_gaugeOptions__WEBPACK_IMPORTED_MODULE_3__["GaugeType"].Donut);
                    this.optionsZones = this.getDefaultOptions(_gui_helpers_ngx_gauge_gaugeOptions__WEBPACK_IMPORTED_MODULE_3__["GaugeType"].Zones);
                    this.options = this.optionsGauge;
                    this.property = JSON.parse(JSON.stringify(this.data.settings.property));
                    if (!this.property) {
                        this.property = new _models_hmi__WEBPACK_IMPORTED_MODULE_5__["GaugeProperty"]();
                    }
                }
                BagPropertyComponent.prototype.ngOnInit = function () {
                };
                BagPropertyComponent.prototype.ngAfterViewInit = function () {
                    var _this = this;
                    setTimeout(function () {
                        _this.gaugeType = _gui_helpers_ngx_gauge_gaugeOptions__WEBPACK_IMPORTED_MODULE_3__["GaugeType"].Gauge;
                        if (_this.property.options) {
                            _this.options = _this.property.options;
                            _this.gaugeType = _this.options.type;
                            if (_this.gaugeType === _gui_helpers_ngx_gauge_gaugeOptions__WEBPACK_IMPORTED_MODULE_3__["GaugeType"].Donut) {
                                _this.optionsDonut = _this.options;
                            }
                            else if (_this.gaugeType === _gui_helpers_ngx_gauge_gaugeOptions__WEBPACK_IMPORTED_MODULE_3__["GaugeType"].Zones) {
                                _this.optionsZones = _this.options;
                            }
                            else {
                                _this.optionsGauge = _this.options;
                            }
                        }
                        _this.onGaugeChange(_this.gaugeType);
                        _this.cdRef.detectChanges();
                    }, 500);
                };
                BagPropertyComponent.prototype.onNoClick = function () {
                    this.dialogRef.close();
                };
                BagPropertyComponent.prototype.onOkClick = function () {
                    this.data.settings.property = this.flexHead.getProperty();
                    this.options.type = this.gaugeType;
                    this.data.settings.property.options = this.options;
                };
                BagPropertyComponent.prototype.onEditPermission = function () {
                    var _this = this;
                    var permission = this.property.permission;
                    var dialogRef = this.dialog.open(_gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_6__["DialogGaugePermission"], {
                        position: { top: '60px' },
                        data: { permission: permission }
                    });
                    dialogRef.afterClosed().subscribe(function (result) {
                        if (result) {
                            _this.property.permission = result.permission;
                        }
                    });
                };
                BagPropertyComponent.prototype.ngOnChanges = function (changes) {
                };
                BagPropertyComponent.prototype.onGaugeChange = function (type) {
                    if (type === _gui_helpers_ngx_gauge_gaugeOptions__WEBPACK_IMPORTED_MODULE_3__["GaugeType"].Donut) {
                        this.gaugeType = _gui_helpers_ngx_gauge_gaugeOptions__WEBPACK_IMPORTED_MODULE_3__["GaugeType"].Donut;
                        this.initOptionsToConfig(this.optionsDonut);
                        this.initDonut();
                    }
                    else if (type === _gui_helpers_ngx_gauge_gaugeOptions__WEBPACK_IMPORTED_MODULE_3__["GaugeType"].Zones) {
                        this.gaugeType = _gui_helpers_ngx_gauge_gaugeOptions__WEBPACK_IMPORTED_MODULE_3__["GaugeType"].Zones;
                        this.initOptionsToConfig(this.optionsZones);
                        this.initZones();
                    }
                    else {
                        this.gaugeType = _gui_helpers_ngx_gauge_gaugeOptions__WEBPACK_IMPORTED_MODULE_3__["GaugeType"].Gauge;
                        this.initOptionsToConfig(this.optionsGauge);
                        this.initGauge();
                    }
                    this.cdRef.detectChanges();
                };
                BagPropertyComponent.prototype.onChangeValue = function (value) {
                    this.ngauge.setValue(value);
                };
                BagPropertyComponent.prototype.onChangeOptions = function (opt, value) {
                    this.optcfg[opt] = value;
                    this.configToOptions(this.optcfg[opt], opt);
                    this.setGaugeOptions();
                };
                BagPropertyComponent.prototype.onChangeOptionsPointer = function (opt, value) {
                    this.options.pointer[opt] = value;
                    if (opt === 'pointerLength') {
                        this.options.pointer.length = value / 100;
                    }
                    else if (opt === 'pointerStrokeWidth') {
                        this.options.pointer.strokeWidth = value / 1000;
                    }
                    this.setGaugeOptions();
                };
                BagPropertyComponent.prototype.onChangeOptionsTicks = function (opt, value) {
                    this.options.renderTicks[opt] = value;
                    if (opt === 'divLength') {
                        this.options.renderTicks.divLength = value / 100;
                    }
                    else if (opt === 'divWidth') {
                        this.options.renderTicks.divWidth = value / 10;
                    }
                    else if (opt === 'subLength') {
                        this.options.renderTicks.subLength = value / 100;
                    }
                    else if (opt === 'subWidth') {
                        this.options.renderTicks.subWidth = value / 10;
                    }
                    this.setGaugeOptions();
                };
                BagPropertyComponent.prototype.onChangeTicks = function (event) {
                    this.options.ticksEnabled = event;
                    if (event) {
                        var opt = new _gui_helpers_ngx_gauge_gaugeOptions__WEBPACK_IMPORTED_MODULE_3__["GaugeOptions"]();
                        this.options.renderTicks = JSON.parse(JSON.stringify(opt.renderTicks));
                    }
                    else {
                        this.options.renderTicks = {};
                    }
                    this.onGaugeChange(this.gaugeType);
                };
                BagPropertyComponent.prototype.onChangeOptionsLabels = function (opt, value) {
                    if (opt === 'labels') {
                        var labels_1 = [];
                        if (value) {
                            var tks = value.split(';');
                            tks.forEach(function (tk) {
                                var v = parseFloat(tk);
                                if (!isNaN(v)) {
                                    labels_1.push(v);
                                }
                            });
                        }
                        this.options.staticLabels = { labels: labels_1, font: this.options.staticFontSize + 'px Sans-serif', color: this.options.staticFontColor };
                        this.checkFontFamily();
                        this.onGaugeChange(this.gaugeType);
                    }
                    else if (opt === 'fontSize') {
                        this.options.staticFontSize = value;
                        if (this.options.staticLabels) {
                            this.options.staticLabels.font = this.options.staticFontSize + 'px Sans-serif';
                            this.checkFontFamily();
                            this.setGaugeOptions();
                        }
                    }
                    else if (opt === 'labelsColor') {
                        this.options.staticFontColor = value;
                        if (this.options.staticLabels) {
                            this.options.staticLabels.color = this.options.staticFontColor;
                            this.setGaugeOptions();
                        }
                    }
                    else if (opt === 'fontFamily') {
                        this.options.fontFamily = value;
                        this.checkFontFamily();
                        this.setGaugeOptions();
                    }
                };
                BagPropertyComponent.prototype.onAddZone = function () {
                    if (!this.optcfg.staticZones) {
                        this.optcfg.staticZones = [];
                    }
                    if (this.optcfg.staticZones.length < 5) {
                        this.optcfg.staticZones.push({ min: null, max: null, strokeStyle: null });
                    }
                    this.options.staticZones = this.optcfg.staticZones;
                    this.onGaugeChange(this.gaugeType);
                };
                BagPropertyComponent.prototype.onRemoveZone = function (index) {
                    this.optcfg.staticZones.splice(index, 1);
                    if (this.optcfg.staticZones.length <= 0) {
                        delete this.optcfg.staticZones;
                        delete this.options.staticZones;
                    }
                    else {
                        this.options.staticZones = this.optcfg.staticZones;
                    }
                    this.onGaugeChange(this.gaugeType);
                };
                BagPropertyComponent.prototype.onChangeStaticZones = function () {
                    this.options.staticZones = this.optcfg.staticZones;
                    this.setGaugeOptions();
                };
                BagPropertyComponent.prototype.checkFontFamily = function () {
                    if (this.options.staticLabels && this.options.fontFamily) {
                        this.options.staticLabels.font = this.options.staticFontSize + 'px ' + this.options.fontFamily;
                    }
                };
                BagPropertyComponent.prototype.initGauge = function () {
                    this.setGaugeOptions();
                    this.options = this.optionsGauge;
                    this.ngauge.init(_gui_helpers_ngx_gauge_gaugeOptions__WEBPACK_IMPORTED_MODULE_3__["GaugeType"].Gauge);
                };
                BagPropertyComponent.prototype.initDonut = function () {
                    this.setGaugeOptions();
                    this.options = this.optionsDonut;
                    this.ngauge.init(_gui_helpers_ngx_gauge_gaugeOptions__WEBPACK_IMPORTED_MODULE_3__["GaugeType"].Donut);
                };
                BagPropertyComponent.prototype.initZones = function () {
                    this.setGaugeOptions();
                    this.options = this.optionsZones;
                    this.ngauge.init(_gui_helpers_ngx_gauge_gaugeOptions__WEBPACK_IMPORTED_MODULE_3__["GaugeType"].Zones);
                };
                BagPropertyComponent.prototype.setGaugeOptions = function () {
                    if (this.gaugeType === _gui_helpers_ngx_gauge_gaugeOptions__WEBPACK_IMPORTED_MODULE_3__["GaugeType"].Donut) {
                        this.ngauge.setOptions(this.optionsDonut);
                    }
                    else if (this.gaugeType === _gui_helpers_ngx_gauge_gaugeOptions__WEBPACK_IMPORTED_MODULE_3__["GaugeType"].Zones) {
                        this.ngauge.setOptions(this.optionsZones);
                    }
                    else {
                        this.ngauge.setOptions(this.optionsGauge);
                    }
                };
                BagPropertyComponent.prototype.initOptionsToConfig = function (options) {
                    var _this = this;
                    this.optcfg = JSON.parse(JSON.stringify(options));
                    this.optcfg.angle *= 100;
                    this.optcfg.lineWidth *= 100;
                    this.optcfg.radiusScale *= 100;
                    this.optcfg.pointer.length *= 100;
                    this.optcfg.pointer.strokeWidth *= 1000;
                    if (this.optcfg.renderTicks) {
                        if (this.optcfg.renderTicks.divLength) {
                            this.optcfg.renderTicks.divLength *= 100;
                        }
                        if (this.optcfg.renderTicks.divWidth) {
                            this.optcfg.renderTicks.divWidth *= 10;
                        }
                        if (this.optcfg.renderTicks.subLength) {
                            this.optcfg.renderTicks.subLength *= 100;
                        }
                        if (this.optcfg.renderTicks.subWidth) {
                            this.optcfg.renderTicks.subWidth *= 10;
                        }
                    }
                    this.optcfg.staticLabelsText = '';
                    if (this.optcfg.staticLabels && this.optcfg.staticLabels.labels.length) {
                        this.optcfg.staticLabels.labels.forEach(function (lb) {
                            if (_this.optcfg.staticLabelsText) {
                                _this.optcfg.staticLabelsText += ';';
                            }
                            _this.optcfg.staticLabelsText += lb;
                        });
                    }
                };
                BagPropertyComponent.prototype.configToOptions = function (value, opt) {
                    if (opt === 'angle' || opt === 'lineWidth' || opt === 'radiusScale') {
                        value /= 100;
                    }
                    this.options[opt] = value;
                };
                BagPropertyComponent.prototype.getDefaultOptions = function (type) {
                    if (type === _gui_helpers_ngx_gauge_gaugeOptions__WEBPACK_IMPORTED_MODULE_3__["GaugeType"].Zones) {
                        var opts = new _gui_helpers_ngx_gauge_gaugeOptions__WEBPACK_IMPORTED_MODULE_3__["GaugeOptions"]();
                        opts.angle = -0.25;
                        opts.lineWidth = 0.2;
                        opts.radiusScale = 0.9;
                        opts.pointer.length = 0.6;
                        opts.pointer.strokeWidth = 0.05;
                        return opts;
                    }
                    else if (type === _gui_helpers_ngx_gauge_gaugeOptions__WEBPACK_IMPORTED_MODULE_3__["GaugeType"].Donut) {
                        var optsd = new _gui_helpers_ngx_gauge_gaugeOptions__WEBPACK_IMPORTED_MODULE_3__["GaugeOptions"]();
                        optsd.angle = 0.3;
                        optsd.lineWidth = 0.1;
                        optsd.radiusScale = 0.8;
                        optsd.renderTicks.divisions = 0;
                        optsd.renderTicks.divWidth = 0;
                        optsd.renderTicks.divLength = 0;
                        optsd.renderTicks.subDivisions = 0;
                        optsd.renderTicks.subWidth = 0;
                        optsd.renderTicks.subLength = 0;
                        delete optsd.staticLabels;
                        delete optsd.staticZones;
                        optsd.ticksEnabled = false;
                        return optsd;
                    }
                    else {
                        var optsa = new _gui_helpers_ngx_gauge_gaugeOptions__WEBPACK_IMPORTED_MODULE_3__["GaugeOptions"]();
                        delete optsa.staticLabels;
                        delete optsa.staticZones;
                        optsa.ticksEnabled = false;
                        optsa.renderTicks = {};
                        optsa.staticFontSize = 0;
                        optsa.staticLabelsText = '';
                        return optsa;
                    }
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])("ngauge"),
                    __metadata("design:type", _gui_helpers_ngx_gauge_ngx_gauge_component__WEBPACK_IMPORTED_MODULE_4__["NgxGaugeComponent"])
                ], BagPropertyComponent.prototype, "ngauge", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('flexhead'),
                    __metadata("design:type", _gauge_property_flex_head_flex_head_component__WEBPACK_IMPORTED_MODULE_7__["FlexHeadComponent"])
                ], BagPropertyComponent.prototype, "flexHead", void 0);
                BagPropertyComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'bag-property',
                        template: __webpack_require__(/*! ./bag-property.component.html */ "./app/gauges/controls/html-bag/bag-property/bag-property.component.html"),
                        styles: [__webpack_require__(/*! ./bag-property.component.css */ "./app/gauges/controls/html-bag/bag-property/bag-property.component.css")]
                    }),
                    __param(3, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
                    __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"],
                    _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialog"],
                    _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"], Object])
                ], BagPropertyComponent);
                return BagPropertyComponent;
            }());



            /***/
}),

/***/ "./app/gauges/controls/html-bag/html-bag.component.css":
/*!*************************************************************!*\
  !*** ./app/gauges/controls/html-bag/html-bag.component.css ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dhdWdlcy9jb250cm9scy9odG1sLWJhZy9odG1sLWJhZy5jb21wb25lbnQuY3NzIn0= */"

            /***/
}),

/***/ "./app/gauges/controls/html-bag/html-bag.component.html":
/*!**************************************************************!*\
  !*** ./app/gauges/controls/html-bag/html-bag.component.html ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ""

            /***/
}),

/***/ "./app/gauges/controls/html-bag/html-bag.component.ts":
/*!************************************************************!*\
  !*** ./app/gauges/controls/html-bag/html-bag.component.ts ***!
  \************************************************************/
/*! exports provided: HtmlBagComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HtmlBagComponent", function () { return HtmlBagComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _gauge_base_gauge_base_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../gauge-base/gauge-base.component */ "./app/gauges/gauge-base/gauge-base.component.ts");
/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../_helpers/utils */ "./app/_helpers/utils.ts");
/* harmony import */ var _gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../gauge-property/gauge-property.component */ "./app/gauges/gauge-property/gauge-property.component.ts");
/* harmony import */ var _gui_helpers_ngx_gauge_ngx_gauge_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../gui-helpers/ngx-gauge/ngx-gauge.component */ "./app/gui-helpers/ngx-gauge/ngx-gauge.component.ts");
            var __extends = (undefined && undefined.__extends) || (function () {
                var extendStatics = function (d, b) {
                    extendStatics = Object.setPrototypeOf ||
                        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
                    return extendStatics(d, b);
                };
                return function (d, b) {
                    extendStatics(d, b);
                    function __() { this.constructor = d; }
                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
                };
            })();
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };





            var HtmlBagComponent = /** @class */ (function (_super) {
                __extends(HtmlBagComponent, _super);
                function HtmlBagComponent(resolver) {
                    var _this = _super.call(this) || this;
                    _this.resolver = resolver;
                    return _this;
                }
                HtmlBagComponent_1 = HtmlBagComponent;
                HtmlBagComponent.prototype.ngOnInit = function () { };
                HtmlBagComponent.getSignals = function (pro) {
                    var res = [];
                    if (pro.variableId) {
                        res.push(pro.variableId);
                    }
                    return res;
                };
                HtmlBagComponent.getDialogType = function () {
                    return _gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_3__["GaugeDialogType"].Gauge;
                };
                HtmlBagComponent.processValue = function (ga, svgele, sig, gaugeStatus, gauge) {
                    try {
                        gauge.setValue(sig.value);
                    }
                    catch (err) {
                        console.error(err);
                    }
                };
                HtmlBagComponent.initElement = function (gab, resolver, viewContainerRef, isview) {
                    var ele = document.getElementById(gab.id);
                    if (ele) {
                        var htmlBag = _helpers_utils__WEBPACK_IMPORTED_MODULE_2__["Utils"].searchTreeStartWith(ele, this.prefixD);
                        if (htmlBag) {
                            var factory = resolver.resolveComponentFactory(_gui_helpers_ngx_gauge_ngx_gauge_component__WEBPACK_IMPORTED_MODULE_4__["NgxGaugeComponent"]);
                            var componentRef = viewContainerRef.createComponent(factory);
                            htmlBag.innerHTML = '';
                            componentRef.changeDetectorRef.detectChanges();
                            var loaderComponentElement = componentRef.location.nativeElement;
                            htmlBag.appendChild(loaderComponentElement);
                            componentRef.instance.resize(htmlBag.clientHeight, htmlBag.clientWidth);
                            if (gab.property && gab.property.options) {
                                componentRef.instance.setOptions(gab.property.options);
                                componentRef.instance.init(gab.property.options.type);
                            }
                            return componentRef.instance;
                        }
                    }
                };
                HtmlBagComponent.resize = function (gab, resolver, viewContainerRef, options) {
                    var ele = document.getElementById(gab.id);
                    if (ele) {
                        var htmlBag = _helpers_utils__WEBPACK_IMPORTED_MODULE_2__["Utils"].searchTreeStartWith(ele, this.prefixD);
                        if (htmlBag) {
                            var factory = resolver.resolveComponentFactory(_gui_helpers_ngx_gauge_ngx_gauge_component__WEBPACK_IMPORTED_MODULE_4__["NgxGaugeComponent"]);
                            var componentRef = viewContainerRef.createComponent(factory);
                            htmlBag.innerHTML = '';
                            componentRef.changeDetectorRef.detectChanges();
                            var loaderComponentElement = componentRef.location.nativeElement;
                            htmlBag.appendChild(loaderComponentElement);
                            componentRef.instance.resize(htmlBag.clientHeight, htmlBag.clientWidth);
                            if (options) {
                                componentRef.instance.setOptions(options);
                                componentRef.instance.init(options.type);
                            }
                            return componentRef.instance;
                        }
                    }
                };
                HtmlBagComponent.detectChange = function (gab, res, ref) {
                    var options;
                    if (gab.property && gab.property.options) {
                        options = gab.property.options;
                    }
                    return HtmlBagComponent_1.resize(gab, res, ref, options);
                };
                var HtmlBagComponent_1;
                HtmlBagComponent.TypeTag = "svg-ext-html_bag";
                HtmlBagComponent.LabelTag = "HtmlBag";
                HtmlBagComponent.prefixD = "D-BAG_";
                HtmlBagComponent = HtmlBagComponent_1 = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'app-html-bag',
                        template: __webpack_require__(/*! ./html-bag.component.html */ "./app/gauges/controls/html-bag/html-bag.component.html"),
                        styles: [__webpack_require__(/*! ./html-bag.component.css */ "./app/gauges/controls/html-bag/html-bag.component.css")]
                    }),
                    __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ComponentFactoryResolver"]])
                ], HtmlBagComponent);
                return HtmlBagComponent;
            }(_gauge_base_gauge_base_component__WEBPACK_IMPORTED_MODULE_1__["GaugeBaseComponent"]));



            /***/
}),

/***/ "./app/gauges/controls/html-button/html-button.component.css":
/*!*******************************************************************!*\
  !*** ./app/gauges/controls/html-button/html-button.component.css ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dhdWdlcy9jb250cm9scy9odG1sLWJ1dHRvbi9odG1sLWJ1dHRvbi5jb21wb25lbnQuY3NzIn0= */"

            /***/
}),

/***/ "./app/gauges/controls/html-button/html-button.component.html":
/*!********************************************************************!*\
  !*** ./app/gauges/controls/html-button/html-button.component.html ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ""

            /***/
}),

/***/ "./app/gauges/controls/html-button/html-button.component.ts":
/*!******************************************************************!*\
  !*** ./app/gauges/controls/html-button/html-button.component.ts ***!
  \******************************************************************/
/*! exports provided: HtmlButtonComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HtmlButtonComponent", function () { return HtmlButtonComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _gauge_base_gauge_base_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../gauge-base/gauge-base.component */ "./app/gauges/gauge-base/gauge-base.component.ts");
/* harmony import */ var _models_hmi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../_models/hmi */ "./app/_models/hmi.ts");
/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../_helpers/utils */ "./app/_helpers/utils.ts");
/* harmony import */ var _gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../gauge-property/gauge-property.component */ "./app/gauges/gauge-property/gauge-property.component.ts");
            var __extends = (undefined && undefined.__extends) || (function () {
                var extendStatics = function (d, b) {
                    extendStatics = Object.setPrototypeOf ||
                        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
                    return extendStatics(d, b);
                };
                return function (d, b) {
                    extendStatics(d, b);
                    function __() { this.constructor = d; }
                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
                };
            })();
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };





            var HtmlButtonComponent = /** @class */ (function (_super) {
                __extends(HtmlButtonComponent, _super);
                // static actionBlink = Object.keys(GaugeActionsType).find(key => GaugeActionsType[key] === GaugeActionsType.blink);
                function HtmlButtonComponent() {
                    return _super.call(this) || this;
                }
                HtmlButtonComponent_1 = HtmlButtonComponent;
                HtmlButtonComponent.prototype.ngOnInit = function () {
                };
                HtmlButtonComponent.getSignals = function (pro) {
                    var res = [];
                    if (pro.variableId) {
                        res.push(pro.variableId);
                    }
                    if (pro.actions && pro.actions.length) {
                        pro.actions.forEach(function (act) {
                            res.push(act.variableId);
                        });
                    }
                    return res;
                };
                HtmlButtonComponent.getDialogType = function () {
                    return _gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_4__["GaugeDialogType"].Range;
                };
                HtmlButtonComponent.getActions = function () {
                    return this.actionsType;
                };
                HtmlButtonComponent.initElement = function (gab) {
                    var ele = document.getElementById(gab.id);
                    if (ele && gab.property) {
                        var htmlButton = _helpers_utils__WEBPACK_IMPORTED_MODULE_3__["Utils"].searchTreeStartWith(ele, this.prefixB);
                        if (htmlButton) {
                            htmlButton.innerHTML = (gab.name) ? gab.name : '<span>&nbsp;</span>';
                        }
                    }
                };
                HtmlButtonComponent.initElementColor = function (bkcolor, color, ele) {
                    var htmlButton = _helpers_utils__WEBPACK_IMPORTED_MODULE_3__["Utils"].searchTreeStartWith(ele, this.prefixB);
                    if (htmlButton) {
                        ele.setAttribute('fill', 'rgba(0, 0, 0, 0)');
                        ele.setAttribute('stroke', 'rgba(0, 0, 0, 0)');
                        for (var i = 0; i < ele.children.length; i++) {
                            ele.children[i].removeAttribute('fill');
                            ele.children[i].removeAttribute('stroke');
                        }
                        if (bkcolor) {
                            htmlButton.style.backgroundColor = bkcolor;
                        }
                        if (color) {
                            htmlButton.style.color = color;
                        }
                    }
                };
                HtmlButtonComponent.processValue = function (ga, svgele, sig, gaugeStatus) {
                    try {
                        if (svgele.node && svgele.node.children && svgele.node.children.length >= 1) {
                            var button_1 = _helpers_utils__WEBPACK_IMPORTED_MODULE_3__["Utils"].searchTreeStartWith(svgele.node, this.prefixB);
                            var clr = '';
                            var val_1 = parseFloat(sig.value);
                            if (Number.isNaN(val_1)) {
                                // maybe boolean
                                val_1 = Number(sig.value);
                            }
                            if (ga.property) {
                                if (ga.property.ranges) {
                                    for (var idx = 0; idx < ga.property.ranges.length; idx++) {
                                        if (ga.property.ranges[idx].min <= val_1 && ga.property.ranges[idx].max >= val_1) {
                                            clr = ga.property.ranges[idx].color;
                                        }
                                    }
                                    if (clr) {
                                        button_1.style.backgroundColor = clr;
                                    }
                                }
                                // check actions
                                if (ga.property.actions) {
                                    ga.property.actions.forEach(function (act) {
                                        if (act.variableId === sig.id) {
                                            HtmlButtonComponent_1.processAction(act, svgele, button_1, val_1, gaugeStatus);
                                        }
                                    });
                                }
                            }
                        }
                    }
                    catch (err) {
                        console.error(err);
                    }
                };
                HtmlButtonComponent.getFillColor = function (ele) {
                    if (ele.children && ele.children[0]) {
                        var htmlButton = _helpers_utils__WEBPACK_IMPORTED_MODULE_3__["Utils"].searchTreeStartWith(ele, this.prefixB);
                        if (htmlButton) {
                            var result = htmlButton.style['background-color'];
                            if (!result) {
                                result = htmlButton.getAttribute('fill');
                            }
                            if (result) {
                                return result;
                            }
                        }
                    }
                    return ele.getAttribute('fill');
                };
                HtmlButtonComponent.getStrokeColor = function (ele) {
                    if (ele.children && ele.children[0]) {
                        var htmlButton = _helpers_utils__WEBPACK_IMPORTED_MODULE_3__["Utils"].searchTreeStartWith(ele, this.prefixB);
                        if (htmlButton) {
                            var result = htmlButton.style['color'];
                            if (!result) {
                                result = htmlButton.getAttribute('stroke');
                            }
                            if (result) {
                                return result;
                            }
                        }
                    }
                    return ele.getAttribute('stroke');
                };
                HtmlButtonComponent.processAction = function (act, svgele, button, value, gaugeStatus) {
                    if (this.actionsType[act.type] === this.actionsType.hide) {
                        if (act.range.min <= value && act.range.max >= value) {
                            var element = SVG.adopt(svgele.node);
                            this.runActionHide(element, act.type, gaugeStatus);
                        }
                    }
                    else if (this.actionsType[act.type] === this.actionsType.show) {
                        if (act.range.min <= value && act.range.max >= value) {
                            var element = SVG.adopt(svgele.node);
                            this.runActionShow(element, act.type, gaugeStatus);
                        }
                    }
                    else if (this.actionsType[act.type] === this.actionsType.blink) {
                        var inRange = (act.range.min <= value && act.range.max >= value);
                        this.checkActionBlink(button, act.type, gaugeStatus, inRange, act.options, true);
                    }
                };
                var HtmlButtonComponent_1;
                HtmlButtonComponent.TypeTag = 'svg-ext-html_button';
                HtmlButtonComponent.LabelTag = 'HtmlButton';
                HtmlButtonComponent.prefixB = 'B-HXB_';
                HtmlButtonComponent.prefixRect = 'svg_';
                HtmlButtonComponent.actionsType = { hide: _models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeActionsType"].hide, show: _models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeActionsType"].show, blink: _models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeActionsType"].blink };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Object)
                ], HtmlButtonComponent.prototype, "data", void 0);
                HtmlButtonComponent = HtmlButtonComponent_1 = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'html-button',
                        template: __webpack_require__(/*! ./html-button.component.html */ "./app/gauges/controls/html-button/html-button.component.html"),
                        styles: [__webpack_require__(/*! ./html-button.component.css */ "./app/gauges/controls/html-button/html-button.component.css")]
                    }),
                    __metadata("design:paramtypes", [])
                ], HtmlButtonComponent);
                return HtmlButtonComponent;
            }(_gauge_base_gauge_base_component__WEBPACK_IMPORTED_MODULE_1__["GaugeBaseComponent"]));



            /***/
}),

/***/ "./app/gauges/controls/html-chart/chart-property/chart-property.component.css":
/*!************************************************************************************!*\
  !*** ./app/gauges/controls/html-chart/chart-property/chart-property.component.css ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ".mychart-graph {\n    display: block;\n    margin: 0 auto;\n    margin-top: 30px;\n    overflow: hidden;\n    width: 360px;\n}\n\n.toolbox {\n    padding-top: 25px;\n    display: block;\n    overflow: hidden;\n}\n\n.field-row {\n    display: block;\n    margin-bottom: 5px;\n}\n\n.slider-field span {\n    padding-left: 2px;\n    text-overflow: clip;\n    max-width: 125px;\n    white-space: nowrap;\n    overflow: hidden;\n}\n\n::ng-deep .slider-field mat-slider {\n    background-color: var(--formSliderBackground);\n    height: 30px;\n    width: 100px;\n}\n\n::ng-deep .mat-tab-label {\n    height: 34px !important;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZ2F1Z2VzL2NvbnRyb2xzL2h0bWwtY2hhcnQvY2hhcnQtcHJvcGVydHkvY2hhcnQtcHJvcGVydHkuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGNBQWM7SUFDZCxjQUFjO0lBQ2QsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLGNBQWM7SUFDZCxnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2Qsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLG1CQUFtQjtJQUNuQixnQkFBZ0I7SUFDaEIsbUJBQW1CO0lBQ25CLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLDZDQUE2QztJQUM3QyxZQUFZO0lBQ1osWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHVCQUF1QjtBQUMzQiIsImZpbGUiOiJzcmMvYXBwL2dhdWdlcy9jb250cm9scy9odG1sLWNoYXJ0L2NoYXJ0LXByb3BlcnR5L2NoYXJ0LXByb3BlcnR5LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXljaGFydC1ncmFwaCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgbWFyZ2luLXRvcDogMzBweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHdpZHRoOiAzNjBweDtcbn1cblxuLnRvb2xib3gge1xuICAgIHBhZGRpbmctdG9wOiAyNXB4O1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi5maWVsZC1yb3cge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbi1ib3R0b206IDVweDtcbn1cblxuLnNsaWRlci1maWVsZCBzcGFuIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDJweDtcbiAgICB0ZXh0LW92ZXJmbG93OiBjbGlwO1xuICAgIG1heC13aWR0aDogMTI1cHg7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG46Om5nLWRlZXAgLnNsaWRlci1maWVsZCBtYXQtc2xpZGVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1mb3JtU2xpZGVyQmFja2dyb3VuZCk7XG4gICAgaGVpZ2h0OiAzMHB4O1xuICAgIHdpZHRoOiAxMDBweDtcbn1cblxuOjpuZy1kZWVwIC5tYXQtdGFiLWxhYmVsIHtcbiAgICBoZWlnaHQ6IDM0cHggIWltcG9ydGFudDtcbn1cbiJdfQ== */"

            /***/
}),

/***/ "./app/gauges/controls/html-chart/chart-property/chart-property.component.html":
/*!*************************************************************************************!*\
  !*** ./app/gauges/controls/html-chart/chart-property/chart-property.component.html ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div style=\"width: 680px;position: relative;\">\n    <h1 mat-dialog-title style=\"display:inline-block;cursor:move;\" mat-dialog-draggable>{{'editor.controls-chart-settings' | translate}}</h1>\n    <mat-icon (click)=\"onNoClick()\" style=\"float:right;margin-right:-10px;margin-top:-10px;cursor:pointer;color:gray;\">clear</mat-icon>\n    <mat-tab-group style=\"width: 100%;height: 500px\" (selectedIndexChange)=\"onTabChanged()\">\n        <mat-tab label=\"{{'chart.property-props' | translate}}\">\n            <div style=\"max-height: 540px; overflow-y: auto; overflow-x: hidden; padding-top: 15px;\">\n                <div style=\"display: block;\">\n                    <div class=\"my-form-field\" style=\"width: 320px;\">\n                        <span>{{'chart.property-chart' | translate}}</span>\n                        <mat-select [formControl]=\"chartCtrl\">\n                            <mat-select-search [formControl]=\"chartFilterCtrl\"></mat-select-search>\n                            <mat-option *ngFor=\"let chart of filteredChart | async\" [value]=\"chart\">\n                                {{ chart.name }}\n                            </mat-option>\n                        </mat-select>\n                    </div>\n                    <div class=\"my-form-field\" style=\"width: 140px;margin-left: 20px;\">\n                        <span>{{'chart.property-chart-type' | translate}}</span>\n                        <mat-select [(value)]=\"chartViewValue\">\n                            <mat-option *ngFor=\"let ev of chartViewType | enumToArray\" [value]=\"ev.key\">\n                                {{ ev.value }}\n                            </mat-option>\n                        </mat-select>\n                    </div>\n                    <div *ngIf=\"chartViewValue === chartViewRealtime\" class=\"my-form-field\" style=\"margin-left: 20px;\">\n                        <span>{{'chart.property-realtime-max' | translate}}</span>\n                        <input numberOnly [(ngModel)]=\"options.realtime\" type=\"text\" style=\"width: 80px\">\n                    </div>\n                </div>\n                <div style=\"display: block; width:100%\">\n                    <mat-list class=\"list\" style=\"padding-left: 8px;padding-right: 8px;\">\n                        <div style=\"height: calc(100% - 36px); overflow-y: auto\" *ngIf=\"chartCtrl.value\">\n                            <mat-list-item *ngFor=\"let tag of chartCtrl.value.lines\" style=\"font-size:14px;height: 27px;\">\n                                <div style=\"width: 50%;text-overflow: ellipsis;display: block; overflow: hidden; white-space: nowrap;\">\n                                    <span matTooltip=\"{{tag.name}}\">{{tag.name}}</span>\n                                </div>\n                                <div style=\"width: 40%;text-overflow: ellipsis;display: block; overflow: hidden; white-space: nowrap;\">\n                                    <span matTooltip=\"{{tag.device}}\">{{tag.device}}</span>\n                                </div>\n                                <div [style.background-color]=\"tag.color\" style=\"height:20px; width:30px\">\n                                </div>\n                            </mat-list-item>\n                        </div>\n                    </mat-list>\n                </div>\n            </div>\n        </mat-tab>\n        <mat-tab label=\"{{'chart.property-layout' | translate}}\">\n            <chart-uplot #chartuplot [options]=\"options\" class=\"mychart-graph\"></chart-uplot>\n            <div class=\"toolbox\">\n                <div class=\"field-row\">\n                    <div class=\"my-form-field\" style=\"width:160px\">\n                        <span>{{'chart.property-font' | translate}}</span>\n                        <mat-select [(value)]=\"options.fontFamily\" (selectionChange)=\"onChangeOptions('fontFamily',  $event.value)\">\n                            <mat-option *ngFor=\"let font of fonts\" [style.fontFamily]=\"font\" [value]=\"font\">\n                                {{font}}\n                            </mat-option>\n                        </mat-select>\n                    </div>\n                    <div class=\"my-form-field slider-field color-field\" style=\"padding-left: 15px;\">\n                        <span>{{'chart.property-color.text' | translate}}</span>\n                        <input [(colorPicker)]=\"options.axisLabelColor\" [cpAlphaChannel]=\"'always'\" class=\"input-color\" [style.background]=\"options.axisLabelColor\"\n                            [cpPresetColors]=\"defaultColor\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\" [cpCancelButtonClass]=\"'cpCancelButtonClass'\"\n                            [cpCancelButtonText]=\"'Cancel'\" [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\" style=\"width: 88px\"\n                            [cpPosition]=\"'top'\" (colorPickerChange)=\"onChangeOptions('axisLabelColor', $event)\" />\n                    </div>\n                    <div class=\"my-form-field slider-field color-field\" style=\"padding-left: 30px;\">\n                        <span>{{'chart.property-color.background' | translate}}</span>\n                        <input [(colorPicker)]=\"options.colorBackground\" [cpAlphaChannel]=\"'always'\" class=\"input-color\" [style.background]=\"options.colorBackground\"\n                            [cpPresetColors]=\"defaultColor\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\" [cpCancelButtonClass]=\"'cpCancelButtonClass'\"\n                            [cpCancelButtonText]=\"'Cancel'\" [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\" style=\"width: 88px\"\n                            [cpPosition]=\"'top'\" (colorPickerChange)=\"onChangeOptions('colorBackground', $event)\" />\n                    </div>\n                    <div class=\"my-form-field\" style=\"width:120px;padding-left: 30px\">\n                        <span>{{'chart.property-date.format' | translate}}</span>\n                        <mat-select [(value)]=\"options.dateFormat\" (selectionChange)=\"onChangeOptions('date',  $event.value)\">\n                            <mat-option *ngFor=\"let ev of dateFormat | enumToArray\" [value]=\"ev.key\">\n                                {{ ev.value }}\n                            </mat-option>\n                        </mat-select>\n                    </div>\n                    <div class=\"my-form-field\" style=\"width:120px;padding-left: 15px\">\n                        <span>{{'chart.property-time.format' | translate}}</span>\n                        <mat-select [(value)]=\"options.timeFormat\" (selectionChange)=\"onChangeOptions('time',  $event.value)\">\n                            <mat-option *ngFor=\"let ev of timeFormat | enumToArray\" [value]=\"ev.key\">\n                                {{ ev.value }}\n                            </mat-option>\n                        </mat-select>\n                    </div>\n                    <!-- <div class=\"my-form-field slider-field color-field\" style=\"padding-left: 30px;\">\n                        <span>{{'chart.property-color.legend' | translate}}</span>\n                        <input [(colorPicker)]=\"options.legendBackground\" [cpAlphaChannel]=\"'always'\" class=\"input-color\" [style.background]=\"options.legendBackground\"\n                            [cpPresetColors]=\"defaultColor\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\" [cpCancelButtonClass]=\"'cpCancelButtonClass'\"\n                            [cpCancelButtonText]=\"'Cancel'\" [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\" style=\"padding: 8px 0 0 0; width: 88px\"\n                            [cpPosition]=\"'top'\" (colorPickerChange)=\"onChangeOptions('legendBackground', $event)\" />\n                    </div>\n                    <div class=\"my-form-field slider-field\" style=\"padding-left: 8px\">\n                        <span>{{'chart.property-font.legendsize' | translate}}</span>\n                        <mat-slider [(ngModel)]=\"options.legendFontSize\" style=\"display:inline-block;width:80px\" [min]=\"0\" [max]=\"16\" [step]=\"1\" [thumbLabel]=\"true\"\n                            (input)=\"onChangeOptions('legendFontSize', $event.value)\">\n                        </mat-slider>\n                    </div> -->\n                </div>\n                <div class=\"field-row\" style=\"padding-top: 5px;\">\n                    <div class=\"my-form-field slider-field\">\n                        <span>{{'chart.property-font.titlesize' | translate}}</span>\n                        <mat-slider [(ngModel)]=\"options.titleHeight\" style=\"display:inline-block;\" [min]=\"0\" [max]=\"36\" [step]=\"1\" [thumbLabel]=\"true\"\n                            (input)=\"onChangeOptions('titleHeight', $event.value)\">\n                        </mat-slider>\n                    </div>\n                    <div class=\"my-form-field slider-field\" style=\"padding-left: 8px\">\n                        <span>{{'chart.property-font.axissize' | translate}}</span>\n                        <mat-slider [(ngModel)]=\"options.axisLabelFontSize\" style=\"display:inline-block;\" [min]=\"0\" [max]=\"15\" [step]=\"1\" [thumbLabel]=\"true\"\n                            (input)=\"onChangeOptions('axisLabelFontSize', $event.value)\">\n                        </mat-slider>\n                    </div>\n                    <div class=\"my-form-field slider-field color-field\" style=\"padding-left: 36px\">\n                        <span>{{'chart.property-color.grid' | translate}}</span>\n                        <input [(colorPicker)]=\"options.gridLineColor\" [cpAlphaChannel]=\"'always'\" class=\"input-color\" [style.background]=\"options.gridLineColor\"\n                            [cpPresetColors]=\"defaultColor\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\" [cpCancelButtonClass]=\"'cpCancelButtonClass'\"\n                            [cpCancelButtonText]=\"'Cancel'\" [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\" style=\"width: 88px\"\n                            [cpPosition]=\"'top'\" (colorPickerChange)=\"onChangeOptions('gridLineColor', $event)\" />\n                    </div>\n                    <div class=\"my-form-field\" style=\"width:120px;padding-left: 30px\">\n                        <span>{{'chart.property-legend.mode' | translate}}</span>\n                        <mat-select [(value)]=\"options.legendMode\" (selectionChange)=\"onChangeOptions('legend',  $event.value)\">\n                            <mat-option *ngFor=\"let ev of legendModes | enumToArray\" [value]=\"ev.key\">\n                                {{ ev.value }}\n                            </mat-option>\n                        </mat-select>\n                    </div>\n                    <!-- <div class=\"my-form-field slider-field\" style=\"padding-left: 12px\">\n                        <span>{{'chart.property-scala.auto' | translate}}</span>\n                        <mat-slide-toggle color=\"primary\" [(ngModel)]=\"autoScala.enabled\" (change)=\"onChangeOptions('autoscala', $event.value)\"></mat-slide-toggle>\n                    </div>\n                    <div class=\"my-form-field slider-field\" style=\"padding-left: 12px\">\n                        <span>{{'chart.property-scala.min' | translate}}</span>\n                        <input numberOnly [disabled]=\"autoScala.enabled\" [(ngModel)]=\"autoScala.min\" (change)=\"onChangeOptions('minscala', $event.value)\" style=\"width: 50px;text-align: center;display:inline-block;\" type=\"text\">\n                    </div>\n                    <div class=\"my-form-field slider-field\" style=\"padding-left: 12px\">\n                        <span>{{'chart.property-scala.max' | translate}}</span>\n                        <input numberOnly [disabled]=\"autoScala.enabled\" [(ngModel)]=\"autoScala.max\" (change)=\"onChangeOptions('maxscala', $event.value)\" style=\"width: 50px;text-align: center;display:inline-block;\" type=\"text\">\n                    </div> -->\n                </div>\n            </div>\n        </mat-tab>\n    </mat-tab-group>\n    <div mat-dialog-actions style=\"float:right; padding-bottom: 20px;\">\n        <button mat-raised-button (click)=\"onNoClick()\">{{'dlg.cancel' | translate}}</button>\n        <button mat-raised-button color=\"primary\" (click)=\"onOkClick()\" [mat-dialog-close]=\"data\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\n    </div>\n</div>"

            /***/
}),

/***/ "./app/gauges/controls/html-chart/chart-property/chart-property.component.ts":
/*!***********************************************************************************!*\
  !*** ./app/gauges/controls/html-chart/chart-property/chart-property.component.ts ***!
  \***********************************************************************************/
/*! exports provided: ChartPropertyComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChartPropertyComponent", function () { return ChartPropertyComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "../node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "../node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "../node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "../node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ngx-translate/core */ "../node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js");
/* harmony import */ var _models_hmi__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../_models/hmi */ "./app/_models/hmi.ts");
/* harmony import */ var _models_chart__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../_models/chart */ "./app/_models/chart.ts");
/* harmony import */ var _chart_uplot_chart_uplot_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../chart-uplot/chart-uplot.component */ "./app/gauges/controls/html-chart/chart-uplot/chart-uplot.component.ts");
/* harmony import */ var _helpers_define__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../_helpers/define */ "./app/_helpers/define.ts");
/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../_helpers/utils */ "./app/_helpers/utils.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };
            var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
                return function (target, key) { decorator(target, key, paramIndex); }
            };












            var ChartPropertyComponent = /** @class */ (function () {
                function ChartPropertyComponent(dialogRef, translateService, data) {
                    this.dialogRef = dialogRef;
                    this.translateService = translateService;
                    this.data = data;
                    this.chartViewType = _models_chart__WEBPACK_IMPORTED_MODULE_7__["ChartViewType"];
                    this.chartViewRealtime = _helpers_utils__WEBPACK_IMPORTED_MODULE_10__["Utils"].getEnumKey(_models_chart__WEBPACK_IMPORTED_MODULE_7__["ChartViewType"], _models_chart__WEBPACK_IMPORTED_MODULE_7__["ChartViewType"].realtime1);
                    this.dateFormat = _models_hmi__WEBPACK_IMPORTED_MODULE_6__["DateFormatType"];
                    this.timeFormat = _models_hmi__WEBPACK_IMPORTED_MODULE_6__["TimeFormatType"];
                    this.legendModes = _models_chart__WEBPACK_IMPORTED_MODULE_7__["ChartLegendMode"];
                    this.fonts = _helpers_define__WEBPACK_IMPORTED_MODULE_9__["Define"].fonts;
                    this.defaultColor = _helpers_utils__WEBPACK_IMPORTED_MODULE_10__["Utils"].defaultColor;
                    this.chartCtrl = new _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormControl"]();
                    this.chartFilterCtrl = new _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormControl"]();
                    this.options = _chart_uplot_chart_uplot_component__WEBPACK_IMPORTED_MODULE_8__["ChartUplotComponent"].DefaultOptions();
                    this.autoScala = { enabled: true, min: 0, max: 10 };
                    this.filteredChart = new rxjs__WEBPACK_IMPORTED_MODULE_2__["ReplaySubject"](1);
                    this._onDestroy = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
                }
                ChartPropertyComponent.prototype.ngOnInit = function () {
                    var _this = this;
                    Object.keys(this.chartViewType).forEach(function (key) {
                        _this.translateService.get(_this.chartViewType[key]).subscribe(function (txt) { _this.chartViewType[key] = txt; });
                    });
                    Object.keys(this.legendModes).forEach(function (key) {
                        _this.translateService.get(_this.legendModes[key]).subscribe(function (txt) { _this.legendModes[key] = txt; });
                    });
                    this.loadChart();
                    var selected = null;
                    if (this.data.settings.property) {
                        this.chartViewValue = this.data.settings.property.type;
                        this.data.charts.forEach(function (chart) {
                            if (chart.id === _this.data.settings.property.id) {
                                selected = chart;
                            }
                        });
                        if (this.data.settings.property.options) {
                            this.options = Object.assign(this.options, this.data.settings.property.options);
                        }
                    }
                    if (selected) {
                        this.chartCtrl.setValue(selected);
                    }
                };
                ChartPropertyComponent.prototype.ngAfterViewInit = function () {
                    this.chartuplot.withToolbar = false;
                    this.chartuplot.setOptions(this.options);
                };
                ChartPropertyComponent.prototype.ngOnDestroy = function () {
                    this._onDestroy.next();
                    this._onDestroy.complete();
                };
                ChartPropertyComponent.prototype.onNoClick = function () {
                    this.dialogRef.close();
                };
                ChartPropertyComponent.prototype.onOkClick = function () {
                    this.data.settings.property = { id: null, type: this.chartViewValue, options: this.options };
                    if (this.chartCtrl.value) {
                        this.data.settings.name = this.chartCtrl.value.name;
                        this.data.settings.property.id = this.chartCtrl.value.id;
                    }
                    else {
                        this.data.settings.name = '';
                    }
                };
                ChartPropertyComponent.prototype.onChangeOptions = function (option, value) {
                    if (option === 'titleHeight') {
                        this.options.titleHeight = value;
                    }
                    else if (option === 'axisLabelFontSize') {
                        this.options.axisLabelFontSize = value;
                    }
                    else if (option === 'axisLabelColor') {
                        this.options.axisLineColor = value;
                        this.options.axisLabelColor = value;
                    }
                    else if (option === 'fontFamily') {
                        this.options.fontFamily = value;
                    }
                    else if (option === 'colorBackground') {
                        this.options.colorBackground = value;
                    }
                    else if (option === 'gridLineColor') {
                        this.options.gridLineColor = value;
                    }
                    else if (option === 'legend') {
                        this.options.legendMode = value;
                    }
                    else if (option === 'date') {
                        this.options.dateFormat = value;
                    }
                    else if (option === 'time') {
                        this.options.timeFormat = value;
                    }
                    this.chartuplot.setOptions(this.options);
                };
                ChartPropertyComponent.prototype.onTabChanged = function () {
                };
                ChartPropertyComponent.prototype.loadChart = function (toset) {
                    var _this = this;
                    // load the initial chart list
                    this.filteredChart.next(this.data.charts.slice());
                    // listen for search field value changes
                    this.chartFilterCtrl.valueChanges
                        .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeUntil"])(this._onDestroy))
                        .subscribe(function () {
                            _this.filterChart();
                        });
                    if (toset) {
                        var idx_1 = -1;
                        this.data.charts.every(function (value, index, _arr) {
                            if (value.id === toset) {
                                idx_1 = index;
                                return false;
                            }
                            return true;
                        });
                        if (idx_1 >= 0) {
                            this.chartCtrl.setValue(this.data.charts[idx_1]);
                        }
                    }
                };
                ChartPropertyComponent.prototype.filterChart = function () {
                    if (!this.data.charts) {
                        return;
                    }
                    // get the search keyword
                    var search = this.chartFilterCtrl.value;
                    if (!search) {
                        this.filteredChart.next(this.data.charts.slice());
                        return;
                    }
                    else {
                        search = search.toLowerCase();
                    }
                    // filter the variable
                    this.filteredChart.next(this.data.charts.filter(function (chart) { return chart.name.toLowerCase().indexOf(search) > -1; }));
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('chartuplot'),
                    __metadata("design:type", _chart_uplot_chart_uplot_component__WEBPACK_IMPORTED_MODULE_8__["ChartUplotComponent"])
                ], ChartPropertyComponent.prototype, "chartuplot", void 0);
                ChartPropertyComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'app-chart-property',
                        template: __webpack_require__(/*! ./chart-property.component.html */ "./app/gauges/controls/html-chart/chart-property/chart-property.component.html"),
                        styles: [__webpack_require__(/*! ./chart-property.component.css */ "./app/gauges/controls/html-chart/chart-property/chart-property.component.css")]
                    }),
                    __param(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MAT_DIALOG_DATA"])),
                    __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialogRef"],
                    _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateService"], Object])
                ], ChartPropertyComponent);
                return ChartPropertyComponent;
            }());



            /***/
}),

/***/ "./app/gauges/controls/html-chart/chart-uplot/chart-uplot.component.css":
/*!******************************************************************************!*\
  !*** ./app/gauges/controls/html-chart/chart-uplot/chart-uplot.component.css ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ".mychart-panel {\n    display: block;\n    margin: 0 auto;\n    height: inherit;\n    width: inherit;\n}\n\n.mychart-graph {\n    display: block;\n    margin: 0 auto;\n}\n\n.mychar-toolbar {\n    display: block;\n    height: 34px !important;\n    width: 100% !important;\n    background-color: transparent;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZ2F1Z2VzL2NvbnRyb2xzL2h0bWwtY2hhcnQvY2hhcnQtdXBsb3QvY2hhcnQtdXBsb3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGNBQWM7SUFDZCxjQUFjO0lBQ2QsZUFBZTtJQUNmLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsY0FBYztBQUNsQjs7QUFFQTtJQUNJLGNBQWM7SUFDZCx1QkFBdUI7SUFDdkIsc0JBQXNCO0lBQ3RCLDZCQUE2QjtBQUNqQyIsImZpbGUiOiJzcmMvYXBwL2dhdWdlcy9jb250cm9scy9odG1sLWNoYXJ0L2NoYXJ0LXVwbG90L2NoYXJ0LXVwbG90LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXljaGFydC1wYW5lbCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgaGVpZ2h0OiBpbmhlcml0O1xuICAgIHdpZHRoOiBpbmhlcml0O1xufVxuXG4ubXljaGFydC1ncmFwaCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luOiAwIGF1dG87XG59XG5cbi5teWNoYXItdG9vbGJhciB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgaGVpZ2h0OiAzNHB4ICFpbXBvcnRhbnQ7XG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbn0iXX0= */"

            /***/
}),

/***/ "./app/gauges/controls/html-chart/chart-uplot/chart-uplot.component.html":
/*!*******************************************************************************!*\
  !*** ./app/gauges/controls/html-chart/chart-uplot/chart-uplot.component.html ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div class=\"mychart-panel\" #chartPanel>\n    <div class=\"mychar-toolbar\" *ngIf=\"withToolbar\">\n        <div style=\"display: block; padding-right: 5px;text-align: center;\" class=\"my-form-field\">\n            <button *ngIf=\"isEditor\" style=\"margin-left:5px; border: 0px; height: 28px; width: 200px; cursor: pointer; vertical-align: middle;\">\n            </button>\n            <mat-select *ngIf=\"!isEditor\" [(value)]=\"rangeTypeValue\" style=\"width: 200px\" (selectionChange)=\"onRangeChanged($event.source.value)\">\n                <mat-option *ngFor=\"let ev of rangeType | enumToArray\" [value]=\"ev.key\">\n                    {{ ev.value }}\n                </mat-option>\n            </mat-select>\n            <button style=\"margin-left:5px; border: 0px; height: 28px; width: 40px; cursor: pointer; vertical-align: middle;\" (click)=\"onClick('B')\">\n\t\t\t\t<mat-icon aria-label=\"<<\">skip_previous</mat-icon>\n            </button>\n            <button style=\"margin-left:5px; border: 0px; height: 28px; width: 40px; cursor: pointer; vertical-align: middle;\" (click)=\"onClick('F')\">\n\t\t\t\t<mat-icon aria-label=\">>\">skip_next</mat-icon>\n            </button>\n        </div>\n    </div>\n    <ngx-uplot class=\"mychart-graph\" #nguplot></ngx-uplot>\n    <!-- <div class=\"loader-holder\"> -->\n        <!-- <div class=\"loader\"></div> -->\n    <!-- </div> -->\n</div>"

            /***/
}),

/***/ "./app/gauges/controls/html-chart/chart-uplot/chart-uplot.component.ts":
/*!*****************************************************************************!*\
  !*** ./app/gauges/controls/html-chart/chart-uplot/chart-uplot.component.ts ***!
  \*****************************************************************************/
/*! exports provided: ChartUplotComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChartUplotComponent", function () { return ChartUplotComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _models_chart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../_models/chart */ "./app/_models/chart.ts");
/* harmony import */ var _gui_helpers_ngx_uplot_ngx_uplot_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../gui-helpers/ngx-uplot/ngx-uplot.component */ "./app/gui-helpers/ngx-uplot/ngx-uplot.component.ts");
/* harmony import */ var _models_hmi__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../_models/hmi */ "./app/_models/hmi.ts");
/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../_helpers/utils */ "./app/_helpers/utils.ts");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ngx-translate/core */ "../node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js");
            var __assign = (undefined && undefined.__assign) || function () {
                __assign = Object.assign || function (t) {
                    for (var s, i = 1, n = arguments.length; i < n; i++) {
                        s = arguments[i];
                        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                            t[p] = s[p];
                    }
                    return t;
                };
                return __assign.apply(this, arguments);
            };
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };






            var ChartUplotComponent = /** @class */ (function () {
                function ChartUplotComponent(translateService) {
                    this.translateService = translateService;
                    this.onTimeRange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
                    this.withToolbar = false;
                    this.isEditor = false;
                    this.rangeTypeValue = _helpers_utils__WEBPACK_IMPORTED_MODULE_4__["Utils"].getEnumKey(_models_chart__WEBPACK_IMPORTED_MODULE_1__["ChartRangeType"], _models_chart__WEBPACK_IMPORTED_MODULE_1__["ChartRangeType"].last8h);
                    this.range = { from: Date.now(), to: Date.now() };
                    this.mapData = {};
                }
                ChartUplotComponent_1 = ChartUplotComponent;
                ChartUplotComponent.prototype.ngOnInit = function () {
                    if (!this.options) {
                        this.options = ChartUplotComponent_1.DefaultOptions();
                    }
                };
                ChartUplotComponent.prototype.ngAfterViewInit = function () {
                    var _this = this;
                    this.translateService.get('chart.labels-serie').subscribe(function (txt) {
                        if (_this.nguplot)
                            _this.nguplot.languageLabels.serie = txt;
                    });
                    this.translateService.get('chart.labels-time').subscribe(function (txt) {
                        if (_this.nguplot)
                            _this.nguplot.languageLabels.time = txt;
                    });
                    this.translateService.get('chart.labels-title').subscribe(function (txt) {
                        if (_this.nguplot)
                            _this.nguplot.languageLabels.title = txt;
                    });
                };
                ChartUplotComponent.prototype.ngOnDestroy = function () {
                    try {
                        delete this.chartPanel;
                        delete this.nguplot;
                    }
                    catch (e) {
                        console.error(e);
                    }
                };
                ChartUplotComponent.prototype.onClick = function (ev) {
                    if (this.isEditor) {
                        return;
                    }
                    var msg = new _models_hmi__WEBPACK_IMPORTED_MODULE_3__["DaqQuery"]();
                    msg.gid = this.id;
                    msg.event = ev;
                    if (ev === 'B') { // back
                        this.range.to = new Date(this.range.from).getTime();
                        this.range.from = new Date(this.range.from).setTime(new Date(this.range.from).getTime() - (_models_chart__WEBPACK_IMPORTED_MODULE_1__["ChartRangeConverter"].ChartRangeToHours(this.rangeTypeValue) * 60 * 60 * 1000));
                    }
                    else if (ev === 'F') { // forward
                        this.range.from = new Date(this.range.to).getTime();
                        this.range.to = new Date(this.range.from).setTime(new Date(this.range.from).getTime() + (_models_chart__WEBPACK_IMPORTED_MODULE_1__["ChartRangeConverter"].ChartRangeToHours(this.rangeTypeValue) * 60 * 60 * 1000));
                    }
                    msg.sids = Object.keys(this.mapData);
                    msg.from = this.range.from;
                    msg.to = this.range.to;
                    this.onTimeRange.emit(msg);
                };
                ChartUplotComponent.prototype.onRangeChanged = function (ev) {
                    if (this.isEditor) {
                        return;
                    }
                    if (ev) {
                        this.range.from = Date.now();
                        this.range.to = Date.now();
                        this.range.from = new Date(this.range.from).setTime(new Date(this.range.from).getTime() - (_models_chart__WEBPACK_IMPORTED_MODULE_1__["ChartRangeConverter"].ChartRangeToHours(ev) * 60 * 60 * 1000));
                        var msg = new _models_hmi__WEBPACK_IMPORTED_MODULE_3__["DaqQuery"]();
                        msg.event = ev;
                        msg.gid = this.id;
                        msg.sids = Object.keys(this.mapData);
                        msg.from = this.range.from;
                        msg.to = this.range.to;
                        this.onTimeRange.emit(msg);
                    }
                };
                ChartUplotComponent.prototype.resize = function (height, width) {
                    var chart = this.chartPanel.nativeElement;
                    if (!height && chart.offsetParent) {
                        height = chart.offsetParent.clientHeight;
                    }
                    if (!width && chart.offsetParent) {
                        width = chart.offsetParent.clientWidth;
                    }
                    if (height && width) {
                        this.options.panel.width = width;
                        this.options.width = width;
                        this.options.panel.height = height;
                        this.options.height = height;
                        this.options.height -= 40; // legend
                        if (this.withToolbar) {
                            this.options.height -= 34; // toolbar
                        }
                        var size = _helpers_utils__WEBPACK_IMPORTED_MODULE_4__["Utils"].getDomTextHeight(this.options.titleHeight, this.options.fontFamily);
                        this.options.height -= size; // title
                        size = _helpers_utils__WEBPACK_IMPORTED_MODULE_4__["Utils"].getDomTextHeight(this.options.axisLabelFontSize, this.options.fontFamily);
                        if (size < 10)
                            size = 10;
                        this.options.height -= size; // axis
                        this.nguplot.resize(this.options.height, this.options.width);
                    }
                };
                ChartUplotComponent.prototype.init = function (options) {
                    if (options === void 0) { options = null; }
                    this.mapData = {};
                    if (options) {
                        this.options = options;
                    }
                    this.updateCanvasOptions(this.nguplot);
                    if (this.options.panel) {
                        this.resize(this.options.panel.height, this.options.panel.width);
                    }
                    this.nguplot.init(this.options);
                    this.updateDomOptions(this.nguplot);
                };
                ChartUplotComponent.prototype.setRange = function (startRange) {
                    if (this.withToolbar) {
                        this.onRangeChanged(startRange);
                    }
                };
                ChartUplotComponent.prototype.setOptions = function (options, clear) {
                    if (clear === void 0) { clear = false; }
                    this.options = __assign({}, this.options, options);
                    if (clear) {
                        this.options = __assign({}, this.options, { series: [{}] });
                    }
                    this.init(this.options);
                    this.redraw();
                };
                ChartUplotComponent.prototype.addLine = function (id, name, color, label, yaxis) {
                    if (!this.mapData[id]) {
                        var linelabel = label || name;
                        var serie = { label: linelabel, stroke: color, spanGaps: true };
                        if (yaxis > 1) {
                            serie.scale = yaxis.toString();
                        }
                        else {
                            serie.scale = '1';
                        }
                        this.mapData[id] = {
                            index: Object.keys(this.mapData).length + 1,
                            attribute: serie
                        };
                        this.nguplot.addSerie(this.mapData[id].index, this.mapData[id].attribute);
                    }
                    if (this.isEditor) {
                        this.nguplot.setSample();
                    }
                };
                /**
                 * add value to a realtime chart
                 * @param id
                 * @param x
                 * @param y
                 */
                ChartUplotComponent.prototype.addValue = function (id, x, y) {
                    if (this.mapData[id]) {
                        this.nguplot.addValue(this.mapData[id].index, x, y, this.options.realtime * 60);
                    }
                };
                /**
                 * set values to a history chart
                 * the values is composed of a matrix of array, array of lines values[]<datetime, value> [line][pos]{dt, value}
                 * the have to be transform in uplot format. a matrix with array of datetime and arrays of values [datetime[dt], lineN[value]]
                 * @param values
                 */
                ChartUplotComponent.prototype.setValues = function (values) {
                    var result = [];
                    result.push([]); // timestamp, index 0
                    var xmap = {};
                    for (var i = 0; i < values.length; i++) {
                        result.push([]); // line
                        for (var x = 0; x < values[i].length; x++) {
                            var t = values[i][x].dt / 1e3;
                            if (!result[0][t]) {
                                result[0].push(t);
                                xmap[t] = {};
                            }
                            xmap[t][i] = values[i][x].value;
                        }
                    }
                    result[0].sort(function (a, b) { return a - b; });
                    for (var i = 0; i < result[0].length; i++) {
                        var t = result[0][i];
                        for (var x = 1; x < result.length; x++) {
                            if (xmap[t][x - 1] !== undefined) {
                                result[x].push(xmap[t][x - 1]);
                            }
                            else {
                                result[x].push(null);
                            }
                        }
                    }
                    this.nguplot.setData(result);
                    this.nguplot.setXScala(this.range.from / 1e3, this.range.to / 1e3);
                };
                ChartUplotComponent.prototype.redraw = function () {
                    this.nguplot.redraw();
                };
                ChartUplotComponent.DefaultOptions = function () {
                    return {
                        title: 'Title', fontFamily: 'Roboto-Regular', legendFontSize: 12, colorBackground: 'rgba(0,0,0,0)', legendBackground: 'rgba(0,0,0,0)',
                        titleHeight: 18, axisLabelFontSize: 12, labelsDivWidth: 0, axisLineColor: 'rgba(0,0,0,1)', axisLabelColor: 'rgba(0,0,0,1)',
                        legendMode: 'always', series: [], width: 360, height: 200, decimalsPrecision: 2, realtime: 60,
                        dateFormat: _helpers_utils__WEBPACK_IMPORTED_MODULE_4__["Utils"].getEnumKey(_models_hmi__WEBPACK_IMPORTED_MODULE_3__["DateFormatType"], _models_hmi__WEBPACK_IMPORTED_MODULE_3__["DateFormatType"].MM_DD_YYYY),
                        timeFormat: _helpers_utils__WEBPACK_IMPORTED_MODULE_4__["Utils"].getEnumKey(_models_hmi__WEBPACK_IMPORTED_MODULE_3__["TimeFormatType"], _models_hmi__WEBPACK_IMPORTED_MODULE_3__["TimeFormatType"].hh_mm_ss_AA)
                    };
                };
                ChartUplotComponent.prototype.updateCanvasOptions = function (ngup) {
                    if (!this.options.axes) {
                        this.options.axes = [{ label: 'Time', grid: { show: true, width: 1 / devicePixelRatio }, ticks: {} }];
                        this.options.axes.push({ grid: { show: true, width: 1 / devicePixelRatio }, ticks: {}, scale: '1' });
                        this.options.axes.push({ grid: { show: false, width: 1 / devicePixelRatio }, ticks: {}, side: 1, scale: '2' });
                        this.options.axes.push({ grid: { show: false, width: 1 / devicePixelRatio }, ticks: {}, side: 3, scale: '3' });
                        this.options.axes.push({ grid: { show: false, width: 1 / devicePixelRatio }, ticks: {}, side: 1, scale: '4' });
                    }
                    for (var i = 0; i < this.options.axes.length; i++) {
                        var font = '';
                        if (this.options.axisLabelFontSize) {
                            font = this.options.axisLabelFontSize + 'px';
                        }
                        if (this.options.fontFamily)
                            font += ' ' + this.options.fontFamily;
                        this.options.axes[i].font = font;
                        this.options.axes[i].labelFont = font;
                        this.options.axes[i].ticks = { width: 1 / devicePixelRatio };
                        if (this.options.gridLineColor) {
                            this.options.axes[i].grid.stroke = this.options.gridLineColor;
                            this.options.axes[i].ticks.stroke = this.options.gridLineColor;
                        }
                        if (this.options.axisLabelColor)
                            this.options.axes[i].stroke = this.options.axisLabelColor;
                    }
                    var always = _helpers_utils__WEBPACK_IMPORTED_MODULE_4__["Utils"].getEnumKey(_models_chart__WEBPACK_IMPORTED_MODULE_1__["ChartLegendMode"], _models_chart__WEBPACK_IMPORTED_MODULE_1__["ChartLegendMode"].always);
                    var bottom = _helpers_utils__WEBPACK_IMPORTED_MODULE_4__["Utils"].getEnumKey(_models_chart__WEBPACK_IMPORTED_MODULE_1__["ChartLegendMode"], _models_chart__WEBPACK_IMPORTED_MODULE_1__["ChartLegendMode"].bottom);
                    var follow = _helpers_utils__WEBPACK_IMPORTED_MODULE_4__["Utils"].getEnumKey(_models_chart__WEBPACK_IMPORTED_MODULE_1__["ChartLegendMode"], _models_chart__WEBPACK_IMPORTED_MODULE_1__["ChartLegendMode"].follow);
                    this.options.legend = { show: (this.options.legendMode === always || this.options.legendMode === bottom), width: 1 };
                    this.options.tooltip = { show: (this.options.legendMode === always || this.options.legendMode === follow) };
                };
                ChartUplotComponent.prototype.updateDomOptions = function (ngup) {
                    var ele = this.chartPanel.nativeElement.getElementsByClassName('u-title');
                    if (ele) {
                        var title = ele[0];
                        if (this.options.titleHeight) {
                            if (this.options.axisLabelColor)
                                title.style.color = this.options.axisLabelColor;
                            if (this.options.titleHeight)
                                title.style.fontSize = this.options.titleHeight + "px";
                            if (this.options.fontFamily)
                                title.style.fontFamily = this.options.fontFamily;
                        }
                        else {
                            title.style.display = 'none';
                        }
                    }
                    this.chartPanel.nativeElement.style.backgroundColor = this.options.colorBackground;
                };
                var ChartUplotComponent_1;
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('chartPanel'),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"])
                ], ChartUplotComponent.prototype, "chartPanel", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('nguplot'),
                    __metadata("design:type", _gui_helpers_ngx_uplot_ngx_uplot_component__WEBPACK_IMPORTED_MODULE_2__["NgxUplotComponent"])
                ], ChartUplotComponent.prototype, "nguplot", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Object)
                ], ChartUplotComponent.prototype, "options", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"])
                ], ChartUplotComponent.prototype, "onTimeRange", void 0);
                ChartUplotComponent = ChartUplotComponent_1 = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'chart-uplot',
                        template: __webpack_require__(/*! ./chart-uplot.component.html */ "./app/gauges/controls/html-chart/chart-uplot/chart-uplot.component.html"),
                        styles: [__webpack_require__(/*! ./chart-uplot.component.css */ "./app/gauges/controls/html-chart/chart-uplot/chart-uplot.component.css")]
                    }),
                    __metadata("design:paramtypes", [_ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateService"]])
                ], ChartUplotComponent);
                return ChartUplotComponent;
            }());



            /***/
}),

/***/ "./app/gauges/controls/html-chart/html-chart.component.css":
/*!*****************************************************************!*\
  !*** ./app/gauges/controls/html-chart/html-chart.component.css ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dhdWdlcy9jb250cm9scy9odG1sLWNoYXJ0L2h0bWwtY2hhcnQuY29tcG9uZW50LmNzcyJ9 */"

            /***/
}),

/***/ "./app/gauges/controls/html-chart/html-chart.component.html":
/*!******************************************************************!*\
  !*** ./app/gauges/controls/html-chart/html-chart.component.html ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ""

            /***/
}),

/***/ "./app/gauges/controls/html-chart/html-chart.component.ts":
/*!****************************************************************!*\
  !*** ./app/gauges/controls/html-chart/html-chart.component.ts ***!
  \****************************************************************/
/*! exports provided: HtmlChartComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HtmlChartComponent", function () { return HtmlChartComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _gauge_base_gauge_base_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../gauge-base/gauge-base.component */ "./app/gauges/gauge-base/gauge-base.component.ts");
/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../_helpers/utils */ "./app/_helpers/utils.ts");
/* harmony import */ var _gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../gauge-property/gauge-property.component */ "./app/gauges/gauge-property/gauge-property.component.ts");
/* harmony import */ var _chart_uplot_chart_uplot_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./chart-uplot/chart-uplot.component */ "./app/gauges/controls/html-chart/chart-uplot/chart-uplot.component.ts");
            var __extends = (undefined && undefined.__extends) || (function () {
                var extendStatics = function (d, b) {
                    extendStatics = Object.setPrototypeOf ||
                        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
                    return extendStatics(d, b);
                };
                return function (d, b) {
                    extendStatics(d, b);
                    function __() { this.constructor = d; }
                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
                };
            })();
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };





            var HtmlChartComponent = /** @class */ (function (_super) {
                __extends(HtmlChartComponent, _super);
                function HtmlChartComponent(resolver) {
                    var _this = _super.call(this) || this;
                    _this.resolver = resolver;
                    return _this;
                }
                HtmlChartComponent_1 = HtmlChartComponent;
                HtmlChartComponent.prototype.ngOnInit = function () { };
                HtmlChartComponent.getSignals = function (pro) {
                    return pro.variableIds;
                };
                HtmlChartComponent.getDialogType = function () {
                    return _gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_3__["GaugeDialogType"].Chart;
                };
                HtmlChartComponent.processValue = function (ga, svgele, sig, gaugeStatus, gauge) {
                    try {
                        gauge.addValue(sig.id, new Date().getTime() / 1000, sig.value);
                    }
                    catch (err) {
                        console.error(err);
                    }
                };
                HtmlChartComponent.initElement = function (gab, resolver, viewContainerRef, isview, chartRange) {
                    var ele = document.getElementById(gab.id);
                    if (ele) {
                        var htmlChart = _helpers_utils__WEBPACK_IMPORTED_MODULE_2__["Utils"].searchTreeStartWith(ele, this.prefixD);
                        if (htmlChart) {
                            var factory = resolver.resolveComponentFactory(_chart_uplot_chart_uplot_component__WEBPACK_IMPORTED_MODULE_4__["ChartUplotComponent"]);
                            var componentRef = viewContainerRef.createComponent(factory);
                            if (gab.property) {
                                componentRef.instance.withToolbar = (gab.property.type === 'history') ? true : false;
                            }
                            htmlChart.innerHTML = '';
                            componentRef.instance.isEditor = !isview;
                            componentRef.instance.rangeType = chartRange;
                            componentRef.instance.id = gab.id;
                            componentRef.changeDetectorRef.detectChanges();
                            htmlChart.appendChild(componentRef.location.nativeElement);
                            var opt = { title: '', panel: { height: htmlChart.clientHeight, width: htmlChart.clientWidth } };
                            componentRef.instance.setOptions(opt);
                            componentRef.instance['myComRef'] = componentRef;
                            return componentRef.instance;
                        }
                    }
                };
                HtmlChartComponent.detectChange = function (gab, res, ref) {
                    return HtmlChartComponent_1.initElement(gab, res, ref, false, null);
                };
                var HtmlChartComponent_1;
                HtmlChartComponent.TypeTag = "svg-ext-html_chart";
                HtmlChartComponent.LabelTag = "HtmlChart";
                HtmlChartComponent.prefixD = "D-HXC_";
                HtmlChartComponent = HtmlChartComponent_1 = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: "html-chart",
                        template: __webpack_require__(/*! ./html-chart.component.html */ "./app/gauges/controls/html-chart/html-chart.component.html"),
                        styles: [__webpack_require__(/*! ./html-chart.component.css */ "./app/gauges/controls/html-chart/html-chart.component.css")]
                    }),
                    __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ComponentFactoryResolver"]])
                ], HtmlChartComponent);
                return HtmlChartComponent;
            }(_gauge_base_gauge_base_component__WEBPACK_IMPORTED_MODULE_1__["GaugeBaseComponent"]));



            /***/
}),

/***/ "./app/gauges/controls/html-input/html-input.component.css":
/*!*****************************************************************!*\
  !*** ./app/gauges/controls/html-input/html-input.component.css ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dhdWdlcy9jb250cm9scy9odG1sLWlucHV0L2h0bWwtaW5wdXQuY29tcG9uZW50LmNzcyJ9 */"

            /***/
}),

/***/ "./app/gauges/controls/html-input/html-input.component.html":
/*!******************************************************************!*\
  !*** ./app/gauges/controls/html-input/html-input.component.html ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ""

            /***/
}),

/***/ "./app/gauges/controls/html-input/html-input.component.ts":
/*!****************************************************************!*\
  !*** ./app/gauges/controls/html-input/html-input.component.ts ***!
  \****************************************************************/
/*! exports provided: HtmlInputComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HtmlInputComponent", function () { return HtmlInputComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _gauge_base_gauge_base_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../gauge-base/gauge-base.component */ "./app/gauges/gauge-base/gauge-base.component.ts");
/* harmony import */ var _models_hmi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../_models/hmi */ "./app/_models/hmi.ts");
/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../_helpers/utils */ "./app/_helpers/utils.ts");
/* harmony import */ var _gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../gauge-property/gauge-property.component */ "./app/gauges/gauge-property/gauge-property.component.ts");
            var __extends = (undefined && undefined.__extends) || (function () {
                var extendStatics = function (d, b) {
                    extendStatics = Object.setPrototypeOf ||
                        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
                    return extendStatics(d, b);
                };
                return function (d, b) {
                    extendStatics(d, b);
                    function __() { this.constructor = d; }
                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
                };
            })();
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };





            var HtmlInputComponent = /** @class */ (function (_super) {
                __extends(HtmlInputComponent, _super);
                function HtmlInputComponent() {
                    return _super.call(this) || this;
                }
                HtmlInputComponent_1 = HtmlInputComponent;
                HtmlInputComponent.prototype.ngOnInit = function () {
                };
                HtmlInputComponent.getSignals = function (pro) {
                    var res = [];
                    if (pro.variableId) {
                        res.push(pro.variableId);
                    }
                    if (pro.actions && pro.actions.length) {
                        pro.actions.forEach(function (act) {
                            res.push(act.variableId);
                        });
                    }
                    return res;
                };
                HtmlInputComponent.getDialogType = function () {
                    return _gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_4__["GaugeDialogType"].OnlyValue;
                };
                HtmlInputComponent.getActions = function () {
                    return this.actionsType;
                };
                HtmlInputComponent.getHtmlEvents = function (ga) {
                    var ele = document.getElementById(ga.id);
                    if (ele) {
                        var input = _helpers_utils__WEBPACK_IMPORTED_MODULE_3__["Utils"].searchTreeStartWith(ele, this.prefix);
                        if (input) {
                            var event_1 = new _models_hmi__WEBPACK_IMPORTED_MODULE_2__["Event"]();
                            event_1.dom = input;
                            event_1.type = 'key-enter';
                            event_1.ga = ga;
                            return event_1;
                        }
                    }
                    return null;
                };
                HtmlInputComponent.processValue = function (ga, svgele, sig, gaugeStatus) {
                    try {
                        if (svgele.node && svgele.node.children && svgele.node.children.length >= 1) {
                            var input_1 = _helpers_utils__WEBPACK_IMPORTED_MODULE_3__["Utils"].searchTreeStartWith(svgele.node, this.prefix);
                            if (input_1) {
                                var val_1 = parseFloat(sig.value);
                                if (Number.isNaN(val_1)) {
                                    // maybe boolean
                                    val_1 = Number(sig.value);
                                }
                                else {
                                    val_1 = parseFloat(val_1.toFixed(5));
                                }
                                if (!input_1.value || input_1.value.length <= 0) {
                                    input_1.value = val_1;
                                }
                                // check actions
                                if (ga.property.actions) {
                                    ga.property.actions.forEach(function (act) {
                                        if (act.variableId === sig.id) {
                                            HtmlInputComponent_1.processAction(act, svgele, input_1, val_1, gaugeStatus);
                                        }
                                    });
                                }
                            }
                        }
                    }
                    catch (err) {
                        console.error(err);
                    }
                };
                HtmlInputComponent.initElement = function (gab, isview) {
                    if (isview) {
                        var ele = document.getElementById(gab.id);
                        if (ele && gab.property) {
                            var input = _helpers_utils__WEBPACK_IMPORTED_MODULE_3__["Utils"].searchTreeStartWith(ele, this.prefix);
                            if (input) {
                                input.value = '';
                                input.setAttribute('autocomplete', 'off');
                            }
                        }
                    }
                };
                HtmlInputComponent.initElementColor = function (bkcolor, color, ele) {
                    var htmlInput = _helpers_utils__WEBPACK_IMPORTED_MODULE_3__["Utils"].searchTreeStartWith(ele, this.prefix);
                    if (htmlInput) {
                        if (bkcolor) {
                            htmlInput.style.backgroundColor = bkcolor;
                        }
                        if (color) {
                            htmlInput.style.color = color;
                        }
                    }
                };
                HtmlInputComponent.getFillColor = function (ele) {
                    if (ele.children && ele.children[0]) {
                        var htmlInput = _helpers_utils__WEBPACK_IMPORTED_MODULE_3__["Utils"].searchTreeStartWith(ele, this.prefix);
                        if (htmlInput) {
                            return htmlInput.style.backgroundColor;
                        }
                    }
                    return ele.getAttribute('fill');
                };
                HtmlInputComponent.getStrokeColor = function (ele) {
                    if (ele.children && ele.children[0]) {
                        var htmlInput = _helpers_utils__WEBPACK_IMPORTED_MODULE_3__["Utils"].searchTreeStartWith(ele, this.prefix);
                        if (htmlInput) {
                            return htmlInput.style.color;
                        }
                    }
                    return ele.getAttribute('stroke');
                };
                HtmlInputComponent.processAction = function (act, svgele, input, value, gaugeStatus) {
                    if (this.actionsType[act.type] === this.actionsType.hide) {
                        if (act.range.min <= value && act.range.max >= value) {
                            var element = SVG.adopt(svgele.node);
                            this.runActionHide(element, act.type, gaugeStatus);
                        }
                    }
                    else if (this.actionsType[act.type] === this.actionsType.show) {
                        if (act.range.min <= value && act.range.max >= value) {
                            var element = SVG.adopt(svgele.node);
                            this.runActionShow(element, act.type, gaugeStatus);
                        }
                    }
                };
                var HtmlInputComponent_1;
                HtmlInputComponent.TypeTag = 'svg-ext-html_input';
                HtmlInputComponent.LabelTag = 'HtmlInput';
                HtmlInputComponent.prefix = 'I-HXI_';
                HtmlInputComponent.actionsType = { hide: _models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeActionsType"].hide, show: _models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeActionsType"].show };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Object)
                ], HtmlInputComponent.prototype, "data", void 0);
                HtmlInputComponent = HtmlInputComponent_1 = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'html-input',
                        template: __webpack_require__(/*! ./html-input.component.html */ "./app/gauges/controls/html-input/html-input.component.html"),
                        styles: [__webpack_require__(/*! ./html-input.component.css */ "./app/gauges/controls/html-input/html-input.component.css")]
                    }),
                    __metadata("design:paramtypes", [])
                ], HtmlInputComponent);
                return HtmlInputComponent;
            }(_gauge_base_gauge_base_component__WEBPACK_IMPORTED_MODULE_1__["GaugeBaseComponent"]));



            /***/
}),

/***/ "./app/gauges/controls/html-select/html-select.component.css":
/*!*******************************************************************!*\
  !*** ./app/gauges/controls/html-select/html-select.component.css ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dhdWdlcy9jb250cm9scy9odG1sLXNlbGVjdC9odG1sLXNlbGVjdC5jb21wb25lbnQuY3NzIn0= */"

            /***/
}),

/***/ "./app/gauges/controls/html-select/html-select.component.html":
/*!********************************************************************!*\
  !*** ./app/gauges/controls/html-select/html-select.component.html ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ""

            /***/
}),

/***/ "./app/gauges/controls/html-select/html-select.component.ts":
/*!******************************************************************!*\
  !*** ./app/gauges/controls/html-select/html-select.component.ts ***!
  \******************************************************************/
/*! exports provided: HtmlSelectComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HtmlSelectComponent", function () { return HtmlSelectComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _gauge_base_gauge_base_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../gauge-base/gauge-base.component */ "./app/gauges/gauge-base/gauge-base.component.ts");
/* harmony import */ var _models_hmi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../_models/hmi */ "./app/_models/hmi.ts");
/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../_helpers/utils */ "./app/_helpers/utils.ts");
/* harmony import */ var _gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../gauge-property/gauge-property.component */ "./app/gauges/gauge-property/gauge-property.component.ts");
            var __extends = (undefined && undefined.__extends) || (function () {
                var extendStatics = function (d, b) {
                    extendStatics = Object.setPrototypeOf ||
                        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
                    return extendStatics(d, b);
                };
                return function (d, b) {
                    extendStatics(d, b);
                    function __() { this.constructor = d; }
                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
                };
            })();
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };





            var HtmlSelectComponent = /** @class */ (function (_super) {
                __extends(HtmlSelectComponent, _super);
                function HtmlSelectComponent() {
                    return _super.call(this) || this;
                }
                HtmlSelectComponent_1 = HtmlSelectComponent;
                HtmlSelectComponent.prototype.ngOnInit = function () {
                };
                HtmlSelectComponent.getSignals = function (pro) {
                    var res = [];
                    if (pro.variableId) {
                        res.push(pro.variableId);
                    }
                    if (pro.actions && pro.actions.length) {
                        pro.actions.forEach(function (act) {
                            res.push(act.variableId);
                        });
                    }
                    return res;
                };
                HtmlSelectComponent.getDialogType = function () {
                    return _gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_4__["GaugeDialogType"].Step;
                };
                HtmlSelectComponent.getActions = function () {
                    return this.actionsType;
                };
                HtmlSelectComponent.getHtmlEvents = function (ga) {
                    var ele = document.getElementById(ga.id);
                    if (ele) {
                        var select = _helpers_utils__WEBPACK_IMPORTED_MODULE_3__["Utils"].searchTreeStartWith(ele, this.prefix);
                        if (select) {
                            var event_1 = new _models_hmi__WEBPACK_IMPORTED_MODULE_2__["Event"]();
                            event_1.dom = select;
                            event_1.type = 'change';
                            event_1.ga = ga;
                            return event_1;
                        }
                    }
                    return null;
                };
                HtmlSelectComponent.processValue = function (ga, svgele, sig, gaugeStatus) {
                    try {
                        var select_1 = _helpers_utils__WEBPACK_IMPORTED_MODULE_3__["Utils"].searchTreeStartWith(svgele.node, this.prefix);
                        if (select_1) {
                            var val_1 = parseFloat(sig.value);
                            if (Number.isNaN(val_1)) {
                                // maybe boolean
                                val_1 = Number(sig.value);
                            }
                            else {
                                val_1 = parseFloat(val_1.toFixed(5));
                            }
                            select_1.value = val_1;
                            // check actions
                            if (ga.property.actions) {
                                ga.property.actions.forEach(function (act) {
                                    if (act.variableId === sig.id) {
                                        HtmlSelectComponent_1.processAction(act, svgele, select_1, val_1, gaugeStatus);
                                    }
                                });
                            }
                        }
                    }
                    catch (err) {
                        console.error(err);
                    }
                };
                HtmlSelectComponent.initElement = function (ga, isview) {
                    if (isview === void 0) { isview = false; }
                    var ele = document.getElementById(ga.id);
                    if (ele) {
                        var select_2 = _helpers_utils__WEBPACK_IMPORTED_MODULE_3__["Utils"].searchTreeStartWith(ele, this.prefix);
                        if (select_2) {
                            if (ga.property) {
                                if (ga.property.readonly) {
                                    select_2.disabled = true;
                                    select_2.style['appearance'] = "none";
                                    select_2.style['border-width'] = "0px";
                                }
                                else {
                                    select_2.style['appearance'] = "menulist";
                                }
                                var align = select_2.style['text-align'];
                                if (align) {
                                    select_2.style['text-align-last'] = align;
                                }
                            }
                            select_2.innerHTML = "";
                            if (!isview) {
                                var option = document.createElement("option");
                                option.disabled = true;
                                option.selected = true; //'<option value="" selected disabled hidden>Choose here</option>';
                                option.innerHTML = "Choose...";
                                select_2.appendChild(option);
                            }
                            else {
                                ga.property.ranges.forEach(function (element) {
                                    var option = document.createElement("option");
                                    option.value = element.min;
                                    if (element.text) {
                                        option.text = element.text;
                                    }
                                    select_2.appendChild(option);
                                });
                            }
                        }
                    }
                };
                HtmlSelectComponent.initElementColor = function (bkcolor, color, ele) {
                    var select = _helpers_utils__WEBPACK_IMPORTED_MODULE_3__["Utils"].searchTreeStartWith(ele, this.prefix);
                    if (select) {
                        if (bkcolor) {
                            select.style.backgroundColor = bkcolor;
                        }
                        if (color) {
                            select.style.color = color;
                        }
                    }
                };
                HtmlSelectComponent.getFillColor = function (ele) {
                    if (ele.children && ele.children[0]) {
                        var select = _helpers_utils__WEBPACK_IMPORTED_MODULE_3__["Utils"].searchTreeStartWith(ele, this.prefix);
                        if (select) {
                            return select.style.backgroundColor;
                        }
                    }
                    return ele.getAttribute('fill');
                };
                HtmlSelectComponent.getStrokeColor = function (ele) {
                    if (ele.children && ele.children[0]) {
                        var select = _helpers_utils__WEBPACK_IMPORTED_MODULE_3__["Utils"].searchTreeStartWith(ele, this.prefix);
                        if (select) {
                            return select.style.color;
                        }
                    }
                    return ele.getAttribute('stroke');
                };
                HtmlSelectComponent.processAction = function (act, svgele, select, value, gaugeStatus) {
                    if (this.actionsType[act.type] === this.actionsType.hide) {
                        if (act.range.min <= value && act.range.max >= value) {
                            var element = SVG.adopt(svgele.node);
                            this.runActionHide(element, act.type, gaugeStatus);
                        }
                    }
                    else if (this.actionsType[act.type] === this.actionsType.show) {
                        if (act.range.min <= value && act.range.max >= value) {
                            var element = SVG.adopt(svgele.node);
                            this.runActionShow(element, act.type, gaugeStatus);
                        }
                    }
                };
                var HtmlSelectComponent_1;
                HtmlSelectComponent.TypeTag = 'svg-ext-html_select';
                HtmlSelectComponent.LabelTag = 'HtmlSelect';
                HtmlSelectComponent.prefix = 'S-HXS_';
                HtmlSelectComponent.actionsType = { hide: _models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeActionsType"].hide, show: _models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeActionsType"].show };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Object)
                ], HtmlSelectComponent.prototype, "data", void 0);
                HtmlSelectComponent = HtmlSelectComponent_1 = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'html-select',
                        template: __webpack_require__(/*! ./html-select.component.html */ "./app/gauges/controls/html-select/html-select.component.html"),
                        styles: [__webpack_require__(/*! ./html-select.component.css */ "./app/gauges/controls/html-select/html-select.component.css")]
                    }),
                    __metadata("design:paramtypes", [])
                ], HtmlSelectComponent);
                return HtmlSelectComponent;
            }(_gauge_base_gauge_base_component__WEBPACK_IMPORTED_MODULE_1__["GaugeBaseComponent"]));



            /***/
}),

/***/ "./app/gauges/controls/html-switch/html-switch-property/html-switch-property.component.html":
/*!**************************************************************************************************!*\
  !*** ./app/gauges/controls/html-switch/html-switch-property/html-switch-property.component.html ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div style=\"width: 650px;position: relative;\">\n    <h1 mat-dialog-title style=\"display:inline-block;cursor:move;\" mat-dialog-draggable>{{'editor.controls-html-switch-settings' | translate}}</h1>\n    <mat-icon (click)=\"onNoClick()\" style=\"float:right;margin-right:-10px;margin-top:-10px;cursor:pointer;color:gray;\">clear</mat-icon>\n    <mat-tab-group style=\"width: 100%;\">\n        <mat-tab label=\"{{'gauges.property-props' | translate}}\">\n            <div style=\"height: 500px; overflow-y: auto; overflow-x: hidden; padding-top: 15px;\">\n                <div style=\"display: block;\">\n                    <flex-auth [name]=\"name\" [permission]=\"property.permission\" #flexauth></flex-auth>\n                </div>\n                <div mat-dialog-content style=\"overflow: hidden; width:100%\">\n                    <flex-head [data]=\"data\" [property]=\"property\" #flexhead></flex-head>\n                </div>\n                <div class=\"field-row\" style=\"padding-top: 10px;\">\n                    <div class=\"my-form-field\" style=\"padding-left: 60px;\">\n                        <span>{{'html-switch.property-off-value' | translate}}</span>\n                        <input numberOnly [(ngModel)]=\"options.offValue\" style=\"width: 80px;text-align: center;display:inline-block;\" type=\"text\">\n                    </div>\n                    <div class=\"my-form-field\" style=\"float: right;padding-right: 60px\">\n                        <span>{{'html-switch.property-on-value' | translate}}</span>\n                        <input numberOnly [(ngModel)]=\"options.onValue\" style=\"width: 80px;text-align: center;display:inline-block;\" type=\"text\">\n                    </div>\n                </div>\n                <div class=\"field-row\" style=\"padding-top: 10px;\">\n                    <div class=\"my-form-field color-field\">\n                        <span>{{'html-switch.property-off-background' | translate}}</span>\n                        <input [(colorPicker)]=\"options.offBackground\" [style.background]=\"options.offBackground\" [cpAlphaChannel]=\"'always'\" class=\"input-color\"\n                            [cpPresetColors]=\"defaultColor\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\" [cpCancelButtonClass]=\"'cpCancelButtonClass'\"\n                            [cpCancelButtonText]=\"'Cancel'\" [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\" style=\"padding: 8px 0 0 0; width: 98px\"\n                            [cpPosition]=\"'right'\" (colorPickerChange)=\"updateOptions()\" />\n                    </div>\n                    <div class=\"my-form-field color-field\" style=\"padding-left: 12px\">\n                        <span>{{'html-switch.property-off-slider-color' | translate}}</span>\n                        <input [(colorPicker)]=\"options.offSliderColor\" [style.background]=\"options.offSliderColor\" [cpAlphaChannel]=\"'always'\" class=\"input-color\"\n                            [cpPresetColors]=\"defaultColor\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\" [cpCancelButtonClass]=\"'cpCancelButtonClass'\"\n                            [cpCancelButtonText]=\"'Cancel'\" [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\" style=\"padding: 8px 0 0 0; width: 98px\"\n                            [cpPosition]=\"'right'\" (colorPickerChange)=\"updateOptions()\" />\n                    </div>\n                    <div class=\"my-form-field slider-field\" style=\"padding-left: 50px; top: -1px;\">\n                        <span>{{'html-switch.property-radius' | translate}}</span>\n                        <mat-slider style=\"display:inline-block;\" [max]=\"100\" [min]=\"0\" [step]=\"1\" [thumbLabel]=\"true\" [(ngModel)]=\"options.radius\" (input)=\"updateOptions()\">\n                        </mat-slider>\n                    </div>\n                    <div class=\"my-form-field color-field\" style=\"float: right;padding-left: 12px;\">\n                        <span>{{'html-switch.property-on-background' | translate}}</span>\n                        <input [(colorPicker)]=\"options.onBackground\" [style.background]=\"options.onBackground\" [cpAlphaChannel]=\"'always'\" class=\"input-color\"\n                            [cpPresetColors]=\"defaultColor\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\" [cpCancelButtonClass]=\"'cpCancelButtonClass'\"\n                            [cpCancelButtonText]=\"'Cancel'\" [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\" style=\"padding: 8px 0 0 0; width: 98px\"\n                            [cpPosition]=\"'left'\" (colorPickerChange)=\"updateOptions()\" />\n                    </div>\n                    <div class=\"my-form-field color-field\" style=\"float: right;\">\n                        <span>{{'html-switch.property-on-slider-color' | translate}}</span>\n                        <input [(colorPicker)]=\"options.onSliderColor\" [style.background]=\"options.onSliderColor\" [cpAlphaChannel]=\"'always'\" class=\"input-color\"\n                            [cpPresetColors]=\"defaultColor\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\" [cpCancelButtonClass]=\"'cpCancelButtonClass'\"\n                            [cpCancelButtonText]=\"'Cancel'\" [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\" style=\"padding: 8px 0 0 0; width: 98px\"\n                            [cpPosition]=\"'left'\" (colorPickerChange)=\"updateOptions()\" />\n                    </div>\n                </div>\n                <div class=\"field-row\">\n                    <div class=\"my-form-field color-field\">\n                        <span>{{'html-switch.property-off-text-color' | translate}}</span>\n                        <input [(colorPicker)]=\"options.offTextColor\" [style.background]=\"options.offTextColor\" [cpAlphaChannel]=\"'always'\" class=\"input-color\"\n                            [cpPresetColors]=\"defaultColor\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\" [cpCancelButtonClass]=\"'cpCancelButtonClass'\"\n                            [cpCancelButtonText]=\"'Cancel'\" [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\" style=\"padding: 8px 0 0 0; width: 98px\"\n                            [cpPosition]=\"'top'\" (colorPickerChange)=\"updateOptions()\" />\n                    </div>\n                    <div class=\"my-form-field\" style=\"padding-left: 12px;\">\n                        <span>{{'html-switch.property-off-text' | translate}}</span>\n                        <input [(ngModel)]=\"options.offText\" (change)=\"updateOptions()\" style=\"width: 60px;text-align: center;display:inline-block;\" type=\"text\">\n                    </div>\n                    <div class=\"my-form-field slider-field slider-small\" style=\"padding-left: 17px; top: -2px;width: 80px;\">\n                        <span>{{'html-switch.property-font-size' | translate}}</span>\n                        <mat-slider style=\"display:inline-block;\" [max]=\"50\" [min]=\"0\" [step]=\"1\" [thumbLabel]=\"true\" [(ngModel)]=\"options.fontSize\" (input)=\"updateOptions()\">\n                        </mat-slider>\n                    </div>\n                    <div class=\"my-form-field\" style=\"width:160px;padding-left: 12px;\">\n                        <span>{{'html-switch.property-font' | translate}}</span>\n                        <mat-select [(value)]=\"options.fontFamily\" (selectionChange)=\"updateOptions()\">\n                            <mat-option *ngFor=\"let font of fonts\" [style.fontFamily]=\"font\" [value]=\"font\">\n                                {{font}}\n                            </mat-option>\n                        </mat-select>\n                    </div>\n                    <div class=\"my-form-field color-field\" style=\"float: right;padding-left: 12px\">\n                        <span>{{'html-switch.property-on-text-color' | translate}}</span>\n                        <input [(colorPicker)]=\"options.onTextColor\" [style.background]=\"options.onTextColor\" [cpAlphaChannel]=\"'always'\" class=\"input-color\"\n                            [cpPresetColors]=\"defaultColor\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\" [cpCancelButtonClass]=\"'cpCancelButtonClass'\"\n                            [cpCancelButtonText]=\"'Cancel'\" [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\" style=\"padding: 8px 0 0 0; width: 98px\"\n                            [cpPosition]=\"'top'\" (colorPickerChange)=\"updateOptions()\" />\n                    </div>\n                    <div class=\"my-form-field\" style=\"float: right;padding-left: 12px;\">\n                        <span>{{'html-switch.property-on-text' | translate}}</span>\n                        <input [(ngModel)]=\"options.onText\" (change)=\"updateOptions()\" style=\"width: 60px;text-align: center;display:inline-block;\" type=\"text\">\n                    </div>\n                </div>\n                <div class=\"field-row\" style=\"position: absolute;height:210px;width:650px;margin-top: 16px;max-width: 650px; max-height: 210px;overflow: hidden;\">\n                    <ngx-switch #switcher style=\"position: absolute;left: 50%;top: 50%;transform: translateX(-50%) translateY(-50%);\" [style.width]=\"switchWidth + 'px'\"\n                        [style.height]=\"switchHeight + 'px'\"></ngx-switch>\n                </div>\n            </div>\n        </mat-tab>\n    </mat-tab-group>\n    <div mat-dialog-actions class=\"dialog-action\">\n        <button mat-raised-button (click)=\"onNoClick()\">{{'dlg.cancel' | translate}}</button>\n        <button mat-raised-button color=\"primary\" (click)=\"onOkClick()\" [mat-dialog-close]=\"data\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\n    </div>\n</div>"

            /***/
}),

/***/ "./app/gauges/controls/html-switch/html-switch-property/html-switch-property.component.scss":
/*!**************************************************************************************************!*\
  !*** ./app/gauges/controls/html-switch/html-switch-property/html-switch-property.component.scss ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ".field-row {\n  display: block;\n  margin-bottom: 5px; }\n\n.slider-field span {\n  padding-left: 2px;\n  text-overflow: clip;\n  width: 150px;\n  white-space: nowrap;\n  overflow: hidden; }\n\n.slider-field mat-slider {\n  background-color: var(--formSliderBackground);\n  height: 29px; }\n\n.slider-small > .mat-slider-horizontal {\n  min-width: 80px; }\n\n::ng-deep .mat-tab-label {\n  height: 34px !important; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9iaWxhbC9Eb2N1bWVudHMvRlVYQS9jbGllbnQvc3JjL2FwcC9nYXVnZXMvY29udHJvbHMvaHRtbC1zd2l0Y2gvaHRtbC1zd2l0Y2gtcHJvcGVydHkvaHRtbC1zd2l0Y2gtcHJvcGVydHkuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDSSxjQUFjO0VBQ2Qsa0JBQWtCLEVBQUE7O0FBR3RCO0VBQ0ksaUJBQWlCO0VBQ2pCLG1CQUFtQjtFQUNuQixZQUFZO0VBQ1osbUJBQW1CO0VBQ25CLGdCQUFnQixFQUFBOztBQUdwQjtFQUNJLDZDQUE2QztFQUM3QyxZQUFZLEVBQUE7O0FBR2hCO0VBQ0ksZUFBZSxFQUFBOztBQUduQjtFQUNJLHVCQUF1QixFQUFBIiwiZmlsZSI6InNyYy9hcHAvZ2F1Z2VzL2NvbnRyb2xzL2h0bWwtc3dpdGNoL2h0bWwtc3dpdGNoLXByb3BlcnR5L2h0bWwtc3dpdGNoLXByb3BlcnR5LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4uZmllbGQtcm93IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW4tYm90dG9tOiA1cHg7XG59XG5cbi5zbGlkZXItZmllbGQgc3BhbiB7XG4gICAgcGFkZGluZy1sZWZ0OiAycHg7XG4gICAgdGV4dC1vdmVyZmxvdzogY2xpcDtcbiAgICB3aWR0aDogMTUwcHg7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4uc2xpZGVyLWZpZWxkIG1hdC1zbGlkZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWZvcm1TbGlkZXJCYWNrZ3JvdW5kKTtcbiAgICBoZWlnaHQ6IDI5cHg7XG59XG5cbi5zbGlkZXItc21hbGwgPiAubWF0LXNsaWRlci1ob3Jpem9udGFsIHtcbiAgICBtaW4td2lkdGg6IDgwcHg7XG59XG5cbjo6bmctZGVlcCAubWF0LXRhYi1sYWJlbCB7XG4gICAgaGVpZ2h0OiAzNHB4ICFpbXBvcnRhbnQ7XG59Il19 */"

            /***/
}),

/***/ "./app/gauges/controls/html-switch/html-switch-property/html-switch-property.component.ts":
/*!************************************************************************************************!*\
  !*** ./app/gauges/controls/html-switch/html-switch-property/html-switch-property.component.ts ***!
  \************************************************************************************************/
/*! exports provided: HtmlSwitchPropertyComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HtmlSwitchPropertyComponent", function () { return HtmlSwitchPropertyComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "../node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _models_hmi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../_models/hmi */ "./app/_models/hmi.ts");
/* harmony import */ var _gauge_property_flex_auth_flex_auth_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../gauge-property/flex-auth/flex-auth.component */ "./app/gauges/gauge-property/flex-auth/flex-auth.component.ts");
/* harmony import */ var _gauge_property_flex_head_flex_head_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../gauge-property/flex-head/flex-head.component */ "./app/gauges/gauge-property/flex-head/flex-head.component.ts");
/* harmony import */ var _html_switch_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../html-switch.component */ "./app/gauges/controls/html-switch/html-switch.component.ts");
/* harmony import */ var _gui_helpers_ngx_switch_ngx_switch_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../gui-helpers/ngx-switch/ngx-switch.component */ "./app/gui-helpers/ngx-switch/ngx-switch.component.ts");
/* harmony import */ var _helpers_define__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../_helpers/define */ "./app/_helpers/define.ts");
/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../_helpers/utils */ "./app/_helpers/utils.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };
            var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
                return function (target, key) { decorator(target, key, paramIndex); }
            };









            var HtmlSwitchPropertyComponent = /** @class */ (function () {
                function HtmlSwitchPropertyComponent(dialogRef, data) {
                    this.dialogRef = dialogRef;
                    this.data = data;
                    this.switchWidth = 80;
                    this.switchHeight = 40;
                    this.fonts = _helpers_define__WEBPACK_IMPORTED_MODULE_7__["Define"].fonts;
                    this.defaultColor = _helpers_utils__WEBPACK_IMPORTED_MODULE_8__["Utils"].defaultColor;
                    this.property = JSON.parse(JSON.stringify(this.data.settings.property));
                    if (!this.property) {
                        this.property = new _models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeProperty"]();
                    }
                    this.name = this.data.settings.name;
                    this.options = this.property.options;
                    if (!this.options) {
                        this.options = new _gui_helpers_ngx_switch_ngx_switch_component__WEBPACK_IMPORTED_MODULE_6__["SwitchOptions"]();
                    }
                    var switchsize = _html_switch_component__WEBPACK_IMPORTED_MODULE_5__["HtmlSwitchComponent"].getSize(this.data.settings);
                    this.switchHeight = switchsize.height;
                    this.switchWidth = switchsize.width;
                    this.options.height = this.switchHeight;
                }
                HtmlSwitchPropertyComponent.prototype.ngAfterContentInit = function () {
                    this.updateOptions();
                };
                HtmlSwitchPropertyComponent.prototype.onNoClick = function () {
                    this.dialogRef.close();
                };
                HtmlSwitchPropertyComponent.prototype.onOkClick = function () {
                    this.data.settings.property = this.property;
                    this.data.settings.property.permission = this.flexauth.permission;
                    this.data.settings.property.options = this.options;
                    this.data.settings.name = this.flexauth.name;
                };
                HtmlSwitchPropertyComponent.prototype.updateOptions = function () {
                    this.switcher.setOptions(this.options);
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('switcher'),
                    __metadata("design:type", _gui_helpers_ngx_switch_ngx_switch_component__WEBPACK_IMPORTED_MODULE_6__["NgxSwitchComponent"])
                ], HtmlSwitchPropertyComponent.prototype, "switcher", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('flexhead'),
                    __metadata("design:type", _gauge_property_flex_head_flex_head_component__WEBPACK_IMPORTED_MODULE_4__["FlexHeadComponent"])
                ], HtmlSwitchPropertyComponent.prototype, "flexhead", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('flexauth'),
                    __metadata("design:type", _gauge_property_flex_auth_flex_auth_component__WEBPACK_IMPORTED_MODULE_3__["FlexAuthComponent"])
                ], HtmlSwitchPropertyComponent.prototype, "flexauth", void 0);
                HtmlSwitchPropertyComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'app-html-switch-property',
                        template: __webpack_require__(/*! ./html-switch-property.component.html */ "./app/gauges/controls/html-switch/html-switch-property/html-switch-property.component.html"),
                        styles: [__webpack_require__(/*! ./html-switch-property.component.scss */ "./app/gauges/controls/html-switch/html-switch-property/html-switch-property.component.scss")]
                    }),
                    __param(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MAT_DIALOG_DATA"])),
                    __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialogRef"], Object])
                ], HtmlSwitchPropertyComponent);
                return HtmlSwitchPropertyComponent;
            }());



            /***/
}),

/***/ "./app/gauges/controls/html-switch/html-switch.component.ts":
/*!******************************************************************!*\
  !*** ./app/gauges/controls/html-switch/html-switch.component.ts ***!
  \******************************************************************/
/*! exports provided: HtmlSwitchComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HtmlSwitchComponent", function () { return HtmlSwitchComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _models_hmi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../_models/hmi */ "./app/_models/hmi.ts");
/* harmony import */ var _gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../gauge-property/gauge-property.component */ "./app/gauges/gauge-property/gauge-property.component.ts");
/* harmony import */ var _gui_helpers_ngx_switch_ngx_switch_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../gui-helpers/ngx-switch/ngx-switch.component */ "./app/gui-helpers/ngx-switch/ngx-switch.component.ts");
/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../_helpers/utils */ "./app/_helpers/utils.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };





            var HtmlSwitchComponent = /** @class */ (function () {
                function HtmlSwitchComponent() {
                }
                HtmlSwitchComponent_1 = HtmlSwitchComponent;
                HtmlSwitchComponent.getSignals = function (pro) {
                    var res = [];
                    if (pro.variableId) {
                        res.push(pro.variableId);
                    }
                    if (pro.alarmId) {
                        res.push(pro.alarmId);
                    }
                    if (pro.actions) {
                        pro.actions.forEach(function (act) {
                            res.push(act.variableId);
                        });
                    }
                    return res;
                };
                HtmlSwitchComponent.getDialogType = function () {
                    return _gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_2__["GaugeDialogType"].Switch;
                };
                HtmlSwitchComponent.bindEvents = function (ga, slider, callback) {
                    if (slider) {
                        slider.bindUpdate(function (val) {
                            var event = new _models_hmi__WEBPACK_IMPORTED_MODULE_1__["Event"]();
                            event.type = 'on';
                            event.ga = ga;
                            event.value = val;
                            callback(event);
                        });
                    }
                    return null;
                };
                HtmlSwitchComponent.processValue = function (ga, svgele, sig, gaugeStatus, switcher) {
                    try {
                        if (switcher) {
                            var val = parseFloat(sig.value);
                            if (Number.isNaN(val)) {
                                // maybe boolean
                                val = Number(sig.value);
                            }
                            else {
                                val = parseFloat(val.toFixed(5));
                            }
                            switcher.setValue(val);
                        }
                    }
                    catch (err) {
                        console.error(err);
                    }
                };
                HtmlSwitchComponent.initElement = function (ga, resolver, viewContainerRef, options) {
                    var ele = document.getElementById(ga.id);
                    if (ele) {
                        var htmlSwitch = _helpers_utils__WEBPACK_IMPORTED_MODULE_4__["Utils"].searchTreeStartWith(ele, this.prefix);
                        if (htmlSwitch) {
                            var factory = resolver.resolveComponentFactory(_gui_helpers_ngx_switch_ngx_switch_component__WEBPACK_IMPORTED_MODULE_3__["NgxSwitchComponent"]);
                            var componentRef = viewContainerRef.createComponent(factory);
                            htmlSwitch.innerHTML = '';
                            componentRef.changeDetectorRef.detectChanges();
                            var loaderComponentElement = componentRef.location.nativeElement;
                            htmlSwitch.appendChild(loaderComponentElement);
                            if (ga.property && ga.property.options) {
                                ga.property.options.height = htmlSwitch.clientHeight;
                                if (componentRef.instance.setOptions(ga.property.options)) {
                                    if (ga.property.options.radius) {
                                        htmlSwitch.style.borderRadius = ga.property.options.radius + 'px';
                                    }
                                }
                            }
                            return componentRef.instance;
                        }
                    }
                };
                HtmlSwitchComponent.resize = function (ga, resolver, viewContainerRef, options) {
                    var ele = document.getElementById(ga.id);
                    if (ele) {
                        var htmlSwitch = _helpers_utils__WEBPACK_IMPORTED_MODULE_4__["Utils"].searchTreeStartWith(ele, this.prefix);
                        if (htmlSwitch) {
                            var factory = resolver.resolveComponentFactory(_gui_helpers_ngx_switch_ngx_switch_component__WEBPACK_IMPORTED_MODULE_3__["NgxSwitchComponent"]);
                            var componentRef = viewContainerRef.createComponent(factory);
                            htmlSwitch.innerHTML = '';
                            componentRef.changeDetectorRef.detectChanges();
                            var loaderComponentElement = componentRef.location.nativeElement;
                            htmlSwitch.appendChild(loaderComponentElement);
                            if (ga.property && ga.property.options) {
                                ga.property.options.height = htmlSwitch.clientHeight;
                                if (!componentRef.instance.setOptions(ga.property.options, true)) {
                                    // componentRef.instance.init();
                                }
                            }
                            return componentRef.instance;
                        }
                    }
                };
                HtmlSwitchComponent.detectChange = function (ga, res, ref) {
                    var options;
                    if (ga.property && ga.property.options) {
                        options = ga.property.options;
                    }
                    return HtmlSwitchComponent_1.initElement(ga, res, ref, options);
                };
                HtmlSwitchComponent.getSize = function (ga) {
                    var result = { height: 0, width: 0 };
                    var ele = document.getElementById(ga.id);
                    if (ele) {
                        var htmlSwitch = _helpers_utils__WEBPACK_IMPORTED_MODULE_4__["Utils"].searchTreeStartWith(ele, this.prefix);
                        if (htmlSwitch) {
                            result.height = htmlSwitch.clientHeight;
                            result.width = htmlSwitch.clientWidth;
                        }
                    }
                    return result;
                };
                var HtmlSwitchComponent_1;
                HtmlSwitchComponent.TypeTag = 'svg-ext-html_switch';
                HtmlSwitchComponent.LabelTag = 'HtmlSwitch';
                HtmlSwitchComponent.prefix = 'T-HXT_';
                HtmlSwitchComponent = HtmlSwitchComponent_1 = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
                    __metadata("design:paramtypes", [])
                ], HtmlSwitchComponent);
                return HtmlSwitchComponent;
            }());



            /***/
}),

/***/ "./app/gauges/controls/pipe/pipe-property/pipe-property.component.css":
/*!****************************************************************************!*\
  !*** ./app/gauges/controls/pipe/pipe-property/pipe-property.component.css ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ".toolbox {\n    display: inline-block;\n    float: right;\n    margin-top: 10px;\n    margin-bottom: 3px;\n}\n  \n.toolbox button {\n    margin-right: 8px;\n    margin-left: 8px;\n}\n  \n.toolbox-right {\n    width: 300px;\n    position: absolute;\n    top: 85px;\n    right: 20px;\n    height: 200px;\n    overflow: hidden;\n}\n  \n.slider-field span {\n    padding-left: 2px;\n    text-overflow: clip;\n    max-width: 125px;\n    white-space: nowrap;\n    overflow: hidden;\n}\n  \n.slider-field mat-slider {\n    background-color: var(--formSliderBackground);\n    height: 30px;\n}\n  \n.field-row {\n    display: block;\n    margin-bottom: 5px;\n}\n  \n::ng-deep .input-text .mat-form-field-infix {\n    padding-top: 5px;\n    padding-bottom: 0px;\n}\n  \n::ng-deep .mat-dialog-container {\n    display: inline-table !important;\n}\n  \n::ng-deep .mat-tab-label {\n    height: 34px !important;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZ2F1Z2VzL2NvbnRyb2xzL3BpcGUvcGlwZS1wcm9wZXJ0eS9waXBlLXByb3BlcnR5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxxQkFBcUI7SUFDckIsWUFBWTtJQUNaLGdCQUFnQjtJQUNoQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxpQkFBaUI7SUFDakIsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixTQUFTO0lBQ1QsV0FBVztJQUNYLGFBQWE7SUFDYixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxpQkFBaUI7SUFDakIsbUJBQW1CO0lBQ25CLGdCQUFnQjtJQUNoQixtQkFBbUI7SUFDbkIsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksNkNBQTZDO0lBQzdDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2Qsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGdDQUFnQztBQUNwQzs7QUFFQTtJQUNJLHVCQUF1QjtBQUMzQiIsImZpbGUiOiJzcmMvYXBwL2dhdWdlcy9jb250cm9scy9waXBlL3BpcGUtcHJvcGVydHkvcGlwZS1wcm9wZXJ0eS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRvb2xib3gge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBmbG9hdDogcmlnaHQ7XG4gICAgbWFyZ2luLXRvcDogMTBweDtcbiAgICBtYXJnaW4tYm90dG9tOiAzcHg7XG59XG4gIFxuLnRvb2xib3ggYnV0dG9uIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDhweDtcbiAgICBtYXJnaW4tbGVmdDogOHB4O1xufVxuXG4udG9vbGJveC1yaWdodCB7XG4gICAgd2lkdGg6IDMwMHB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDg1cHg7XG4gICAgcmlnaHQ6IDIwcHg7XG4gICAgaGVpZ2h0OiAyMDBweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4uc2xpZGVyLWZpZWxkIHNwYW4ge1xuICAgIHBhZGRpbmctbGVmdDogMnB4O1xuICAgIHRleHQtb3ZlcmZsb3c6IGNsaXA7XG4gICAgbWF4LXdpZHRoOiAxMjVweDtcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi5zbGlkZXItZmllbGQgbWF0LXNsaWRlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tZm9ybVNsaWRlckJhY2tncm91bmQpO1xuICAgIGhlaWdodDogMzBweDtcbn1cblxuLmZpZWxkLXJvdyB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xufVxuXG46Om5nLWRlZXAgLmlucHV0LXRleHQgLm1hdC1mb3JtLWZpZWxkLWluZml4IHtcbiAgICBwYWRkaW5nLXRvcDogNXB4O1xuICAgIHBhZGRpbmctYm90dG9tOiAwcHg7XG59XG5cbjo6bmctZGVlcCAubWF0LWRpYWxvZy1jb250YWluZXIge1xuICAgIGRpc3BsYXk6IGlubGluZS10YWJsZSAhaW1wb3J0YW50O1xufVxuXG46Om5nLWRlZXAgLm1hdC10YWItbGFiZWwge1xuICAgIGhlaWdodDogMzRweCAhaW1wb3J0YW50O1xufSJdfQ== */"

            /***/
}),

/***/ "./app/gauges/controls/pipe/pipe-property/pipe-property.component.html":
/*!*****************************************************************************!*\
  !*** ./app/gauges/controls/pipe/pipe-property/pipe-property.component.html ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div style=\"width:700px;position: relative;margin-bottom: 40px\">\n    <h1 mat-dialog-title style=\"display:inline-block;cursor:move;\" mat-dialog-draggable>{{'editor.controls-pipe-settings' | translate}}</h1>\n    <mat-icon (click)=\"onNoClick()\" style=\"float:right;margin-right:-10px;margin-top:-10px;cursor:pointer;color:gray;\">clear</mat-icon>\n    <mat-tab-group style=\"width: 100%;height: 560px;\">\n        <mat-tab label=\"{{'pipe.property-props' | translate}}\">\n            <div style=\"max-height: 495px; overflow-y: auto; overflow-x: hidden; padding-top: 15px;\">\n                <div style=\"display: block;\">\n                    <flex-auth [name]=\"name\" [permission]=\"property.permission\" #flexauth></flex-auth>\n                </div>\n                <div mat-dialog-content style=\"overflow: hidden; width:100%;padding-top: 20px;\">\n                    <div id=\"pipe\" style=\"width: 200px; height: 240px;margin-left: 20px;\"></div>\n                    <!-- <flex-head [data]=\"data\" [property]=\"property\" #flexhead></flex-head> -->\n                    <div class=\"toolbox-right\">\n                        <div class=\"field-row\">\n                            <div class=\"my-form-field slider-field\" style=\"padding-left: 12px\">\n                                <span>{{'pipe.property-border-width' | translate}}</span>\n                                <mat-slider style=\"display:inline-block;\" [max]=\"100\" [min]=\"0\" [step]=\"1\" [thumbLabel]=\"true\" [(ngModel)]=\"options.borderWidth\"\n                                    (input)=\"onChangeValue('borderWidth', $event.value)\">\n                                </mat-slider>\n                            </div>\n                            <div class=\"my-form-field slider-field color-field\" style=\"padding-left: 12px\">\n                                <span>{{'pipe.property-border-color' | translate}}</span>\n                                <input [(colorPicker)]=\"options.border\" [style.background]=\"options.border\" [cpAlphaChannel]=\"'always'\" class=\"input-color\"\n                                    [cpPresetColors]=\"defaultColor\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\" [cpCancelButtonClass]=\"'cpCancelButtonClass'\"\n                                    [cpCancelButtonText]=\"'Cancel'\" [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\" style=\"width: 126px\"\n                                    [cpPosition]=\"'bottom'\" (colorPickerChange)=\"onChangeValue('border', $event)\" />\n                            </div>\n                        </div>\n                        <div class=\"field-row\">\n                            <div class=\"my-form-field slider-field\" style=\"padding-left: 12px\">\n                                <span>{{'pipe.property-pipe-width' | translate}}</span>\n                                <mat-slider style=\"display:inline-block;\" [max]=\"100\" [min]=\"0\" [step]=\"1\" [thumbLabel]=\"true\" [(ngModel)]=\"options.pipeWidth\"\n                                    (input)=\"onChangeValue('pipeWidth', $event.value)\">\n                                </mat-slider>\n                            </div>\n                            <div class=\"my-form-field slider-field color-field\" style=\"padding-left: 12px\">\n                                <span>{{'pipe.property-pipe-color' | translate}}</span>\n                                <input [(colorPicker)]=\"options.pipe\" [style.background]=\"options.pipe\" [cpAlphaChannel]=\"'always'\" class=\"input-color\"\n                                    [cpPresetColors]=\"defaultColor\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\" [cpCancelButtonClass]=\"'cpCancelButtonClass'\"\n                                    [cpCancelButtonText]=\"'Cancel'\" [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\" style=\"width: 126px\"\n                                    [cpPosition]=\"'bottom'\" (colorPickerChange)=\"onChangeValue('pipe', $event)\" />\n                            </div>\n                        </div>\n                        <div class=\"field-row\">\n                            <div class=\"my-form-field slider-field\" style=\"padding-left: 12px\">\n                                <span>{{'pipe.property-content-width' | translate}}</span>\n                                <mat-slider style=\"display:inline-block;\" [max]=\"100\" [min]=\"0\" [step]=\"1\" [thumbLabel]=\"true\" [(ngModel)]=\"options.contentWidth\"\n                                    (input)=\"onChangeValue('contentWidth', $event.value)\">\n                                </mat-slider>\n                            </div>\n                            <div class=\"my-form-field slider-field color-field\" style=\"padding-left: 12px\">\n                                <span>{{'pipe.property-content-color' | translate}}</span>\n                                <input [(colorPicker)]=\"options.content\" [style.background]=\"options.content\" [cpAlphaChannel]=\"'always'\" class=\"input-color\"\n                                    [cpPresetColors]=\"defaultColor\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\" [cpCancelButtonClass]=\"'cpCancelButtonClass'\"\n                                    [cpCancelButtonText]=\"'Cancel'\" [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\" style=\"width: 126px\"\n                                    [cpPosition]=\"'bottom'\" (colorPickerChange)=\"onChangeValue('content', $event)\" />\n                            </div>\n                        </div>\n                        <div class=\"field-row\">\n                            <div class=\"my-form-field slider-field\" style=\"padding-left: 12px\">\n                                <span>{{'pipe.property-content-space' | translate}}</span>\n                                <mat-slider style=\"display:inline-block;\" [max]=\"100\" [min]=\"0\" [step]=\"1\" [thumbLabel]=\"true\" [(ngModel)]=\"options.contentSpace\"\n                                    (input)=\"onChangeValue('contentSpace', $event.value)\">\n                                </mat-slider>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </mat-tab>\n        <mat-tab label=\"{{'gauges.property-events' | translate}}\" *ngIf=\"eventsSupported\">\n            <div style=\"max-height: 495px; overflow-y: auto; overflow-x: hidden; padding-top: 15px;\">\n                <div style=\"display: block;\">\n                    <div class=\"toolbox\">\n                        <button mat-icon-button (click)=\"onAddEvent()\">\n                            <mat-icon>add_circle_outline</mat-icon>\n                        </button>\n                    </div>\n                </div>\n                <div mat-dialog-content style=\"overflow: hidden; width:100%\">\n                    <flex-event [property]=\"property\" [views]=\"views\" #flexevent *ngIf=\"eventsSupported\" style=\"padding-bottom: 5px\"></flex-event>\n                </div>\n            </div>\n        </mat-tab>\n        <mat-tab label=\"{{'gauges.property-actions' | translate}}\" *ngIf=\"actionsSupported\">\n            <div style=\"max-height: 495px; overflow-y: auto; overflow-x: hidden; padding-top: 15px;\">\n                <div style=\"display: block;\">\n                    <div class=\"toolbox\">\n                        <button mat-icon-button (click)=\"onAddAction()\">\n                            <mat-icon>add_circle_outline</mat-icon>\n                        </button>\n                    </div>\n                </div>\n                <div mat-dialog-content style=\"overflow: hidden; width:100%\">\n                    <flex-action [data]=\"data\" [property]=\"property\" #flexaction *ngIf=\"actionsSupported\" style=\"padding-bottom: 5px\"></flex-action>\n                </div>\n            </div>\n        </mat-tab>\n    </mat-tab-group>\n    <!-- \n    <div style=\"display: block; width: 660px;padding-top: 30px\">\n        <div style=\"display: block;\">\n            <flex-auth [name]=\"name\" [permission]=\"property.permission\" #flexauth></flex-auth>\n        </div>\n        <div mat-dialog-content style=\"overflow: hidden; width:100%\">\n            <flex-head [data]=\"data\" [property]=\"property\" #flexhead></flex-head>\n        </div>\n    </div> -->\n    <!-- <div style=\"width: 760px; height: 620px; position: relative\"> -->\n    <!-- </div> -->\n    <div mat-dialog-actions class=\"dialog-action\">\n        <button mat-raised-button (click)=\"onNoClick()\">{{'dlg.cancel' | translate}}</button>\n        <button mat-raised-button color=\"primary\" (click)=\"onOkClick()\" [mat-dialog-close]=\"data\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\n    </div>\n</div>"

            /***/
}),

/***/ "./app/gauges/controls/pipe/pipe-property/pipe-property.component.ts":
/*!***************************************************************************!*\
  !*** ./app/gauges/controls/pipe/pipe-property/pipe-property.component.ts ***!
  \***************************************************************************/
/*! exports provided: PipePropertyComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PipePropertyComponent", function () { return PipePropertyComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "../node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _models_hmi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../_models/hmi */ "./app/_models/hmi.ts");
/* harmony import */ var _gauge_property_flex_head_flex_head_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../gauge-property/flex-head/flex-head.component */ "./app/gauges/gauge-property/flex-head/flex-head.component.ts");
/* harmony import */ var _gauge_property_flex_auth_flex_auth_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../gauge-property/flex-auth/flex-auth.component */ "./app/gauges/gauge-property/flex-auth/flex-auth.component.ts");
/* harmony import */ var _gauge_property_flex_event_flex_event_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../gauge-property/flex-event/flex-event.component */ "./app/gauges/gauge-property/flex-event/flex-event.component.ts");
/* harmony import */ var _gauge_property_flex_action_flex_action_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../gauge-property/flex-action/flex-action.component */ "./app/gauges/gauge-property/flex-action/flex-action.component.ts");
/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../_helpers/utils */ "./app/_helpers/utils.ts");
/* harmony import */ var _pipe_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../pipe.component */ "./app/gauges/controls/pipe/pipe.component.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };
            var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
                return function (target, key) { decorator(target, key, paramIndex); }
            };









            var PipePropertyComponent = /** @class */ (function () {
                function PipePropertyComponent(dialogRef, data) {
                    this.dialogRef = dialogRef;
                    this.data = data;
                    this.defaultColor = _helpers_utils__WEBPACK_IMPORTED_MODULE_7__["Utils"].defaultColor;
                    this.pipepath = { bk: null, fg: null, hp: null };
                }
                PipePropertyComponent.prototype.ngOnInit = function () {
                    this.eventsSupported = this.data.withEvents;
                    this.actionsSupported = this.data.withActions;
                    this.property = JSON.parse(JSON.stringify(this.data.settings.property));
                    if (!this.property) {
                        this.property = new _models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeProperty"]();
                    }
                    this.name = this.data.settings.name;
                    this.options = this.property.options;
                    if (!this.options) {
                        this.options = new _pipe_component__WEBPACK_IMPORTED_MODULE_8__["PipeOptions"]();
                        this.options.borderWidth = 40;
                        this.options.border = '#000000';
                        this.options.pipeWidth = 30;
                        this.options.pipe = '#0000ff';
                        this.options.contentWidth = 30;
                        this.options.content = '#0044ff';
                        this.options.contentSpace = 48;
                    }
                    // this.permission = this.property.permission;
                };
                PipePropertyComponent.prototype.ngAfterViewInit = function () {
                    // var draw = SVG().addTo('#pipe').size('100%', '100%');
                    var draw = SVG('pipe');
                    this.pipepath.bk = draw.path('m 1,120 200,0');
                    this.pipepath.fg = draw.path('m 1,120 200,0');
                    this.pipepath.hp = draw.path('m 1,120 200,0');
                    this.redrawPipe();
                };
                PipePropertyComponent.prototype.onNoClick = function () {
                    this.dialogRef.close();
                };
                PipePropertyComponent.prototype.onOkClick = function () {
                    this.data.settings.property = this.property;
                    this.data.settings.property.permission = this.flexAuth.permission;
                    this.data.settings.property.options = this.options;
                    this.data.settings.name = this.flexAuth.name;
                    if (this.flexEvent) {
                        this.data.settings.property.events = this.flexEvent.getEvents();
                    }
                    if (this.flexAction) {
                        this.data.settings.property.actions = this.flexAction.getActions();
                    }
                };
                PipePropertyComponent.prototype.redrawPipe = function () {
                    this.pipepath.fg.stroke({ color: this.options.pipe, width: this.options.pipeWidth });
                    this.pipepath.fg.fill('none');
                    this.pipepath.bk.stroke({ color: this.options.border, width: this.options.borderWidth });
                    this.pipepath.bk.fill('none');
                    var space = '' + this.options.contentSpace + ' ' + this.options.contentSpace;
                    this.pipepath.hp.stroke({ color: this.options.content, width: this.options.contentWidth, dasharray: space });
                    this.pipepath.hp.fill('none');
                };
                PipePropertyComponent.prototype.onChangeValue = function (type, value) {
                    if (type == 'borderWidth') {
                        this.options.borderWidth = value;
                    }
                    else if (type == 'border') {
                        this.options.border = value;
                    }
                    else if (type == 'pipeWidth') {
                        this.options.pipeWidth = value;
                    }
                    else if (type == 'pipe') {
                        this.options.pipe = value;
                    }
                    else if (type == 'contentWidth') {
                        this.options.contentWidth = value;
                    }
                    else if (type == 'content') {
                        this.options.content = value;
                    }
                    else if (type == 'contentSpace') {
                        this.options.contentSpace = value;
                    }
                    this.redrawPipe();
                };
                PipePropertyComponent.prototype.onAddEvent = function () {
                    this.flexEvent.onAddEvent();
                };
                PipePropertyComponent.prototype.onAddAction = function () {
                    this.flexAction.onAddAction();
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('flexauth'),
                    __metadata("design:type", _gauge_property_flex_auth_flex_auth_component__WEBPACK_IMPORTED_MODULE_4__["FlexAuthComponent"])
                ], PipePropertyComponent.prototype, "flexAuth", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('flexhead'),
                    __metadata("design:type", _gauge_property_flex_head_flex_head_component__WEBPACK_IMPORTED_MODULE_3__["FlexHeadComponent"])
                ], PipePropertyComponent.prototype, "flexHead", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('flexevent'),
                    __metadata("design:type", _gauge_property_flex_event_flex_event_component__WEBPACK_IMPORTED_MODULE_5__["FlexEventComponent"])
                ], PipePropertyComponent.prototype, "flexEvent", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('flexaction'),
                    __metadata("design:type", _gauge_property_flex_action_flex_action_component__WEBPACK_IMPORTED_MODULE_6__["FlexActionComponent"])
                ], PipePropertyComponent.prototype, "flexAction", void 0);
                PipePropertyComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'pipe-property',
                        template: __webpack_require__(/*! ./pipe-property.component.html */ "./app/gauges/controls/pipe/pipe-property/pipe-property.component.html"),
                        styles: [__webpack_require__(/*! ./pipe-property.component.css */ "./app/gauges/controls/pipe/pipe-property/pipe-property.component.css")]
                    }),
                    __param(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MAT_DIALOG_DATA"])),
                    __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialogRef"], Object])
                ], PipePropertyComponent);
                return PipePropertyComponent;
            }());



            /***/
}),

/***/ "./app/gauges/controls/pipe/pipe.component.ts":
/*!****************************************************!*\
  !*** ./app/gauges/controls/pipe/pipe.component.ts ***!
  \****************************************************/
/*! exports provided: PipeComponent, PipeOptions */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PipeComponent", function () { return PipeComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PipeOptions", function () { return PipeOptions; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _models_hmi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../_models/hmi */ "./app/_models/hmi.ts");
/* harmony import */ var _gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../gauge-property/gauge-property.component */ "./app/gauges/gauge-property/gauge-property.component.ts");
/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../_helpers/utils */ "./app/_helpers/utils.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };




            var PipeComponent = /** @class */ (function () {
                function PipeComponent() {
                }
                PipeComponent_1 = PipeComponent;
                PipeComponent.getSignals = function (pro) {
                    var res = [];
                    if (pro.variableId) {
                        res.push(pro.variableId);
                    }
                    if (pro.alarmId) {
                        res.push(pro.alarmId);
                    }
                    if (pro.actions) {
                        pro.actions.forEach(function (act) {
                            res.push(act.variableId);
                        });
                    }
                    return res;
                };
                PipeComponent.getActions = function () {
                    return this.actionsType;
                };
                PipeComponent.getDialogType = function () {
                    return _gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_2__["GaugeDialogType"].Pipe;
                };
                PipeComponent.processValue = function (ga, svgele, sig, gaugeStatus) {
                    try {
                        if (svgele.node) {
                            var clr = '';
                            var value_1 = parseFloat(sig.value);
                            if (Number.isNaN(value_1)) {
                                // maybe boolean
                                value_1 = Number(sig.value);
                            }
                            else {
                                value_1 = parseFloat(value_1.toFixed(5));
                            }
                            if (ga.property) {
                                // check actions
                                if (ga.property.actions) {
                                    ga.property.actions.forEach(function (act) {
                                        if (act.variableId === sig.id) {
                                            PipeComponent_1.processAction(act, svgele, value_1, gaugeStatus);
                                        }
                                    });
                                }
                            }
                        }
                    }
                    catch (err) {
                        console.error(err);
                    }
                };
                PipeComponent.processAction = function (act, svgele, value, gaugeStatus) {
                    if (act.range.min <= value && act.range.max >= value) {
                        var element = SVG.adopt(svgele.node);
                        PipeComponent_1.runMyAction(element, act.type, gaugeStatus);
                    }
                };
                PipeComponent.runMyAction = function (element, type, gaugeStatus) {
                    if (PipeComponent_1.actionsType[type] === PipeComponent_1.actionsType.stop) {
                        if (gaugeStatus.actionRef && gaugeStatus.actionRef.timer) {
                            clearTimeout(gaugeStatus.actionRef.timer);
                            gaugeStatus.actionRef.timer = null;
                        }
                    }
                    else {
                        if (gaugeStatus.actionRef && gaugeStatus.actionRef.timer) {
                            if (gaugeStatus.actionRef.type === type) {
                                return;
                            }
                            clearTimeout(gaugeStatus.actionRef.timer);
                            gaugeStatus.actionRef.timer = null;
                        }
                        var eletoanim = _helpers_utils__WEBPACK_IMPORTED_MODULE_3__["Utils"].searchTreeStartWith(element.node, 'c' + this.prefixB);
                        if (eletoanim) {
                            var len_1 = 1000;
                            if (PipeComponent_1.actionsType[type] === PipeComponent_1.actionsType.clockwise) {
                                var timeout = setInterval(function () {
                                    if (len_1 < 0)
                                        len_1 = 1000;
                                    eletoanim.style.strokeDashoffset = len_1;
                                    len_1--;
                                }, 20);
                                gaugeStatus.actionRef = { type: type, timer: timeout };
                            }
                            else if (PipeComponent_1.actionsType[type] === PipeComponent_1.actionsType.anticlockwise) {
                                var timeout = setInterval(function () {
                                    if (len_1 > 1000)
                                        len_1 = 0;
                                    eletoanim.style.strokeDashoffset = len_1;
                                    len_1++;
                                }, 20);
                                gaugeStatus.actionRef = { type: type, timer: timeout };
                            }
                        }
                    }
                };
                PipeComponent.detectChange = function (gab, res, ref) {
                    var data = { id: gab.id, property: gab.property.options };
                    var result = ref.nativeWindow.svgEditor.runExtension('pipe', 'initPipe', data);
                    return result;
                };
                var PipeComponent_1;
                PipeComponent.TypeId = 'pipe';
                PipeComponent.TypeTag = 'svg-ext-' + PipeComponent_1.TypeId; // used to identify shapes type, binded with the library svgeditor
                PipeComponent.LabelTag = 'Pipe';
                PipeComponent.prefixB = 'PIE_';
                PipeComponent.actionsType = { stop: _models_hmi__WEBPACK_IMPORTED_MODULE_1__["GaugeActionsType"].stop, clockwise: _models_hmi__WEBPACK_IMPORTED_MODULE_1__["GaugeActionsType"].clockwise, anticlockwise: _models_hmi__WEBPACK_IMPORTED_MODULE_1__["GaugeActionsType"].anticlockwise };
                PipeComponent = PipeComponent_1 = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])()
                ], PipeComponent);
                return PipeComponent;
            }());

            var PipeOptions = /** @class */ (function () {
                function PipeOptions() {
                }
                return PipeOptions;
            }());



            /***/
}),

/***/ "./app/gauges/controls/slider/slider-property/slider-property.component.css":
/*!**********************************************************************************!*\
  !*** ./app/gauges/controls/slider/slider-property/slider-property.component.css ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "\n.field-row {\n    display: block;\n    margin-bottom: 5px;\n}\n\n.slider-field span {\n    padding-left: 2px;\n    text-overflow: clip;\n    max-width: 125px;\n    white-space: nowrap;\n    overflow: hidden;\n}\n\n.slider-field mat-slider {\n    background-color: var(--formSliderBackground);\n    height: 30px;\n}\n\n::ng-deep .mat-tab-label {\n    height: 34px !important;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZ2F1Z2VzL2NvbnRyb2xzL3NsaWRlci9zbGlkZXItcHJvcGVydHkvc2xpZGVyLXByb3BlcnR5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0ksY0FBYztJQUNkLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixtQkFBbUI7SUFDbkIsZ0JBQWdCO0lBQ2hCLG1CQUFtQjtJQUNuQixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSw2Q0FBNkM7SUFDN0MsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHVCQUF1QjtBQUMzQiIsImZpbGUiOiJzcmMvYXBwL2dhdWdlcy9jb250cm9scy9zbGlkZXIvc2xpZGVyLXByb3BlcnR5L3NsaWRlci1wcm9wZXJ0eS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4uZmllbGQtcm93IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW4tYm90dG9tOiA1cHg7XG59XG5cbi5zbGlkZXItZmllbGQgc3BhbiB7XG4gICAgcGFkZGluZy1sZWZ0OiAycHg7XG4gICAgdGV4dC1vdmVyZmxvdzogY2xpcDtcbiAgICBtYXgtd2lkdGg6IDEyNXB4O1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLnNsaWRlci1maWVsZCBtYXQtc2xpZGVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1mb3JtU2xpZGVyQmFja2dyb3VuZCk7XG4gICAgaGVpZ2h0OiAzMHB4O1xufVxuXG46Om5nLWRlZXAgLm1hdC10YWItbGFiZWwge1xuICAgIGhlaWdodDogMzRweCAhaW1wb3J0YW50O1xufSJdfQ== */"

            /***/
}),

/***/ "./app/gauges/controls/slider/slider-property/slider-property.component.html":
/*!***********************************************************************************!*\
  !*** ./app/gauges/controls/slider/slider-property/slider-property.component.html ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div style=\"width: 790px;height: 730px;position: relative;\" class=\"dialog-mdsd-v\">\n    <h1 mat-dialog-title style=\"display:inline-block;cursor:move;\" mat-dialog-draggable>{{'editor.controls-slider-settings' | translate}}</h1>\n    <mat-icon (click)=\"onNoClick()\" style=\"float:right;margin-right:-10px;margin-top:-10px;cursor:pointer;color:gray;\">clear</mat-icon>\n    <mat-tab-group style=\"width: 100%;\">\n        <mat-tab label=\"{{'slider.property-props' | translate}}\">\n            <div style=\"display: block;width: 660px;padding-top: 20px\">\n                <div style=\"display: block;\">\n                    <flex-auth [name]=\"name\" [permission]=\"property.permission\" #flexauth></flex-auth>\n                </div>\n                <div mat-dialog-content style=\"overflow: hidden; width:100%\">\n                    <flex-head [data]=\"data\" [property]=\"property\" #flexhead></flex-head>\n                </div>\n            </div>\n            <div style=\"width: 100%; height: 515px; position: relative;\">\n                <div style=\"position: absolute;\" [style.width]=\"sliderLayout.width + 'px'\" [style.height]=\"sliderLayout.height + 'px'\" [style.top]=\"sliderLayout.top + 'px'\"\n                    [style.left]=\"sliderLayout.left + 'px'\">\n                    <ngx-nouislider #slider></ngx-nouislider>\n                </div>\n                <div style=\"width: 280px;height: 100%;float: right;\">\n                    <div class=\"field-row\" style=\"margin-top: 20px;\">\n                        <div class=\"my-form-field\" style=\"width: 120px;\">\n                            <span>{{'slider.property-orientation' | translate}}</span>\n                            <mat-select [(value)]=\"options.orientation\" (selectionChange)=\"setSliderOptions()\">\n                                <mat-option *ngFor=\"let ev of orientationType | enumToArray\" [value]=\"ev.key\">\n                                    {{ ev.value }}\n                                </mat-option>\n                            </mat-select>\n                        </div>\n                        <div class=\"my-form-field\" style=\"width: 120px;margin-left: 20px;\">\n                            <span>{{'slider.property-direction' | translate}}</span>\n                            <mat-select [(value)]=\"options.direction\" (selectionChange)=\"setSliderOptions()\">\n                                <mat-option *ngFor=\"let ev of directionType | enumToArray\" [value]=\"ev.key\">\n                                    {{ ev.value }}\n                                </mat-option>\n                            </mat-select>\n                        </div>\n                    </div>\n                    <div class=\"field-row slider-field\">\n                        <div class=\"my-form-field\" style=\"width:163px\">\n                            <span>{{'slider.property-font' | translate}}</span>\n                            <mat-select [(value)]=\"options.fontFamily\" (selectionChange)=\"onChangeOptions('fontFamily',  $event.value)\">\n                                <mat-option *ngFor=\"let font of fonts\" [style.fontFamily]=\"font\" [value]=\"font\">\n                                    {{font}}\n                                </mat-option>\n                            </mat-select>\n                        </div>\n                    </div>\n                    <div class=\"field-row\" style=\"margin-top: 20px;\">\n                        <div class=\"my-form-field slider-field color-field\">\n                            <span>{{'slider.property-slider-color' | translate}}</span>\n                            <input [(colorPicker)]=\"options.shape.connectColor\" [style.background]=\"options.shape.connectColor\" [cpAlphaChannel]=\"'always'\" class=\"input-color\"\n                                [cpPresetColors]=\"defaultColor\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\" [cpCancelButtonClass]=\"'cpCancelButtonClass'\"\n                                [cpCancelButtonText]=\"'Cancel'\" [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\" style=\"width: 78px\"\n                                [cpPosition]=\"'left'\" (colorPickerChange)=\"setSliderOptions()\" />\n                        </div>\n                        <div class=\"my-form-field slider-field color-field\" style=\"padding-left: 10px\">\n                            <span>{{'slider.property-slider-background' | translate}}</span>\n                            <input [(colorPicker)]=\"options.shape.baseColor\" [style.background]=\"options.shape.baseColor\" [cpAlphaChannel]=\"'always'\" class=\"input-color\"\n                                [cpPresetColors]=\"defaultColor\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\" [cpCancelButtonClass]=\"'cpCancelButtonClass'\"\n                                [cpCancelButtonText]=\"'Cancel'\" [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\" style=\"width: 78px\"\n                                [cpPosition]=\"'left'\" (colorPickerChange)=\"setSliderOptions()\" />\n                        </div>\n                        <div class=\"my-form-field slider-field color-field\" style=\"padding-left: 10px\">\n                            <span>{{'slider.property-slider-handle' | translate}}</span>\n                            <input [(colorPicker)]=\"options.shape.handleColor\" [style.background]=\"options.shape.handleColor\" [cpAlphaChannel]=\"'always'\" class=\"input-color\"\n                                [cpPresetColors]=\"defaultColor\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\" [cpCancelButtonClass]=\"'cpCancelButtonClass'\"\n                                [cpCancelButtonText]=\"'Cancel'\" [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\" style=\"width: 78px\"\n                                [cpPosition]=\"'left'\" (colorPickerChange)=\"setSliderOptions()\" />\n                        </div>\n                    </div>\n                    <div class=\"field-row\">\n                        <div class=\"my-form-field slider-field\">\n                            <span>{{'slider.property-min' | translate}}</span>\n                            <input numberOnly [(ngModel)]=\"options.range.min\" (change)=\"onChangeOptions('min', options.range.min)\"\n                                style=\"width: 50px;text-align: center;display:inline-block;\" type=\"text\">\n                        </div>\n                        <div class=\"my-form-field slider-field\" style=\"padding-left: 12px\">\n                            <span>{{'slider.property-max' | translate}}</span>\n                            <input numberOnly [(ngModel)]=\"options.range.max\" (change)=\"onChangeOptions('max', options.range.max)\"\n                                style=\"width: 50px;text-align: center;display:inline-block;\" type=\"text\">\n                        </div>\n                        <div class=\"my-form-field slider-field\" style=\"padding-left: 12px\">\n                            <span>{{'slider.property-step' | translate}}</span>\n                            <input numberOnly [(ngModel)]=\"options.step\" (change)=\"onChangeOptions('step', options.step)\"\n                                style=\"width: 50px;text-align: center;display:inline-block;\" type=\"text\">\n                        </div>\n                    </div>\n                    <div class=\"field-row\" style=\"margin-top: 20px;\">\n                        <div class=\"my-form-field slider-field\">\n                            <div class=\"my-form-field slider-field\">\n                                <span style=\"max-width: 180px\">{{'slider.property-scala' | translate}}</span>\n                                <input [(ngModel)]=\"staticScala\" (change)=\"onChangeOptions('staticScala', staticScala)\" style=\"width: 160px;\" type=\"text\">\n                            </div>\n                            <div class=\"my-form-field slider-field color-field\" style=\"padding-left: 10px\">\n                                <span>{{'slider.property-marker-color' | translate}}</span>\n                                <input [(colorPicker)]=\"options.marker.color\" [style.background]=\"options.marker.color\" [cpAlphaChannel]=\"'always'\" class=\"input-color\"\n                                    [cpPresetColors]=\"defaultColor\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\" [cpCancelButtonClass]=\"'cpCancelButtonClass'\"\n                                    [cpCancelButtonText]=\"'Cancel'\" [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\" style=\"width: 78px\"\n                                    [cpPosition]=\"'top'\" (colorPickerChange)=\"setSliderOptions()\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"field-row\">\n                        <div class=\"my-form-field slider-field\">\n                            <span>{{'slider.property-font-size' | translate}}</span>\n                            <mat-slider style=\"display:inline-block;\" [max]=\"50\" [min]=\"6\" [step]=\"1\" [thumbLabel]=\"true\" [(ngModel)]=\"options.marker.fontSize\"\n                                (change)=\"setSliderOptions()\">\n                            </mat-slider>\n                        </div>\n                        <div class=\"my-form-field slider-field\" style=\"padding-left: 10px\">\n                            <span>{{'slider.property-divisions-height' | translate}}</span>\n                            <mat-slider style=\"display:inline-block;min-width: 60px;\" [max]=\"15\" [min]=\"0\" [step]=\"1\" [thumbLabel]=\"true\" [(ngModel)]=\"options.marker.divHeight\"\n                                (change)=\"setSliderOptions()\">\n                            </mat-slider>\n                        </div>\n                        <div class=\"my-form-field slider-field\" style=\"padding-left: 10px\">\n                            <span>{{'slider.property-divisions-width' | translate}}</span>\n                            <mat-slider style=\"display:inline-block;min-width: 60px;\" [max]=\"15\" [min]=\"0\" [step]=\"1\" [thumbLabel]=\"true\" [(ngModel)]=\"options.marker.divWidth\"\n                                (change)=\"setSliderOptions()\">\n                            </mat-slider>\n                        </div>\n                    </div>\n                    <div class=\"field-row\">\n                        <div class=\"my-form-field slider-field\">\n                            <span>{{'slider.property-subdivisions' | translate}}</span>\n                            <mat-slider style=\"display:inline-block;\" [max]=\"50\" [min]=\"0\" [step]=\"1\" [thumbLabel]=\"true\" [(ngModel)]=\"options.pips.density\"\n                                (change)=\"setSliderOptions()\">\n                            </mat-slider>\n                        </div>\n                        <div class=\"my-form-field slider-field\" style=\"padding-left: 10px\">\n                            <span>{{'slider.property-subdivisions-height' | translate}}</span>\n                            <mat-slider style=\"display:inline-block;min-width: 60px;\" [max]=\"15\" [min]=\"0\" [step]=\"1\" [thumbLabel]=\"true\" [(ngModel)]=\"options.marker.subHeight\"\n                                (change)=\"setSliderOptions()\">\n                            </mat-slider>\n                        </div>\n                        <div class=\"my-form-field slider-field\" style=\"padding-left: 10px\">\n                            <span>{{'slider.property-subdivisions-width' | translate}}</span>\n                            <mat-slider style=\"display:inline-block;min-width: 60px;\" [max]=\"15\" [min]=\"0\" [step]=\"1\" [thumbLabel]=\"true\" [(ngModel)]=\"options.marker.subWidth\"\n                                (change)=\"setSliderOptions()\">\n                            </mat-slider>\n                        </div>\n                    </div>\n                    <div class=\"field-row\" style=\"margin-top: 20px;\">\n                        <div class=\"my-form-field\" style=\"width: 80px;\">\n                            <span>{{'slider.property-tooltip' | translate}}</span>\n                            <mat-select [(value)]=\"options.tooltip.type\" (selectionChange)=\"onChangeOptions('tooltipType', options.tooltip.type)\">\n                                <mat-option *ngFor=\"let ev of tooltipType | enumToArray\" [value]=\"ev.key\">\n                                    {{ ev.value }}\n                                </mat-option>\n                            </mat-select>\n                        </div>\n                        <div class=\"my-form-field slider-field color-field\" style=\"padding-left: 17px\">\n                            <span>{{'slider.property-tooltip-color' | translate}}</span>\n                            <input [(colorPicker)]=\"options.tooltip.color\" [style.background]=\"options.tooltip.color\" [cpAlphaChannel]=\"'always'\" class=\"input-color\"\n                                [cpPresetColors]=\"defaultColor\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\" [cpCancelButtonClass]=\"'cpCancelButtonClass'\"\n                                [cpCancelButtonText]=\"'Cancel'\" [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\" style=\"width: 78px\"\n                                [cpPosition]=\"'top'\" (colorPickerChange)=\"setSliderOptions()\" />\n                        </div>\n                        <div class=\"my-form-field slider-field color-field\" style=\"padding-left: 10px\">\n                            <span>{{'slider.property-tooltip-background' | translate}}</span>\n                            <input [(colorPicker)]=\"options.tooltip.background\" [style.background]=\"options.tooltip.background\" [cpAlphaChannel]=\"'always'\" class=\"input-color\"\n                                [cpPresetColors]=\"defaultColor\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\" [cpCancelButtonClass]=\"'cpCancelButtonClass'\"\n                                [cpCancelButtonText]=\"'Cancel'\" [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\" style=\"width: 78px\"\n                                [cpPosition]=\"'top'\" (colorPickerChange)=\"setSliderOptions()\" />\n                        </div>\n                    </div>\n                    <div class=\"field-row\">\n                        <div class=\"my-form-field slider-field\">\n                            <span>{{'slider.property-tooltip-font-size' | translate}}</span>\n                            <mat-slider style=\"display:inline-block;\" [max]=\"50\" [min]=\"6\" [step]=\"1\" [thumbLabel]=\"true\" [(ngModel)]=\"options.tooltip.fontSize\"\n                                (change)=\"setSliderOptions()\">\n                            </mat-slider>\n                        </div>\n                        <div class=\"my-form-field slider-field\" style=\"padding-left: 10px\">\n                            <span>{{'slider.property-tooltip-decimals' | translate}}</span>\n                            <mat-slider style=\"display:inline-block;min-width: 60px;\" [max]=\"3\" [min]=\"0\" [step]=\"1\" [thumbLabel]=\"true\" [(ngModel)]=\"options.tooltip.decimals\"\n                                (change)=\"setSliderOptions()\">\n                            </mat-slider>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </mat-tab>\n    </mat-tab-group>\n    <div mat-dialog-actions class=\"dialog-action\">\n        <button mat-raised-button (click)=\"onNoClick()\">{{'dlg.cancel' | translate}}</button>\n        <button mat-raised-button color=\"primary\" (click)=\"onOkClick()\" [mat-dialog-close]=\"data\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\n    </div>\n</div>"

            /***/
}),

/***/ "./app/gauges/controls/slider/slider-property/slider-property.component.ts":
/*!*********************************************************************************!*\
  !*** ./app/gauges/controls/slider/slider-property/slider-property.component.ts ***!
  \*********************************************************************************/
/*! exports provided: SliderPropertyComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SliderPropertyComponent", function () { return SliderPropertyComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ngx-translate/core */ "../node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "../node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../_helpers/utils */ "./app/_helpers/utils.ts");
/* harmony import */ var _models_hmi__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../_models/hmi */ "./app/_models/hmi.ts");
/* harmony import */ var _gauge_property_flex_head_flex_head_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../gauge-property/flex-head/flex-head.component */ "./app/gauges/gauge-property/flex-head/flex-head.component.ts");
/* harmony import */ var _gauge_property_flex_auth_flex_auth_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../gauge-property/flex-auth/flex-auth.component */ "./app/gauges/gauge-property/flex-auth/flex-auth.component.ts");
/* harmony import */ var _gui_helpers_ngx_nouislider_ngx_nouislider_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../gui-helpers/ngx-nouislider/ngx-nouislider.component */ "./app/gui-helpers/ngx-nouislider/ngx-nouislider.component.ts");
/* harmony import */ var _helpers_define__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../_helpers/define */ "./app/_helpers/define.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };
            var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
                return function (target, key) { decorator(target, key, paramIndex); }
            };










            var SliderPropertyComponent = /** @class */ (function () {
                function SliderPropertyComponent(dialogRef, translateService, changeDetector, data) {
                    this.dialogRef = dialogRef;
                    this.translateService = translateService;
                    this.changeDetector = changeDetector;
                    this.data = data;
                    this.options = new _gui_helpers_ngx_nouislider_ngx_nouislider_component__WEBPACK_IMPORTED_MODULE_7__["NgxNouisliderOptions"]();
                    this.defaultColor = _helpers_utils__WEBPACK_IMPORTED_MODULE_3__["Utils"].defaultColor;
                    this.fonts = _helpers_define__WEBPACK_IMPORTED_MODULE_8__["Define"].fonts;
                    this.layoutHorizontal = { width: 400, height: 80, top: 180, left: 0 };
                    this.layoutVertical = { width: 80, height: 400, top: 20, left: 150 };
                    this.sliderLayout = this.layoutVertical;
                    this.orientationType = { horizontal: 'horizontal', vertical: 'vertical' };
                    this.directionType = { ltr: 'ltr', rtl: 'rtl' };
                    this.tooltipType = { none: 'none', hide: 'hide', show: 'show' };
                    this.staticScala = "";
                    this.property = JSON.parse(JSON.stringify(this.data.settings.property));
                    if (!this.property) {
                        this.property = new _models_hmi__WEBPACK_IMPORTED_MODULE_4__["GaugeProperty"]();
                    }
                    this.name = this.data.settings.name;
                    this.options = this.property.options;
                    if (!this.options) {
                        this.options = new _gui_helpers_ngx_nouislider_ngx_nouislider_component__WEBPACK_IMPORTED_MODULE_7__["NgxNouisliderOptions"]();
                    }
                }
                SliderPropertyComponent.prototype.ngOnInit = function () {
                    var _this = this;
                    Object.keys(this.orientationType).forEach(function (key) {
                        _this.translateService.get('slider.property-' + _this.orientationType[key]).subscribe(function (txt) { _this.orientationType[key] = txt; });
                    });
                    Object.keys(this.directionType).forEach(function (key) {
                        _this.translateService.get('slider.property-' + _this.directionType[key]).subscribe(function (txt) { _this.directionType[key] = txt; });
                    });
                    Object.keys(this.tooltipType).forEach(function (key) {
                        _this.translateService.get('slider.property-tooltip-' + _this.tooltipType[key]).subscribe(function (txt) { _this.tooltipType[key] = txt; });
                    });
                    this.sliderLayout = (this.options.orientation === 'vertical') ? this.layoutVertical : this.layoutHorizontal;
                    this.options.pips.values.forEach(function (k) {
                        if (_this.staticScala.length) {
                            _this.staticScala += ';';
                        }
                        _this.staticScala += k.toString();
                    });
                };
                SliderPropertyComponent.prototype.ngAfterViewInit = function () {
                    this.setSliderOptions();
                };
                SliderPropertyComponent.prototype.onNoClick = function () {
                    this.dialogRef.close();
                };
                SliderPropertyComponent.prototype.onOkClick = function () {
                    this.data.settings.property = this.property;
                    this.data.settings.property.permission = this.flexAuth.permission;
                    this.data.settings.property.options = this.options;
                    this.data.settings.name = this.flexAuth.name;
                };
                SliderPropertyComponent.prototype.onChangeOptions = function (opt, value) {
                    var _this = this;
                    if (opt === 'min' || opt === 'max') {
                        this.options.range[opt] = parseFloat(value);
                    }
                    else if (opt === 'step') {
                        this.options[opt] = parseFloat(value);
                    }
                    else if (opt === 'staticScala') {
                        this.options.pips.values = [];
                        if (value) {
                            var tks = value.split(';');
                            tks.forEach(function (tk) {
                                var v = parseFloat(tk);
                                if (!isNaN(v)) {
                                    _this.options.pips.values.push(v);
                                }
                            });
                        }
                    }
                    else if (opt === 'tooltipType') {
                        this.options.tooltip.type = value;
                    }
                    else {
                        this.options[opt] = value;
                    }
                    this.setSliderOptions();
                };
                SliderPropertyComponent.prototype.onChangeDirection = function (event) {
                    this.setSliderOptions();
                };
                SliderPropertyComponent.prototype.setSliderOptions = function () {
                    this.sliderLayout = (this.options.orientation === 'vertical') ? this.layoutVertical : this.layoutHorizontal;
                    this.changeDetector.detectChanges();
                    var opt = JSON.parse(JSON.stringify(this.options));
                    this.slider.setOptions(opt);
                    this.slider.resize(this.sliderLayout.height, this.sliderLayout.width);
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('flexauth'),
                    __metadata("design:type", _gauge_property_flex_auth_flex_auth_component__WEBPACK_IMPORTED_MODULE_6__["FlexAuthComponent"])
                ], SliderPropertyComponent.prototype, "flexAuth", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('flexhead'),
                    __metadata("design:type", _gauge_property_flex_head_flex_head_component__WEBPACK_IMPORTED_MODULE_5__["FlexHeadComponent"])
                ], SliderPropertyComponent.prototype, "flexHead", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('slider'),
                    __metadata("design:type", _gui_helpers_ngx_nouislider_ngx_nouislider_component__WEBPACK_IMPORTED_MODULE_7__["NgxNouisliderComponent"])
                ], SliderPropertyComponent.prototype, "slider", void 0);
                SliderPropertyComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'app-slider-property',
                        template: __webpack_require__(/*! ./slider-property.component.html */ "./app/gauges/controls/slider/slider-property/slider-property.component.html"),
                        styles: [__webpack_require__(/*! ./slider-property.component.css */ "./app/gauges/controls/slider/slider-property/slider-property.component.css")]
                    }),
                    __param(3, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
                    __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"],
                    _ngx_translate_core__WEBPACK_IMPORTED_MODULE_1__["TranslateService"],
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"], Object])
                ], SliderPropertyComponent);
                return SliderPropertyComponent;
            }());



            /***/
}),

/***/ "./app/gauges/controls/slider/slider.component.ts":
/*!********************************************************!*\
  !*** ./app/gauges/controls/slider/slider.component.ts ***!
  \********************************************************/
/*! exports provided: SliderComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SliderComponent", function () { return SliderComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _models_hmi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../_models/hmi */ "./app/_models/hmi.ts");
/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../_helpers/utils */ "./app/_helpers/utils.ts");
/* harmony import */ var _gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../gauge-property/gauge-property.component */ "./app/gauges/gauge-property/gauge-property.component.ts");
/* harmony import */ var _gui_helpers_ngx_nouislider_ngx_nouislider_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../gui-helpers/ngx-nouislider/ngx-nouislider.component */ "./app/gui-helpers/ngx-nouislider/ngx-nouislider.component.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };





            var SliderComponent = /** @class */ (function () {
                function SliderComponent() {
                }
                SliderComponent_1 = SliderComponent;
                SliderComponent.getSignals = function (pro) {
                    var res = [];
                    if (pro.variableId) {
                        res.push(pro.variableId);
                    }
                    if (pro.alarmId) {
                        res.push(pro.alarmId);
                    }
                    if (pro.actions) {
                        pro.actions.forEach(function (act) {
                            res.push(act.variableId);
                        });
                    }
                    return res;
                };
                SliderComponent.getDialogType = function () {
                    return _gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_3__["GaugeDialogType"].Slider;
                };
                SliderComponent.bindEvents = function (ga, slider, callback) {
                    if (slider) {
                        slider.bindUpdate(function (val) {
                            var event = new _models_hmi__WEBPACK_IMPORTED_MODULE_1__["Event"]();
                            event.type = 'on';
                            event.ga = ga;
                            event.value = val;
                            callback(event);
                        });
                    }
                    return null;
                };
                SliderComponent.processValue = function (ga, svgele, sig, gaugeStatus, slider) {
                    try {
                        if (slider) {
                            var val = parseFloat(sig.value);
                            if (Number.isNaN(val)) {
                                // maybe boolean
                                val = Number(sig.value);
                            }
                            else {
                                val = parseFloat(val.toFixed(5));
                            }
                            slider.setValue(val);
                        }
                    }
                    catch (err) {
                        console.error(err);
                    }
                };
                SliderComponent.initElement = function (gab, resolver, viewContainerRef, options) {
                    var ele = document.getElementById(gab.id);
                    if (ele) {
                        var htmlSlider = _helpers_utils__WEBPACK_IMPORTED_MODULE_2__["Utils"].searchTreeStartWith(ele, this.prefix);
                        if (htmlSlider) {
                            var factory = resolver.resolveComponentFactory(_gui_helpers_ngx_nouislider_ngx_nouislider_component__WEBPACK_IMPORTED_MODULE_4__["NgxNouisliderComponent"]);
                            var componentRef = viewContainerRef.createComponent(factory);
                            htmlSlider.innerHTML = '';
                            componentRef.changeDetectorRef.detectChanges();
                            var loaderComponentElement = componentRef.location.nativeElement;
                            htmlSlider.appendChild(loaderComponentElement);
                            componentRef.instance.resize(htmlSlider.clientHeight, htmlSlider.clientWidth);
                            if (gab.property && gab.property.options) {
                                if (!componentRef.instance.setOptions(gab.property.options)) {
                                    componentRef.instance.init();
                                }
                            }
                            componentRef.instance['myComRef'] = componentRef;
                            return componentRef.instance;
                        }
                    }
                };
                SliderComponent.initElementColor = function (bkcolor, color, ele) {
                    if (ele) {
                        ele.setAttribute('fill', bkcolor);
                    }
                };
                SliderComponent.resize = function (gab, resolver, viewContainerRef, options) {
                    var ele = document.getElementById(gab.id);
                    if (ele) {
                        var htmlSlider = _helpers_utils__WEBPACK_IMPORTED_MODULE_2__["Utils"].searchTreeStartWith(ele, this.prefix);
                        if (htmlSlider) {
                            var factory = resolver.resolveComponentFactory(_gui_helpers_ngx_nouislider_ngx_nouislider_component__WEBPACK_IMPORTED_MODULE_4__["NgxNouisliderComponent"]);
                            var componentRef = viewContainerRef.createComponent(factory);
                            htmlSlider.innerHTML = '';
                            componentRef.changeDetectorRef.detectChanges();
                            var loaderComponentElement = componentRef.location.nativeElement;
                            htmlSlider.appendChild(loaderComponentElement);
                            componentRef.instance.resize(htmlSlider.clientHeight, htmlSlider.clientWidth);
                            if (options) {
                                componentRef.instance.setOptions(options);
                            }
                            return componentRef.instance;
                        }
                    }
                };
                SliderComponent.getFillColor = function (ele) {
                    if (ele) {
                        return ele.getAttribute('fill');
                    }
                };
                SliderComponent.detectChange = function (gab, res, ref) {
                    var options;
                    if (gab.property && gab.property.options) {
                        options = gab.property.options;
                    }
                    return SliderComponent_1.initElement(gab, res, ref, options);
                };
                var SliderComponent_1;
                SliderComponent.TypeId = 'html_slider';
                SliderComponent.TypeTag = 'svg-ext-' + SliderComponent_1.TypeId;
                SliderComponent.LabelTag = 'HtmlSlider';
                SliderComponent.prefix = 'D-SLI_';
                SliderComponent = SliderComponent_1 = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])()
                ], SliderComponent);
                return SliderComponent;
            }());



            /***/
}),

/***/ "./app/gauges/controls/value/value.component.css":
/*!*******************************************************!*\
  !*** ./app/gauges/controls/value/value.component.css ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dhdWdlcy9jb250cm9scy92YWx1ZS92YWx1ZS5jb21wb25lbnQuY3NzIn0= */"

            /***/
}),

/***/ "./app/gauges/controls/value/value.component.html":
/*!********************************************************!*\
  !*** ./app/gauges/controls/value/value.component.html ***!
  \********************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ""

            /***/
}),

/***/ "./app/gauges/controls/value/value.component.ts":
/*!******************************************************!*\
  !*** ./app/gauges/controls/value/value.component.ts ***!
  \******************************************************/
/*! exports provided: ValueComponent, ValueProperty */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ValueComponent", function () { return ValueComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ValueProperty", function () { return ValueProperty; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _gauge_base_gauge_base_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../gauge-base/gauge-base.component */ "./app/gauges/gauge-base/gauge-base.component.ts");
/* harmony import */ var _models_hmi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../_models/hmi */ "./app/_models/hmi.ts");
/* harmony import */ var _gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../gauge-property/gauge-property.component */ "./app/gauges/gauge-property/gauge-property.component.ts");
/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../_helpers/utils */ "./app/_helpers/utils.ts");
            var __extends = (undefined && undefined.__extends) || (function () {
                var extendStatics = function (d, b) {
                    extendStatics = Object.setPrototypeOf ||
                        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
                    return extendStatics(d, b);
                };
                return function (d, b) {
                    extendStatics(d, b);
                    function __() { this.constructor = d; }
                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
                };
            })();
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };





            var ValueComponent = /** @class */ (function (_super) {
                __extends(ValueComponent, _super);
                function ValueComponent() {
                    return _super.call(this) || this;
                }
                ValueComponent_1 = ValueComponent;
                ValueComponent.prototype.ngOnInit = function () {
                };
                ValueComponent.getSignals = function (pro) {
                    var res = [];
                    if (pro.actions && pro.actions.length) {
                        pro.actions.forEach(function (act) {
                            res.push(act.variableId);
                        });
                    }
                    if (pro.ranges) {
                        pro.ranges.forEach(function (range) {
                            if (range.textId) {
                                res.push(range.textId);
                            }
                            if (range['fractionDigitsId']) {
                                res.push(range['fractionDigitsId']);
                            }
                        });
                    }
                    if (pro.variableId) {
                        res.push(pro.variableId);
                    }
                    return res;
                };
                ValueComponent.getDialogType = function () {
                    return _gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_3__["GaugeDialogType"].ValueAndUnit;
                };
                ValueComponent.getActions = function () {
                    return this.actionsType;
                };
                ValueComponent.processValue = function (ga, svgele, sig, gaugeStatus) {
                    try {
                        if (svgele.node && svgele.node.children && svgele.node.children.length <= 1) {
                            var g = svgele.node.children[0];
                            var val_1 = parseFloat(sig.value);
                            var isString = false;
                            switch (typeof (sig.value)) {
                                case "undefined":
                                    break;
                                case "boolean":
                                    val_1 = Number(sig.value);
                                    break;
                                case "number":
                                    val_1 = parseFloat(val_1.toFixed(5));
                                    break;
                                case "string":
                                    val_1 = sig.value;
                                    isString = true;
                                    break;
                                default: break;
                            }
                            // if (Number.isNaN(val)) {
                            //     // maybe boolean
                            //     val = Number(sig.value);
                            //     // maybe string
                            //     if (Number.isNaN(val)) {
                            //         val = sig.value;
                            //         isString = true;
                            //     }
                            // } else {
                            //     val = parseFloat(val.toFixed(5));
                            // }
                            if (ga.property) {
                                var unit = _gauge_base_gauge_base_component__WEBPACK_IMPORTED_MODULE_1__["GaugeBaseComponent"].getUnit(ga.property, gaugeStatus);
                                var digit = _gauge_base_gauge_base_component__WEBPACK_IMPORTED_MODULE_1__["GaugeBaseComponent"].getDigits(ga.property, gaugeStatus);
                                if (!isString && !_helpers_utils__WEBPACK_IMPORTED_MODULE_4__["Utils"].isNullOrUndefined(digit)) {
                                    val_1 = parseFloat(val_1).toFixed(digit);
                                }
                                if (ga.property.variableId === sig.id) {
                                    g.textContent = val_1;
                                    if (unit) {
                                        g.textContent += ' ' + unit;
                                    }
                                }
                                // check actions
                                if (ga.property.actions) {
                                    ga.property.actions.forEach(function (act) {
                                        if (act.variableId === sig.id) {
                                            ValueComponent_1.processAction(act, svgele, parseFloat(val_1), gaugeStatus);
                                        }
                                    });
                                }
                            }
                        }
                    }
                    catch (err) {
                        console.error(err);
                    }
                };
                ValueComponent.processAction = function (act, svgele, value, gaugeStatus) {
                    if (this.actionsType[act.type] === this.actionsType.hide) {
                        if (act.range.min <= value && act.range.max >= value) {
                            var element = SVG.adopt(svgele.node);
                            this.runActionHide(element, act.type, gaugeStatus);
                        }
                    }
                    else if (this.actionsType[act.type] === this.actionsType.show) {
                        if (act.range.min <= value && act.range.max >= value) {
                            var element = SVG.adopt(svgele.node);
                            this.runActionShow(element, act.type, gaugeStatus);
                        }
                    }
                    else if (this.actionsType[act.type] === this.actionsType.blink) {
                        var element = SVG.adopt(svgele.node.children[0]);
                        var inRange = (act.range.min <= value && act.range.max >= value);
                        this.checkActionBlink(element, act.type, gaugeStatus, inRange, act.options, false);
                    }
                };
                var ValueComponent_1;
                ValueComponent.TypeTag = 'svg-ext-value';
                ValueComponent.LabelTag = 'Value';
                ValueComponent.actionsType = { hide: _models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeActionsType"].hide, show: _models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeActionsType"].show, blink: _models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeActionsType"].blink };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Object)
                ], ValueComponent.prototype, "data", void 0);
                ValueComponent = ValueComponent_1 = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'gauge-value',
                        template: __webpack_require__(/*! ./value.component.html */ "./app/gauges/controls/value/value.component.html"),
                        styles: [__webpack_require__(/*! ./value.component.css */ "./app/gauges/controls/value/value.component.css")]
                    }),
                    __metadata("design:paramtypes", [])
                ], ValueComponent);
                return ValueComponent;
            }(_gauge_base_gauge_base_component__WEBPACK_IMPORTED_MODULE_1__["GaugeBaseComponent"]));

            var ValueProperty = /** @class */ (function () {
                function ValueProperty() {
                    this.signalid = '';
                    this.format = '##.##';
                }
                return ValueProperty;
            }());



            /***/
}),

/***/ "./app/gauges/gauge-base/gauge-base.component.css":
/*!********************************************************!*\
  !*** ./app/gauges/gauge-base/gauge-base.component.css ***!
  \********************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ".svg-property-split2:after {\n    display: table;\n    clear: both;\n}\n\n.svg-property-split2 div {\n    display: inline-block;\n}\n\n.svg-property {\n    color: rgba(255, 255, 255, 0.75);\n\n}\n\n.svg-property span {\n    display: block;\n    font-size: 10px;\n    margin: 0px 5px 0px 10px;\n}\n\n.svg-property input {\n    display: block;\n    margin: 0px 10px 12px 10px;\n    border: unset;\n    background-color: inherit;\n    color: var(--toolboxFlyColor);\n    border-bottom: 1px solid var(--toolboxFlyColor);\n}\n\n.mat-button {\n    min-width: 60px;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZ2F1Z2VzL2dhdWdlLWJhc2UvZ2F1Z2UtYmFzZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksY0FBYztJQUNkLFdBQVc7QUFDZjs7QUFFQTtJQUNJLHFCQUFxQjtBQUN6Qjs7QUFFQTtJQUNJLGdDQUFnQzs7QUFFcEM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsZUFBZTtJQUNmLHdCQUF3QjtBQUM1Qjs7QUFFQTtJQUNJLGNBQWM7SUFDZCwwQkFBMEI7SUFDMUIsYUFBYTtJQUNiLHlCQUF5QjtJQUN6Qiw2QkFBNkI7SUFDN0IsK0NBQStDO0FBQ25EOztBQUVBO0lBQ0ksZUFBZTtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL2dhdWdlcy9nYXVnZS1iYXNlL2dhdWdlLWJhc2UuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zdmctcHJvcGVydHktc3BsaXQyOmFmdGVyIHtcbiAgICBkaXNwbGF5OiB0YWJsZTtcbiAgICBjbGVhcjogYm90aDtcbn1cblxuLnN2Zy1wcm9wZXJ0eS1zcGxpdDIgZGl2IHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi5zdmctcHJvcGVydHkge1xuICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNzUpO1xuXG59XG5cbi5zdmctcHJvcGVydHkgc3BhbiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZm9udC1zaXplOiAxMHB4O1xuICAgIG1hcmdpbjogMHB4IDVweCAwcHggMTBweDtcbn1cblxuLnN2Zy1wcm9wZXJ0eSBpbnB1dCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luOiAwcHggMTBweCAxMnB4IDEwcHg7XG4gICAgYm9yZGVyOiB1bnNldDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBpbmhlcml0O1xuICAgIGNvbG9yOiB2YXIoLS10b29sYm94Rmx5Q29sb3IpO1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCB2YXIoLS10b29sYm94Rmx5Q29sb3IpO1xufVxuXG4ubWF0LWJ1dHRvbiB7XG4gICAgbWluLXdpZHRoOiA2MHB4O1xufVxuIl19 */"

            /***/
}),

/***/ "./app/gauges/gauge-base/gauge-base.component.html":
/*!*********************************************************!*\
  !*** ./app/gauges/gauge-base/gauge-base.component.html ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div class=\"svg-property-split2\" *ngIf=\"settings\">\n    <div class=\"svg-property\" title=\"Gauge name\">\n        <span>{{'editor.interactivity-name' | translate}}</span>\n        <input type=\"text\" id=\"gaugename\" [(ngModel)]=\"settings.name\" type=\"text\" readonly />\n    </div>\n    <div class=\"svg-property\" style=\"display:block !important; padding: 0px 10px 5px 10px;\" title=\"Change rectangle height\">\n        <button mat-button color=\"primary\" style=\"background-color: dimgrey;color:white; display: inline-block\" (click)=\"onEdit()\">{{'gauges.property-title' | translate}}</button>\n    </div>\n</div>"

            /***/
}),

/***/ "./app/gauges/gauge-base/gauge-base.component.ts":
/*!*******************************************************!*\
  !*** ./app/gauges/gauge-base/gauge-base.component.ts ***!
  \*******************************************************/
/*! exports provided: GaugeBaseComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GaugeBaseComponent", function () { return GaugeBaseComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _models_hmi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../_models/hmi */ "./app/_models/hmi.ts");
/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../_helpers/utils */ "./app/_helpers/utils.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };



            // declare var SVG: any;
            var GaugeBaseComponent = /** @class */ (function () {
                function GaugeBaseComponent() {
                    this.edit = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
                }
                GaugeBaseComponent.prototype.ngOnInit = function () {
                };
                GaugeBaseComponent.prototype.onEdit = function () {
                    this.edit.emit(this.settings);
                };
                GaugeBaseComponent.pathToAbsolute = function (relativePath) {
                    var pattern = /([ml])\s*(-?\d*\.?\d+)\s*,\s*(-?\d*\.?\d+)/ig, coords = [];
                    relativePath.replace(pattern, function (match, command, x, y) {
                        var prev;
                        x = parseFloat(x);
                        y = parseFloat(y);
                        if (coords.length === 0 || command.toUpperCase() === command) {
                            coords.push([x, y]);
                        }
                        else {
                            prev = coords[coords.length - 1];
                            coords.push([x + prev[0], y + prev[1]]);
                        }
                    });
                    return coords;
                };
                GaugeBaseComponent.getEvents = function (pro, type) {
                    var res = [];
                    if (!pro || !pro.events) {
                        return null;
                    }
                    var idxtype = Object.values(_models_hmi__WEBPACK_IMPORTED_MODULE_1__["GaugeEventType"]).indexOf(type);
                    pro.events.forEach(function (ev) {
                        if (Object.keys(_models_hmi__WEBPACK_IMPORTED_MODULE_1__["GaugeEventType"]).indexOf(ev.type) === idxtype) {
                            res.push(ev);
                        }
                    });
                    return res;
                };
                GaugeBaseComponent.getUnit = function (pro, gaugeStatus) {
                    if (pro) {
                        if (pro.ranges && pro.ranges.length > 0 && pro.ranges[0].type === 'unit') {
                            if (pro.ranges[0].textId && !_helpers_utils__WEBPACK_IMPORTED_MODULE_2__["Utils"].isNullOrUndefined(gaugeStatus.variablesValue[pro.ranges[0].textId])) {
                                pro.ranges[0].text = gaugeStatus.variablesValue[pro.ranges[0].textId];
                            }
                            return pro.ranges[0].text;
                        }
                    }
                    return '';
                };
                GaugeBaseComponent.getDigits = function (pro, gaugeStatus) {
                    if (pro) {
                        if (pro.ranges && pro.ranges.length > 0) {
                            if (pro.ranges[0]['fractionDigitsId'] && !_helpers_utils__WEBPACK_IMPORTED_MODULE_2__["Utils"].isNullOrUndefined(gaugeStatus.variablesValue[pro.ranges[0]['fractionDigitsId']])) {
                                pro.ranges[0]['fractionDigits'] = gaugeStatus.variablesValue[pro.ranges[0]['fractionDigitsId']];
                            }
                            if (pro.ranges[0]['fractionDigits']) {
                                return pro.ranges[0]['fractionDigits'];
                            }
                        }
                    }
                    return null;
                };
                GaugeBaseComponent.runActionHide = function (element, type, gaugeStatus) {
                    var actionRef = { type: type, animr: element.hide() };
                    if (gaugeStatus.actionRef) {
                        actionRef.spool = gaugeStatus.actionRef.spool;
                        actionRef.timer = gaugeStatus.actionRef.timer;
                    }
                    gaugeStatus.actionRef = actionRef;
                };
                GaugeBaseComponent.runActionShow = function (element, type, gaugeStatus) {
                    var actionRef = { type: type, animr: element.show() };
                    if (gaugeStatus.actionRef) {
                        actionRef.spool = gaugeStatus.actionRef.spool;
                        actionRef.timer = gaugeStatus.actionRef.timer;
                    }
                    gaugeStatus.actionRef = actionRef;
                };
                GaugeBaseComponent.checkActionBlink = function (element, type, gaugeStatus, toEnable, options, dom) {
                    if (!gaugeStatus.actionRef) {
                        gaugeStatus.actionRef = new _models_hmi__WEBPACK_IMPORTED_MODULE_1__["GaugeActionStatus"](type);
                    }
                    gaugeStatus.actionRef.type = type;
                    if (toEnable && options.interval && !gaugeStatus.actionRef.timer) {
                        var blinkStatus = false;
                        // save colors to restore on break
                        try {
                            if (dom)
                                gaugeStatus.actionRef.spool = { bk: element.style.backgroundColor, clr: element.style.color };
                            else
                                gaugeStatus.actionRef.spool = { bk: element.node.getAttribute('fill'), clr: element.node.getAttribute('stroke') };
                        }
                        catch (err) {
                            console.error(err);
                        }
                        gaugeStatus.actionRef.timer = setInterval(function () {
                            blinkStatus = (blinkStatus) ? false : true;
                            try {
                                if (blinkStatus) {
                                    if (dom) {
                                        element.style.backgroundColor = options.fillA;
                                        element.style.color = options.strokeA;
                                    }
                                    else {
                                        element.node.setAttribute('fill', options.fillA);
                                        element.node.setAttribute('stroke', options.strokeA);
                                    }
                                }
                                else {
                                    if (dom) {
                                        element.style.backgroundColor = options.fillB;
                                        element.style.color = options.strokeB;
                                    }
                                    else {
                                        element.node.setAttribute('fill', options.fillB);
                                        element.node.setAttribute('stroke', options.strokeB);
                                    }
                                }
                            }
                            catch (err) {
                                console.error(err);
                            }
                        }, options.interval);
                    }
                    else if (!toEnable) {
                        try {
                            if (gaugeStatus.actionRef.timer) {
                                clearInterval(gaugeStatus.actionRef.timer);
                                gaugeStatus.actionRef.timer = null;
                            }
                            // restore gauge
                            if (gaugeStatus.actionRef.spool) {
                                if (dom) {
                                    element.style.backgroundColor = gaugeStatus.actionRef.spool.bk;
                                    element.style.color = gaugeStatus.actionRef.spool.clr;
                                }
                                else {
                                    element.node.setAttribute('fill', gaugeStatus.actionRef.spool.bk);
                                    element.node.setAttribute('stroke', gaugeStatus.actionRef.spool.clr);
                                }
                            }
                        }
                        catch (err) {
                            console.error(err);
                        }
                    }
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Object)
                ], GaugeBaseComponent.prototype, "data", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", _models_hmi__WEBPACK_IMPORTED_MODULE_1__["GaugeSettings"])
                ], GaugeBaseComponent.prototype, "settings", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"])
                ], GaugeBaseComponent.prototype, "edit", void 0);
                GaugeBaseComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'gauge-base',
                        template: __webpack_require__(/*! ./gauge-base.component.html */ "./app/gauges/gauge-base/gauge-base.component.html"),
                        styles: [__webpack_require__(/*! ./gauge-base.component.css */ "./app/gauges/gauge-base/gauge-base.component.css")]
                    }),
                    __metadata("design:paramtypes", [])
                ], GaugeBaseComponent);
                return GaugeBaseComponent;
            }());



            /***/
}),

/***/ "./app/gauges/gauge-property/flex-action/flex-action.component.css":
/*!*************************************************************************!*\
  !*** ./app/gauges/gauge-property/flex-action/flex-action.component.css ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ".item {\n    display: block;\n    /* min-height: 100px; */\n    width: 100%;\n    border-bottom: 1px solid rgba(0,0,0,0.1);\n    padding: 0px 0px 5px 0px;\n    margin-bottom: 3px;\n}\n\n.item-head {\n    display: block;\n}\n\n.remove {\n    position: relative;\n    top: 4px;\n    right: 0px;\n}\n\n.item-remove {\n    float: right;\n    /* padding-top: 6px; */\n    /* min-width: 140px; */\n}\n\n.action-content {\n    display: block;\n    padding-top: 2px;\n    margin-left: 30px;\n}\n\n.item-range {\n    display: inline-block;\n    min-width: 240px;\n    width: 240px;\n}\n\n.action-blink {\n    display: inline-block;\n    padding-top: 5px;\n}\n\n::ng-deep .ng5-slider .ng5-slider-pointer { \n    width: 16px !important;\n    height: 16px !important;\n    border-radius: 8px !important; \n    top: -7px !important \n}\n\n::ng-deep .ng5-slider .ng5-slider-pointer:after { \n    top: 6px !important;\n    left: 6px !important;\n    width: 4px !important;\n    height: 4px !important; \n    border-radius: 2px !important \n}\n\n.input-slider {\n    display: inline;\n    /* max-width: 160px; */\n}\n\n::ng-deep .input-slider span {\n    font-size: 14px !important;\n}\n\n.input-slider ng5-slider {\n    /* display: block; */\n    max-width: 300px;\n    margin-top: 29px;\n    margin-right: 20px;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZ2F1Z2VzL2dhdWdlLXByb3BlcnR5L2ZsZXgtYWN0aW9uL2ZsZXgtYWN0aW9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0lBQ2QsdUJBQXVCO0lBQ3ZCLFdBQVc7SUFDWCx3Q0FBd0M7SUFDeEMsd0JBQXdCO0lBQ3hCLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsUUFBUTtJQUNSLFVBQVU7QUFDZDs7QUFFQTtJQUNJLFlBQVk7SUFDWixzQkFBc0I7SUFDdEIsc0JBQXNCO0FBQzFCOztBQUVBO0lBQ0ksY0FBYztJQUNkLGdCQUFnQjtJQUNoQixpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxxQkFBcUI7SUFDckIsZ0JBQWdCO0lBQ2hCLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxxQkFBcUI7SUFDckIsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksc0JBQXNCO0lBQ3RCLHVCQUF1QjtJQUN2Qiw2QkFBNkI7SUFDN0I7QUFDSjs7QUFDQTtJQUNJLG1CQUFtQjtJQUNuQixvQkFBb0I7SUFDcEIscUJBQXFCO0lBQ3JCLHNCQUFzQjtJQUN0QjtBQUNKOztBQUVBO0lBQ0ksZUFBZTtJQUNmLHNCQUFzQjtBQUMxQjs7QUFDQTtJQUNJLDBCQUEwQjtBQUM5Qjs7QUFDQTtJQUNJLG9CQUFvQjtJQUNwQixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtBQUN0QiIsImZpbGUiOiJzcmMvYXBwL2dhdWdlcy9nYXVnZS1wcm9wZXJ0eS9mbGV4LWFjdGlvbi9mbGV4LWFjdGlvbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLml0ZW0ge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIC8qIG1pbi1oZWlnaHQ6IDEwMHB4OyAqL1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDAsMCwwLDAuMSk7XG4gICAgcGFkZGluZzogMHB4IDBweCA1cHggMHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDNweDtcbn1cblxuLml0ZW0taGVhZCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5yZW1vdmUge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB0b3A6IDRweDtcbiAgICByaWdodDogMHB4O1xufVxuXG4uaXRlbS1yZW1vdmUge1xuICAgIGZsb2F0OiByaWdodDtcbiAgICAvKiBwYWRkaW5nLXRvcDogNnB4OyAqL1xuICAgIC8qIG1pbi13aWR0aDogMTQwcHg7ICovXG59XG5cbi5hY3Rpb24tY29udGVudCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcGFkZGluZy10b3A6IDJweDtcbiAgICBtYXJnaW4tbGVmdDogMzBweDtcbn1cblxuLml0ZW0tcmFuZ2Uge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBtaW4td2lkdGg6IDI0MHB4O1xuICAgIHdpZHRoOiAyNDBweDtcbn1cblxuLmFjdGlvbi1ibGluayB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHBhZGRpbmctdG9wOiA1cHg7XG59XG5cbjo6bmctZGVlcCAubmc1LXNsaWRlciAubmc1LXNsaWRlci1wb2ludGVyIHsgXG4gICAgd2lkdGg6IDE2cHggIWltcG9ydGFudDtcbiAgICBoZWlnaHQ6IDE2cHggIWltcG9ydGFudDtcbiAgICBib3JkZXItcmFkaXVzOiA4cHggIWltcG9ydGFudDsgXG4gICAgdG9wOiAtN3B4ICFpbXBvcnRhbnQgXG59XG46Om5nLWRlZXAgLm5nNS1zbGlkZXIgLm5nNS1zbGlkZXItcG9pbnRlcjphZnRlciB7IFxuICAgIHRvcDogNnB4ICFpbXBvcnRhbnQ7XG4gICAgbGVmdDogNnB4ICFpbXBvcnRhbnQ7XG4gICAgd2lkdGg6IDRweCAhaW1wb3J0YW50O1xuICAgIGhlaWdodDogNHB4ICFpbXBvcnRhbnQ7IFxuICAgIGJvcmRlci1yYWRpdXM6IDJweCAhaW1wb3J0YW50IFxufVxuXG4uaW5wdXQtc2xpZGVyIHtcbiAgICBkaXNwbGF5OiBpbmxpbmU7XG4gICAgLyogbWF4LXdpZHRoOiAxNjBweDsgKi9cbn1cbjo6bmctZGVlcCAuaW5wdXQtc2xpZGVyIHNwYW4ge1xuICAgIGZvbnQtc2l6ZTogMTRweCAhaW1wb3J0YW50O1xufVxuLmlucHV0LXNsaWRlciBuZzUtc2xpZGVyIHtcbiAgICAvKiBkaXNwbGF5OiBibG9jazsgKi9cbiAgICBtYXgtd2lkdGg6IDMwMHB4O1xuICAgIG1hcmdpbi10b3A6IDI5cHg7XG4gICAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xufVxuIl19 */"

            /***/
}),

/***/ "./app/gauges/gauge-property/flex-action/flex-action.component.html":
/*!**************************************************************************!*\
  !*** ./app/gauges/gauge-property/flex-action/flex-action.component.html ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div *ngFor=\"let item of actions; index as i\" class=\"item\">\n    <flex-variable class=\"item-head\" [data]=\"data\" (onchange)=\"setVariable(i, $event)\" [variableId]=\"item.variableId\" [withStaticValue]=\"false\">\n    </flex-variable>\n    <div class=\"action-content\">\n        <div *ngIf=\"slideView\" class=\"item-range\">\n            <div class=\"my-form-field\">\n                <span>{{'gauges.property-input-min' | translate}}</span>\n                <input numberOnly [(ngModel)]=\"item.range.min\" type=\"text\" style=\"width: 80px\">\n            </div>\n            <div class=\"my-form-field\" style=\"padding-left: 20px;\">\n                <span>{{'gauges.property-input-max' | translate}}</span>\n                <input numberOnly [(ngModel)]=\"item.range.max\" type=\"text\" style=\"width: 80px\">\n            </div>\n        </div>\n        <!-- <div class=\"item-range input-slider\" *ngIf=\"!slideView\">\n            <ng5-slider [(value)]=\"item.min\" [(highValue)]=\"item.max\" [options]=\"options\"></ng5-slider>\n        </div> -->\n        <div class=\"my-form-field\" style=\"width: 300px;\">\n            <span>{{'gauges.property-action-type' | translate}}</span>\n            <mat-select [(value)]=\"item.type\" (selectionChange)=\"onCheckActionType(item.type, item)\">\n                <mat-option *ngFor=\"let ev of actionsSupported | enumToArray\" [value]=\"ev.key\">\n                    {{ ev.value }}\n                </mat-option>\n            </mat-select>\n        </div>\n        <div class=\"item-remove\">\n            <button mat-icon-button (click)=\"onRemoveAction(i)\" class=\"_remove\">\n                <mat-icon>clear</mat-icon>\n            </button>\n        </div>\n        <div [ngSwitch]=\"item.type\">\n            <div *ngSwitchCase=\"actionBlink\" class=\"action-blink\">\n                <div class=\"my-form-field\">\n                    <span>{{'gauges.property-input-color' | translate}}</span>\n                    <input [(colorPicker)]=\"item.options.fillA\" [value]=\"item.options.fillA\" [style.background]=\"item.options.fillA\" [cpPresetColors]=\"defaultColor\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\"\n                        [cpCancelButtonClass]=\"'cpCancelButtonClass'\" [cpCancelButtonText]=\"'Cancel'\" [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\" class=\"input-color\"\n                        style=\"width:70px;\" [cpPosition]=\"'auto'\" [cpAlphaChannel]=\"'always'\" [cpOutputFormat]=\"'hex'\"/>\n                </div>\n                <div class=\"my-form-field\" style=\"margin-left: 10px;\">\n                    <span>{{'gauges.property-input-stroke' | translate}}</span>\n                    <input [(colorPicker)]=\"item.options.strokeA\" [value]=\"item.options.strokeA\" [style.background]=\"item.options.strokeA\" [cpPresetColors]=\"defaultColor\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\"\n                        [cpCancelButtonClass]=\"'cpCancelButtonClass'\" [cpCancelButtonText]=\"'Cancel'\" [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\" class=\"input-color\"\n                        style=\"width:70px;\" [cpPosition]=\"'auto'\" [cpAlphaChannel]=\"'always'\" [cpOutputFormat]=\"'hex'\"/>\n                </div>\n                <div class=\"my-form-field\" style=\"padding-left: 35px;padding-right: 35px;\">\n                    <span>{{'gauges.property-interval-msec' | translate}}</span>\n                    <input numberOnly [(ngModel)]=\"item.options.interval\" type=\"text\" style=\"width: 80px\">\n                </div>\n                <div class=\"my-form-field\">\n                    <span>{{'gauges.property-input-color' | translate}}</span>\n                    <input [(colorPicker)]=\"item.options.fillB\" [value]=\"item.options.fillB\" [style.background]=\"item.options.fillB\" [cpPresetColors]=\"defaultColor\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\"\n                        [cpCancelButtonClass]=\"'cpCancelButtonClass'\" [cpCancelButtonText]=\"'Cancel'\" [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\" class=\"input-color\"\n                        style=\"width:70px;\" [cpPosition]=\"'auto'\" [cpAlphaChannel]=\"'always'\" [cpOutputFormat]=\"'hex'\"/>\n                </div>\n                <div class=\"my-form-field\" style=\"margin-left: 10px;\">\n                    <span>{{'gauges.property-input-stroke' | translate}}</span>\n                    <input [(colorPicker)]=\"item.options.strokeB\" [value]=\"item.options.strokeB\" [style.background]=\"item.options.strokeB\" [cpPresetColors]=\"defaultColor\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\"\n                        [cpCancelButtonClass]=\"'cpCancelButtonClass'\" [cpCancelButtonText]=\"'Cancel'\" [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\" class=\"input-color\"\n                        style=\"width:70px;\" [cpPosition]=\"'auto'\" [cpAlphaChannel]=\"'always'\" [cpOutputFormat]=\"'hex'\"/>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n"

            /***/
}),

/***/ "./app/gauges/gauge-property/flex-action/flex-action.component.ts":
/*!************************************************************************!*\
  !*** ./app/gauges/gauge-property/flex-action/flex-action.component.ts ***!
  \************************************************************************/
/*! exports provided: FlexActionComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FlexActionComponent", function () { return FlexActionComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ngx-translate/core */ "../node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js");
/* harmony import */ var _models_hmi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../_models/hmi */ "./app/_models/hmi.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };



            var FlexActionComponent = /** @class */ (function () {
                function FlexActionComponent(translateService) {
                    this.translateService = translateService;
                    this.actionBlink = Object.keys(_models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeActionsType"]).find(function (key) { return _models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeActionsType"][key] === _models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeActionsType"].blink; });
                    this.slideView = true;
                }
                FlexActionComponent.prototype.ngOnInit = function () {
                    var _this = this;
                    if (this.property) {
                        this.actions = this.property.actions;
                    }
                    if (!this.actions || this.actions.length <= 0) {
                        this.onAddAction();
                    }
                    // this.itemtype = this.data.withActions.clockwise;
                    if (this.data.withActions) {
                        this.actionsSupported = this.data.withActions;
                        Object.keys(this.actionsSupported).forEach(function (key) {
                            _this.translateService.get(_this.actionsSupported[key]).subscribe(function (txt) { _this.actionsSupported[key] = txt; });
                        });
                    }
                };
                FlexActionComponent.prototype.getActions = function () {
                    var result = null;
                    if (this.actions) {
                        result = [];
                        this.actions.forEach(function (act) {
                            if (act.variableId) {
                                result.push(act);
                            }
                        });
                    }
                    return result;
                };
                FlexActionComponent.prototype.onAddAction = function () {
                    var ga = new _models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeAction"]();
                    ga.range = new _models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeRangeProperty"]();
                    this.addAction(ga);
                };
                FlexActionComponent.prototype.onRemoveAction = function (index) {
                    this.actions.splice(index, 1);
                };
                FlexActionComponent.prototype.onRangeViewToggle = function (slideView) {
                    this.slideView = slideView;
                    // this.flexInput.changeTag(this.currentTag);
                };
                FlexActionComponent.prototype.setVariable = function (index, event) {
                    this.actions[index].variableId = event.variableId;
                };
                FlexActionComponent.prototype.addAction = function (ga) {
                    if (!this.actions) {
                        this.actions = [];
                    }
                    this.actions.push(ga);
                };
                FlexActionComponent.prototype.onCheckActionType = function (type, ga) {
                    if (type === this.actionBlink && typeof (ga.options) !== typeof (_models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeActionBlink"])) {
                        ga.options = new _models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeActionBlink"]();
                    }
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Object)
                ], FlexActionComponent.prototype, "data", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", _models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeProperty"])
                ], FlexActionComponent.prototype, "property", void 0);
                FlexActionComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'flex-action',
                        template: __webpack_require__(/*! ./flex-action.component.html */ "./app/gauges/gauge-property/flex-action/flex-action.component.html"),
                        styles: [__webpack_require__(/*! ./flex-action.component.css */ "./app/gauges/gauge-property/flex-action/flex-action.component.css")]
                    }),
                    __metadata("design:paramtypes", [_ngx_translate_core__WEBPACK_IMPORTED_MODULE_1__["TranslateService"]])
                ], FlexActionComponent);
                return FlexActionComponent;
            }());



            /***/
}),

/***/ "./app/gauges/gauge-property/flex-auth/flex-auth.component.css":
/*!*********************************************************************!*\
  !*** ./app/gauges/gauge-property/flex-auth/flex-auth.component.css ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dhdWdlcy9nYXVnZS1wcm9wZXJ0eS9mbGV4LWF1dGgvZmxleC1hdXRoLmNvbXBvbmVudC5jc3MifQ== */"

            /***/
}),

/***/ "./app/gauges/gauge-property/flex-auth/flex-auth.component.html":
/*!**********************************************************************!*\
  !*** ./app/gauges/gauge-property/flex-auth/flex-auth.component.html ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div class=\"my-form-field\">\n    <span>{{'gauges.property-name' | translate}}</span>\n    <input [(ngModel)]=\"name\" style=\"width: 220px\" type=\"text\">\n</div>\n<div class=\"my-form-field\" style=\"vertical-align: bottom; margin-left: 13px;\">\n    <span>{{'gauges.property-permission' | translate}}</span>\n    <div style=\"text-align:center;cursor:pointer;\" class=\"my-form-field-permission\" (click)=\"onEditPermission()\">\n        <mat-icon class=\"header-icon\" style=\"line-height: 30px;\" *ngIf=\"!permission\">lock_open</mat-icon>\n        <mat-icon class=\"header-icon\" style=\"line-height: 30px;\" *ngIf=\"permission\">lock</mat-icon>\n    </div>\n</div>"

            /***/
}),

/***/ "./app/gauges/gauge-property/flex-auth/flex-auth.component.ts":
/*!********************************************************************!*\
  !*** ./app/gauges/gauge-property/flex-auth/flex-auth.component.ts ***!
  \********************************************************************/
/*! exports provided: FlexAuthComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FlexAuthComponent", function () { return FlexAuthComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "../node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../gauge-property/gauge-property.component */ "./app/gauges/gauge-property/gauge-property.component.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };



            var FlexAuthComponent = /** @class */ (function () {
                function FlexAuthComponent(dialog) {
                    this.dialog = dialog;
                }
                FlexAuthComponent.prototype.ngOnInit = function () {
                    // this.property = JSON.parse(JSON.stringify(this.data.settings.property));
                };
                FlexAuthComponent.prototype.onEditPermission = function () {
                    var _this = this;
                    var permission = this.permission;
                    var dialogRef = this.dialog.open(_gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_2__["DialogGaugePermission"], {
                        position: { top: '60px' },
                        data: { permission: permission }
                    });
                    dialogRef.afterClosed().subscribe(function (result) {
                        if (result) {
                            _this.permission = result.permission;
                        }
                    });
                };
                FlexAuthComponent.prototype.getResult = function () {
                    return { name: this.name, pemission: this.permission };
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", String)
                ], FlexAuthComponent.prototype, "name", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Number)
                ], FlexAuthComponent.prototype, "permission", void 0);
                FlexAuthComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'flex-auth',
                        template: __webpack_require__(/*! ./flex-auth.component.html */ "./app/gauges/gauge-property/flex-auth/flex-auth.component.html"),
                        styles: [__webpack_require__(/*! ./flex-auth.component.css */ "./app/gauges/gauge-property/flex-auth/flex-auth.component.css")]
                    }),
                    __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialog"]])
                ], FlexAuthComponent);
                return FlexAuthComponent;
            }());



            /***/
}),

/***/ "./app/gauges/gauge-property/flex-event/flex-event.component.css":
/*!***********************************************************************!*\
  !*** ./app/gauges/gauge-property/flex-event/flex-event.component.css ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ".item {\n    display: block;\n    width: 100%;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n    padding: 0px 0px 5px 0px;\n    min-width: 664px;\n    margin-bottom: 3px;\n}\n\n.remove {\n    position: relative;\n    top: 4px;\n    right: 0px;\n}\n\n.item-remove {\n    /* display: inline-block; */\n    float: right;\n    /* padding-top: 6px; */\n    /* min-width: 140px; */\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZ2F1Z2VzL2dhdWdlLXByb3BlcnR5L2ZsZXgtZXZlbnQvZmxleC1ldmVudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksY0FBYztJQUNkLFdBQVc7SUFDWCwyQ0FBMkM7SUFDM0Msd0JBQXdCO0lBQ3hCLGdCQUFnQjtJQUNoQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsUUFBUTtJQUNSLFVBQVU7QUFDZDs7QUFFQTtJQUNJLDJCQUEyQjtJQUMzQixZQUFZO0lBQ1osc0JBQXNCO0lBQ3RCLHNCQUFzQjtBQUMxQiIsImZpbGUiOiJzcmMvYXBwL2dhdWdlcy9nYXVnZS1wcm9wZXJ0eS9mbGV4LWV2ZW50L2ZsZXgtZXZlbnQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5pdGVtIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogMTAwJTtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjEpO1xuICAgIHBhZGRpbmc6IDBweCAwcHggNXB4IDBweDtcbiAgICBtaW4td2lkdGg6IDY2NHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDNweDtcbn1cblxuLnJlbW92ZSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHRvcDogNHB4O1xuICAgIHJpZ2h0OiAwcHg7XG59XG5cbi5pdGVtLXJlbW92ZSB7XG4gICAgLyogZGlzcGxheTogaW5saW5lLWJsb2NrOyAqL1xuICAgIGZsb2F0OiByaWdodDtcbiAgICAvKiBwYWRkaW5nLXRvcDogNnB4OyAqL1xuICAgIC8qIG1pbi13aWR0aDogMTQwcHg7ICovXG59XG4iXX0= */"

            /***/
}),

/***/ "./app/gauges/gauge-property/flex-event/flex-event.component.html":
/*!************************************************************************!*\
  !*** ./app/gauges/gauge-property/flex-event/flex-event.component.html ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div *ngFor=\"let item of events; index as i\" class=\"item\">\n    <div class=\"item-remove\">\n        <button mat-icon-button (click)=\"onRemoveEvent(i)\" class=\"remove\">\n            <mat-icon>clear</mat-icon>\n        </button>\n    </div>\n    <div style=\"display: inline-block;\">\n        <div class=\"my-form-field\" style=\"width: 140px;\">\n            <span>{{'gauges.property-event-type' | translate}}</span>\n            <mat-select [(value)]=\"item.type\">\n                <mat-option *ngFor=\"let ev of eventType | enumToArray\" [value]=\"ev.key\">\n                    {{ ev.value }}\n                </mat-option>\n            </mat-select>\n        </div>\n        <div class=\"my-form-field\" style=\"width: 140px;padding-left: 20px\">\n            <span>{{'gauges.property-event-action' | translate}}</span>\n            <mat-select [(value)]=\"item.action\" (change)=\"item.actparam = '';\">\n                <mat-option *ngFor=\"let type of actionType | enumToArray\" [value]=\"type.key\">\n                    {{ type.value }}\n                </mat-option>\n            </mat-select>\n        </div>\n    </div>\n    <div class=\"my-form-field\" style=\"width: 260px;padding-left: 20px\" *ngIf=\"withDestination(item.action)\">\n        <span>{{'gauges.property-event-destination' | translate}}</span>\n        <mat-select [(value)]=\"item.actparam\">\n            <mat-option *ngFor=\"let v of views; index as i\" [value]=\"v.id\">{{v.name}}</mat-option>\n        </mat-select>\n    </div>\n    <div *ngIf=\"withDestination(item.action)\" style=\"padding-left: 25px;\">\n        <flex-variables-mapping [(mapping)]=\"item.actoptions['variablesMapping']\" [view]=\"getView(item.actparam)\" [data]=\"data\"></flex-variables-mapping>\n    </div>\n    <div style=\"display: inline-block\" *ngIf=\"withSetInput(item.action)\">\n        <div class=\"my-form-field\" style=\"width: 260px;padding-left: 20px;\">\n            <span>{{'gauges.property-event-input' | translate}}</span>\n            <mat-select [(value)]=\"item.actparam\">\n                <mat-option *ngFor=\"let v of inputs; index as i\" [value]=\"v.id\">{{v.name}}</mat-option>\n            </mat-select>\n        </div>\n    </div>\n    <div style=\"display: inline-block\" *ngIf=\"withSetValue(item.action)\">\n        <div class=\"my-form-field\" style=\"padding-left: 20px;\">\n            <span>{{'gauges.property-event-value' | translate}}</span>\n            <input numberOnly [(ngModel)]=\"item.actparam\" type=\"text\" style=\"width: 260px\">\n        </div>\n    </div>\n    <div style=\"display: block; padding-top: 5px;padding-left: 25px;\"\n        *ngIf=\"withToggleValue(item.action) || withSetValue(item.action) || withSetInput(item.action)\">\n        <flex-variable style=\"display: block\" [data]=\"data\" [(value)]=\"item.actoptions.variable\" [withStaticValue]=\"false\"></flex-variable>\n    </div>\n    <div style=\"display: inline-block\" *ngIf=\"withAddress(item.action)\">\n        <div class=\"my-form-field\" style=\"padding-left: 20px;\">\n            <span>{{'gauges.property-event-address' | translate}}</span>\n            <input [(ngModel)]=\"item.actparam\" type=\"text\" style=\"width: 260px\">\n        </div>\n        <div style=\"display: table; padding-left: 20px; padding-top: 5px;\" *ngIf=\"withAddress(item.action)\">\n            <div class=\"my-form-field\">\n                <span>{{'gauges.property-event-width' | translate}}</span>\n                <input numberOnly [(ngModel)]=\"item.actoptions.width\" type=\"text\" style=\"width: 60px\">\n            </div>\n            <div class=\"my-form-field\" style=\"padding-left: 20px;\">\n                <span>{{'gauges.property-event-height' | translate}}</span>\n                <input numberOnly [(ngModel)]=\"item.actoptions.height\" type=\"text\" style=\"width: 60px\">\n            </div>\n            <div class=\"my-form-field\" style=\"padding-left: 20px;\" *ngIf=\"withScale(item.action)\">\n                <span>{{'gauges.property-event-scale' | translate}}</span>\n                <input numberOnly [(ngModel)]=\"item.actoptions.scale\" type=\"text\" style=\"width: 60px\">\n            </div>\n        </div>\n    </div>\n</div>"

            /***/
}),

/***/ "./app/gauges/gauge-property/flex-event/flex-event.component.ts":
/*!**********************************************************************!*\
  !*** ./app/gauges/gauge-property/flex-event/flex-event.component.ts ***!
  \**********************************************************************/
/*! exports provided: FlexEventComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FlexEventComponent", function () { return FlexEventComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ngx-translate/core */ "../node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js");
/* harmony import */ var _models_hmi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../_models/hmi */ "./app/_models/hmi.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };



            var FlexEventComponent = /** @class */ (function () {
                function FlexEventComponent(translateService) {
                    this.translateService = translateService;
                }
                FlexEventComponent.prototype.ngOnInit = function () {
                    var _this = this;
                    this.eventType = _models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeEventType"];
                    this.actionType = _models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeEventActionType"];
                    Object.keys(this.eventType).forEach(function (key) {
                        _this.translateService.get(_this.eventType[key]).subscribe(function (txt) { _this.eventType[key] = txt; });
                    });
                    Object.keys(this.actionType).forEach(function (key) {
                        _this.translateService.get(_this.actionType[key]).subscribe(function (txt) { _this.actionType[key] = txt; });
                    });
                    if (this.property) {
                        this.events = this.property.events;
                        // compatibility with <= 1.0.4
                        this.events.forEach(function (element) {
                            if (!element.actoptions || Object.keys(element.actoptions).length == 0) {
                                element.actoptions = { variablesMapping: [] };
                            }
                        });
                    }
                    if (!this.events || this.events.length <= 0) {
                        this.onAddEvent();
                    }
                };
                FlexEventComponent.prototype.getEvents = function () {
                    var result = [];
                    if (this.events) {
                        this.events.forEach(function (element) {
                            if (element.type) {
                                result.push(element);
                            }
                        });
                    }
                    return result;
                };
                FlexEventComponent.prototype.onAddEvent = function () {
                    var ga = new _models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeEvent"]();
                    this.addEvent(ga);
                };
                FlexEventComponent.prototype.onRemoveEvent = function (index) {
                    this.events.splice(index, 1);
                };
                FlexEventComponent.prototype.withDestination = function (action) {
                    var a = Object.keys(this.actionType).indexOf(action);
                    var b = Object.values(this.actionType).indexOf(_models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeEventActionType"].onpage);
                    var c = Object.values(this.actionType).indexOf(_models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeEventActionType"].onwindow);
                    var d = Object.values(this.actionType).indexOf(_models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeEventActionType"].ondialog);
                    return a === b || a === c || a === d;
                };
                FlexEventComponent.prototype.withSetValue = function (action) {
                    var a = Object.keys(this.actionType).indexOf(action);
                    var b = Object.values(this.actionType).indexOf(_models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeEventActionType"].onSetValue);
                    return a === b;
                };
                FlexEventComponent.prototype.withToggleValue = function (action) {
                    var a = Object.keys(this.actionType).indexOf(action);
                    var b = Object.values(this.actionType).indexOf(_models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeEventActionType"].onToggleValue);
                    return a === b;
                };
                FlexEventComponent.prototype.withSetInput = function (action) {
                    var a = Object.keys(this.actionType).indexOf(action);
                    var b = Object.values(this.actionType).indexOf(_models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeEventActionType"].onSetInput);
                    return a === b;
                };
                FlexEventComponent.prototype.withAddress = function (action) {
                    var a = Object.keys(this.actionType).indexOf(action);
                    var b = Object.values(this.actionType).indexOf(_models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeEventActionType"].oniframe);
                    var c = Object.values(this.actionType).indexOf(_models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeEventActionType"].oncard);
                    return a === b || a === c;
                };
                FlexEventComponent.prototype.withScale = function (action) {
                    var a = Object.keys(this.actionType).indexOf(action);
                    var b = Object.values(this.actionType).indexOf(_models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeEventActionType"].oniframe);
                    return a === b;
                };
                FlexEventComponent.prototype.getView = function (viewId) {
                    return this.views.find(function (item) {
                        return item.id == viewId;
                    });
                };
                FlexEventComponent.prototype.addEvent = function (ge) {
                    if (!this.events) {
                        this.events = [];
                    }
                    this.events.push(ge);
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", _models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeProperty"])
                ], FlexEventComponent.prototype, "property", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Array)
                ], FlexEventComponent.prototype, "views", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Array)
                ], FlexEventComponent.prototype, "inputs", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Object)
                ], FlexEventComponent.prototype, "data", void 0);
                FlexEventComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'flex-event',
                        template: __webpack_require__(/*! ./flex-event.component.html */ "./app/gauges/gauge-property/flex-event/flex-event.component.html"),
                        styles: [__webpack_require__(/*! ./flex-event.component.css */ "./app/gauges/gauge-property/flex-event/flex-event.component.css")]
                    }),
                    __metadata("design:paramtypes", [_ngx_translate_core__WEBPACK_IMPORTED_MODULE_1__["TranslateService"]])
                ], FlexEventComponent);
                return FlexEventComponent;
            }());



            /***/
}),

/***/ "./app/gauges/gauge-property/flex-head/flex-head.component.css":
/*!*********************************************************************!*\
  !*** ./app/gauges/gauge-property/flex-head/flex-head.component.css ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ".container {\n    /* border: 1px solid rgba(248,249,250, 1); */\n}\n\n.head {\n    /* background-color: rgba(243,243,243, 1); */\n    /* padding-left: 10px; */\n    /* padding-right: 10px; */\n    padding-top: 0;\n}\n\n.selection {\n    margin-right: 20px;\n    margin-bottom: -10px;\n    margin-top: 2px;\n    width: 220px;\n}\n\n.selection .mat-form-field-wrapper {\n    padding-bottom: 15px !important;\n}\n\n.item-set {\n    display: inline-block;\n    float: right;\n    padding-top: 13px;\n    min-width: 140px;\n}\n\n.panel-color-class {\n    position: relative;\n    top: 30px;\n}\n\n.panel-color {\n    display: inline-block;\n    padding-top: 10px;\n    max-width: 60px;\n    /* border: 1px solid rgba(0,0,0,0.1); */\n    height: 20px;\n    line-height: 12px;\n    margin-right: 25px;\n}\n\n.option-color {\n    height: 32px !important;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZ2F1Z2VzL2dhdWdlLXByb3BlcnR5L2ZsZXgtaGVhZC9mbGV4LWhlYWQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLDRDQUE0QztBQUNoRDs7QUFFQTtJQUNJLDRDQUE0QztJQUM1Qyx3QkFBd0I7SUFDeEIseUJBQXlCO0lBQ3pCLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsb0JBQW9CO0lBQ3BCLGVBQWU7SUFDZixZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksK0JBQStCO0FBQ25DOztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLFlBQVk7SUFDWixpQkFBaUI7SUFDakIsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLFNBQVM7QUFDYjs7QUFFQTtJQUNJLHFCQUFxQjtJQUNyQixpQkFBaUI7SUFDakIsZUFBZTtJQUNmLHVDQUF1QztJQUN2QyxZQUFZO0lBQ1osaUJBQWlCO0lBQ2pCLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLHVCQUF1QjtBQUMzQiIsImZpbGUiOiJzcmMvYXBwL2dhdWdlcy9nYXVnZS1wcm9wZXJ0eS9mbGV4LWhlYWQvZmxleC1oZWFkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcbiAgICAvKiBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDI0OCwyNDksMjUwLCAxKTsgKi9cbn1cblxuLmhlYWQge1xuICAgIC8qIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjQzLDI0MywyNDMsIDEpOyAqL1xuICAgIC8qIHBhZGRpbmctbGVmdDogMTBweDsgKi9cbiAgICAvKiBwYWRkaW5nLXJpZ2h0OiAxMHB4OyAqL1xuICAgIHBhZGRpbmctdG9wOiAwO1xufVxuXG4uc2VsZWN0aW9uIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XG4gICAgbWFyZ2luLWJvdHRvbTogLTEwcHg7XG4gICAgbWFyZ2luLXRvcDogMnB4O1xuICAgIHdpZHRoOiAyMjBweDtcbn1cblxuLnNlbGVjdGlvbiAubWF0LWZvcm0tZmllbGQtd3JhcHBlciB7XG4gICAgcGFkZGluZy1ib3R0b206IDE1cHggIWltcG9ydGFudDtcbn1cblxuLml0ZW0tc2V0IHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgZmxvYXQ6IHJpZ2h0O1xuICAgIHBhZGRpbmctdG9wOiAxM3B4O1xuICAgIG1pbi13aWR0aDogMTQwcHg7XG59XG5cbi5wYW5lbC1jb2xvci1jbGFzcyB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHRvcDogMzBweDtcbn1cblxuLnBhbmVsLWNvbG9yIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgcGFkZGluZy10b3A6IDEwcHg7XG4gICAgbWF4LXdpZHRoOiA2MHB4O1xuICAgIC8qIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwwLDAsMC4xKTsgKi9cbiAgICBoZWlnaHQ6IDIwcHg7XG4gICAgbGluZS1oZWlnaHQ6IDEycHg7XG4gICAgbWFyZ2luLXJpZ2h0OiAyNXB4O1xufVxuXG4ub3B0aW9uLWNvbG9yIHtcbiAgICBoZWlnaHQ6IDMycHggIWltcG9ydGFudDtcbn1cbiJdfQ== */"

            /***/
}),

/***/ "./app/gauges/gauge-property/flex-head/flex-head.component.html":
/*!**********************************************************************!*\
  !*** ./app/gauges/gauge-property/flex-head/flex-head.component.html ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div class=\"container\">\n    <div class=\"head\" style=\"padding-top: 10px;\">\n        <flex-variable [data]=\"data\" (onchange)=\"setVariable($event)\" [variableId]=\"property.variableId\" [variableValue]=\"property.variableValue\" [withStaticValue]=\"withStaticValue\">\n        </flex-variable>\n    </div>\n    <flex-input #flexinput *ngIf=\"withInput\" [data]=\"data\" [ranges]=\"property.ranges\" [default]=\"defaultValue\" [inputType]=\"withInput\" style=\"padding-bottom: 5px\">\n    </flex-input>\n</div>"

            /***/
}),

/***/ "./app/gauges/gauge-property/flex-head/flex-head.component.ts":
/*!********************************************************************!*\
  !*** ./app/gauges/gauge-property/flex-head/flex-head.component.ts ***!
  \********************************************************************/
/*! exports provided: FlexHeadComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FlexHeadComponent", function () { return FlexHeadComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "../node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "../node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _flex_input_flex_input_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../flex-input/flex-input.component */ "./app/gauges/gauge-property/flex-input/flex-input.component.ts");
/* harmony import */ var _models_hmi__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../_models/hmi */ "./app/_models/hmi.ts");
/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../_helpers/utils */ "./app/_helpers/utils.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };






            var FlexHeadComponent = /** @class */ (function () {
                function FlexHeadComponent() {
                    this.withStaticValue = true;
                    this.withInput = null;
                    this.currentTag = null;
                    this.defaultColor = _helpers_utils__WEBPACK_IMPORTED_MODULE_5__["Utils"].defaultColor;
                    // alarm: string;
                    this.alarmDeviceCtrl = new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"]();
                    this.alarmDeviceFilterCtrl = new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"]();
                    this.alarmCtrl = new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"]();
                    this.alarmFilterCtrl = new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"]();
                    /** list of variable filtered by search keyword */
                    this.filteredAlarmDevice = new rxjs__WEBPACK_IMPORTED_MODULE_2__["ReplaySubject"](1);
                    /** list of variable filtered by search keyword */
                    this.filteredAlarm = new rxjs__WEBPACK_IMPORTED_MODULE_2__["ReplaySubject"](1);
                    /** Subject that emits when the component has been destroyed. */
                    this._onDestroy = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
                }
                FlexHeadComponent.prototype.ngOnInit = function () {
                    if (!this.property) {
                        this.property = new _models_hmi__WEBPACK_IMPORTED_MODULE_4__["GaugeProperty"]();
                    }
                };
                FlexHeadComponent.prototype.ngAfterViewInit = function () {
                };
                FlexHeadComponent.prototype.ngOnDestroy = function () {
                    this._onDestroy.next();
                    this._onDestroy.complete();
                };
                FlexHeadComponent.prototype.getProperty = function () {
                    if (this.withInput) {
                        this.property.ranges = this.flexInput.getRanges();
                    }
                    return this.property;
                };
                FlexHeadComponent.prototype.getVariableLabel = function (vari) {
                    if (vari.label) {
                        return vari.label;
                    }
                    else {
                        return vari.name;
                    }
                };
                FlexHeadComponent.prototype.setVariable = function (event) {
                    this.property.variableId = event.variableId;
                    this.property.variableValue = event.variableValue;
                    if (this.flexInput) {
                        this.flexInput.changeTag(event.variableRaw);
                    }
                };
                FlexHeadComponent.prototype.onAddInput = function () {
                    this.flexInput.onAddInput();
                };
                FlexHeadComponent.prototype.onRangeViewToggle = function (slideView) {
                    this.flexInput.onRangeViewToggle(slideView);
                    this.flexInput.changeTag(this.currentTag);
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Object)
                ], FlexHeadComponent.prototype, "data", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", _models_hmi__WEBPACK_IMPORTED_MODULE_4__["GaugeProperty"])
                ], FlexHeadComponent.prototype, "property", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Object)
                ], FlexHeadComponent.prototype, "withStaticValue", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('flexinput'),
                    __metadata("design:type", _flex_input_flex_input_component__WEBPACK_IMPORTED_MODULE_3__["FlexInputComponent"])
                ], FlexHeadComponent.prototype, "flexInput", void 0);
                FlexHeadComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'flex-head',
                        template: __webpack_require__(/*! ./flex-head.component.html */ "./app/gauges/gauge-property/flex-head/flex-head.component.html"),
                        encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewEncapsulation"].None,
                        styles: [__webpack_require__(/*! ./flex-head.component.css */ "./app/gauges/gauge-property/flex-head/flex-head.component.css")]
                    }),
                    __metadata("design:paramtypes", [])
                ], FlexHeadComponent);
                return FlexHeadComponent;
            }());



            /***/
}),

/***/ "./app/gauges/gauge-property/flex-input/flex-input.component.css":
/*!***********************************************************************!*\
  !*** ./app/gauges/gauge-property/flex-input/flex-input.component.css ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ".grid-conta {\n    /* margin-left: 30px; */\n    /* max-height: 260px; */\n    /* overflow: auto; */\n}\n\n.item {\n    display: block;\n    /* min-height: 54px; */\n    width: 100%;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n    padding: 0px 0px 5px 0px;\n}\n\n.item-alarm {\n    margin-left: -30px;\n    width: calc(100% + 30px);\n}\n\n.remove {\n    position: relative;\n    top: 4px;\n    right: 0px;\n}\n\n.item-range {\n    display: inline-block;\n    min-width: 320px;\n    max-width: 320px;\n    width: 320px;\n}\n\n.item-minmax {\n    display: inline-block;\n    width: 100%;\n}\n\n.item-step {\n    display: inline-block;\n    width: 100%;\n    margin-top: 5px;\n}\n\n.item-unit {\n    display: inline-block;\n    /* width: 520px; */\n}\n\n.item-remove {\n    float: right;\n    /* padding-top: 6px; */\n    /* min-width: 140px; */\n}\n\n.panel-color-class {\n    position: relative;\n    top: 30px;\n}\n\n.panel-color {\n    display: inline-block;\n    padding-top: 10px;\n    max-width: 60px;\n    /* border: 1px solid rgba(0,0,0,0.1); */\n    height: 21px;\n    line-height: 12px;\n    margin-right: 25px;\n}\n\n.option-color {\n    height: 32px !important;\n}\n\n.panel-color-class {\n    margin-top: 30px !important;\n}\n\n.input-range {\n    display: inline-block;\n    max-width: 80px;\n}\n\n.input-range input {\n    font-size: 15px;\n    text-align: center;\n}\n\n.input-minmax {\n    display: inline-block;\n    max-width: 80px;\n}\n\n.input-minmax input {\n    font-size: 15px;\n    text-align: center;\n}\n\n.input-step {\n    display: inline-block;\n    max-width: 80px;\n}\n\n.input-step input {\n    font-size: 15px;\n    text-align: center;\n}\n\n.input-minmax-cb {\n    font-size: 15px;\n}\n\n::ng-deep .ng5-slider .ng5-slider-pointer {\n    width: 16px !important;\n    height: 16px !important;\n    border-radius: 8px !important;\n    top: -7px !important;\n}\n\n::ng-deep .ng5-slider .ng5-slider-pointer:after {\n    top: 6px !important;\n    left: 6px !important;\n    width: 4px !important;\n    height: 4px !important;\n    border-radius: 2px !important;\n}\n\n::ng-deep .input-range .input-step .input-minmax .mat-form-field-wrapper {\n    margin-bottom: -15px !important;\n}\n\n::ng-deep .input-range .input-step .input-minmax .mat-form-field-infix {\n    padding-top: 1px;\n    padding-bottom: 5px;\n}\n\n.input-step input {\n    font-size: 15px;\n    text-align: center;\n}\n\n.input-slider {\n    display: inline;\n    /* max-width: 160px; */\n}\n\n::ng-deep .input-slider span {\n    font-size: 14px !important;\n}\n\n.input-slider ng5-slider {\n    /* display: block; */\n    max-width: 300px;\n    margin-top: 29px;\n    margin-right: 20px;\n}\n\n.toolbox {\n    margin-top: 3px;\n    margin-bottom: 3px;\n}\n\n.toolbox button {\n    margin-right: 8px;\n    margin-left: 8px;\n}\n\n.slider-field span {\n    padding-left: 2px;\n    text-overflow: clip;\n    max-width: 125px;\n    white-space: nowrap;\n    overflow: hidden;\n}\n\n.slider-field mat-slider {\n    background-color: #f1f3f4;\n    height: 30px;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZ2F1Z2VzL2dhdWdlLXByb3BlcnR5L2ZsZXgtaW5wdXQvZmxleC1pbnB1dC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksdUJBQXVCO0lBQ3ZCLHVCQUF1QjtJQUN2QixvQkFBb0I7QUFDeEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2Qsc0JBQXNCO0lBQ3RCLFdBQVc7SUFDWCwyQ0FBMkM7SUFDM0Msd0JBQXdCO0FBQzVCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLHdCQUF3QjtBQUM1Qjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixRQUFRO0lBQ1IsVUFBVTtBQUNkOztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHFCQUFxQjtJQUNyQixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxxQkFBcUI7SUFDckIsV0FBVztJQUNYLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxxQkFBcUI7SUFDckIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksWUFBWTtJQUNaLHNCQUFzQjtJQUN0QixzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsU0FBUztBQUNiOztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLGlCQUFpQjtJQUNqQixlQUFlO0lBQ2YsdUNBQXVDO0lBQ3ZDLFlBQVk7SUFDWixpQkFBaUI7SUFDakIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksdUJBQXVCO0FBQzNCOztBQUVBO0lBQ0ksMkJBQTJCO0FBQy9COztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxlQUFlO0lBQ2Ysa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxlQUFlO0lBQ2Ysa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxlQUFlO0lBQ2Ysa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQTtJQUNJLHNCQUFzQjtJQUN0Qix1QkFBdUI7SUFDdkIsNkJBQTZCO0lBQzdCLG9CQUFvQjtBQUN4Qjs7QUFFQTtJQUNJLG1CQUFtQjtJQUNuQixvQkFBb0I7SUFDcEIscUJBQXFCO0lBQ3JCLHNCQUFzQjtJQUN0Qiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSwrQkFBK0I7QUFDbkM7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksZUFBZTtJQUNmLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGVBQWU7SUFDZixzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSwwQkFBMEI7QUFDOUI7O0FBRUE7SUFDSSxvQkFBb0I7SUFDcEIsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxlQUFlO0lBQ2Ysa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixtQkFBbUI7SUFDbkIsZ0JBQWdCO0lBQ2hCLG1CQUFtQjtJQUNuQixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSx5QkFBeUI7SUFDekIsWUFBWTtBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2dhdWdlcy9nYXVnZS1wcm9wZXJ0eS9mbGV4LWlucHV0L2ZsZXgtaW5wdXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ncmlkLWNvbnRhIHtcbiAgICAvKiBtYXJnaW4tbGVmdDogMzBweDsgKi9cbiAgICAvKiBtYXgtaGVpZ2h0OiAyNjBweDsgKi9cbiAgICAvKiBvdmVyZmxvdzogYXV0bzsgKi9cbn1cblxuLml0ZW0ge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIC8qIG1pbi1oZWlnaHQ6IDU0cHg7ICovXG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgICBwYWRkaW5nOiAwcHggMHB4IDVweCAwcHg7XG59XG5cbi5pdGVtLWFsYXJtIHtcbiAgICBtYXJnaW4tbGVmdDogLTMwcHg7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSArIDMwcHgpO1xufVxuXG4ucmVtb3ZlIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdG9wOiA0cHg7XG4gICAgcmlnaHQ6IDBweDtcbn1cblxuLml0ZW0tcmFuZ2Uge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBtaW4td2lkdGg6IDMyMHB4O1xuICAgIG1heC13aWR0aDogMzIwcHg7XG4gICAgd2lkdGg6IDMyMHB4O1xufVxuXG4uaXRlbS1taW5tYXgge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB3aWR0aDogMTAwJTtcbn1cblxuLml0ZW0tc3RlcCB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbi10b3A6IDVweDtcbn1cblxuLml0ZW0tdW5pdCB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIC8qIHdpZHRoOiA1MjBweDsgKi9cbn1cblxuLml0ZW0tcmVtb3ZlIHtcbiAgICBmbG9hdDogcmlnaHQ7XG4gICAgLyogcGFkZGluZy10b3A6IDZweDsgKi9cbiAgICAvKiBtaW4td2lkdGg6IDE0MHB4OyAqL1xufVxuXG4ucGFuZWwtY29sb3ItY2xhc3Mge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB0b3A6IDMwcHg7XG59XG5cbi5wYW5lbC1jb2xvciB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHBhZGRpbmctdG9wOiAxMHB4O1xuICAgIG1heC13aWR0aDogNjBweDtcbiAgICAvKiBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDAsMCwwLDAuMSk7ICovXG4gICAgaGVpZ2h0OiAyMXB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxMnB4O1xuICAgIG1hcmdpbi1yaWdodDogMjVweDtcbn1cblxuLm9wdGlvbi1jb2xvciB7XG4gICAgaGVpZ2h0OiAzMnB4ICFpbXBvcnRhbnQ7XG59XG5cbi5wYW5lbC1jb2xvci1jbGFzcyB7XG4gICAgbWFyZ2luLXRvcDogMzBweCAhaW1wb3J0YW50O1xufVxuXG4uaW5wdXQtcmFuZ2Uge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBtYXgtd2lkdGg6IDgwcHg7XG59XG5cbi5pbnB1dC1yYW5nZSBpbnB1dCB7XG4gICAgZm9udC1zaXplOiAxNXB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmlucHV0LW1pbm1heCB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIG1heC13aWR0aDogODBweDtcbn1cblxuLmlucHV0LW1pbm1heCBpbnB1dCB7XG4gICAgZm9udC1zaXplOiAxNXB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmlucHV0LXN0ZXAge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBtYXgtd2lkdGg6IDgwcHg7XG59XG5cbi5pbnB1dC1zdGVwIGlucHV0IHtcbiAgICBmb250LXNpemU6IDE1cHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uaW5wdXQtbWlubWF4LWNiIHtcbiAgICBmb250LXNpemU6IDE1cHg7XG59XG5cbjo6bmctZGVlcCAubmc1LXNsaWRlciAubmc1LXNsaWRlci1wb2ludGVyIHtcbiAgICB3aWR0aDogMTZweCAhaW1wb3J0YW50O1xuICAgIGhlaWdodDogMTZweCAhaW1wb3J0YW50O1xuICAgIGJvcmRlci1yYWRpdXM6IDhweCAhaW1wb3J0YW50O1xuICAgIHRvcDogLTdweCAhaW1wb3J0YW50O1xufVxuXG46Om5nLWRlZXAgLm5nNS1zbGlkZXIgLm5nNS1zbGlkZXItcG9pbnRlcjphZnRlciB7XG4gICAgdG9wOiA2cHggIWltcG9ydGFudDtcbiAgICBsZWZ0OiA2cHggIWltcG9ydGFudDtcbiAgICB3aWR0aDogNHB4ICFpbXBvcnRhbnQ7XG4gICAgaGVpZ2h0OiA0cHggIWltcG9ydGFudDtcbiAgICBib3JkZXItcmFkaXVzOiAycHggIWltcG9ydGFudDtcbn1cblxuOjpuZy1kZWVwIC5pbnB1dC1yYW5nZSAuaW5wdXQtc3RlcCAuaW5wdXQtbWlubWF4IC5tYXQtZm9ybS1maWVsZC13cmFwcGVyIHtcbiAgICBtYXJnaW4tYm90dG9tOiAtMTVweCAhaW1wb3J0YW50O1xufVxuXG46Om5nLWRlZXAgLmlucHV0LXJhbmdlIC5pbnB1dC1zdGVwIC5pbnB1dC1taW5tYXggLm1hdC1mb3JtLWZpZWxkLWluZml4IHtcbiAgICBwYWRkaW5nLXRvcDogMXB4O1xuICAgIHBhZGRpbmctYm90dG9tOiA1cHg7XG59XG5cbi5pbnB1dC1zdGVwIGlucHV0IHtcbiAgICBmb250LXNpemU6IDE1cHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uaW5wdXQtc2xpZGVyIHtcbiAgICBkaXNwbGF5OiBpbmxpbmU7XG4gICAgLyogbWF4LXdpZHRoOiAxNjBweDsgKi9cbn1cblxuOjpuZy1kZWVwIC5pbnB1dC1zbGlkZXIgc3BhbiB7XG4gICAgZm9udC1zaXplOiAxNHB4ICFpbXBvcnRhbnQ7XG59XG5cbi5pbnB1dC1zbGlkZXIgbmc1LXNsaWRlciB7XG4gICAgLyogZGlzcGxheTogYmxvY2s7ICovXG4gICAgbWF4LXdpZHRoOiAzMDBweDtcbiAgICBtYXJnaW4tdG9wOiAyOXB4O1xuICAgIG1hcmdpbi1yaWdodDogMjBweDtcbn1cblxuLnRvb2xib3gge1xuICAgIG1hcmdpbi10b3A6IDNweDtcbiAgICBtYXJnaW4tYm90dG9tOiAzcHg7XG59XG5cbi50b29sYm94IGJ1dHRvbiB7XG4gICAgbWFyZ2luLXJpZ2h0OiA4cHg7XG4gICAgbWFyZ2luLWxlZnQ6IDhweDtcbn1cblxuLnNsaWRlci1maWVsZCBzcGFuIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDJweDtcbiAgICB0ZXh0LW92ZXJmbG93OiBjbGlwO1xuICAgIG1heC13aWR0aDogMTI1cHg7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4uc2xpZGVyLWZpZWxkIG1hdC1zbGlkZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmMWYzZjQ7XG4gICAgaGVpZ2h0OiAzMHB4O1xufVxuIl19 */"

            /***/
}),

/***/ "./app/gauges/gauge-property/flex-input/flex-input.component.html":
/*!************************************************************************!*\
  !*** ./app/gauges/gauge-property/flex-input/flex-input.component.html ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div class=\"grid-conta\">\n    <div *ngFor=\"let item of ranges; index as i\" class=\"item\">\n        <div *ngIf=\"isWithRange()\">\n            <div *ngIf=\"slideView\" class=\"item-range\">\n                <div class=\"my-form-field\">\n                    <span>{{'gauges.property-input-min' | translate}}</span>\n                    <input numberOnly [(ngModel)]=\"item.min\" type=\"text\" style=\"width: 80px\">\n                </div>\n                <div class=\"my-form-field\" style=\"padding-left: 20px;\">\n                    <span>{{'gauges.property-input-max' | translate}}</span>\n                    <input numberOnly [(ngModel)]=\"item.max\" type=\"text\" style=\"width: 80px\">\n                </div>\n            </div>\n            <div class=\"item-range input-slider\" *ngIf=\"!slideView\">\n                <ng5-slider [(value)]=\"item.min\" [(highValue)]=\"item.max\" [options]=\"options\"></ng5-slider>\n            </div>\n            <div *ngIf=\"isWithRangeColor()\" style=\"display: inline-block;\">\n                <div class=\"my-form-field\">\n                    <span>{{'gauges.property-input-color' | translate}}</span>\n                    <input [(colorPicker)]=\"item.color\" [value]=\"item.color\" [style.background]=\"item.color\" [cpPresetColors]=\"defaultColor\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\"\n                        [cpCancelButtonClass]=\"'cpCancelButtonClass'\" [cpCancelButtonText]=\"'Cancel'\" [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\" class=\"input-color\"\n                        style=\"width:70px;\" [cpPosition]=\"'auto'\" [cpAlphaChannel]=\"'always'\" [cpOutputFormat]=\"'hex'\"/>\n                </div>\n                <div class=\"my-form-field\" style=\"margin-left: 10px;\">\n                    <span>{{'gauges.property-input-stroke' | translate}}</span>\n                    <input [(colorPicker)]=\"item.stroke\" [value]=\"item.stroke\" [style.background]=\"item.stroke\" [cpPresetColors]=\"defaultColor\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\"\n                        [cpCancelButtonClass]=\"'cpCancelButtonClass'\" [cpCancelButtonText]=\"'Cancel'\" [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\" class=\"input-color\"\n                        style=\"width:70px;\" [cpPosition]=\"'auto'\" [cpAlphaChannel]=\"'always'\" [cpOutputFormat]=\"'hex'\"/>\n                </div>\n            </div>\n            <div class=\"item-remove\">\n                <button mat-icon-button (click)=\"onRemoveInput(i)\" class=\"remove\">\n                    <mat-icon>clear</mat-icon>\n                </button>\n            </div>\n        </div>\n        <div *ngIf=\"isMinMax()\">\n            <div class=\"item-minmax\">\n                <div class=\"my-form-field\">\n                    <span>{{'gauges.property-input-min' | translate}}</span>\n                    <input numberOnly [(ngModel)]=\"item.min\" type=\"text\" style=\"width: 80px\">\n                </div>\n                <div class=\"my-form-field\" style=\"padding-left: 20px;\">\n                    <span>{{'gauges.property-input-max' | translate}}</span>\n                    <input numberOnly [(ngModel)]=\"item.max\" type=\"text\" style=\"width: 80px\">\n                </div>\n                <div class=\"my-form-field\" style=\"padding-left: 30px\">\n                    <!-- <span>Unit</span>\n                    <input [(ngModel)]=\"item.text\" type=\"text\" style=\"width: 60px;text-align: center !important\"> -->\n                </div>\n                <div class=\"my-form-field\" style=\"width: 60px;margin-left: 20px;\">\n                    <span>{{'gauges.property-input-color' | translate}}</span>\n                    <input [(colorPicker)]=\"item.color\" [style.background]=\"getColor(item)\" [cpPresetColors]=\"defaultColor\" [cpOKButton]=\"true\" [cpCancelButton]=\"true\"\n                        [cpCancelButtonClass]=\"'cpCancelButtonClass'\" [cpCancelButtonText]=\"'Cancel'\" [cpOKButtonText]=\"'OK'\" [cpOKButtonClass]=\"'cpOKButtonClass'\"\n                        class=\"input-color\" style=\"width:70px;\" [cpPosition]=\"'auto'\" [cpAlphaChannel]=\"'always'\" />\n                </div>\n                <!-- <mat-checkbox class=\"input-minmax-cb\" style=\"padding-left: 30px\" [(ngModel)]=\"withLabel\">Range</mat-checkbox> -->\n                <!-- <mat-checkbox class=\"input-minmax-cb\" style=\"padding-left: 20px\" [(ngModel)]=\"withValue\">Value</mat-checkbox> -->\n            </div>\n        </div>\n        <div *ngIf=\"isWithStep()\" class=\"item-step\">\n            <div class=\"my-form-field\">\n                <span>{{'gauges.property-input-value' | translate}}</span>\n                <input numberOnly [(ngModel)]=\"item.min\" type=\"text\" style=\"width: 100px\">\n            </div>\n            <div style=\"font-size: 18px;width: 11px; display:inline-block;text-align: center;\">-</div>\n            <div class=\"my-form-field\">\n                <span>{{'gauges.property-input-label' | translate}}</span>\n                <input [(ngModel)]=\"item.text\" type=\"text\" style=\"width: 200px;text-align: left !important\">\n            </div>\n            <div class=\"item-remove\">\n                <button mat-icon-button (click)=\"onRemoveInput(i)\" class=\"remove\">\n                    <mat-icon>clear</mat-icon>\n                </button>\n            </div>\n        </div>\n        <div *ngIf=\"isWithUnit()\" class=\"item-unit\">\n            <flex-variable #unit [data]=\"data\" (onchange)=\"onUnitChanged(item, $event)\" [variableId]=\"item.textId\" [variableValue]=\"item.text\"\n                [variableLabel]=\"'gauges.property-input-unit'\">\n            </flex-variable>\n            <flex-variable #digits [data]=\"data\" (onchange)=\"onFormatDigitChanged(item, $event)\" [variableId]=\"item.fractionDigitsId\" [variableValue]=\"item.fractionDigits\"\n                [variableLabel]=\"'gauges.property-format-digits'\">\n            </flex-variable>\n        </div>\n    </div>\n</div>"

            /***/
}),

/***/ "./app/gauges/gauge-property/flex-input/flex-input.component.ts":
/*!**********************************************************************!*\
  !*** ./app/gauges/gauge-property/flex-input/flex-input.component.ts ***!
  \**********************************************************************/
/*! exports provided: FlexInputComponent, InputItemType */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FlexInputComponent", function () { return FlexInputComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InputItemType", function () { return InputItemType; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _models_hmi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../_models/hmi */ "./app/_models/hmi.ts");
/* harmony import */ var _models_device__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../_models/device */ "./app/_models/device.ts");
/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../_helpers/utils */ "./app/_helpers/utils.ts");
/* harmony import */ var _flex_variable_flex_variable_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../flex-variable/flex-variable.component */ "./app/gauges/gauge-property/flex-variable/flex-variable.component.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };





            var FlexInputComponent = /** @class */ (function () {
                function FlexInputComponent() {
                    this.tag = null;
                    this.withLabel = true;
                    this.withValue = true;
                    this.slideView = true;
                    this.defaultColor = _helpers_utils__WEBPACK_IMPORTED_MODULE_3__["Utils"].defaultColor;
                    this.options = {
                        floor: 0,
                        ceil: 100
                    };
                    this.valueresult = '123';
                }
                FlexInputComponent.prototype.ngOnInit = function () {
                    if (!this.ranges) {
                        this.ranges = [];
                        var ip = new _models_hmi__WEBPACK_IMPORTED_MODULE_1__["GaugeRangeProperty"]();
                        if (this.isWithStep()) {
                            ip.type = this.type;
                            ip.min = 1;
                            ip.max = 1;
                        }
                        else if (this.isMinMax()) {
                            ip.type = this.type;
                            ip.min = 0;
                            ip.max = 100;
                            ip.style = [true, true];
                        }
                        else {
                            ip.type = this.type;
                            ip.min = 20;
                            ip.max = 80;
                        }
                        this.addInput(ip);
                    }
                    else if (this.isMinMax()) {
                        if (this.ranges.length > 0 && this.ranges[0].style.length === 2) {
                            this.withLabel = this.ranges[0].style[0];
                            this.withValue = this.ranges[0].style[1];
                        }
                    }
                    else if (this.isWithUnit()) {
                    }
                    this.ranges.forEach(function (range) {
                        if (!range.color) {
                            range.color = '';
                        }
                        if (!range.stroke) {
                            range.stroke = '';
                        }
                    });
                };
                FlexInputComponent.prototype.onAddInput = function () {
                    var gap = new _models_hmi__WEBPACK_IMPORTED_MODULE_1__["GaugeRangeProperty"]();
                    gap.type = this.type;
                    gap.color = '';
                    gap.stroke = '';
                    this.addInput(gap);
                };
                FlexInputComponent.prototype.onRemoveInput = function (index) {
                    this.ranges.splice(index, 1);
                };
                FlexInputComponent.prototype.onRangeViewToggle = function (slideView) {
                    this.slideView = slideView;
                };
                FlexInputComponent.prototype.getRanges = function () {
                    var _this = this;
                    var result = [];
                    this.ranges.forEach(function (element) {
                        element.type = _this.inputType;
                        if (_this.isWithStep()) {
                            element.max = element.min;
                            if (element.min !== null && element.max !== null) {
                                result.push(element);
                            }
                        }
                        else if (_this.isMinMax()) {
                            element.style = [_this.withLabel, _this.withValue];
                            result.push(element);
                        }
                        else {
                            if (!_helpers_utils__WEBPACK_IMPORTED_MODULE_3__["Utils"].isNullOrUndefined(element.min) && !_helpers_utils__WEBPACK_IMPORTED_MODULE_3__["Utils"].isNullOrUndefined(element.max)) {
                                result.push(element);
                            }
                        }
                    });
                    return result;
                };
                FlexInputComponent.prototype.getColor = function (item) {
                    if (item && item.color) {
                        return item.color;
                    }
                    else if (this.default && this.default.color) {
                        return this.default.color;
                    }
                };
                FlexInputComponent.prototype.changeTag = function (_tag) {
                    this.tag = _tag;
                    if (this.tag) {
                        var newOptions = Object.assign({}, this.options);
                        for (var i = 0; i < this.ranges.length; i++) {
                            if (!this.ranges[i].min || this.ranges[i].min <= newOptions.floor) {
                                this.ranges[i].min = newOptions.floor;
                            }
                            if (!this.ranges[i].max || this.ranges[i].max >= newOptions.ceil) {
                                this.ranges[i].max = newOptions.ceil;
                            }
                        }
                    }
                    if (this.isWithUnit()) {
                        var device = _models_device__WEBPACK_IMPORTED_MODULE_2__["DevicesUtils"].getDeviceFromTagId(this.data.devices, _tag.id);
                        if (device) {
                            if (this.varunit) {
                                this.varunit.setVariable(_models_device__WEBPACK_IMPORTED_MODULE_2__["DevicesUtils"].getTagFromTagAddress(device, _tag.address + 'OpcEngUnit'));
                            }
                            if (this.vardigits) {
                                this.vardigits.setVariable(_models_device__WEBPACK_IMPORTED_MODULE_2__["DevicesUtils"].getTagFromTagAddress(device, _tag.address + 'DecimalPlaces'));
                            }
                        }
                    }
                };
                FlexInputComponent.prototype.isWithRange = function () {
                    if (this.inputType === 'range') {
                        return true;
                    }
                    return false;
                };
                FlexInputComponent.prototype.isMinMax = function () {
                    if (this.inputType === 'minmax') {
                        return true;
                    }
                    return false;
                };
                FlexInputComponent.prototype.isWithRangeColor = function () {
                    if (this.inputType === 'range') {
                        return true;
                    }
                    return false;
                };
                FlexInputComponent.prototype.isWithStep = function () {
                    if (this.inputType === 'step') {
                        return true;
                    }
                    return false;
                };
                FlexInputComponent.prototype.isWithUnit = function () {
                    if (this.inputType === 'unit') {
                        return true;
                    }
                    return false;
                };
                FlexInputComponent.prototype.onFormatDigitChanged = function (range, event) {
                    range['fractionDigitsId'] = event.variableId;
                    range['fractionDigits'] = event.variableValue;
                };
                FlexInputComponent.prototype.onUnitChanged = function (range, event) {
                    range.textId = event.variableId;
                    range.text = event.variableValue;
                };
                FlexInputComponent.prototype.addInput = function (gap) {
                    this.ranges.push(gap);
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Object)
                ], FlexInputComponent.prototype, "data", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Array)
                ], FlexInputComponent.prototype, "ranges", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", String)
                ], FlexInputComponent.prototype, "type", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", String)
                ], FlexInputComponent.prototype, "inputType", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Object)
                ], FlexInputComponent.prototype, "default", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('unit'),
                    __metadata("design:type", _flex_variable_flex_variable_component__WEBPACK_IMPORTED_MODULE_4__["FlexVariableComponent"])
                ], FlexInputComponent.prototype, "varunit", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('digits'),
                    __metadata("design:type", _flex_variable_flex_variable_component__WEBPACK_IMPORTED_MODULE_4__["FlexVariableComponent"])
                ], FlexInputComponent.prototype, "vardigits", void 0);
                FlexInputComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'flex-input',
                        template: __webpack_require__(/*! ./flex-input.component.html */ "./app/gauges/gauge-property/flex-input/flex-input.component.html"),
                        styles: [__webpack_require__(/*! ./flex-input.component.css */ "./app/gauges/gauge-property/flex-input/flex-input.component.css")]
                    }),
                    __metadata("design:paramtypes", [])
                ], FlexInputComponent);
                return FlexInputComponent;
            }());

            var InputItemType;
            (function (InputItemType) {
                InputItemType[InputItemType["Color"] = 0] = "Color";
            })(InputItemType || (InputItemType = {}));


            /***/
}),

/***/ "./app/gauges/gauge-property/flex-variable-map/flex-variable-map.component.css":
/*!*************************************************************************************!*\
  !*** ./app/gauges/gauge-property/flex-variable-map/flex-variable-map.component.css ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ".flex-variable-mapping {\n    border-bottom: 1px solid rgba(0, 0, 0, 0.08);\n    padding-bottom: 3px;\n    padding-top: 3px;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZ2F1Z2VzL2dhdWdlLXByb3BlcnR5L2ZsZXgtdmFyaWFibGUtbWFwL2ZsZXgtdmFyaWFibGUtbWFwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSw0Q0FBNEM7SUFDNUMsbUJBQW1CO0lBQ25CLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL2dhdWdlcy9nYXVnZS1wcm9wZXJ0eS9mbGV4LXZhcmlhYmxlLW1hcC9mbGV4LXZhcmlhYmxlLW1hcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZsZXgtdmFyaWFibGUtbWFwcGluZyB7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4wOCk7XG4gICAgcGFkZGluZy1ib3R0b206IDNweDtcbiAgICBwYWRkaW5nLXRvcDogM3B4O1xufVxuIl19 */"

            /***/
}),

/***/ "./app/gauges/gauge-property/flex-variable-map/flex-variable-map.component.html":
/*!**************************************************************************************!*\
  !*** ./app/gauges/gauge-property/flex-variable-map/flex-variable-map.component.html ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div class=\"flex-variable-mapping\">\n    <!-- <div class=\"my-form-field\" style=\"min-width: 200px;margin-right: 10px\">\n        <span>{{'gauges.property-events-mapping-from' | translate}}</span>\n        <mat-select class=\"my-form-field\" [compareWith]=\"compareVariables\" [(value)]=\"value.from\" (valueChange)=\"onValueChange()\">\n            <mat-option *ngFor=\"let vr of fromVariables\" [value]=\"vr\">{{ vr.variable }}</mat-option>\n        </mat-select>\n    </div> -->\n    <div style=\"display: inline-block;\">\n        <flex-variable style=\"display: block\" [data]=\"data\" [(value)]=\"value.from\" (valueChange)=\"onValueChange()\" [allowManualEdit]=\"true\"\n         [withStaticValue]=\"false\" [tagTitle]=\"'gauges.property-tag-internal-title'\"></flex-variable>\n        <flex-variable style=\"display: block\" [data]=\"data\" [(value)]=\"value.to\" (valueChange)=\"onValueChange()\" [allowManualEdit]=\"false\"\n         [withStaticValue]=\"false\"></flex-variable>\n    </div>\n    <div style=\"display: inline-block;\">\n        <div style=\"display: inline-block; margin-bottom: 2px; width: 12px; border-radius: 2px; height: 45px; \n            border-radius: 0px 3px 3px 0px; border-top: 2px solid #cacaca; border-right: 2px solid #cacaca; border-bottom: 2px solid #cacaca;\">\n        </div>\n    </div>\n    <ng-content></ng-content>\n</div>"

            /***/
}),

/***/ "./app/gauges/gauge-property/flex-variable-map/flex-variable-map.component.ts":
/*!************************************************************************************!*\
  !*** ./app/gauges/gauge-property/flex-variable-map/flex-variable-map.component.ts ***!
  \************************************************************************************/
/*! exports provided: FlexVariableMapComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FlexVariableMapComponent", function () { return FlexVariableMapComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _models_hmi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../_models/hmi */ "./app/_models/hmi.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };


            var FlexVariableMapComponent = /** @class */ (function () {
                function FlexVariableMapComponent() {
                    this.fromVariables = [];
                    this.valueChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
                }
                FlexVariableMapComponent.prototype.ngOnInit = function () {
                    if (!this.value) {
                        this.value = {};
                    }
                    this.value.from = this.value.from || {};
                    this.value.to = this.value.to || {};
                };
                FlexVariableMapComponent.prototype.ngOnChanges = function (changes) {
                };
                FlexVariableMapComponent.prototype.onValueChange = function () {
                    this.valueChange.emit(this.value);
                };
                FlexVariableMapComponent.prototype.compareVariables = function (v1, v2) {
                    return v1 && v2 && v1.variableId == v2.variableId;
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", _models_hmi__WEBPACK_IMPORTED_MODULE_1__["View"])
                ], FlexVariableMapComponent.prototype, "view", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Object)
                ], FlexVariableMapComponent.prototype, "data", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Object)
                ], FlexVariableMapComponent.prototype, "value", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Object)
                ], FlexVariableMapComponent.prototype, "fromVariables", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"])
                ], FlexVariableMapComponent.prototype, "valueChange", void 0);
                FlexVariableMapComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'flex-variable-map',
                        template: __webpack_require__(/*! ./flex-variable-map.component.html */ "./app/gauges/gauge-property/flex-variable-map/flex-variable-map.component.html"),
                        styles: [__webpack_require__(/*! ./flex-variable-map.component.css */ "./app/gauges/gauge-property/flex-variable-map/flex-variable-map.component.css")]
                    }),
                    __metadata("design:paramtypes", [])
                ], FlexVariableMapComponent);
                return FlexVariableMapComponent;
            }());



            /***/
}),

/***/ "./app/gauges/gauge-property/flex-variable/flex-variable.component.css":
/*!*****************************************************************************!*\
  !*** ./app/gauges/gauge-property/flex-variable/flex-variable.component.css ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dhdWdlcy9nYXVnZS1wcm9wZXJ0eS9mbGV4LXZhcmlhYmxlL2ZsZXgtdmFyaWFibGUuY29tcG9uZW50LmNzcyJ9 */"

            /***/
}),

/***/ "./app/gauges/gauge-property/flex-variable/flex-variable.component.html":
/*!******************************************************************************!*\
  !*** ./app/gauges/gauge-property/flex-variable/flex-variable.component.html ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div style=\"display: block; margin-bottom: 5px;\">\n    <div class=\"my-form-field\" style=\"max-width: 100px;margin-right: 18px;\" *ngIf=\"withStaticValue\">\n        <span>{{variableLabel | translate}}</span>\n        <input [(ngModel)]=\"variableValue\" (change)=\"onChanged()\" style=\"width: 100px\" type=\"text\">\n    </div>\n    <div class=\"my-form-field\" style=\"display:inline-block;\">\n        <span>{{tagLabel | translate}}</span>\n        <div class=\"my-form-field-link\"></div>\n        <button mat-icon-button (click)=\"onBindTag()\" style=\"line-height: 28px;height:28px; width:28px; vertical-align: middle;\">\n            <mat-icon>link</mat-icon>\n        </button>\n    </div>\n    <div class=\"my-form-field\" style=\"margin-left: 0px;\">\n        <span>{{getDeviceName(variableId)}}</span>\n        <input style=\"font-size: 13px;min-width: 450px\" value=\"{{getVariableName(variableId)}}\" readonly=\"true\" [disabled]=\"true\" \n            title=\"{{tagTitle | translate}}\" placeholder=\"{{tagTitle | translate}}\">\n    </div>\n</div>"

            /***/
}),

/***/ "./app/gauges/gauge-property/flex-variable/flex-variable.component.ts":
/*!****************************************************************************!*\
  !*** ./app/gauges/gauge-property/flex-variable/flex-variable.component.ts ***!
  \****************************************************************************/
/*! exports provided: FlexVariableComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FlexVariableComponent", function () { return FlexVariableComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "../node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _models_device__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../_models/device */ "./app/_models/device.ts");
/* harmony import */ var _device_device_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../device/device.component */ "./app/device/device.component.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };




            var FlexVariableComponent = /** @class */ (function () {
                function FlexVariableComponent(dialog) {
                    this.dialog = dialog;
                    this.allowManualEdit = false;
                    this.variableLabel = 'gauges.property-variable-value';
                    this.withStaticValue = true;
                    this.tagLabel = 'gauges.property-tag-label';
                    this.tagTitle = '';
                    this.onchange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
                    this.valueChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
                    this.manualEdit = false;
                    this.variableList = [];
                    this.currentVariable = null;
                }
                FlexVariableComponent.prototype.ngOnInit = function () {
                    if (!this.value) {
                        this.value = {
                            variableId: this.variableId
                        };
                    }
                    else if (this.value.variableId) {
                        this.variableId = this.value.variableId;
                    }
                };
                FlexVariableComponent.prototype.getDeviceName = function (variableId) {
                    var device = _models_device__WEBPACK_IMPORTED_MODULE_2__["DevicesUtils"].getDeviceFromTagId(this.data.devices, this.variableId);
                    if (device) {
                        return device.name;
                    }
                    return '';
                };
                FlexVariableComponent.prototype.getVariableName = function (variableId) {
                    var tag = _models_device__WEBPACK_IMPORTED_MODULE_2__["DevicesUtils"].getTagFromTagId(this.data.devices, this.variableId);
                    if (tag) {
                        var result = tag.label || tag.name;
                        if (result && tag.address && result !== tag.address) {
                            return result + ' - ' + tag.address;
                        }
                        if (tag.address) {
                            return tag.address;
                        }
                        return result;
                    }
                    return '';
                };
                FlexVariableComponent.prototype.onChanged = function () {
                    var tag = _models_device__WEBPACK_IMPORTED_MODULE_2__["DevicesUtils"].getTagFromTagId(this.data.devices, this.variableId);
                    if (tag) {
                        this.value.variableId = tag.id;
                        this.value.variableRaw = tag;
                    }
                    else {
                        this.value.variableId = null;
                        this.value.variableRaw = null;
                    }
                    this.value.variableValue = this.variableValue;
                    this.onchange.emit(this.value); // Legacy
                    this.valueChange.emit(this.value);
                };
                FlexVariableComponent.prototype.onBindTag = function () {
                    var _this = this;
                    var dialogRef = this.dialog.open(_device_device_component__WEBPACK_IMPORTED_MODULE_3__["DeviceTagDialog"], {
                        position: { top: '60px' },
                        data: { variableId: this.variableId, devices: this.data.devices }
                    });
                    dialogRef.afterClosed().subscribe(function (result) {
                        if (result) {
                            _this.variableId = result.variableId;
                            _this.onChanged();
                        }
                    });
                };
                FlexVariableComponent.prototype.setVariable = function (tag) {
                    if (tag) {
                        this.variableId = tag.id;
                    }
                    else {
                        this.variableId = null;
                    }
                    this.onChanged();
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Object)
                ], FlexVariableComponent.prototype, "data", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", String)
                ], FlexVariableComponent.prototype, "variableId", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Object)
                ], FlexVariableComponent.prototype, "value", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Boolean)
                ], FlexVariableComponent.prototype, "allowManualEdit", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", String)
                ], FlexVariableComponent.prototype, "variableValue", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", String)
                ], FlexVariableComponent.prototype, "variableLabel", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Boolean)
                ], FlexVariableComponent.prototype, "withStaticValue", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", String)
                ], FlexVariableComponent.prototype, "tagLabel", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", String)
                ], FlexVariableComponent.prototype, "tagTitle", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"])
                ], FlexVariableComponent.prototype, "onchange", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"])
                ], FlexVariableComponent.prototype, "valueChange", void 0);
                FlexVariableComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'flex-variable',
                        template: __webpack_require__(/*! ./flex-variable.component.html */ "./app/gauges/gauge-property/flex-variable/flex-variable.component.html"),
                        styles: [__webpack_require__(/*! ./flex-variable.component.css */ "./app/gauges/gauge-property/flex-variable/flex-variable.component.css")]
                    }),
                    __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialog"]])
                ], FlexVariableComponent);
                return FlexVariableComponent;
            }());



            /***/
}),

/***/ "./app/gauges/gauge-property/flex-variables-mapping/flex-variables-mapping.component.css":
/*!***********************************************************************************************!*\
  !*** ./app/gauges/gauge-property/flex-variables-mapping/flex-variables-mapping.component.css ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dhdWdlcy9nYXVnZS1wcm9wZXJ0eS9mbGV4LXZhcmlhYmxlcy1tYXBwaW5nL2ZsZXgtdmFyaWFibGVzLW1hcHBpbmcuY29tcG9uZW50LmNzcyJ9 */"

            /***/
}),

/***/ "./app/gauges/gauge-property/flex-variables-mapping/flex-variables-mapping.component.html":
/*!************************************************************************************************!*\
  !*** ./app/gauges/gauge-property/flex-variables-mapping/flex-variables-mapping.component.html ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div class=\"flex-variable-mapping\">\n    <button mat-icon-button (click)=\"addVariableMapping($event)\">\n        <mat-icon>add_circle_outline</mat-icon>\n        {{'gauges.property-map-variable' | translate}}\n    </button>\n\n    <div *ngFor=\"let variableMap of this.mapping;index as i\">\n        <flex-variable-map [data]=\"data\" [view]=\"view\" [value]=\"mapping[i]\" [fromVariables]=\"viewVars\" (valueChange)=\"onChange()\">\n            <button style=\"float: right; margin-top: 7px;\" mat-icon-button (click)=\"removeVariableMapping($event, i)\"  matTooltip=\"{{'gauges.property-head-remove-mapvariable' | translate}}\">\n                <mat-icon>clear</mat-icon>\n            </button>\n        </flex-variable-map>\n    </div>\n</div>"

            /***/
}),

/***/ "./app/gauges/gauge-property/flex-variables-mapping/flex-variables-mapping.component.ts":
/*!**********************************************************************************************!*\
  !*** ./app/gauges/gauge-property/flex-variables-mapping/flex-variables-mapping.component.ts ***!
  \**********************************************************************************************/
/*! exports provided: FlexVariablesMappingComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FlexVariablesMappingComponent", function () { return FlexVariablesMappingComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _models_hmi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../_models/hmi */ "./app/_models/hmi.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };


            var FlexVariablesMappingComponent = /** @class */ (function () {
                function FlexVariablesMappingComponent() {
                    this.mappingChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
                }
                FlexVariablesMappingComponent.prototype.ngOnInit = function () {
                    if (!this.mapping) {
                        this.mapping = [];
                    }
                };
                FlexVariablesMappingComponent.prototype.ngOnChanges = function (changes) {
                    if (changes.view) {
                        this.viewVariables = null;
                    }
                };
                Object.defineProperty(FlexVariablesMappingComponent.prototype, "viewVars", {
                    get: function () {
                        var _this = this;
                        if (this.viewVariables) {
                            return this.viewVariables;
                        }
                        var viewVariables = {};
                        if (this.view) {
                            Object.values(this.view.items).forEach(function (item) {
                                if (item && item.property) {
                                    if (item.property.variableId) {
                                        _this.assignVariableTo(item.property, viewVariables);
                                    }
                                    if (item.property.actions) {
                                        Object.values(item.property.actions).forEach(function (action) {
                                            _this.assignVariableTo(action, viewVariables);
                                        });
                                    }
                                    if (item.property.events) {
                                        Object.values(item.property.events).forEach(function (event) {
                                            if (event['actoptions'] && event['actoptions']['variableId']) {
                                                _this.assignVariableTo(event['actoptions'], viewVariables);
                                            }
                                            else if (event['actoptions'] && event['actoptions']['variable']) {
                                                _this.assignVariableTo(event['actoptions']['variable'], viewVariables);
                                            }
                                        });
                                    }
                                }
                            });
                        }
                        this.viewVariables = Object.values(viewVariables);
                        return this.viewVariables;
                    },
                    enumerable: true,
                    configurable: true
                });
                FlexVariablesMappingComponent.prototype.assignVariableTo = function (object, target) {
                    var variable = {
                        variableId: object['variableId']
                    };
                    target[variable.variableId] = variable;
                };
                FlexVariablesMappingComponent.prototype.addVariableMapping = function ($event) {
                    $event.preventDefault();
                    this.mapping.push({ from: {}, to: {} });
                };
                FlexVariablesMappingComponent.prototype.removeVariableMapping = function ($event, i) {
                    $event.preventDefault();
                    this.mapping.splice(i, 1);
                };
                FlexVariablesMappingComponent.prototype.onChange = function () {
                    this.mappingChange.emit(this.mapping);
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", _models_hmi__WEBPACK_IMPORTED_MODULE_1__["View"])
                ], FlexVariablesMappingComponent.prototype, "view", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Object)
                ], FlexVariablesMappingComponent.prototype, "mapping", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Object)
                ], FlexVariablesMappingComponent.prototype, "data", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"])
                ], FlexVariablesMappingComponent.prototype, "mappingChange", void 0);
                FlexVariablesMappingComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'flex-variables-mapping',
                        template: __webpack_require__(/*! ./flex-variables-mapping.component.html */ "./app/gauges/gauge-property/flex-variables-mapping/flex-variables-mapping.component.html"),
                        styles: [__webpack_require__(/*! ./flex-variables-mapping.component.css */ "./app/gauges/gauge-property/flex-variables-mapping/flex-variables-mapping.component.css")]
                    }),
                    __metadata("design:paramtypes", [])
                ], FlexVariablesMappingComponent);
                return FlexVariablesMappingComponent;
            }());



            /***/
}),

/***/ "./app/gauges/gauge-property/gauge-permission.dialog.html":
/*!****************************************************************!*\
  !*** ./app/gauges/gauge-property/gauge-permission.dialog.html ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div style=\"width: 350px;\">\n    <h1 mat-dialog-title style=\"display:inline-block;cursor: move;\" mat-dialog-draggable>{{'dlg.gauge-permission-title' | translate}}</h1>\n    <mat-icon (click)=\"onNoClick()\" style=\"float:right;margin-right:-10px;margin-top:-10px;cursor:pointer;color:gray;\">\n        clear\n    </mat-icon>\n    <div mat-dialog-content>\n        <div class=\"my-form-field\" style=\"display: block;margin-bottom: 10px;\">\n            <span style=\"display:inline-block; width: 45px; text-align: center;\">{{'dlg.gauge-permission-show' | translate}}</span>\n            <span style=\"display:inline-block; width: 70px;\">{{'dlg.gauge-permission-enabled' | translate}}</span>\n            <span style=\"display:inline-block\">{{'dlg.gauge-permission-label' | translate}}</span>\n            <sel-options style=\"display:block\" #seloptions [selected]=\"selectedGroups\" [options]=\"groups\" [extSelected]=\"extensionGroups\"></sel-options>\n        </div>\n    </div>\n    <div mat-dialog-actions class=\"dialog-action\">\n        <button mat-raised-button (click)=\"onNoClick()\">{{'dlg.cancel' | translate}}</button>\n        <button mat-raised-button color=\"primary\" (click)=\"onOkClick()\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\n    </div>\n</div>"

            /***/
}),

/***/ "./app/gauges/gauge-property/gauge-property.component.css":
/*!****************************************************************!*\
  !*** ./app/gauges/gauge-property/gauge-property.component.css ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ".toolbox {\n    float: right;\n    line-height: 44px;\n}\n\n.toolbox button {\n    /* margin-right: 8px; */\n    margin-left: 10px;\n}\n\n::ng-deep .input-text .mat-form-field-infix {\n    padding-top: 5px;\n    padding-bottom: 0px;\n}\n\n::ng-deep .mat-dialog-container {\n    display: inline-table !important;\n}\n\n::ng-deep .mat-tab-label {\n  height: 34px !important;\n}\n\n.mat-tab-container {\n  min-height:300px;\n  height:60vmin;\n  overflow-y: auto;\n  overflow-x: hidden;\n  padding-top: 15px;\n}\n\n.mat-tab-container > div {\n  display: block;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZ2F1Z2VzL2dhdWdlLXByb3BlcnR5L2dhdWdlLXByb3BlcnR5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksdUJBQXVCO0lBQ3ZCLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxnQ0FBZ0M7QUFDcEM7O0FBRUE7RUFDRSx1QkFBdUI7QUFDekI7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsYUFBYTtFQUNiLGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsY0FBYztBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2dhdWdlcy9nYXVnZS1wcm9wZXJ0eS9nYXVnZS1wcm9wZXJ0eS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRvb2xib3gge1xuICAgIGZsb2F0OiByaWdodDtcbiAgICBsaW5lLWhlaWdodDogNDRweDtcbn1cblxuLnRvb2xib3ggYnV0dG9uIHtcbiAgICAvKiBtYXJnaW4tcmlnaHQ6IDhweDsgKi9cbiAgICBtYXJnaW4tbGVmdDogMTBweDtcbn1cblxuOjpuZy1kZWVwIC5pbnB1dC10ZXh0IC5tYXQtZm9ybS1maWVsZC1pbmZpeCB7XG4gICAgcGFkZGluZy10b3A6IDVweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMHB4O1xufVxuXG46Om5nLWRlZXAgLm1hdC1kaWFsb2ctY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtdGFibGUgIWltcG9ydGFudDtcbn1cblxuOjpuZy1kZWVwIC5tYXQtdGFiLWxhYmVsIHtcbiAgaGVpZ2h0OiAzNHB4ICFpbXBvcnRhbnQ7XG59XG5cbi5tYXQtdGFiLWNvbnRhaW5lciB7XG4gIG1pbi1oZWlnaHQ6MzAwcHg7XG4gIGhlaWdodDo2MHZtaW47XG4gIG92ZXJmbG93LXk6IGF1dG87XG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcbiAgcGFkZGluZy10b3A6IDE1cHg7XG59XG5cbi5tYXQtdGFiLWNvbnRhaW5lciA+IGRpdiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufSJdfQ== */"

            /***/
}),

/***/ "./app/gauges/gauge-property/gauge-property.component.html":
/*!*****************************************************************!*\
  !*** ./app/gauges/gauge-property/gauge-property.component.html ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div style=\"width: 740px;position: relative;\">\n    <h1 mat-dialog-title style=\"display:inline-block;cursor:move;\" mat-dialog-draggable>{{data.title}}</h1>\n    <mat-icon (click)=\"onNoClick()\" style=\"float:right;margin-right:-10px;margin-top:-10px;cursor:pointer;color:gray;\">clear</mat-icon>\n\t<mat-tab-group style=\"width: 100%;\">\n\t\t<mat-tab label=\"{{'gauges.property-props' | translate}}\">\n            <div class=\"mat-tab-container\">\n\t\t\t\t<div>\n\t\t\t\t\t<div class=\"my-form-field\">\n\t\t\t\t\t\t<span>{{'gauges.property-name' | translate}}</span>\n\t\t\t\t\t\t<input [(ngModel)]=\"data.settings.name\" style=\"width: 220px\" type=\"text\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"my-form-field\" style=\"vertical-align: bottom; margin-left: 13px;\">\n\t\t\t\t\t\t<span>{{'gauges.property-permission' | translate}}</span>\n\t\t\t\t\t\t<div style=\"text-align:center;cursor:pointer;\" class=\"my-form-field-permission\" (click)=\"onEditPermission()\">\n\t\t\t\t\t\t\t<mat-icon class=\"header-icon\" style=\"line-height: 30px;\" *ngIf=\"!property || !property.permission\">lock_open</mat-icon>\n\t\t\t\t\t\t\t<mat-icon class=\"header-icon\" style=\"line-height: 30px;\" *ngIf=\"property && property.permission\">lock</mat-icon>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"my-form-field\" style=\"padding-left: 100px\" *ngIf=\"isReadonlyToShow()\">\n\t\t\t\t\t\t<span>{{'gauges.property-readonly' | translate}}</span>\n\t\t\t\t\t\t<mat-slide-toggle color=\"primary\" [(ngModel)]=\"property.readonly\"></mat-slide-toggle>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"toolbox\" *ngIf=\"isToolboxToShow()\">\n\t\t\t\t\t\t<button mat-icon-button (click)=\"onAddInput()\">\n\t\t\t\t\t\t\t<mat-icon>add_circle_outline</mat-icon>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div mat-dialog-content style=\"overflow: visible; width:100%;\">\n\t\t\t\t\t<flex-head [data]=\"data\" [property]=\"property\" #flexhead></flex-head>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</mat-tab>\n\t\t<mat-tab label=\"{{'gauges.property-events' | translate}}\" *ngIf=\"eventsSupported\">\n            <div class=\"mat-tab-container\">\n\t\t\t\t<div class=\"toolbox\">\n\t\t\t\t\t<button mat-icon-button (click)=\"onAddEvent()\" matTooltip=\"{{'gauges.property-tooltip-add-event' | translate}}\">\n\t\t\t\t\t\t<mat-icon>add_circle_outline</mat-icon>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div mat-dialog-content style=\"overflow: visible; width:100%;\">\n\t\t\t\t\t<flex-event [property]=\"property\" [views]=\"views\" [data]=\"data\" [inputs]=\"inputs\" #flexevent *ngIf=\"eventsSupported\" style=\"padding-bottom: 5px\"></flex-event>\n\t\t\t\t</div>\n\t\t\t</div>\n        </mat-tab>\n        <mat-tab label=\"{{'gauges.property-actions' | translate}}\" *ngIf=\"actionsSupported\">\n            <div class=\"mat-tab-container\">\n                <div class=\"toolbox\">\n                    <button mat-icon-button (click)=\"onAddAction()\">\n                        <mat-icon>add_circle_outline</mat-icon>\n                    </button>\n                    <!-- <button mat-icon-button (click)=\"slideActionView = !slideActionView; onActionRangeViewToggle()\">\n                        <mat-icon class=\"header-icon\" *ngIf=\"slideActionView\">toll</mat-icon>\n                        <mat-icon class=\"header-icon\" *ngIf=\"!slideActionView\">input</mat-icon>\n                    </button>-->\n                </div>\n                <div mat-dialog-content style=\"overflow: visible; width:100%\">\n                    <flex-action [data]=\"data\" [property]=\"property\" #flexaction *ngIf=\"actionsSupported\" style=\"padding-bottom: 5px\"></flex-action>\n                </div>\n            </div>\n        </mat-tab>\n    </mat-tab-group>\n    <div mat-dialog-actions class=\"dialog-action\">\n        <button mat-raised-button (click)=\"onNoClick()\">{{'dlg.cancel' | translate}}</button>\n        <button mat-raised-button color=\"primary\" (click)=\"onOkClick()\" [mat-dialog-close]=\"data\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\n    </div>\n</div>\n"

            /***/
}),

/***/ "./app/gauges/gauge-property/gauge-property.component.ts":
/*!***************************************************************!*\
  !*** ./app/gauges/gauge-property/gauge-property.component.ts ***!
  \***************************************************************/
/*! exports provided: GaugePropertyComponent, GaugeDialogType, DialogGaugePermission */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GaugePropertyComponent", function () { return GaugePropertyComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GaugeDialogType", function () { return GaugeDialogType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DialogGaugePermission", function () { return DialogGaugePermission; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "../node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _gui_helpers_sel_options_sel_options_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../gui-helpers/sel-options/sel-options.component */ "./app/gui-helpers/sel-options/sel-options.component.ts");
/* harmony import */ var _flex_head_flex_head_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./flex-head/flex-head.component */ "./app/gauges/gauge-property/flex-head/flex-head.component.ts");
/* harmony import */ var _flex_event_flex_event_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./flex-event/flex-event.component */ "./app/gauges/gauge-property/flex-event/flex-event.component.ts");
/* harmony import */ var _flex_action_flex_action_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./flex-action/flex-action.component */ "./app/gauges/gauge-property/flex-action/flex-action.component.ts");
/* harmony import */ var _models_hmi__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../_models/hmi */ "./app/_models/hmi.ts");
/* harmony import */ var _models_user__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../_models/user */ "./app/_models/user.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };
            var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
                return function (target, key) { decorator(target, key, paramIndex); }
            };








            var GaugePropertyComponent = /** @class */ (function () {
                function GaugePropertyComponent(dialog, dialogRef, data) {
                    this.dialog = dialog;
                    this.dialogRef = dialogRef;
                    this.data = data;
                    this.slideView = true;
                    this.slideActionView = true;
                    this.dialogType = GaugeDialogType.RangeWithAlarm;
                }
                GaugePropertyComponent.prototype.ngOnInit = function () {
                    this.dialogType = this.data.dlgType;
                    this.eventsSupported = this.data.withEvents;
                    this.actionsSupported = this.data.withActions;
                    this.views = this.data.views;
                    this.inputs = this.data.inputs;
                    this.property = JSON.parse(JSON.stringify(this.data.settings.property));
                    if (!this.property) {
                        this.property = new _models_hmi__WEBPACK_IMPORTED_MODULE_6__["GaugeProperty"]();
                    }
                    this.defaultValue = this.data.default;
                    if (this.dialogType === GaugeDialogType.OnlyValue) {
                        this.flexHead.withInput = null;
                    }
                    else if (this.dialogType === GaugeDialogType.ValueAndUnit) {
                        this.flexHead.withInput = 'unit';
                    }
                    else {
                        this.flexHead.defaultValue = this.defaultValue;
                        this.flexHead.withInput = 'range';
                        if (this.dialogType === GaugeDialogType.ValueWithRef) {
                            this.flexHead.withInput = 'text';
                        }
                        else if (this.dialogType === GaugeDialogType.Step) {
                            this.flexHead.withInput = 'step';
                        }
                        else if (this.dialogType === GaugeDialogType.MinMax) {
                            this.flexHead.withInput = 'minmax';
                        }
                    }
                };
                GaugePropertyComponent.prototype.onNoClick = function () {
                    this.dialogRef.close();
                };
                GaugePropertyComponent.prototype.onOkClick = function () {
                    // this.data.settings.property = this.flexHead.property;
                    this.data.settings.property = this.flexHead.getProperty();
                    if (this.flexEvent) {
                        this.data.settings.property.events = this.flexEvent.getEvents();
                    }
                    if (this.flexAction) {
                        this.data.settings.property.actions = this.flexAction.getActions();
                    }
                    if (this.property.readonly) {
                        this.property.readonly = true;
                    }
                    else {
                        delete this.property.readonly;
                    }
                };
                GaugePropertyComponent.prototype.onAddInput = function () {
                    this.flexHead.onAddInput();
                };
                GaugePropertyComponent.prototype.onAddEvent = function () {
                    this.flexEvent.onAddEvent();
                };
                GaugePropertyComponent.prototype.onAddAction = function () {
                    this.flexAction.onAddAction();
                };
                GaugePropertyComponent.prototype.onRangeViewToggle = function () {
                    this.flexHead.onRangeViewToggle(this.slideView);
                };
                GaugePropertyComponent.prototype.onActionRangeViewToggle = function () {
                    this.flexAction.onRangeViewToggle(this.slideActionView);
                };
                GaugePropertyComponent.prototype.isToolboxToShow = function () {
                    if (this.dialogType === GaugeDialogType.RangeWithAlarm || this.dialogType === GaugeDialogType.Range || this.dialogType === GaugeDialogType.Step) {
                        return true;
                    }
                    return false;
                };
                GaugePropertyComponent.prototype.isRangeToShow = function () {
                    if (this.dialogType === GaugeDialogType.RangeWithAlarm || this.dialogType === GaugeDialogType.Range) {
                        return true;
                    }
                    return false;
                };
                GaugePropertyComponent.prototype.isAlarmToShow = function () {
                    if (this.dialogType === GaugeDialogType.RangeWithAlarm) {
                        return true;
                    }
                    return false;
                };
                GaugePropertyComponent.prototype.isReadonlyToShow = function () {
                    if (this.dialogType === GaugeDialogType.Step) {
                        return true;
                    }
                    return false;
                };
                GaugePropertyComponent.prototype.onEditPermission = function () {
                    var _this = this;
                    var permission = this.property.permission;
                    var dialogRef = this.dialog.open(DialogGaugePermission, {
                        position: { top: '60px' },
                        data: { permission: permission }
                    });
                    dialogRef.afterClosed().subscribe(function (result) {
                        if (result) {
                            _this.property.permission = result.permission;
                        }
                    });
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Object)
                ], GaugePropertyComponent.prototype, "name", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('flexhead'),
                    __metadata("design:type", _flex_head_flex_head_component__WEBPACK_IMPORTED_MODULE_3__["FlexHeadComponent"])
                ], GaugePropertyComponent.prototype, "flexHead", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('flexevent'),
                    __metadata("design:type", _flex_event_flex_event_component__WEBPACK_IMPORTED_MODULE_4__["FlexEventComponent"])
                ], GaugePropertyComponent.prototype, "flexEvent", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('flexaction'),
                    __metadata("design:type", _flex_action_flex_action_component__WEBPACK_IMPORTED_MODULE_5__["FlexActionComponent"])
                ], GaugePropertyComponent.prototype, "flexAction", void 0);
                GaugePropertyComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'gauge-property',
                        template: __webpack_require__(/*! ./gauge-property.component.html */ "./app/gauges/gauge-property/gauge-property.component.html"),
                        styles: [__webpack_require__(/*! ./gauge-property.component.css */ "./app/gauges/gauge-property/gauge-property.component.css")]
                    }),
                    __param(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MAT_DIALOG_DATA"])),
                    __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialog"],
                    _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialogRef"], Object])
                ], GaugePropertyComponent);
                return GaugePropertyComponent;
            }());

            var GaugeDialogType;
            (function (GaugeDialogType) {
                GaugeDialogType[GaugeDialogType["Range"] = 0] = "Range";
                GaugeDialogType[GaugeDialogType["RangeWithAlarm"] = 1] = "RangeWithAlarm";
                GaugeDialogType[GaugeDialogType["OnlyValue"] = 2] = "OnlyValue";
                GaugeDialogType[GaugeDialogType["ValueAndUnit"] = 3] = "ValueAndUnit";
                GaugeDialogType[GaugeDialogType["ValueWithRef"] = 4] = "ValueWithRef";
                GaugeDialogType[GaugeDialogType["Step"] = 5] = "Step";
                GaugeDialogType[GaugeDialogType["MinMax"] = 6] = "MinMax";
                GaugeDialogType[GaugeDialogType["Chart"] = 7] = "Chart";
                GaugeDialogType[GaugeDialogType["Gauge"] = 8] = "Gauge";
                GaugeDialogType[GaugeDialogType["Pipe"] = 9] = "Pipe";
                GaugeDialogType[GaugeDialogType["Slider"] = 10] = "Slider";
                GaugeDialogType[GaugeDialogType["Switch"] = 11] = "Switch";
            })(GaugeDialogType || (GaugeDialogType = {}));
            var DialogGaugePermission = /** @class */ (function () {
                function DialogGaugePermission(dialogRef, data) {
                    this.dialogRef = dialogRef;
                    this.data = data;
                    // defaultColor = Utils.defaultColor;
                    this.selectedGroups = [];
                    this.extensionGroups = [];
                    this.groups = _models_user__WEBPACK_IMPORTED_MODULE_7__["UserGroups"].Groups;
                    this.selectedGroups = _models_user__WEBPACK_IMPORTED_MODULE_7__["UserGroups"].ValueToGroups(this.data.permission);
                    this.extensionGroups = _models_user__WEBPACK_IMPORTED_MODULE_7__["UserGroups"].ValueToGroups(this.data.permission, true);
                }
                DialogGaugePermission.prototype.onNoClick = function () {
                    this.dialogRef.close();
                };
                DialogGaugePermission.prototype.onOkClick = function () {
                    this.data.permission = _models_user__WEBPACK_IMPORTED_MODULE_7__["UserGroups"].GroupsToValue(this.seloptions.selected);
                    this.data.permission += _models_user__WEBPACK_IMPORTED_MODULE_7__["UserGroups"].GroupsToValue(this.seloptions.extSelected, true);
                    this.dialogRef.close(this.data);
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])(_gui_helpers_sel_options_sel_options_component__WEBPACK_IMPORTED_MODULE_2__["SelOptionsComponent"]),
                    __metadata("design:type", _gui_helpers_sel_options_sel_options_component__WEBPACK_IMPORTED_MODULE_2__["SelOptionsComponent"])
                ], DialogGaugePermission.prototype, "seloptions", void 0);
                DialogGaugePermission = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'dialog-gaugepermission',
                        template: __webpack_require__(/*! ./gauge-permission.dialog.html */ "./app/gauges/gauge-property/gauge-permission.dialog.html"),
                    }),
                    __param(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MAT_DIALOG_DATA"])),
                    __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialogRef"], Object])
                ], DialogGaugePermission);
                return DialogGaugePermission;
            }());



            /***/
}),

/***/ "./app/gauges/gauges.component.ts":
/*!****************************************!*\
  !*** ./app/gauges/gauges.component.ts ***!
  \****************************************/
/*! exports provided: GaugesManager */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GaugesManager", function () { return GaugesManager; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "../node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ngx-translate/core */ "../node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js");
/* harmony import */ var _services_hmi_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../_services/hmi.service */ "./app/_services/hmi.service.ts");
/* harmony import */ var _models_chart__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../_models/chart */ "./app/_models/chart.ts");
/* harmony import */ var _models_hmi__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../_models/hmi */ "./app/_models/hmi.ts");
/* harmony import */ var _controls_value_value_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./controls/value/value.component */ "./app/gauges/controls/value/value.component.ts");
/* harmony import */ var _controls_html_input_html_input_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./controls/html-input/html-input.component */ "./app/gauges/controls/html-input/html-input.component.ts");
/* harmony import */ var _controls_html_button_html_button_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./controls/html-button/html-button.component */ "./app/gauges/controls/html-button/html-button.component.ts");
/* harmony import */ var _controls_html_select_html_select_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./controls/html-select/html-select.component */ "./app/gauges/controls/html-select/html-select.component.ts");
/* harmony import */ var _controls_html_chart_html_chart_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./controls/html-chart/html-chart.component */ "./app/gauges/controls/html-chart/html-chart.component.ts");
/* harmony import */ var _controls_html_bag_html_bag_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./controls/html-bag/html-bag.component */ "./app/gauges/controls/html-bag/html-bag.component.ts");
/* harmony import */ var _controls_html_switch_html_switch_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./controls/html-switch/html-switch.component */ "./app/gauges/controls/html-switch/html-switch.component.ts");
/* harmony import */ var _controls_gauge_progress_gauge_progress_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./controls/gauge-progress/gauge-progress.component */ "./app/gauges/controls/gauge-progress/gauge-progress.component.ts");
/* harmony import */ var _controls_gauge_semaphore_gauge_semaphore_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./controls/gauge-semaphore/gauge-semaphore.component */ "./app/gauges/controls/gauge-semaphore/gauge-semaphore.component.ts");
/* harmony import */ var _shapes_shapes_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./shapes/shapes.component */ "./app/gauges/shapes/shapes.component.ts");
/* harmony import */ var _shapes_proc_eng_proc_eng_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./shapes/proc-eng/proc-eng.component */ "./app/gauges/shapes/proc-eng/proc-eng.component.ts");
/* harmony import */ var _shapes_ape_shapes_ape_shapes_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./shapes/ape-shapes/ape-shapes.component */ "./app/gauges/shapes/ape-shapes/ape-shapes.component.ts");
/* harmony import */ var _controls_pipe_pipe_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./controls/pipe/pipe.component */ "./app/gauges/controls/pipe/pipe.component.ts");
/* harmony import */ var _controls_slider_slider_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./controls/slider/slider.component */ "./app/gauges/controls/slider/slider.component.ts");
/* harmony import */ var _helpers_windowref__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../_helpers/windowref */ "./app/_helpers/windowref.ts");
/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../_helpers/utils */ "./app/_helpers/utils.ts");
            var __assign = (undefined && undefined.__assign) || function () {
                __assign = Object.assign || function (t) {
                    for (var s, i = 1, n = arguments.length; i < n; i++) {
                        s = arguments[i];
                        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                            t[p] = s[p];
                    }
                    return t;
                };
                return __assign.apply(this, arguments);
            };
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };






















            var GaugesManager = /** @class */ (function () {
                function GaugesManager(hmiService, winRef, translateService, dialog) {
                    var _this = this;
                    this.hmiService = hmiService;
                    this.winRef = winRef;
                    this.translateService = translateService;
                    this.dialog = dialog;
                    this.onchange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
                    this.onevent = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
                    // signalGaugeMap = new ViewSignalGaugeMap();      // map of all gauges (GaugeSettings) pro signals
                    // map of gauges that have a click/html event
                    this.eventGauge = {};
                    // map of gauges with views
                    this.mapGaugeView = {};
                    // map of all signals and binded gauges of current view
                    this.memorySigGauges = {};
                    this.mapChart = {};
                    this.mapGauges = {};
                    // list of gauges tags to speed up the check
                    this.gaugesTags = [];
                    // subscription to the change of variable value, then emit to the gauges of fuxa-view
                    this.hmiService.onVariableChanged.subscribe(function (sig) {
                        try {
                            _this.onchange.emit(sig);
                        }
                        catch (err) {
                        }
                    });
                    // subscription to DAQ values, then emit to charts gauges of fuxa-view
                    this.hmiService.onDaqResult.subscribe(function (message) {
                        try {
                            if (_this.mapChart[message.gid]) {
                                var gauge = _this.mapChart[message.gid];
                                gauge.setValues(message.values);
                            }
                        }
                        catch (err) {
                        }
                    });
                    // make the list of gauges tags to speed up the check
                    GaugesManager_1.Gauges.forEach(function (g) {
                        _this.gaugesTags.push(g.TypeTag);
                    });
                }
                GaugesManager_1 = GaugesManager;
                GaugesManager.prototype.ngOnDestroy = function () {
                };
                GaugesManager.prototype.createSettings = function (id, type) {
                    var gs = null;
                    if (type) {
                        for (var i = 0; i < GaugesManager_1.Gauges.length; i++) {
                            if (type.startsWith(GaugesManager_1.Gauges[i].TypeTag)) {
                                gs = new _models_hmi__WEBPACK_IMPORTED_MODULE_5__["GaugeSettings"](id, type);
                                gs.label = GaugesManager_1.Gauges[i].LabelTag;
                                return gs;
                            }
                        }
                    }
                    return gs;
                };
                GaugesManager.prototype.createGaugeStatus = function (ga) {
                    var result = new _models_hmi__WEBPACK_IMPORTED_MODULE_5__["GaugeStatus"]();
                    if (!ga.type.startsWith(_controls_html_chart_html_chart_component__WEBPACK_IMPORTED_MODULE_10__["HtmlChartComponent"].TypeTag)) {
                        result.onlyChange = true;
                    }
                    if (ga.type.startsWith(_controls_slider_slider_component__WEBPACK_IMPORTED_MODULE_19__["SliderComponent"].TypeTag)) {
                        result.takeValue = true;
                    }
                    return result;
                };
                GaugesManager.prototype.isWithEvents = function (type) {
                    if (type) {
                        for (var i = 0; i < GaugesManager_1.GaugeWithEvents.length; i++) {
                            if (type.startsWith(GaugesManager_1.GaugeWithEvents[i])) {
                                return true;
                            }
                        }
                    }
                    return false;
                };
                GaugesManager.prototype.isWithActions = function (type) {
                    if (type) {
                        for (var i = 0; i < GaugesManager_1.GaugeWithActions.length; i++) {
                            if (type.startsWith(GaugesManager_1.GaugeWithActions[i].TypeTag)) {
                                if (typeof GaugesManager_1.GaugeWithActions[i]['getActions'] === 'function') {
                                    return GaugesManager_1.GaugeWithActions[i]['getActions']();
                                }
                            }
                        }
                    }
                    return false;
                };
                /**
                 * Return if is a gauge by check the svg attribute 'type' = 'svg-ext-...'
                 * @param type
                 * @returns
                 */
                GaugesManager.prototype.isGauge = function (type) {
                    for (var tag in this.gaugesTags) {
                        if (type.startsWith(this.gaugesTags[tag])) {
                            return true;
                        }
                    }
                    return false;
                };
                /**
                 * gauges to update in editor after changed property (GaugePropertyComponent, ChartPropertyComponent)
                 * @param ga
                 */
                GaugesManager.prototype.initInEditor = function (ga, res, ref) {
                    if (ga.type.startsWith(_controls_gauge_progress_gauge_progress_component__WEBPACK_IMPORTED_MODULE_13__["GaugeProgressComponent"].TypeTag)) {
                        _controls_gauge_progress_gauge_progress_component__WEBPACK_IMPORTED_MODULE_13__["GaugeProgressComponent"].initElement(ga);
                    }
                    else if (ga.type.startsWith(_controls_html_button_html_button_component__WEBPACK_IMPORTED_MODULE_8__["HtmlButtonComponent"].TypeTag)) {
                        _controls_html_button_html_button_component__WEBPACK_IMPORTED_MODULE_8__["HtmlButtonComponent"].initElement(ga);
                    }
                    else if (ga.type.startsWith(_controls_html_chart_html_chart_component__WEBPACK_IMPORTED_MODULE_10__["HtmlChartComponent"].TypeTag)) {
                        delete this.mapGauges[ga.id];
                        var gauge = _controls_html_chart_html_chart_component__WEBPACK_IMPORTED_MODULE_10__["HtmlChartComponent"].detectChange(ga, res, ref);
                        this.setChartPropety(gauge, ga.property);
                        this.mapGauges[ga.id] = gauge;
                    }
                    else if (ga.type.startsWith(_controls_html_bag_html_bag_component__WEBPACK_IMPORTED_MODULE_11__["HtmlBagComponent"].TypeTag)) {
                        this.mapGauges[ga.id] = _controls_html_bag_html_bag_component__WEBPACK_IMPORTED_MODULE_11__["HtmlBagComponent"].detectChange(ga, res, ref);
                    }
                    else if (ga.type.startsWith(_controls_pipe_pipe_component__WEBPACK_IMPORTED_MODULE_18__["PipeComponent"].TypeTag)) {
                        return this.mapGauges[ga.id] = _controls_pipe_pipe_component__WEBPACK_IMPORTED_MODULE_18__["PipeComponent"].detectChange(ga, res, this.winRef);
                    }
                    else if (ga.type.startsWith(_controls_slider_slider_component__WEBPACK_IMPORTED_MODULE_19__["SliderComponent"].TypeTag)) {
                        return this.mapGauges[ga.id] = _controls_slider_slider_component__WEBPACK_IMPORTED_MODULE_19__["SliderComponent"].detectChange(ga, res, ref);
                    }
                    else if (ga.type.startsWith(_controls_html_switch_html_switch_component__WEBPACK_IMPORTED_MODULE_12__["HtmlSwitchComponent"].TypeTag)) {
                        return this.mapGauges[ga.id] = _controls_html_switch_html_switch_component__WEBPACK_IMPORTED_MODULE_12__["HtmlSwitchComponent"].detectChange(ga, res, ref);
                    }
                    return false;
                };
                /**
                 * emit the signal value to the frontend, used for user_defined variable to make logic in frontend
                 * @param sigId
                 * @param value
                 */
                GaugesManager.prototype.setSignalValue = function (sigId, value) {
                    var variable = new _models_hmi__WEBPACK_IMPORTED_MODULE_5__["Variable"](sigId, null, null);
                    variable.value = value;
                    this.onchange.emit(variable);
                };
                //! toremove
                GaugesManager.prototype.initGaugesMap = function () {
                    this.eventGauge = {};
                    this.mapGaugeView = {};
                };
                /**
                 * called from fuxa-view, is used to emit message for a refresh of all signals values and the gauges of view
                 * @param domViewId
                 */
                GaugesManager.prototype.emitBindedSignals = function (domViewId) {
                    this.hmiService.emitMappedSignalsGauge(domViewId);
                };
                /**
                 * called from fuxa-view, bind dom view, gauge with signal (for animation) and event
                 * @param gaugekey
                 * @param gauge
                 * @param domViewId
                 * @param ga
                 * @param bindclick
                 * @param bindhtmlevent
                 */
                GaugesManager.prototype.bindGauge = function (gauge, domViewId, ga, bindclick, bindhtmlevent) {
                    var sigsid = this.getBindSignals(ga);
                    if (sigsid) {
                        for (var i = 0; i < sigsid.length; i++) {
                            this.hmiService.addSignalGaugeToMap(domViewId, sigsid[i], ga);
                            // check for special gauge to save in memory binded to sigid (chart-html)
                            if (gauge) {
                                if (!this.memorySigGauges[sigsid[i]]) {
                                    this.memorySigGauges[sigsid[i]] = {};
                                    this.memorySigGauges[sigsid[i]][ga.id] = gauge;
                                }
                                else if (!this.memorySigGauges[sigsid[i]][ga.id]) {
                                    this.memorySigGauges[sigsid[i]][ga.id] = gauge;
                                }
                            }
                        }
                    }
                    var clicks = this.getBindClick(ga);
                    if (clicks && clicks.length > 0) { // && !this.eventGauge[ga.id]) {
                        this.eventGauge[ga.id] = ga;
                        if (!this.mapGaugeView[ga.id]) {
                            this.mapGaugeView[ga.id] = {};
                            this.mapGaugeView[ga.id][domViewId] = ga;
                            bindclick(ga);
                        }
                        else if (!this.mapGaugeView[ga.id][domViewId]) {
                            this.mapGaugeView[ga.id][domViewId] = ga;
                            bindclick(ga);
                        }
                        // add pointer
                        var ele = document.getElementById(ga.id);
                        if (ele) {
                            ele.style.cursor = "pointer";
                        }
                        // bindclick(ga);
                    }
                    var htmlEvents = this.getHtmlEvents(ga);
                    if (htmlEvents) {
                        this.eventGauge[htmlEvents.dom.id] = ga;
                        bindhtmlevent(htmlEvents);
                    }
                    this.bindGaugeEventToSignal(ga);
                    this.checkElementToInit(ga);
                };
                /**
                 * @param domViewId
                 * called from fuxa-view, remove bind of dom view gauge
                 */
                GaugesManager.prototype.unbindGauge = function (domViewId) {
                    var _this = this;
                    // first remove special gauge like chart from memorySigGauges
                    var sigGaugeSettingsIdremoved = this.hmiService.removeSignalGaugeFromMap(domViewId);
                    Object.keys(sigGaugeSettingsIdremoved).forEach(function (sid) {
                        if (_this.memorySigGauges[sid]) {
                            for (var i = 0; i < sigGaugeSettingsIdremoved[sid].length; i++) {
                                var gsId = sigGaugeSettingsIdremoved[sid][i];
                                if (_this.memorySigGauges[sid][gsId]) {
                                    var g = _this.memorySigGauges[sid][gsId];
                                    try {
                                        if (g.myComRef) {
                                            g.myComRef.destroy();
                                        }
                                        delete _this.memorySigGauges[sid][gsId];
                                        if (_this.mapChart[g.id]) {
                                            delete _this.mapChart[g.id];
                                        }
                                        if (_this.mapGauges[g.id]) {
                                            delete _this.mapGauges[g.id];
                                        }
                                    }
                                    catch (err) {
                                        console.error(err);
                                    }
                                }
                            }
                        }
                    });
                    // remove mapped gauge for events of this view
                    Object.values(this.mapGaugeView).forEach(function (val) {
                        if (val[domViewId]) {
                            var g = val[domViewId];
                            if (g.myComRef) {
                                g.myComRef.destroy();
                            }
                            delete val[domViewId];
                        }
                    });
                };
                /**
                 * init element of fuxa-view,
                 * @param ga
                 */
                GaugesManager.prototype.checkElementToInit = function (ga) {
                    if (ga.type.startsWith(_controls_html_select_html_select_component__WEBPACK_IMPORTED_MODULE_9__["HtmlSelectComponent"].TypeTag)) {
                        return _controls_html_select_html_select_component__WEBPACK_IMPORTED_MODULE_9__["HtmlSelectComponent"].initElement(ga, true);
                    }
                    return null;
                };
                GaugesManager.prototype.checkElementToResize = function (ga, res, ref, size) {
                    if (ga && this.mapGauges[ga.id]) {
                        if (typeof this.mapGauges[ga.id]['resize'] === 'function') {
                            var height = void 0, width = void 0;
                            if (size) {
                                height = size.height;
                                width = size.width;
                            }
                            this.mapGauges[ga.id]['resize'](height, width);
                        }
                        else {
                            for (var i = 0; i < GaugesManager_1.Gauges.length; i++) {
                                if (ga.type.startsWith(GaugesManager_1.Gauges[i].TypeTag)) {
                                    if (typeof GaugesManager_1.Gauges[i]['resize'] === 'function') {
                                        var options = void 0;
                                        if (this.mapGauges[ga.id].options) {
                                            options = this.mapGauges[ga.id].options;
                                        }
                                        return GaugesManager_1.Gauges[i]['resize'](ga, res, ref, options);
                                    }
                                    return;
                                }
                            }
                        }
                    }
                };
                GaugesManager.prototype.getGaugeValue = function (gaugeId) {
                    if (this.mapGauges[gaugeId] && this.mapGauges[gaugeId].currentValue) {
                        return this.mapGauges[gaugeId].currentValue();
                    }
                };
                /**
                 * get all gauge settings binded to dom view with the signal
                 * @param domViewId
                 * @param sigid
                 */
                GaugesManager.prototype.getGaugeSettings = function (domViewId, sigid) {
                    var gslist = this.hmiService.getMappedSignalsGauges(domViewId, sigid);
                    return gslist;
                };
                /**
                 * get all signals mapped in all dom views, used from LabComponent
                 * @param fulltext a copy with item name and source
                 */
                GaugesManager.prototype.getMappedGaugesSignals = function (fulltext) {
                    return this.hmiService.getMappedVariables(fulltext);
                };
                /**
                 * return all signals binded to the gauge
                 * @param ga
                 */
                GaugesManager.prototype.getBindSignals = function (ga) {
                    if (ga.property) {
                        for (var i = 0; i < GaugesManager_1.Gauges.length; i++) {
                            if (ga.type.startsWith(GaugesManager_1.Gauges[i].TypeTag)) {
                                if (ga.type.startsWith(_controls_html_chart_html_chart_component__WEBPACK_IMPORTED_MODULE_10__["HtmlChartComponent"].TypeTag)) {
                                    var sigs = this.hmiService.getChartSignal(ga.property.id);
                                    return sigs;
                                }
                                else if (typeof GaugesManager_1.Gauges[i]['getSignals'] === 'function') {
                                    return GaugesManager_1.Gauges[i]['getSignals'](ga.property);
                                }
                                else {
                                    return null;
                                }
                            }
                        }
                    }
                    return null;
                };
                GaugesManager.prototype.getBindSignalsValue = function (ga) {
                    var _this = this;
                    var signals = this.getBindSignals(ga);
                    var result = [];
                    if (signals) {
                        signals.forEach(function (sigId) {
                            var variable = _this.hmiService.getMappedVariable(sigId, false);
                            if (variable && !_helpers_utils__WEBPACK_IMPORTED_MODULE_21__["Utils"].isNullOrUndefined(variable.value)) {
                                result.push(variable);
                            }
                        });
                    }
                    return result;
                };
                /**
                 * return all events binded to the gauge with click event
                 * @param ga
                 */
                GaugesManager.prototype.getBindClick = function (ga) {
                    for (var i = 0; i < GaugesManager_1.Gauges.length; i++) {
                        if (ga.type.startsWith(GaugesManager_1.Gauges[i].TypeTag)) {
                            if (typeof GaugesManager_1.Gauges[i]['getEvents'] === 'function') {
                                return GaugesManager_1.Gauges[i]['getEvents'](ga.property, _models_hmi__WEBPACK_IMPORTED_MODULE_5__["GaugeEventType"].click);
                            }
                            else {
                                return null;
                            }
                        }
                    }
                    return null;
                };
                /**
                 * return all events binded to the html gauge ('key-enter' of input, 'change' of select)
                 * @param ga
                 */
                GaugesManager.prototype.getHtmlEvents = function (ga) {
                    if (ga.type.startsWith(_controls_html_input_html_input_component__WEBPACK_IMPORTED_MODULE_7__["HtmlInputComponent"].TypeTag)) {
                        return _controls_html_input_html_input_component__WEBPACK_IMPORTED_MODULE_7__["HtmlInputComponent"].getHtmlEvents(ga);
                    }
                    else if (ga.type.startsWith(_controls_html_select_html_select_component__WEBPACK_IMPORTED_MODULE_9__["HtmlSelectComponent"].TypeTag)) {
                        return _controls_html_select_html_select_component__WEBPACK_IMPORTED_MODULE_9__["HtmlSelectComponent"].getHtmlEvents(ga);
                    }
                    return null;
                };
                GaugesManager.prototype.bindGaugeEventToSignal = function (ga) {
                    if (ga.type.startsWith(_controls_slider_slider_component__WEBPACK_IMPORTED_MODULE_19__["SliderComponent"].TypeTag)) {
                        var self_1 = this;
                        _controls_slider_slider_component__WEBPACK_IMPORTED_MODULE_19__["SliderComponent"].bindEvents(ga, this.mapGauges[ga.id], function (event) {
                            self_1.putEvent(event);
                        });
                    }
                    else if (ga.type.startsWith(_controls_html_switch_html_switch_component__WEBPACK_IMPORTED_MODULE_12__["HtmlSwitchComponent"].TypeTag)) {
                        var self_2 = this;
                        _controls_html_switch_html_switch_component__WEBPACK_IMPORTED_MODULE_12__["HtmlSwitchComponent"].bindEvents(ga, this.mapGauges[ga.id], function (event) {
                            self_2.putEvent(event);
                        });
                    }
                };
                /**
                 * manage to which gauge to forward the process function
                 * @param ga
                 * @param svgele
                 * @param sig
                 */
                GaugesManager.prototype.processValue = function (ga, svgele, sig, gaugeStatus) {
                    var _this = this;
                    gaugeStatus.variablesValue[sig.id] = sig.value;
                    for (var i = 0; i < GaugesManager_1.Gauges.length; i++) {
                        if (ga.type.startsWith(GaugesManager_1.Gauges[i].TypeTag)) {
                            if (ga.type.startsWith(_controls_html_chart_html_chart_component__WEBPACK_IMPORTED_MODULE_10__["HtmlChartComponent"].TypeTag)) {
                                if (ga.property.type !== 'history' && this.memorySigGauges[sig.id]) {
                                    Object.keys(this.memorySigGauges[sig.id]).forEach(function (k) {
                                        if (k === ga.id && _this.mapGauges[k]) {
                                            _controls_html_chart_html_chart_component__WEBPACK_IMPORTED_MODULE_10__["HtmlChartComponent"].processValue(ga, svgele, sig, gaugeStatus, _this.mapGauges[k]);
                                        }
                                    });
                                }
                                break;
                            }
                            else if (ga.type.startsWith(_controls_html_bag_html_bag_component__WEBPACK_IMPORTED_MODULE_11__["HtmlBagComponent"].TypeTag)) {
                                Object.keys(this.memorySigGauges[sig.id]).forEach(function (k) {
                                    if (k === ga.id && _this.mapGauges[k]) {
                                        _controls_html_bag_html_bag_component__WEBPACK_IMPORTED_MODULE_11__["HtmlBagComponent"].processValue(ga, svgele, sig, gaugeStatus, _this.mapGauges[k]);
                                    }
                                });
                                break;
                            }
                            else if (ga.type.startsWith(_controls_slider_slider_component__WEBPACK_IMPORTED_MODULE_19__["SliderComponent"].TypeTag)) {
                                Object.keys(this.memorySigGauges[sig.id]).forEach(function (k) {
                                    if (k === ga.id && _this.mapGauges[k]) {
                                        _controls_slider_slider_component__WEBPACK_IMPORTED_MODULE_19__["SliderComponent"].processValue(ga, svgele, sig, gaugeStatus, _this.mapGauges[k]);
                                    }
                                });
                                break;
                            }
                            else if (ga.type.startsWith(_controls_html_switch_html_switch_component__WEBPACK_IMPORTED_MODULE_12__["HtmlSwitchComponent"].TypeTag)) {
                                Object.keys(this.memorySigGauges[sig.id]).forEach(function (k) {
                                    if (k === ga.id && _this.mapGauges[k]) {
                                        _controls_html_switch_html_switch_component__WEBPACK_IMPORTED_MODULE_12__["HtmlSwitchComponent"].processValue(ga, svgele, sig, gaugeStatus, _this.mapGauges[k]);
                                    }
                                });
                                break;
                            }
                            else if (typeof GaugesManager_1.Gauges[i]['processValue'] === 'function') {
                                GaugesManager_1.Gauges[i]['processValue'](ga, svgele, sig, gaugeStatus);
                                break;
                            }
                            else {
                                break;
                            }
                        }
                    }
                };
                GaugesManager.prototype.toggleSignalValue = function (sigid) {
                    if (this.hmiService.variables.hasOwnProperty(sigid)) {
                        var currentValue = this.hmiService.variables[sigid].value;
                        // Only boolean values
                        if (currentValue !== true && currentValue !== false && currentValue !== undefined) {
                            return;
                        }
                        this.putSignalValue(sigid, String(!currentValue));
                    }
                };
                /**
                 * called from fuxa-view to emit and send signal value from a gauge event ('key-enter' of input, 'change' of select)
                 * @param event
                 */
                GaugesManager.prototype.putEvent = function (event) {
                    if (event.ga.property && event.ga.property.variableId) {
                        this.hmiService.putSignalValue(event.ga.property.variableId, event.value);
                        event.dbg = 'put ' + event.ga.property.variableId + ' ' + event.value;
                    }
                    this.onevent.emit(event);
                };
                /**
                 * called from fuxa-view to emit and send signal value from a gauge event (click)
                 * @param sigid
                 * @param val
                 */
                GaugesManager.prototype.putSignalValue = function (sigid, val) {
                    this.hmiService.putSignalValue(sigid, val);
                };
                GaugesManager.getEditDialogTypeToUse = function (type) {
                    for (var i = 0; i < GaugesManager_1.Gauges.length; i++) {
                        if (type.startsWith(GaugesManager_1.Gauges[i].TypeTag)) {
                            if (typeof GaugesManager_1.Gauges[i]['getDialogType'] === 'function') {
                                return GaugesManager_1.Gauges[i]['getDialogType']();
                            }
                            else {
                                return null;
                            }
                        }
                    }
                };
                /**
                 * used from controls in editor to get default value of edit gauge property
                 */
                GaugesManager.getDefaultValue = function (type) {
                    if (type.startsWith(_controls_gauge_progress_gauge_progress_component__WEBPACK_IMPORTED_MODULE_13__["GaugeProgressComponent"].TypeTag)) {
                        return _controls_gauge_progress_gauge_progress_component__WEBPACK_IMPORTED_MODULE_13__["GaugeProgressComponent"].getDefaultValue();
                    }
                    return null;
                };
                /**
                 * used from controls in editor, to set the colorpicker of selected control
                 */
                GaugesManager.checkGaugeColor = function (ele, eles, colors) {
                    if (ele && ele.type && eles && (eles.length <= 1 || !eles[1]) && colors) {
                        if (ele.type.startsWith(_controls_gauge_progress_gauge_progress_component__WEBPACK_IMPORTED_MODULE_13__["GaugeProgressComponent"].TypeTag)) {
                            colors.fill = _controls_gauge_progress_gauge_progress_component__WEBPACK_IMPORTED_MODULE_13__["GaugeProgressComponent"].getFillColor(eles[0]);
                            colors.stroke = _controls_gauge_progress_gauge_progress_component__WEBPACK_IMPORTED_MODULE_13__["GaugeProgressComponent"].getStrokeColor(eles[0]);
                            return true;
                        }
                        else if (ele.type.startsWith(_controls_gauge_semaphore_gauge_semaphore_component__WEBPACK_IMPORTED_MODULE_14__["GaugeSemaphoreComponent"].TypeTag)) {
                            colors.fill = _controls_gauge_semaphore_gauge_semaphore_component__WEBPACK_IMPORTED_MODULE_14__["GaugeSemaphoreComponent"].getFillColor(eles[0]);
                            colors.stroke = _controls_gauge_semaphore_gauge_semaphore_component__WEBPACK_IMPORTED_MODULE_14__["GaugeSemaphoreComponent"].getStrokeColor(eles[0]);
                            return true;
                        }
                        else if (ele.type.startsWith(_controls_html_button_html_button_component__WEBPACK_IMPORTED_MODULE_8__["HtmlButtonComponent"].TypeTag)) {
                            colors.fill = _controls_html_button_html_button_component__WEBPACK_IMPORTED_MODULE_8__["HtmlButtonComponent"].getFillColor(eles[0]);
                            colors.stroke = _controls_html_button_html_button_component__WEBPACK_IMPORTED_MODULE_8__["HtmlButtonComponent"].getStrokeColor(eles[0]);
                            return true;
                        }
                        else if (ele.type.startsWith(_controls_html_input_html_input_component__WEBPACK_IMPORTED_MODULE_7__["HtmlInputComponent"].TypeTag)) {
                            colors.fill = _controls_html_input_html_input_component__WEBPACK_IMPORTED_MODULE_7__["HtmlInputComponent"].getFillColor(eles[0]);
                            colors.stroke = _controls_html_input_html_input_component__WEBPACK_IMPORTED_MODULE_7__["HtmlInputComponent"].getStrokeColor(eles[0]);
                            return true;
                        }
                        else if (ele.type.startsWith(_controls_html_select_html_select_component__WEBPACK_IMPORTED_MODULE_9__["HtmlSelectComponent"].TypeTag)) {
                            colors.fill = _controls_html_select_html_select_component__WEBPACK_IMPORTED_MODULE_9__["HtmlSelectComponent"].getFillColor(eles[0]);
                            colors.stroke = _controls_html_select_html_select_component__WEBPACK_IMPORTED_MODULE_9__["HtmlSelectComponent"].getStrokeColor(eles[0]);
                            return true;
                        }
                    }
                    return false;
                };
                /**
                 * used from controls in editor to change fill and stroke colors
                 * @param bkcolor
                 * @param color
                 * @param elements
                 */
                GaugesManager.initElementColor = function (bkcolor, color, elements) {
                    var elems = elements.filter(function (el) { return el; });
                    for (var i = 0; i < elems.length; i++) {
                        var type = elems[i].getAttribute('type');
                        if (type) {
                            if (type.startsWith(_controls_gauge_progress_gauge_progress_component__WEBPACK_IMPORTED_MODULE_13__["GaugeProgressComponent"].TypeTag)) {
                                _controls_gauge_progress_gauge_progress_component__WEBPACK_IMPORTED_MODULE_13__["GaugeProgressComponent"].initElementColor(bkcolor, color, elems[i]);
                            }
                            else if (type.startsWith(_controls_html_button_html_button_component__WEBPACK_IMPORTED_MODULE_8__["HtmlButtonComponent"].TypeTag)) {
                                _controls_html_button_html_button_component__WEBPACK_IMPORTED_MODULE_8__["HtmlButtonComponent"].initElementColor(bkcolor, color, elems[i]);
                            }
                            else if (type.startsWith(_controls_html_input_html_input_component__WEBPACK_IMPORTED_MODULE_7__["HtmlInputComponent"].TypeTag)) {
                                _controls_html_input_html_input_component__WEBPACK_IMPORTED_MODULE_7__["HtmlInputComponent"].initElementColor(bkcolor, color, elems[i]);
                            }
                            else if (type.startsWith(_controls_html_select_html_select_component__WEBPACK_IMPORTED_MODULE_9__["HtmlSelectComponent"].TypeTag)) {
                                _controls_html_select_html_select_component__WEBPACK_IMPORTED_MODULE_9__["HtmlSelectComponent"].initElementColor(bkcolor, color, elems[i]);
                            }
                        }
                    }
                };
                /**
                 * Return the default prefix of gauge name
                 * @param type
                 */
                GaugesManager.getPrefixGaugeName = function (type) {
                    if (type.startsWith(_controls_gauge_progress_gauge_progress_component__WEBPACK_IMPORTED_MODULE_13__["GaugeProgressComponent"].TypeTag)) {
                        return 'progress_';
                    }
                    else if (type.startsWith(_controls_html_button_html_button_component__WEBPACK_IMPORTED_MODULE_8__["HtmlButtonComponent"].TypeTag)) {
                        return 'button_';
                    }
                    else if (type.startsWith(_controls_html_input_html_input_component__WEBPACK_IMPORTED_MODULE_7__["HtmlInputComponent"].TypeTag)) {
                        return 'input_';
                    }
                    else if (type.startsWith(_controls_html_select_html_select_component__WEBPACK_IMPORTED_MODULE_9__["HtmlSelectComponent"].TypeTag)) {
                        return 'select_';
                    }
                    else if (type.startsWith(_controls_gauge_semaphore_gauge_semaphore_component__WEBPACK_IMPORTED_MODULE_14__["GaugeSemaphoreComponent"].TypeTag)) {
                        return 'led_';
                    }
                    else if (type.startsWith(_controls_slider_slider_component__WEBPACK_IMPORTED_MODULE_19__["SliderComponent"].TypeTag)) {
                        return 'slider_';
                    }
                    else if (type.startsWith(_controls_pipe_pipe_component__WEBPACK_IMPORTED_MODULE_18__["PipeComponent"].TypeTag)) {
                        return 'pipe_';
                    }
                    else if (type.startsWith(_controls_html_chart_html_chart_component__WEBPACK_IMPORTED_MODULE_10__["HtmlChartComponent"].TypeTag)) {
                        return 'chart_';
                    }
                    else if (type.startsWith(_controls_html_bag_html_bag_component__WEBPACK_IMPORTED_MODULE_11__["HtmlBagComponent"].TypeTag)) {
                        return 'gauge_';
                    }
                    else if (type.startsWith(_controls_html_switch_html_switch_component__WEBPACK_IMPORTED_MODULE_12__["HtmlSwitchComponent"].TypeTag)) {
                        return 'switch_';
                    }
                    return 'shape_';
                };
                /**
                 * initialize the gauge element found in svg view and editor, like ngx-uplot, ngx-gauge
                 * in svg is only a 'div' that have to be dynamic build and render from angular
                 * @param ga gauge settings
                 * @param res reference to factory
                 * @param ref reference to factory
                 * @param isview in view or editor, in editor have to disable mouse activity
                 */
                GaugesManager.prototype.initElementAdded = function (ga, res, ref, isview) {
                    var _this = this;
                    if (!ga) {
                        return null;
                    }
                    // add variable
                    var sigsid = this.getBindSignals(ga);
                    if (sigsid) {
                        for (var i = 0; i < sigsid.length; i++) {
                            this.hmiService.addSignal(sigsid[i], ga);
                        }
                    }
                    if (ga.type.startsWith(_controls_html_chart_html_chart_component__WEBPACK_IMPORTED_MODULE_10__["HtmlChartComponent"].TypeTag)) {
                        // prepare attribute
                        var chartRange_1 = _models_chart__WEBPACK_IMPORTED_MODULE_4__["ChartRangeType"];
                        Object.keys(chartRange_1).forEach(function (key) {
                            _this.translateService.get(chartRange_1[key]).subscribe(function (txt) { chartRange_1[key] = txt; });
                        });
                        var gauge = _controls_html_chart_html_chart_component__WEBPACK_IMPORTED_MODULE_10__["HtmlChartComponent"].initElement(ga, res, ref, isview, chartRange_1);
                        if (gauge) {
                            this.setChartPropety(gauge, ga.property);
                            this.mapChart[ga.id] = gauge;
                            gauge.onTimeRange.subscribe(function (data) {
                                _this.hmiService.queryDaqValues(data);
                            });
                            if (isview) {
                                gauge.setRange(Object.keys(chartRange_1)[0]);
                            }
                            this.mapGauges[ga.id] = gauge;
                        }
                        return gauge;
                    }
                    else if (ga.type.startsWith(_controls_html_bag_html_bag_component__WEBPACK_IMPORTED_MODULE_11__["HtmlBagComponent"].TypeTag)) {
                        var gauge = _controls_html_bag_html_bag_component__WEBPACK_IMPORTED_MODULE_11__["HtmlBagComponent"].initElement(ga, res, ref, isview);
                        this.mapGauges[ga.id] = gauge;
                        return gauge;
                    }
                    else if (ga.type.startsWith(_controls_slider_slider_component__WEBPACK_IMPORTED_MODULE_19__["SliderComponent"].TypeTag)) {
                        var gauge = _controls_slider_slider_component__WEBPACK_IMPORTED_MODULE_19__["SliderComponent"].initElement(ga, res, ref, isview);
                        this.mapGauges[ga.id] = gauge;
                        return gauge;
                    }
                    else if (ga.type.startsWith(_controls_html_input_html_input_component__WEBPACK_IMPORTED_MODULE_7__["HtmlInputComponent"].TypeTag)) {
                        _controls_html_input_html_input_component__WEBPACK_IMPORTED_MODULE_7__["HtmlInputComponent"].initElement(ga, isview);
                    }
                    else if (ga.type.startsWith(_controls_html_select_html_select_component__WEBPACK_IMPORTED_MODULE_9__["HtmlSelectComponent"].TypeTag)) {
                        _controls_html_select_html_select_component__WEBPACK_IMPORTED_MODULE_9__["HtmlSelectComponent"].initElement(ga, isview);
                    }
                    else if (ga.type.startsWith(_controls_gauge_progress_gauge_progress_component__WEBPACK_IMPORTED_MODULE_13__["GaugeProgressComponent"].TypeTag)) {
                        _controls_gauge_progress_gauge_progress_component__WEBPACK_IMPORTED_MODULE_13__["GaugeProgressComponent"].initElement(ga);
                        return true;
                    }
                    else if (ga.type.startsWith(_controls_html_switch_html_switch_component__WEBPACK_IMPORTED_MODULE_12__["HtmlSwitchComponent"].TypeTag)) {
                        var gauge = _controls_html_switch_html_switch_component__WEBPACK_IMPORTED_MODULE_12__["HtmlSwitchComponent"].initElement(ga, res, ref, isview);
                        this.mapGauges[ga.id] = gauge;
                        return gauge;
                    }
                };
                /**
                 * add the chart settings (line) and property options to the gauge
                 * @param gauge
                 * @param chart
                 * @param property
                 */
                GaugesManager.prototype.setChartPropety = function (gauge, property) {
                    if (property) {
                        if (property.id) {
                            var chart = this.hmiService.getChart(property.id);
                            if (chart) {
                                var opt = __assign({}, property.options, { title: chart.name, id: chart.name, scales: { x: { time: true } } });
                                gauge.setOptions(opt, true);
                                for (var i = 0; i < chart.lines.length; i++) {
                                    var line = chart.lines[i];
                                    var sigid = line.id;
                                    var sigProperty = this.hmiService.getMappedVariable(sigid, true);
                                    if (sigProperty) {
                                        gauge.addLine(sigid, sigProperty.name, line.color, line.label, line.yaxis);
                                    }
                                }
                                gauge.redraw();
                            }
                        }
                        else {
                            gauge.setOptions(property.options, true);
                        }
                    }
                };
                /**
                 * clear memory object used from view, some reset
                 */
                GaugesManager.prototype.clearMemory = function () {
                    this.memorySigGauges = {};
                };
                var GaugesManager_1;
                // list of gauges with input
                GaugesManager.GaugeWithInput = [_controls_html_input_html_input_component__WEBPACK_IMPORTED_MODULE_7__["HtmlInputComponent"].prefix, _controls_html_select_html_select_component__WEBPACK_IMPORTED_MODULE_9__["HtmlSelectComponent"].prefix, _controls_html_switch_html_switch_component__WEBPACK_IMPORTED_MODULE_12__["HtmlSwitchComponent"].prefix];
                // list of gauges tags to check who as events like mouse click
                GaugesManager.GaugeWithEvents = [_controls_html_button_html_button_component__WEBPACK_IMPORTED_MODULE_8__["HtmlButtonComponent"].TypeTag, _controls_gauge_semaphore_gauge_semaphore_component__WEBPACK_IMPORTED_MODULE_14__["GaugeSemaphoreComponent"].TypeTag, _shapes_shapes_component__WEBPACK_IMPORTED_MODULE_15__["ShapesComponent"].TypeTag, _shapes_proc_eng_proc_eng_component__WEBPACK_IMPORTED_MODULE_16__["ProcEngComponent"].TypeTag,
                _shapes_ape_shapes_ape_shapes_component__WEBPACK_IMPORTED_MODULE_17__["ApeShapesComponent"].TypeTag];
                // list of gauges tags to check who as events like mouse click
                GaugesManager.GaugeWithActions = [_shapes_ape_shapes_ape_shapes_component__WEBPACK_IMPORTED_MODULE_17__["ApeShapesComponent"], _controls_pipe_pipe_component__WEBPACK_IMPORTED_MODULE_18__["PipeComponent"], _shapes_proc_eng_proc_eng_component__WEBPACK_IMPORTED_MODULE_16__["ProcEngComponent"], _shapes_shapes_component__WEBPACK_IMPORTED_MODULE_15__["ShapesComponent"], _controls_html_button_html_button_component__WEBPACK_IMPORTED_MODULE_8__["HtmlButtonComponent"], _controls_html_select_html_select_component__WEBPACK_IMPORTED_MODULE_9__["HtmlSelectComponent"],
                _controls_value_value_component__WEBPACK_IMPORTED_MODULE_6__["ValueComponent"], _controls_html_input_html_input_component__WEBPACK_IMPORTED_MODULE_7__["HtmlInputComponent"], _controls_gauge_semaphore_gauge_semaphore_component__WEBPACK_IMPORTED_MODULE_14__["GaugeSemaphoreComponent"]];
                // list of gauges components
                GaugesManager.Gauges = [_controls_value_value_component__WEBPACK_IMPORTED_MODULE_6__["ValueComponent"], _controls_html_input_html_input_component__WEBPACK_IMPORTED_MODULE_7__["HtmlInputComponent"], _controls_html_button_html_button_component__WEBPACK_IMPORTED_MODULE_8__["HtmlButtonComponent"], _controls_html_bag_html_bag_component__WEBPACK_IMPORTED_MODULE_11__["HtmlBagComponent"],
                _controls_html_select_html_select_component__WEBPACK_IMPORTED_MODULE_9__["HtmlSelectComponent"], _controls_html_chart_html_chart_component__WEBPACK_IMPORTED_MODULE_10__["HtmlChartComponent"], _controls_gauge_progress_gauge_progress_component__WEBPACK_IMPORTED_MODULE_13__["GaugeProgressComponent"], _controls_gauge_semaphore_gauge_semaphore_component__WEBPACK_IMPORTED_MODULE_14__["GaugeSemaphoreComponent"], _shapes_shapes_component__WEBPACK_IMPORTED_MODULE_15__["ShapesComponent"], _shapes_proc_eng_proc_eng_component__WEBPACK_IMPORTED_MODULE_16__["ProcEngComponent"], _shapes_ape_shapes_ape_shapes_component__WEBPACK_IMPORTED_MODULE_17__["ApeShapesComponent"],
                _controls_pipe_pipe_component__WEBPACK_IMPORTED_MODULE_18__["PipeComponent"], _controls_slider_slider_component__WEBPACK_IMPORTED_MODULE_19__["SliderComponent"], _controls_html_switch_html_switch_component__WEBPACK_IMPORTED_MODULE_12__["HtmlSwitchComponent"]];
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"])
                ], GaugesManager.prototype, "onchange", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"])
                ], GaugesManager.prototype, "onevent", void 0);
                GaugesManager = GaugesManager_1 = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
                    __metadata("design:paramtypes", [_services_hmi_service__WEBPACK_IMPORTED_MODULE_3__["HmiService"],
                    _helpers_windowref__WEBPACK_IMPORTED_MODULE_20__["WindowRef"],
                    _ngx_translate_core__WEBPACK_IMPORTED_MODULE_2__["TranslateService"],
                    _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialog"]])
                ], GaugesManager);
                return GaugesManager;
            }());



            /***/
}),

/***/ "./app/gauges/shapes/ape-shapes/ape-shapes.component.css":
/*!***************************************************************!*\
  !*** ./app/gauges/shapes/ape-shapes/ape-shapes.component.css ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dhdWdlcy9zaGFwZXMvYXBlLXNoYXBlcy9hcGUtc2hhcGVzLmNvbXBvbmVudC5jc3MifQ== */"

            /***/
}),

/***/ "./app/gauges/shapes/ape-shapes/ape-shapes.component.html":
/*!****************************************************************!*\
  !*** ./app/gauges/shapes/ape-shapes/ape-shapes.component.html ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ""

            /***/
}),

/***/ "./app/gauges/shapes/ape-shapes/ape-shapes.component.ts":
/*!**************************************************************!*\
  !*** ./app/gauges/shapes/ape-shapes/ape-shapes.component.ts ***!
  \**************************************************************/
/*! exports provided: ApeShapesComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ApeShapesComponent", function () { return ApeShapesComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _gauge_base_gauge_base_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../gauge-base/gauge-base.component */ "./app/gauges/gauge-base/gauge-base.component.ts");
/* harmony import */ var _models_hmi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../_models/hmi */ "./app/_models/hmi.ts");
/* harmony import */ var _gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../gauge-property/gauge-property.component */ "./app/gauges/gauge-property/gauge-property.component.ts");
/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../_helpers/utils */ "./app/_helpers/utils.ts");
            var __extends = (undefined && undefined.__extends) || (function () {
                var extendStatics = function (d, b) {
                    extendStatics = Object.setPrototypeOf ||
                        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
                    return extendStatics(d, b);
                };
                return function (d, b) {
                    extendStatics(d, b);
                    function __() { this.constructor = d; }
                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
                };
            })();
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };
            /**
             * Shape extension
             */





            var ApeShapesComponent = /** @class */ (function (_super) {
                __extends(ApeShapesComponent, _super);
                function ApeShapesComponent() {
                    return _super.call(this) || this;
                }
                ApeShapesComponent_1 = ApeShapesComponent;
                ApeShapesComponent.getSignals = function (pro) {
                    var res = [];
                    if (pro.variableId) {
                        res.push(pro.variableId);
                    }
                    if (pro.alarmId) {
                        res.push(pro.alarmId);
                    }
                    if (pro.actions) {
                        pro.actions.forEach(function (act) {
                            res.push(act.variableId);
                        });
                    }
                    return res;
                };
                ApeShapesComponent.getActions = function () {
                    return this.actionsType;
                };
                ApeShapesComponent.getDialogType = function () {
                    return _gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_3__["GaugeDialogType"].RangeWithAlarm;
                };
                ApeShapesComponent.processValue = function (ga, svgele, sig, gaugeStatus) {
                    try {
                        if (svgele.node) {
                            var value_1 = parseFloat(sig.value);
                            if (Number.isNaN(value_1)) {
                                // maybe boolean
                                value_1 = Number(sig.value);
                            }
                            else {
                                value_1 = parseFloat(value_1.toFixed(5));
                            }
                            if (ga.property) {
                                if (ga.property.variableId === sig.id && ga.property.ranges) {
                                    var fill = null;
                                    var stroke = null;
                                    for (var idx = 0; idx < ga.property.ranges.length; idx++) {
                                        if (ga.property.ranges[idx].min <= value_1 && ga.property.ranges[idx].max >= value_1) {
                                            fill = ga.property.ranges[idx].color;
                                            stroke = ga.property.ranges[idx].stroke;
                                        }
                                    }
                                    if (fill) {
                                        svgele.node.setAttribute('fill', fill);
                                    }
                                    if (stroke) {
                                        svgele.node.setAttribute('stroke', stroke);
                                    }
                                }
                                // check actions
                                if (ga.property.actions) {
                                    ga.property.actions.forEach(function (act) {
                                        if (act.variableId === sig.id) {
                                            ApeShapesComponent_1.processAction(act, svgele, value_1, gaugeStatus);
                                        }
                                    });
                                }
                            }
                        }
                    }
                    catch (err) {
                        console.error(err);
                    }
                };
                ApeShapesComponent.processAction = function (act, svgele, value, gaugeStatus) {
                    if (this.actionsType[act.type] === this.actionsType.hide) {
                        if (act.range.min <= value && act.range.max >= value) {
                            var element_1 = SVG.adopt(svgele.node);
                            this.runActionHide(element_1, act.type, gaugeStatus);
                        }
                    }
                    else if (this.actionsType[act.type] === this.actionsType.show) {
                        if (act.range.min <= value && act.range.max >= value) {
                            var element_2 = SVG.adopt(svgele.node);
                            this.runActionShow(element_2, act.type, gaugeStatus);
                        }
                    }
                    else {
                        if (act.range.min <= value && act.range.max >= value) {
                            var element = SVG.adopt(svgele.node);
                            ApeShapesComponent_1.runMyAction(element, act.type, gaugeStatus);
                        }
                    }
                };
                ApeShapesComponent.runMyAction = function (element, type, gaugeStatus) {
                    element.stop(true);
                    if (ApeShapesComponent_1.actionsType[type] === ApeShapesComponent_1.actionsType.clockwise) {
                        gaugeStatus.actionRef = { type: type, animr: element.animate(3000).rotate(365).loop() };
                    }
                    else if (ApeShapesComponent_1.actionsType[type] === ApeShapesComponent_1.actionsType.anticlockwise) {
                        gaugeStatus.actionRef = { type: type, animr: element.animate(3000).rotate(-365).loop() };
                    }
                    else if (ApeShapesComponent_1.actionsType[type] === ApeShapesComponent_1.actionsType.downup) {
                        if (gaugeStatus.actionRef && gaugeStatus.actionRef.type === type) {
                            return;
                        }
                        var eletoanim = _helpers_utils__WEBPACK_IMPORTED_MODULE_4__["Utils"].searchTreeStartWith(element.node, 'pm');
                        if (eletoanim) {
                            element = SVG.adopt(eletoanim);
                            var elebox = eletoanim.getBBox();
                            var movefrom = { x: elebox.x, y: elebox.y };
                            var moveto = { x: elebox.x, y: elebox.y - 25 };
                            var timeout = setInterval(function () {
                                element.animate(1000).move(moveto.x, moveto.y).animate(1000).move(movefrom.x, movefrom.y);
                            }, 2000);
                            gaugeStatus.actionRef = { type: type, timer: timeout };
                        }
                    }
                    else if (ApeShapesComponent_1.actionsType[type] === ApeShapesComponent_1.actionsType.stop) {
                        if (gaugeStatus.actionRef && gaugeStatus.actionRef.timer) {
                            clearTimeout(gaugeStatus.actionRef.timer);
                            gaugeStatus.actionRef.timer = null;
                        }
                    }
                };
                ApeShapesComponent.firstAnimation = function (element, moveto, movefrom) {
                    // element.animate(1000).move(moveto.x, moveto.y).animate(1000).move(movefrom.x, movefrom.y).after(function () {
                    //     ApeShapesComponent.firstAnimation(element, moveto, movefrom);
                    // });
                    element.animate({ duration: 1000, delay: 6000, wait: 6000 }).move(moveto.x, moveto.y).after(function () {
                        // element.animate(1000).move(movefrom.x, movefrom.y);
                    }).loop(); //ApeShapesComponent.secondAnimation(element, moveto, movefrom));
                };
                ApeShapesComponent.secondAnimation = function (element, movefrom, moveto) {
                    // element.animate(1000).move(moveto.x, moveto.y).after(ApeShapesComponent.firstAnimation(element, moveto, movefrom));
                };
                var ApeShapesComponent_1;
                ApeShapesComponent.TypeId = 'ape';
                ApeShapesComponent.TypeTag = 'svg-ext-' + ApeShapesComponent_1.TypeId; // used to identify shapes type, binded with the library svgeditor
                ApeShapesComponent.LabelTag = 'AnimProcEng';
                ApeShapesComponent.actionsType = {
                    stop: _models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeActionsType"].stop, clockwise: _models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeActionsType"].clockwise, anticlockwise: _models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeActionsType"].anticlockwise, downup: _models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeActionsType"].downup,
                    hide: _models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeActionsType"].hide, show: _models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeActionsType"].show
                };
                ApeShapesComponent = ApeShapesComponent_1 = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'ape-shapes',
                        template: __webpack_require__(/*! ./ape-shapes.component.html */ "./app/gauges/shapes/ape-shapes/ape-shapes.component.html"),
                        styles: [__webpack_require__(/*! ./ape-shapes.component.css */ "./app/gauges/shapes/ape-shapes/ape-shapes.component.css")]
                    }),
                    __metadata("design:paramtypes", [])
                ], ApeShapesComponent);
                return ApeShapesComponent;
            }(_gauge_base_gauge_base_component__WEBPACK_IMPORTED_MODULE_1__["GaugeBaseComponent"]));



            /***/
}),

/***/ "./app/gauges/shapes/proc-eng/proc-eng.component.css":
/*!***********************************************************!*\
  !*** ./app/gauges/shapes/proc-eng/proc-eng.component.css ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dhdWdlcy9zaGFwZXMvcHJvYy1lbmcvcHJvYy1lbmcuY29tcG9uZW50LmNzcyJ9 */"

            /***/
}),

/***/ "./app/gauges/shapes/proc-eng/proc-eng.component.html":
/*!************************************************************!*\
  !*** ./app/gauges/shapes/proc-eng/proc-eng.component.html ***!
  \************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ""

            /***/
}),

/***/ "./app/gauges/shapes/proc-eng/proc-eng.component.ts":
/*!**********************************************************!*\
  !*** ./app/gauges/shapes/proc-eng/proc-eng.component.ts ***!
  \**********************************************************/
/*! exports provided: ProcEngComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProcEngComponent", function () { return ProcEngComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _gauge_base_gauge_base_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../gauge-base/gauge-base.component */ "./app/gauges/gauge-base/gauge-base.component.ts");
/* harmony import */ var _models_hmi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../_models/hmi */ "./app/_models/hmi.ts");
/* harmony import */ var _gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../gauge-property/gauge-property.component */ "./app/gauges/gauge-property/gauge-property.component.ts");
            var __extends = (undefined && undefined.__extends) || (function () {
                var extendStatics = function (d, b) {
                    extendStatics = Object.setPrototypeOf ||
                        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
                    return extendStatics(d, b);
                };
                return function (d, b) {
                    extendStatics(d, b);
                    function __() { this.constructor = d; }
                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
                };
            })();
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };
            /**
             * Shape extension
             */




            var ProcEngComponent = /** @class */ (function (_super) {
                __extends(ProcEngComponent, _super);
                function ProcEngComponent() {
                    return _super.call(this) || this;
                }
                ProcEngComponent_1 = ProcEngComponent;
                ProcEngComponent.prototype.ngOnInit = function () {
                };
                ProcEngComponent.getSignals = function (pro) {
                    var res = [];
                    if (pro.variableId) {
                        res.push(pro.variableId);
                    }
                    if (pro.alarmId) {
                        res.push(pro.alarmId);
                    }
                    if (pro.actions && pro.actions.length) {
                        pro.actions.forEach(function (act) {
                            res.push(act.variableId);
                        });
                    }
                    return res;
                };
                ProcEngComponent.getActions = function () {
                    return this.actionsType;
                };
                ProcEngComponent.getDialogType = function () {
                    return _gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_3__["GaugeDialogType"].RangeWithAlarm;
                };
                ProcEngComponent.processValue = function (ga, svgele, sig, gaugeStatus) {
                    try {
                        if (svgele.node) {
                            var clr = '';
                            var value_1 = parseFloat(sig.value);
                            if (Number.isNaN(value_1)) {
                                // maybe boolean
                                value_1 = Number(sig.value);
                            }
                            else {
                                value_1 = parseFloat(value_1.toFixed(5));
                            }
                            if (ga.property) {
                                if (ga.property.variableId === sig.id && ga.property.ranges) {
                                    for (var idx = 0; idx < ga.property.ranges.length; idx++) {
                                        if (ga.property.ranges[idx].min <= value_1 && ga.property.ranges[idx].max >= value_1) {
                                            clr = ga.property.ranges[idx].color;
                                        }
                                    }
                                    if (clr) {
                                        svgele.node.setAttribute('fill', clr);
                                    }
                                }
                                // check actions
                                if (ga.property.actions) {
                                    ga.property.actions.forEach(function (act) {
                                        if (act.variableId === sig.id) {
                                            ProcEngComponent_1.processAction(act, svgele, value_1, gaugeStatus);
                                        }
                                    });
                                }
                            }
                        }
                    }
                    catch (err) {
                        console.error(err);
                    }
                };
                ProcEngComponent.processAction = function (act, svgele, value, gaugeStatus) {
                    if (this.actionsType[act.type] === this.actionsType.hide) {
                        if (act.range.min <= value && act.range.max >= value) {
                            var element = SVG.adopt(svgele.node);
                            this.runActionHide(element, act.type, gaugeStatus);
                        }
                    }
                    else if (this.actionsType[act.type] === this.actionsType.show) {
                        if (act.range.min <= value && act.range.max >= value) {
                            var element = SVG.adopt(svgele.node);
                            this.runActionShow(element, act.type, gaugeStatus);
                        }
                    }
                    else if (this.actionsType[act.type] === this.actionsType.blink) {
                        var element = SVG.adopt(svgele.node);
                        var inRange = (act.range.min <= value && act.range.max >= value);
                        this.checkActionBlink(element, act.type, gaugeStatus, inRange, act.options, false);
                    }
                };
                var ProcEngComponent_1;
                ProcEngComponent.TypeId = 'proceng';
                ProcEngComponent.TypeTag = 'svg-ext-' + ProcEngComponent_1.TypeId;
                ProcEngComponent.LabelTag = 'Proc-Eng';
                ProcEngComponent.actionsType = { hide: _models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeActionsType"].hide, show: _models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeActionsType"].show, blink: _models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeActionsType"].blink };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Object)
                ], ProcEngComponent.prototype, "data", void 0);
                ProcEngComponent = ProcEngComponent_1 = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'gauge-proc-eng',
                        template: __webpack_require__(/*! ./proc-eng.component.html */ "./app/gauges/shapes/proc-eng/proc-eng.component.html"),
                        styles: [__webpack_require__(/*! ./proc-eng.component.css */ "./app/gauges/shapes/proc-eng/proc-eng.component.css")]
                    }),
                    __metadata("design:paramtypes", [])
                ], ProcEngComponent);
                return ProcEngComponent;
            }(_gauge_base_gauge_base_component__WEBPACK_IMPORTED_MODULE_1__["GaugeBaseComponent"]));



            /***/
}),

/***/ "./app/gauges/shapes/shapes.component.css":
/*!************************************************!*\
  !*** ./app/gauges/shapes/shapes.component.css ***!
  \************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dhdWdlcy9zaGFwZXMvc2hhcGVzLmNvbXBvbmVudC5jc3MifQ== */"

            /***/
}),

/***/ "./app/gauges/shapes/shapes.component.html":
/*!*************************************************!*\
  !*** ./app/gauges/shapes/shapes.component.html ***!
  \*************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ""

            /***/
}),

/***/ "./app/gauges/shapes/shapes.component.ts":
/*!***********************************************!*\
  !*** ./app/gauges/shapes/shapes.component.ts ***!
  \***********************************************/
/*! exports provided: ShapesComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ShapesComponent", function () { return ShapesComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _gauge_base_gauge_base_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../gauge-base/gauge-base.component */ "./app/gauges/gauge-base/gauge-base.component.ts");
/* harmony import */ var _models_hmi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../_models/hmi */ "./app/_models/hmi.ts");
/* harmony import */ var _gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../gauge-property/gauge-property.component */ "./app/gauges/gauge-property/gauge-property.component.ts");
            var __extends = (undefined && undefined.__extends) || (function () {
                var extendStatics = function (d, b) {
                    extendStatics = Object.setPrototypeOf ||
                        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
                    return extendStatics(d, b);
                };
                return function (d, b) {
                    extendStatics(d, b);
                    function __() { this.constructor = d; }
                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
                };
            })();
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };




            var ShapesComponent = /** @class */ (function (_super) {
                __extends(ShapesComponent, _super);
                function ShapesComponent() {
                    return _super.call(this) || this;
                }
                ShapesComponent_1 = ShapesComponent;
                ShapesComponent.prototype.ngOnInit = function () {
                };
                ShapesComponent.getSignals = function (pro) {
                    var res = [];
                    if (pro.variableId) {
                        res.push(pro.variableId);
                    }
                    if (pro.alarmId) {
                        res.push(pro.alarmId);
                    }
                    if (pro.actions && pro.actions.length) {
                        pro.actions.forEach(function (act) {
                            res.push(act.variableId);
                        });
                    }
                    return res;
                };
                ShapesComponent.getActions = function () {
                    return this.actionsType;
                };
                ShapesComponent.getDialogType = function () {
                    return _gauge_property_gauge_property_component__WEBPACK_IMPORTED_MODULE_3__["GaugeDialogType"].RangeWithAlarm;
                };
                ShapesComponent.processValue = function (ga, svgele, sig, gaugeStatus) {
                    try {
                        if (svgele.node) {
                            var value_1 = parseFloat(sig.value);
                            if (Number.isNaN(value_1)) {
                                // maybe boolean
                                value_1 = Number(sig.value);
                            }
                            else {
                                value_1 = parseFloat(value_1.toFixed(5));
                            }
                            if (ga.property) {
                                if (ga.property.variableId === sig.id && ga.property.ranges) {
                                    var fill = '';
                                    var stroke = '';
                                    for (var idx = 0; idx < ga.property.ranges.length; idx++) {
                                        if (ga.property.ranges[idx].min <= value_1 && ga.property.ranges[idx].max >= value_1) {
                                            fill = ga.property.ranges[idx].color;
                                            stroke = ga.property.ranges[idx].stroke;
                                        }
                                    }
                                    // check if general shape (line/path/fpath/text) to set the stroke 
                                    var mode = ga.type.replace('svg-ext-shapes-', '');
                                    if (fill) {
                                        svgele.node.setAttribute('fill', fill);
                                    }
                                    if (stroke) {
                                        svgele.node.setAttribute('stroke', stroke);
                                    }
                                }
                                // check actions
                                if (ga.property.actions) {
                                    ga.property.actions.forEach(function (act) {
                                        if (act.variableId === sig.id) {
                                            ShapesComponent_1.processAction(act, svgele, value_1, gaugeStatus);
                                        }
                                    });
                                }
                            }
                        }
                    }
                    catch (err) {
                        console.error(err);
                    }
                };
                ShapesComponent.processAction = function (act, svgele, value, gaugeStatus) {
                    if (this.actionsType[act.type] === this.actionsType.hide) {
                        if (act.range.min <= value && act.range.max >= value) {
                            var element = SVG.adopt(svgele.node);
                            this.runActionHide(element, act.type, gaugeStatus);
                        }
                    }
                    else if (this.actionsType[act.type] === this.actionsType.show) {
                        if (act.range.min <= value && act.range.max >= value) {
                            var element = SVG.adopt(svgele.node);
                            this.runActionShow(element, act.type, gaugeStatus);
                        }
                    }
                    else if (this.actionsType[act.type] === this.actionsType.blink) {
                        var element = SVG.adopt(svgele.node);
                        var inRange = (act.range.min <= value && act.range.max >= value);
                        this.checkActionBlink(element, act.type, gaugeStatus, inRange, act.options, false);
                    }
                };
                var ShapesComponent_1;
                ShapesComponent.TypeId = 'shapes';
                ShapesComponent.TypeTag = 'svg-ext-' + ShapesComponent_1.TypeId; // used to identify shapes type, binded with the library svgeditor
                ShapesComponent.LabelTag = 'Shapes';
                ShapesComponent.actionsType = { hide: _models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeActionsType"].hide, show: _models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeActionsType"].show, blink: _models_hmi__WEBPACK_IMPORTED_MODULE_2__["GaugeActionsType"].blink };
                ShapesComponent = ShapesComponent_1 = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'gauge-shapes',
                        template: __webpack_require__(/*! ./shapes.component.html */ "./app/gauges/shapes/shapes.component.html"),
                        styles: [__webpack_require__(/*! ./shapes.component.css */ "./app/gauges/shapes/shapes.component.css")]
                    }),
                    __metadata("design:paramtypes", [])
                ], ShapesComponent);
                return ShapesComponent;
            }(_gauge_base_gauge_base_component__WEBPACK_IMPORTED_MODULE_1__["GaugeBaseComponent"]));



            /***/
}),

/***/ "./app/gui-helpers/confirm-dialog/confirm-dialog.component.css":
/*!*********************************************************************!*\
  !*** ./app/gui-helpers/confirm-dialog/confirm-dialog.component.css ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2d1aS1oZWxwZXJzL2NvbmZpcm0tZGlhbG9nL2NvbmZpcm0tZGlhbG9nLmNvbXBvbmVudC5jc3MifQ== */"

            /***/
}),

/***/ "./app/gui-helpers/confirm-dialog/confirm-dialog.component.html":
/*!**********************************************************************!*\
  !*** ./app/gui-helpers/confirm-dialog/confirm-dialog.component.html ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div style=\"width: 100%;position: relative;padding-bottom: 40px\">\n    <div style=\"margin-top: 20px;margin-bottom: 20px;\">\n        {{msgtoconfirm}}\n    </div>\n\n    <div mat-dialog-actions class=\"dialog-action\">\n        <button mat-raised-button (click)=\"onNoClick()\">{{'dlg.cancel' | translate}}</button>\n        <button mat-raised-button color=\"primary\" (click)=\"onOkClick()\" [mat-dialog-close]=\"data\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\n    </div>\n</div>"

            /***/
}),

/***/ "./app/gui-helpers/confirm-dialog/confirm-dialog.component.ts":
/*!********************************************************************!*\
  !*** ./app/gui-helpers/confirm-dialog/confirm-dialog.component.ts ***!
  \********************************************************************/
/*! exports provided: ConfirmDialogComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConfirmDialogComponent", function () { return ConfirmDialogComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "../node_modules/@angular/material/esm5/material.es5.js");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };
            var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
                return function (target, key) { decorator(target, key, paramIndex); }
            };


            var ConfirmDialogComponent = /** @class */ (function () {
                function ConfirmDialogComponent(dialogRef, data) {
                    this.dialogRef = dialogRef;
                    this.data = data;
                    this.msgtoconfirm = '';
                    this.msgtoconfirm = this.data.msg;
                }
                ConfirmDialogComponent.prototype.ngOnInit = function () {
                };
                ConfirmDialogComponent.prototype.onNoClick = function () {
                    this.dialogRef.close();
                };
                ConfirmDialogComponent.prototype.onOkClick = function () {
                    this.dialogRef.close(true);
                };
                ConfirmDialogComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'app-confirm-dialog',
                        template: __webpack_require__(/*! ./confirm-dialog.component.html */ "./app/gui-helpers/confirm-dialog/confirm-dialog.component.html"),
                        styles: [__webpack_require__(/*! ./confirm-dialog.component.css */ "./app/gui-helpers/confirm-dialog/confirm-dialog.component.css")]
                    }),
                    __param(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MAT_DIALOG_DATA"])),
                    __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialogRef"], Object])
                ], ConfirmDialogComponent);
                return ConfirmDialogComponent;
            }());



            /***/
}),

/***/ "./app/gui-helpers/fab-button/ngx-fab-button.component.ts":
/*!****************************************************************!*\
  !*** ./app/gui-helpers/fab-button/ngx-fab-button.component.ts ***!
  \****************************************************************/
/*! exports provided: NgxFabButtonComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgxFabButtonComponent", function () { return NgxFabButtonComponent; });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ "../node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _ngx_fab_item_button_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ngx-fab-item-button.component */ "./app/gui-helpers/fab-button/ngx-fab-item-button.component.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
            var __assign = (undefined && undefined.__assign) || function () {
                __assign = Object.assign || function (t) {
                    for (var s, i = 1, n = arguments.length; i < n; i++) {
                        s = arguments[i];
                        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                            t[p] = s[p];
                    }
                    return t;
                };
                return __assign.apply(this, arguments);
            };
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };



            var NgxFabButtonComponent = /** @class */ (function () {
                function NgxFabButtonComponent(element, cd) {
                    this.element = element;
                    this.cd = cd;
                    this.subs = [];
                    this.spaceBetweenButtons = 45;
                    this.color = '#dd0031';
                    this.disabled = false;
                    this.events = new rxjs__WEBPACK_IMPORTED_MODULE_0__["Subject"]();
                    this.opened = false;
                    this.elementref = element.nativeElement;
                    this.state = new rxjs__WEBPACK_IMPORTED_MODULE_0__["BehaviorSubject"]({
                        display: false,
                        direction: 'top',
                        event: 'start',
                        spaceBetweenButtons: this.spaceBetweenButtons
                    });
                }
                NgxFabButtonComponent.prototype.toggle = function () {
                    if (this.disabled) {
                        return this.disabled;
                    }
                    this.state.next(__assign({}, this.state.getValue(), { display: !this.state.getValue().display, event: !this.state.getValue().display ? 'open' : 'close' }));
                    this.opened = this.state.getValue().display;
                };
                // only top and bottom support content element
                NgxFabButtonComponent.prototype.checkDirectionType = function () {
                    if (this.buttons.toArray()) {
                        var display_1 = 'block';
                        if (this.direction === 'right' || this.direction === 'left') {
                            display_1 = 'none';
                        }
                        this.buttons.toArray().forEach(function (element) {
                            element.contentref.nativeElement.style.display = display_1;
                        });
                    }
                };
                // transition
                NgxFabButtonComponent.prototype.animateButtons = function (eventType) {
                    var _this = this;
                    this.buttons.toArray().forEach(function (btn, i) {
                        i += 1;
                        var style = btn.elementref.nativeElement.style;
                        if (eventType !== 'directionChanged' && _this.state.getValue().display) {
                            style['transform'] = 'scale(1)';
                            style['transition-duration'] = '0s';
                            if (btn.timeout) {
                                clearTimeout(btn.timeout);
                            }
                        }
                        setTimeout(function () {
                            style['transition-duration'] = _this.state.getValue().display ? 90 + (100 * i) + "ms" : '';
                            style['transform'] = _this.state.getValue().display ? _this.getTranslate(i) : '';
                        }, 50);
                        if (eventType !== 'directionChanged' && !_this.state.getValue().display) {
                            btn.timeout = setTimeout(function () {
                                style['transform'] = 'scale(0)';
                            }, 90 + (100 * i));
                        }
                    });
                };
                // get transition direction
                NgxFabButtonComponent.prototype.getTranslate = function (i) {
                    var animation;
                    switch (this.direction) {
                        case 'right':
                            animation = "translate3d(" + this.state.getValue().spaceBetweenButtons * i + "px,0,0)";
                            break;
                        case 'bottom':
                            animation = "translate3d(0," + this.state.getValue().spaceBetweenButtons * i + "px,0)";
                            break;
                        case 'left':
                            animation = "translate3d(-" + this.state.getValue().spaceBetweenButtons * i + "px,0,0)";
                            break;
                        default:
                            animation = "translate3d(0,-" + this.state.getValue().spaceBetweenButtons * i + "px,0)";
                            break;
                    }
                    return animation;
                };
                /* some problems here */
                // @HostListener('document:click', ['$event.target']) private clickOutside(target) {
                //   if (this.state.getValue().display && !this.elementref.contains(target)) {
                //     this.state.next({
                //       ...this.state.getValue(),
                //       display: false,
                //       event: 'close'
                //     });
                //   }
                // }
                NgxFabButtonComponent.prototype.ngAfterContentInit = function () {
                    var _this = this;
                    if (this.direction) {
                        // first time to check
                        this.checkDirectionType();
                    }
                    this.buttons.toArray().map(function (v) {
                        var sub = v.clicked.subscribe(function () {
                            // this.state.next({
                            //   ...this.state.getValue(),
                            //   display: false,
                            //   event: 'close'
                            // });
                        });
                        _this.subs.push(sub);
                    });
                    var sub = this.state.subscribe(function (v) {
                        _this.animateButtons(v.event);
                        _this.events.next({
                            display: v.display,
                            event: v.event,
                            direction: v.direction
                        });
                    });
                    this.subs.push(sub);
                };
                // if @Input values changes, we need check the direction type
                NgxFabButtonComponent.prototype.ngOnChanges = function (changes) {
                    var _this = this;
                    if (changes.direction && !changes.direction.firstChange) {
                        this.state.next(__assign({}, this.state.getValue(), { event: 'directionChanged', direction: changes.direction.currentValue }));
                        // if changes happens
                        this.checkDirectionType();
                    }
                    if (changes.open && changes.open.currentValue) {
                        var sub = this.open.subscribe(function (v) {
                            if (v !== _this.state.getValue().display) {
                                _this.state.next(__assign({}, _this.state.getValue(), { event: v ? 'open' : 'close', display: v }));
                                // make angular happy
                                _this.cd.markForCheck();
                            }
                        });
                        this.subs.push(sub);
                    }
                    if (changes.spaceBetweenButtons && changes.spaceBetweenButtons.currentValue) {
                        this.state.next(__assign({}, this.state.getValue(), { event: 'spaceBetweenButtonsChanged', spaceBetweenButtons: changes.spaceBetweenButtons.currentValue }));
                    }
                };
                NgxFabButtonComponent.prototype.ngOnDestroy = function () {
                    this.subs.forEach(function (v) {
                        v.unsubscribe();
                    });
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"])(),
                    __metadata("design:type", String)
                ], NgxFabButtonComponent.prototype, "icon", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"])(),
                    __metadata("design:type", String)
                ], NgxFabButtonComponent.prototype, "iconOpen", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"])(),
                    __metadata("design:type", String)
                ], NgxFabButtonComponent.prototype, "direction", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"])(),
                    __metadata("design:type", Object)
                ], NgxFabButtonComponent.prototype, "spaceBetweenButtons", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"])(),
                    __metadata("design:type", rxjs__WEBPACK_IMPORTED_MODULE_0__["Subject"])
                ], NgxFabButtonComponent.prototype, "open", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"])(),
                    __metadata("design:type", Object)
                ], NgxFabButtonComponent.prototype, "color", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"])(),
                    __metadata("design:type", Object)
                ], NgxFabButtonComponent.prototype, "disabled", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Output"])(),
                    __metadata("design:type", rxjs__WEBPACK_IMPORTED_MODULE_0__["Subject"])
                ], NgxFabButtonComponent.prototype, "events", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Output"])(),
                    __metadata("design:type", Object)
                ], NgxFabButtonComponent.prototype, "opened", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ContentChildren"])(_ngx_fab_item_button_component__WEBPACK_IMPORTED_MODULE_1__["NgxFabItemButtonComponent"]),
                    __metadata("design:type", Object)
                ], NgxFabButtonComponent.prototype, "buttons", void 0);
                NgxFabButtonComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Component"])({
                        changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_2__["ChangeDetectionStrategy"].OnPush,
                        selector: 'ngx-fab-button',
                        template: "\n    <div class=\"fab-menu\" [class.active]=\"(state | async).display\">\n        <a class=\"fab-toggle\" (click)=\"toggle()\" (touchend)=\"toggle()\" [style.backgroundColor]=\"color\">\n          <i class=\"material-icons\" *ngIf=\"!opened\"> {{icon}} </i>\n          <i class=\"material-icons\" *ngIf=\"opened\"> {{iconOpen}} </i>\n        </a>\n        <ng-content></ng-content>\n    </div>\n  ",
                        styles: ["\n  :host {\n    position: absolute;\n  }\n  .fab-menu {\n      box-sizing: border-box;\n      font-size: 12px;\n      width:40px;\n      height: 40px;\n      text-align: left;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      cursor: pointer;\n      z-index: 9;\n  }\n  .fab-toggle {\n    border-radius: 100%;\n    width: 36px;\n    height: 36px;\n    color: white;\n    text-align: center;\n    line-height: 50px;\n    transform: translate3d(0, 0, 0);\n    transition: all ease-out 200ms;\n    z-index: 2;\n    transition-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1.275);\n    transition-duration: 400ms;\n    transform: scale(1, 1) translate3d(0, 0, 0);\n    cursor: pointer;\n    box-shadow: 0 2px 5px 0 rgba(0,0,0,.26);\n  }\n  .fab-menu .fab-toggle:hover {\n    transform: scale(1.2, 1.2) translate3d(0, 0, 0);\n  }\n  .fab-menu /deep/ .item {\n     opacity: 0;\n  }\n  .fab-menu.active /deep/ .item {\n     opacity: 1;\n  }\n  .fab-menu.active /deep/ .content-wrapper {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .fab-menu.active /deep/ .content {\n    display: block;\n  }\n  .fab-menu.active .fab-toggle {\n    transition-timing-function: linear;\n    transition-duration: 200ms;\n    transform: scale(1, 1) translate3d(0, 0, 0);\n  }\n  "]
                    }),
                    __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_2__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_2__["ChangeDetectorRef"]])
                ], NgxFabButtonComponent);
                return NgxFabButtonComponent;
            }());



            /***/
}),

/***/ "./app/gui-helpers/fab-button/ngx-fab-item-button.component.ts":
/*!*********************************************************************!*\
  !*** ./app/gui-helpers/fab-button/ngx-fab-item-button.component.ts ***!
  \*********************************************************************/
/*! exports provided: NgxFabItemButtonComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgxFabItemButtonComponent", function () { return NgxFabItemButtonComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };

            var NgxFabItemButtonComponent = /** @class */ (function () {
                function NgxFabItemButtonComponent() {
                    this.color = 'white';
                    this.clicked = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
                    this.exclicked = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
                    this.disabled = false;
                }
                NgxFabItemButtonComponent.prototype.emitClickEvent = function ($event) {
                    if (this.disabled) {
                        return this.disabled;
                    }
                    this.clicked.emit($event);
                };
                NgxFabItemButtonComponent.prototype.emitClickExEvent = function ($event) {
                    if (this.disabled) {
                        return this.disabled;
                    }
                    this.exclicked.emit($event);
                };
                NgxFabItemButtonComponent.prototype.stopPropagation = function ($event) {
                    $event.stopPropagation();
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", String)
                ], NgxFabItemButtonComponent.prototype, "icon", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", String)
                ], NgxFabItemButtonComponent.prototype, "svgicon", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", String)
                ], NgxFabItemButtonComponent.prototype, "iconex", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", String)
                ], NgxFabItemButtonComponent.prototype, "svgiconex", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", String)
                ], NgxFabItemButtonComponent.prototype, "content", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Object)
                ], NgxFabItemButtonComponent.prototype, "color", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"])
                ], NgxFabItemButtonComponent.prototype, "clicked", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"])
                ], NgxFabItemButtonComponent.prototype, "exclicked", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Object)
                ], NgxFabItemButtonComponent.prototype, "disabled", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('elementref'),
                    __metadata("design:type", Object)
                ], NgxFabItemButtonComponent.prototype, "elementref", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('contentref'),
                    __metadata("design:type", Object)
                ], NgxFabItemButtonComponent.prototype, "contentref", void 0);
                NgxFabItemButtonComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'ngx-fab-item-button',
                        template: "\n    <div #elementref class=\"item {{ disabled ? 'disabled' : ''}}\"\n    (click)=\"emitClickEvent($event)\">\n        <a class=\"fab-item\" [style.backgroundColor]=\"color\">\n          <img *ngIf=\"svgicon\" src=\"{{svgicon}}\"/>\n          <i class=\"material-icons\" *ngIf=\"!svgicon\"> {{ icon }} </i>\n        </a>\n        <div class=\"content-wrapper\" #contentref>\n          <div class=\"content\" [style.display]=\"content ? 'block' : 'none'\" [style.padding-right]=\"iconex ? '28px' : '20px'\">{{content}}\n            <a class=\"fab-item-ex\" [style.backgroundColor]=\"color\" *ngIf=\"iconex\" (click)=\"stopPropagation($event);emitClickExEvent($event)\">\n                <i class=\"material-icons\" style=\"font-size: 18px\"> {{ iconex }} </i>\n            </a>\n          </div>\n        </div>\n    </div>\n  ",
                        changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
                        styles: ["\n  .item {\n    /* width:40px; */\n    height: 36px;\n    left: 3px;\n    /* left: -3px; */\n    transform: translate3d(0, 0, 0);\n    transition: transform, opacity ease-out 200ms;\n    transition-timing-function: cubic-bezier(0.165, 0.84, 0.44, 1);\n    transition-duration: 180ms;\n    position: absolute;\n    cursor: pointer;\n    top:5px;\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    z-index: 9999;\n  }\n  .item.disabled {\n    pointer-events: none;\n  }\n  .item.disabled .fab-item {\n    background-color: lightgray;\n  }\n  .content {\n    z-index: 9999;\n    background: rgba(68,138,255, 1);\n    margin-left: 0px;\n    line-height: 25px;\n    color: white;\n    /* text-transform: lowercase; */\n    padding: 5px 20px 3px 20px;\n    border-top-right-radius: 18px;\n    border-bottom-right-radius: 18px;\n    border-bottom-left-radius: 18px;\n    border-top-left-radius: 18px;\n    display: none;\n    font-size: 13px;\n    height: 28px;\n    /* margin-top: 4px; */\n    box-shadow: 0 2px 5px 0 rgba(0,0,0,.26);\n    white-space:nowrap;\n  }\n  .fab-item {\n    left: 0;\n    background: rgba(68,138,255, 1);\n    border-radius: 100%;\n    width: 36px;\n    height: 36px;\n    position: absolute;\n    color: white;\n    text-align: center;\n    cursor: pointer;\n    line-height: 50px;\n    /* box-shadow: 0 2px 5px 0 rgba(0,0,0,.26); */\n  }\n  .fab-item-ex {\n    top: 0;\n    background: rgba(68,138,255, 1);\n    border-radius: 100%;\n    width: 36px;\n    height: 36px;\n    position: absolute;\n    color: white;\n    text-align: center;\n    cursor: pointer;\n    line-height: 45px;\n    /* box-shadow: 0 2px 5px 0 rgba(0,0,0,.26); */\n  }\n  .fab-item img {\n    padding-bottom: 2px;\n    padding-left: 5px;\n  }\n  "]
                    })
                ], NgxFabItemButtonComponent);
                return NgxFabItemButtonComponent;
            }());



            /***/
}),

/***/ "./app/gui-helpers/mat-select-search/mat-select-search.component.html":
/*!****************************************************************************!*\
  !*** ./app/gui-helpers/mat-select-search/mat-select-search.component.html ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<input matInput class=\"mat-select-search-input mat-select-search-hidden\" />\n\n<div class=\"mat-select-search-inner\" [ngClass]=\"{'mat-select-search-inner-multiple': matSelect.multiple}\">\n    <input matInput class=\"mat-select-search-input\" #searchSelectInput (keydown)=\"_handleKeydown($event)\" (input)=\"onInputChange($event.target.value)\"\n        (blur)=\"onBlur($event.target.value)\" [placeholder]=\"placeholderLabel\" />\n    <button mat-button *ngIf=\"value\" mat-icon-button aria-label=\"Clear\" (click)=\"_reset(true)\" class=\"mat-select-search-clear\">\n        <mat-icon>close</mat-icon>\n    </button>\n</div>\n\n<div *ngIf=\"noEntriesFoundLabel && value && _options?.length === 0\" class=\"mat-select-search-no-entries-found\">\n    {{noEntriesFoundLabel}}\n</div>"

            /***/
}),

/***/ "./app/gui-helpers/mat-select-search/mat-select-search.component.scss":
/*!****************************************************************************!*\
  !*** ./app/gui-helpers/mat-select-search/mat-select-search.component.scss ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ".mat-select-search-hidden {\n  visibility: hidden; }\n\n.mat-select-search-inner {\n  position: absolute;\n  top: 0;\n  width: calc(100% + 22px);\n  border-bottom: 1px solid #cccccc;\n  background: white;\n  z-index: 100; }\n\n.mat-select-search-inner.mat-select-search-inner-multiple {\n    width: calc( 100% + 55px); }\n\n::ng-deep .mat-select-search-panel {\n  /* allow absolute positioning relative to outer options container */\n  transform: none !important;\n  max-height: 350px; }\n\n.mat-select-search-input {\n  padding: 16px;\n  padding-right: 36px;\n  box-sizing: border-box;\n  font-size: 15px;\n  border: none; }\n\n.mat-select-search-no-entries-found {\n  padding: 16px; }\n\n.mat-select-search-clear {\n  position: absolute;\n  right: 0;\n  top: 4px; }\n\n::ng-deep .cdk-overlay-pane-select-search {\n  /* correct offsetY so that the selected option is at the position of the select box when opening */\n  margin-top: 40px; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9iaWxhbC9Eb2N1bWVudHMvRlVYQS9jbGllbnQvc3JjL2FwcC9ndWktaGVscGVycy9tYXQtc2VsZWN0LXNlYXJjaC9tYXQtc2VsZWN0LXNlYXJjaC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLQTtFQUNJLGtCQUFrQixFQUFBOztBQUV0QjtFQUNJLGtCQUFrQjtFQUNsQixNQUFNO0VBQ04sd0JBQW9FO0VBQ3BFLGdDQUFnQztFQUNoQyxpQkFBaUI7RUFDakIsWUFBWSxFQUFBOztBQU5oQjtJQVFRLHlCQUdDLEVBQUE7O0FBSVQ7RUFDSSxtRUFBQTtFQUNBLDBCQUEwQjtFQUMxQixpQkFBaUIsRUFBQTs7QUFHckI7RUFDSSxhQTlCd0I7RUErQnhCLG1CQUEyRDtFQUMzRCxzQkFBc0I7RUFDdEIsZUFBZTtFQUNmLFlBQVksRUFBQTs7QUFFaEI7RUFDSSxhQXJDd0IsRUFBQTs7QUF1QzVCO0VBQ0ksa0JBQWtCO0VBQ2xCLFFBQVE7RUFDUixRQUFRLEVBQUE7O0FBRVo7RUFDSSxrR0FBQTtFQUVBLGdCQUFnQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvZ3VpLWhlbHBlcnMvbWF0LXNlbGVjdC1zZWFyY2gvbWF0LXNlbGVjdC1zZWFyY2guY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIkbWF0LW1lbnUtc2lkZS1wYWRkaW5nOiAxNnB4ICFkZWZhdWx0O1xuJHNjcm9sbGJhci13aWR0aDogMTBweDtcbiRjbGVhci1idXR0b24td2lkdGg6IDIwcHg7XG4kbXVsdGlwbGUtY2hlY2std2lkdGg6IDMzcHg7XG5cbi5tYXQtc2VsZWN0LXNlYXJjaC1oaWRkZW4ge1xuICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcbn1cbi5tYXQtc2VsZWN0LXNlYXJjaC1pbm5lciB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICB3aWR0aDogY2FsYygxMDAlICsgI3syICogJG1hdC1tZW51LXNpZGUtcGFkZGluZyAtICRzY3JvbGxiYXItd2lkdGh9KTtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2NjY2NjYztcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICB6LWluZGV4OiAxMDA7XG4gICAgJi5tYXQtc2VsZWN0LXNlYXJjaC1pbm5lci1tdWx0aXBsZSB7XG4gICAgICAgIHdpZHRoOiBjYWxjKFxuICAgICAgICAgICAgMTAwJSArICN7MiAqICRtYXQtbWVudS1zaWRlLXBhZGRpbmcgLSAkc2Nyb2xsYmFyLXdpZHRoICtcbiAgICAgICAgICAgICAgICAkbXVsdGlwbGUtY2hlY2std2lkdGh9XG4gICAgICAgICk7XG4gICAgfVxufVxuXG46Om5nLWRlZXAgLm1hdC1zZWxlY3Qtc2VhcmNoLXBhbmVsIHtcbiAgICAvKiBhbGxvdyBhYnNvbHV0ZSBwb3NpdGlvbmluZyByZWxhdGl2ZSB0byBvdXRlciBvcHRpb25zIGNvbnRhaW5lciAqL1xuICAgIHRyYW5zZm9ybTogbm9uZSAhaW1wb3J0YW50O1xuICAgIG1heC1oZWlnaHQ6IDM1MHB4O1xufVxuXG4ubWF0LXNlbGVjdC1zZWFyY2gtaW5wdXQge1xuICAgIHBhZGRpbmc6ICRtYXQtbWVudS1zaWRlLXBhZGRpbmc7XG4gICAgcGFkZGluZy1yaWdodDogJG1hdC1tZW51LXNpZGUtcGFkZGluZyArICRjbGVhci1idXR0b24td2lkdGg7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICBmb250LXNpemU6IDE1cHg7XG4gICAgYm9yZGVyOiBub25lO1xufVxuLm1hdC1zZWxlY3Qtc2VhcmNoLW5vLWVudHJpZXMtZm91bmQge1xuICAgIHBhZGRpbmc6ICRtYXQtbWVudS1zaWRlLXBhZGRpbmc7XG59XG4ubWF0LXNlbGVjdC1zZWFyY2gtY2xlYXIge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICByaWdodDogMDtcbiAgICB0b3A6IDRweDtcbn1cbjo6bmctZGVlcCAuY2RrLW92ZXJsYXktcGFuZS1zZWxlY3Qtc2VhcmNoIHtcbiAgICAvKiBjb3JyZWN0IG9mZnNldFkgc28gdGhhdCB0aGUgc2VsZWN0ZWQgb3B0aW9uIGlzIGF0IHRoZSBwb3NpdGlvbiBvZiB0aGUgc2VsZWN0IGJveCB3aGVuIG9wZW5pbmcgKi9cbiAgICAvLyBtYXJnaW4tdG9wOiAtNTBweDtcbiAgICBtYXJnaW4tdG9wOiA0MHB4O1xufVxuIl19 */"

            /***/
}),

/***/ "./app/gui-helpers/mat-select-search/mat-select-search.component.ts":
/*!**************************************************************************!*\
  !*** ./app/gui-helpers/mat-select-search/mat-select-search.component.ts ***!
  \**************************************************************************/
/*! exports provided: MatSelectSearchComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatSelectSearchComponent", function () { return MatSelectSearchComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "../node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "../node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "../node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "../node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ngx-translate/core */ "../node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };
            var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
                return function (target, key) { decorator(target, key, paramIndex); }
            };






            /* tslint:disable:member-ordering */
            /**
             * Component providing an input field for searching MatSelect options.
             *
             * Example usage:
             *
             * interface Bank {
             *  id: string;
             *  name: string;
             * }
             *
             * @Component({
             *   selector: 'my-app-data-selection',
             *   template: `
             *     <mat-form-field>
             *       <mat-select [formControl]="bankCtrl" placeholder="Bank">
             *         <mat-select-search [formControl]="bankFilterCtrl"></mat-select-search>
             *         <mat-option *ngFor="let bank of filteredBanks | async" [value]="bank.id">
             *           {{bank.name}}
             *         </mat-option>
             *       </mat-select>
             *     </mat-form-field>
             *   `
             * })
             * export class DataSelectionComponent implements OnInit, OnDestroy {
             *
             *   // control for the selected bank
             *   public bankCtrl: FormControl = new FormControl();
             *   // control for the MatSelect filter keyword
             *   public bankFilterCtrl: FormControl = new FormControl();
             *
             *   // list of banks
             *   private banks: Bank[] = [{name: 'Bank A', id: 'A'}, {name: 'Bank B', id: 'B'}, {name: 'Bank C', id: 'C'}];
             *   // list of banks filtered by search keyword
             *   public filteredBanks: ReplaySubject<Bank[]> = new ReplaySubject<Bank[]>(1);
             *
             *   // Subject that emits when the component has been destroyed.
             *   private _onDestroy = new Subject<void>();
             *
             *
             *   ngOnInit() {
             *     // load the initial bank list
             *     this.filteredBanks.next(this.banks.slice());
             *     // listen for search field value changes
             *     this.bankFilterCtrl.valueChanges
             *       .pipe(takeUntil(this._onDestroy))
             *       .subscribe(() => {
             *         this.filterBanks();
             *       });
             *   }
             *
             *   ngOnDestroy() {
             *     this._onDestroy.next();
             *     this._onDestroy.complete();
             *   }
             *
             *   private filterBanks() {
             *     if (!this.banks) {
             *       return;
             *     }
             *
             *     // get the search keyword
             *     let search = this.bankFilterCtrl.value;
             *     if (!search) {
             *       this.filteredBanks.next(this.banks.slice());
             *       return;
             *     } else {
             *       search = search.toLowerCase();
             *     }
             *
             *     // filter the banks
             *     this.filteredBanks.next(
             *       this.banks.filter(bank => bank.name.toLowerCase().indexOf(search) > -1)
             *     );
             *   }
             * }
             */
            var MatSelectSearchComponent = /** @class */ (function () {
                function MatSelectSearchComponent(matSelect, translateService, changeDetectorRef) {
                    this.matSelect = matSelect;
                    this.translateService = translateService;
                    this.changeDetectorRef = changeDetectorRef;
                    /** Label of the search placeholder */
                    this.placeholderLabel = '';
                    /** Label to be shown when no entries are found. Set to null if no message should be shown. */
                    this.noEntriesFoundLabel = '';
                    this.onChange = function (_) { };
                    this.onTouched = function (_) { };
                    /** Whether the backdrop class has been set */
                    this.overlayClassSet = false;
                    /** Event that emits when the current value changes */
                    this.change = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
                    /** Subject that emits when the component has been destroyed. */
                    this._onDestroy = new rxjs__WEBPACK_IMPORTED_MODULE_3__["Subject"]();
                }
                MatSelectSearchComponent_1 = MatSelectSearchComponent;
                Object.defineProperty(MatSelectSearchComponent.prototype, "value", {
                    /** Current search value */
                    get: function () {
                        return this._value;
                    },
                    enumerable: true,
                    configurable: true
                });
                MatSelectSearchComponent.prototype.ngOnInit = function () {
                    var _this = this;
                    // set custom panel class
                    var panelClass = 'mat-select-search-panel';
                    if (this.matSelect.panelClass) {
                        if (Array.isArray(this.matSelect.panelClass)) {
                            this.matSelect.panelClass.push(panelClass);
                        }
                        else if (typeof this.matSelect.panelClass === 'string') {
                            this.matSelect.panelClass = [this.matSelect.panelClass, panelClass];
                        }
                        else if (typeof this.matSelect.panelClass === 'object') {
                            this.matSelect.panelClass[panelClass] = true;
                        }
                    }
                    else {
                        this.matSelect.panelClass = panelClass;
                    }
                    // when the select dropdown panel is opened or closed
                    this.matSelect.openedChange
                        .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeUntil"])(this._onDestroy))
                        .subscribe(function (opened) {
                            if (opened) {
                                // focus the search field when opening
                                _this._focus();
                            }
                            else {
                                // clear it when closing
                                _this._reset();
                            }
                        });
                    // set the first item active after the options changed
                    this.matSelect.openedChange
                        .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["take"])(1))
                        .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeUntil"])(this._onDestroy))
                        .subscribe(function () {
                            _this._options = _this.matSelect.options;
                            _this._options.changes
                                .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeUntil"])(_this._onDestroy))
                                .subscribe(function () {
                                    var keyManager = _this.matSelect._keyManager;
                                    if (keyManager && _this.matSelect.panelOpen) {
                                        // avoid "expression has been changed" error
                                        setTimeout(function () {
                                            keyManager.setFirstItemActive();
                                        });
                                    }
                                });
                        });
                    // detect changes when the input changes
                    this.change
                        .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeUntil"])(this._onDestroy))
                        .subscribe(function () {
                            _this.changeDetectorRef.detectChanges();
                        });
                    this.initMultipleHandling();
                };
                MatSelectSearchComponent.prototype.ngOnDestroy = function () {
                    this._onDestroy.next();
                    this._onDestroy.complete();
                };
                MatSelectSearchComponent.prototype.ngAfterViewInit = function () {
                    var _this = this;
                    this.setOverlayClass();
                    this.translateService.get('general.search').subscribe(function (txt) { _this.placeholderLabel = txt; });
                    this.translateService.get('general.search-notfound').subscribe(function (txt) { _this.noEntriesFoundLabel = txt; });
                };
                /**
                 * Handles the key down event with MatSelect.
                 * Allows e.g. selecting with enter key, navigation with arrow keys, etc.
                 * @param {KeyboardEvent} event
                 * @private
                 */
                MatSelectSearchComponent.prototype._handleKeydown = function (event) {
                    if (event.keyCode === 32) {
                        // do not propagate spaces to MatSelect, as this would select the currently active option
                        event.stopPropagation();
                    }
                };
                MatSelectSearchComponent.prototype.writeValue = function (value) {
                    var valueChanged = value !== this._value;
                    if (valueChanged) {
                        this._value = value;
                        this.change.emit(value);
                    }
                };
                MatSelectSearchComponent.prototype.onInputChange = function (value) {
                    var valueChanged = value !== this._value;
                    if (valueChanged) {
                        this._value = value;
                        this.onChange(value);
                        this.change.emit(value);
                    }
                };
                MatSelectSearchComponent.prototype.onBlur = function (value) {
                    this.writeValue(value);
                    this.onTouched();
                };
                MatSelectSearchComponent.prototype.registerOnChange = function (fn) {
                    this.onChange = fn;
                };
                MatSelectSearchComponent.prototype.registerOnTouched = function (fn) {
                    this.onTouched = fn;
                };
                /**
                 * Focuses the search input field
                 * @private
                 */
                MatSelectSearchComponent.prototype._focus = function () {
                    if (!this.searchSelectInput) {
                        return;
                    }
                    // save and restore scrollTop of panel, since it will be reset by focus()
                    // note: this is hacky
                    var panel = this.matSelect.panel.nativeElement;
                    var scrollTop = panel.scrollTop;
                    // focus
                    this.searchSelectInput.nativeElement.focus();
                    panel.scrollTop = scrollTop;
                };
                /**
                 * Resets the current search value
                 * @param {boolean} focus whether to focus after resetting
                 * @private
                 */
                MatSelectSearchComponent.prototype._reset = function (focus) {
                    if (!this.searchSelectInput) {
                        return;
                    }
                    this.searchSelectInput.nativeElement.value = '';
                    this.onInputChange('');
                    if (focus) {
                        this._focus();
                    }
                };
                /**
                 * Sets the overlay class  to correct offsetY
                 * so that the selected option is at the position of the select box when opening
                 */
                MatSelectSearchComponent.prototype.setOverlayClass = function () {
                    var _this = this;
                    if (this.overlayClassSet) {
                        return;
                    }
                    var overlayClass = 'cdk-overlay-pane-select-search';
                    this.matSelect.overlayDir.attach
                        .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeUntil"])(this._onDestroy))
                        .subscribe(function () {
                            // note: this is hacky, but currently there is no better way to do this
                            _this.searchSelectInput.nativeElement.parentElement.parentElement
                                .parentElement.parentElement.parentElement.classList.add(overlayClass);
                        });
                    this.overlayClassSet = true;
                };
                /**
                 * Initializes handling <mat-select [multiple]="true">
                 * Note: to improve this code, mat-select should be extended to allow disabling resetting the selection while filtering.
                 */
                MatSelectSearchComponent.prototype.initMultipleHandling = function () {
                    var _this = this;
                    // if <mat-select [multiple]="true">
                    // store previously selected values and restore them when they are deselected
                    // because the option is not available while we are currently filtering
                    this.matSelect.valueChange
                        .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeUntil"])(this._onDestroy))
                        .subscribe(function (values) {
                            if (_this.matSelect.multiple) {
                                var restoreSelectedValues_1 = false;
                                if (_this._value && _this._value.length
                                    && _this.previousSelectedValues && Array.isArray(_this.previousSelectedValues)) {
                                    if (!values || !Array.isArray(values)) {
                                        values = [];
                                    }
                                    var optionValues_1 = _this.matSelect.options.map(function (option) { return option.value; });
                                    _this.previousSelectedValues.forEach(function (previousValue) {
                                        if (values.indexOf(previousValue) === -1 && optionValues_1.indexOf(previousValue) === -1) {
                                            // if a value that was selected before is deselected and not found in the options, it was deselected
                                            // due to the filtering, so we restore it.
                                            values.push(previousValue);
                                            restoreSelectedValues_1 = true;
                                        }
                                    });
                                }
                                if (restoreSelectedValues_1) {
                                    _this.matSelect._onChange(values);
                                }
                                _this.previousSelectedValues = values;
                            }
                        });
                };
                var MatSelectSearchComponent_1;
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Object)
                ], MatSelectSearchComponent.prototype, "placeholderLabel", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Object)
                ], MatSelectSearchComponent.prototype, "noEntriesFoundLabel", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('searchSelectInput', { read: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"] }),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"])
                ], MatSelectSearchComponent.prototype, "searchSelectInput", void 0);
                MatSelectSearchComponent = MatSelectSearchComponent_1 = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'mat-select-search',
                        template: __webpack_require__(/*! ./mat-select-search.component.html */ "./app/gui-helpers/mat-select-search/mat-select-search.component.html"),
                        providers: [
                            {
                                provide: _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NG_VALUE_ACCESSOR"],
                                useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function () { return MatSelectSearchComponent_1; }),
                                multi: true
                            }
                        ],
                        changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
                        styles: [__webpack_require__(/*! ./mat-select-search.component.scss */ "./app/gui-helpers/mat-select-search/mat-select-search.component.scss")]
                    }),
                    __param(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MatSelect"])),
                    __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_2__["MatSelect"],
                    _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateService"],
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]])
                ], MatSelectSearchComponent);
                return MatSelectSearchComponent;
            }());



            /***/
}),

/***/ "./app/gui-helpers/mat-select-search/mat-select-search.module.ts":
/*!***********************************************************************!*\
  !*** ./app/gui-helpers/mat-select-search/mat-select-search.module.ts ***!
  \***********************************************************************/
/*! exports provided: MatSelectSearchModule */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatSelectSearchModule", function () { return MatSelectSearchModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _mat_select_search_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mat-select-search.component */ "./app/gui-helpers/mat-select-search/mat-select-search.component.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "../node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ "../node_modules/@angular/common/fesm5/common.js");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };




            var MatSelectSearchModule = /** @class */ (function () {
                function MatSelectSearchModule() {
                }
                MatSelectSearchModule = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
                        imports: [
                            _angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatButtonModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatIconModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatInputModule"]
                        ],
                        declarations: [
                            _mat_select_search_component__WEBPACK_IMPORTED_MODULE_1__["MatSelectSearchComponent"]
                        ],
                        exports: [
                            _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatButtonModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatInputModule"],
                            _mat_select_search_component__WEBPACK_IMPORTED_MODULE_1__["MatSelectSearchComponent"]
                        ]
                    })
                ], MatSelectSearchModule);
                return MatSelectSearchModule;
            }());



            /***/
}),

/***/ "./app/gui-helpers/ngx-gauge/gaugeOptions.ts":
/*!***************************************************!*\
  !*** ./app/gui-helpers/ngx-gauge/gaugeOptions.ts ***!
  \***************************************************/
/*! exports provided: GaugeType, GaugeOptions */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GaugeType", function () { return GaugeType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GaugeOptions", function () { return GaugeOptions; });
            var GaugeType;
            (function (GaugeType) {
                GaugeType[GaugeType["Gauge"] = 0] = "Gauge";
                GaugeType[GaugeType["Donut"] = 1] = "Donut";
                GaugeType[GaugeType["Zones"] = 2] = "Zones";
            })(GaugeType || (GaugeType = {}));
            var GaugeOptions = /** @class */ (function () {
                function GaugeOptions() {
                    this.minValue = 0;
                    this.maxValue = 3000;
                    this.animationSpeed = 40;
                    this.colorStart = '#6fadcf';
                    this.colorStop = '#6fadcf';
                    this.gradientType = '';
                    this.strokeColor = '#e0e0e0';
                    this.pointer = {
                        length: 0.5,
                        strokeWidth: 0.035,
                        iconScale: 1.0,
                        color: '#000000'
                    };
                    this.angle = 0;
                    this.lineWidth = 0.3;
                    this.radiusScale = 0.6;
                    this.fontSize = 18;
                    this.textFilePosition = 20;
                    this.limitMax = false;
                    this.limitMin = false;
                    this.highDpiSupport = true;
                    this.backgroundColor = 'rgba(255, 255, 255, 0)';
                    this.shadowColor = '#d5d5d5';
                    this.fractionDigits = 0;
                    this.ticksEnabled = true;
                    this.renderTicks = {
                        divisions: 5,
                        divWidth: 1.1,
                        divLength: 0.7,
                        divColor: '#333333',
                        subDivisions: 3,
                        subLength: 0.5,
                        subWidth: 0.6,
                        subColor: '#666666'
                    };
                    this.staticLabelsText = '200;500;2100;2800';
                    this.staticFontSize = 10;
                    this.staticFontColor = '#000000';
                    this.staticLabels = {
                        font: '10px sans-serif',
                        labels: [200, 500, 2100, 2800],
                        fractionDigits: 0,
                        color: '#000000'
                    };
                    this.staticZones = [
                        { strokeStyle: "#F03E3E", min: 0, max: 200 },
                        { strokeStyle: "#FFDD00", min: 200, max: 500 },
                        { strokeStyle: "#30B32D", min: 500, max: 2100 },
                        { strokeStyle: "#FFDD00", min: 2100, max: 2800 },
                        { strokeStyle: "#F03E3E", min: 2800, max: 3000 }
                    ];
                }
                return GaugeOptions;
            }());



            /***/
}),

/***/ "./app/gui-helpers/ngx-gauge/ngx-gauge.component.css":
/*!***********************************************************!*\
  !*** ./app/gui-helpers/ngx-gauge/ngx-gauge.component.css ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "\n.mygauge-container {\n    z-index: 1;\n    position: relative;\n    width: 100%; \n    height:100%;\n    padding: 20;\n}\n\n.mygauge-canvas {\n    margin: 0;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n\n.mygauge-value {\n    text-align: center; \n    font-size: 18px; \n    font-weight: bold;\n    color: black; \n    font-family: 'Amaranth', sans-serif;\n    position: absolute; \n    top: 5px; \n    left: 0; \n    right: 0;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZ3VpLWhlbHBlcnMvbmd4LWdhdWdlL25neC1nYXVnZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtJQUNJLFVBQVU7SUFDVixrQkFBa0I7SUFDbEIsV0FBVztJQUNYLFdBQVc7SUFDWCxXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxTQUFTO0lBQ1Qsa0JBQWtCO0lBQ2xCLFFBQVE7SUFDUixTQUFTO0lBRVQsZ0NBQWdDO0FBQ3BDOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixpQkFBaUI7SUFDakIsWUFBWTtJQUNaLG1DQUFtQztJQUNuQyxrQkFBa0I7SUFDbEIsUUFBUTtJQUNSLE9BQU87SUFDUCxRQUFRO0FBQ1oiLCJmaWxlIjoic3JjL2FwcC9ndWktaGVscGVycy9uZ3gtZ2F1Z2Uvbmd4LWdhdWdlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbi5teWdhdWdlLWNvbnRhaW5lciB7XG4gICAgei1pbmRleDogMTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgd2lkdGg6IDEwMCU7IFxuICAgIGhlaWdodDoxMDAlO1xuICAgIHBhZGRpbmc6IDIwO1xufVxuXG4ubXlnYXVnZS1jYW52YXMge1xuICAgIG1hcmdpbjogMDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1MCU7XG4gICAgbGVmdDogNTAlO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbn1cblxuLm15Z2F1Z2UtdmFsdWUge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjsgXG4gICAgZm9udC1zaXplOiAxOHB4OyBcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBjb2xvcjogYmxhY2s7IFxuICAgIGZvbnQtZmFtaWx5OiAnQW1hcmFudGgnLCBzYW5zLXNlcmlmO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsgXG4gICAgdG9wOiA1cHg7IFxuICAgIGxlZnQ6IDA7IFxuICAgIHJpZ2h0OiAwO1xufSJdfQ== */"

            /***/
}),

/***/ "./app/gui-helpers/ngx-gauge/ngx-gauge.component.html":
/*!************************************************************!*\
  !*** ./app/gui-helpers/ngx-gauge/ngx-gauge.component.html ***!
  \************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div (window:resize)=\"onResize($event)\" class=\"mygauge-container\" #panel>\n    <div #gaugetext class=\"mygauge-value\"></div>\n    <canvas #gauge id=\"myGauge\" width=\"180\" height=\"50\" class=\"mygauge-canvas\"></canvas>\n</div>"

            /***/
}),

/***/ "./app/gui-helpers/ngx-gauge/ngx-gauge.component.ts":
/*!**********************************************************!*\
  !*** ./app/gui-helpers/ngx-gauge/ngx-gauge.component.ts ***!
  \**********************************************************/
/*! exports provided: NgxGaugeComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgxGaugeComponent", function () { return NgxGaugeComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _gaugeOptions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./gaugeOptions */ "./app/gui-helpers/ngx-gauge/gaugeOptions.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };


            var NgxGaugeComponent = /** @class */ (function () {
                function NgxGaugeComponent() {
                    this.type = _gaugeOptions__WEBPACK_IMPORTED_MODULE_1__["GaugeType"].Gauge;
                    this.defOptions = new _gaugeOptions__WEBPACK_IMPORTED_MODULE_1__["GaugeOptions"]();
                    this.initialized = false;
                }
                NgxGaugeComponent.prototype.ngOnInit = function () {
                    this.options = Object.assign(this.defOptions, this.options);
                };
                NgxGaugeComponent.prototype.ngAfterViewInit = function () {
                    var _this = this;
                    setTimeout(function () {
                        _this.onResize(null);
                    }, 500);
                };
                NgxGaugeComponent.prototype.ngOnChanges = function (changes) {
                    if (this.gauge) {
                        if (changes) {
                            if (changes.value) {
                                this.gauge.set(changes.value.currentValue);
                            }
                        }
                    }
                };
                NgxGaugeComponent.prototype.onResize = function (event) {
                    var canvas = this.canvas.nativeElement;
                    var w = canvas.parentNode.clientWidth;
                    var h = canvas.parentNode.clientHeight;
                    if (w < h)
                        h = w;
                    this.canvas.nativeElement.height = h;
                    this.canvas.nativeElement.width = w;
                    this.reini();
                };
                NgxGaugeComponent.prototype.resize = function (height, width) {
                    if (height && width) {
                        this.canvas.nativeElement.height = height;
                        this.canvas.nativeElement.width = width;
                        this.reini();
                    }
                    else {
                        this.onResize(null);
                    }
                };
                NgxGaugeComponent.prototype.reini = function () {
                    if (this.gauge) {
                        this.render();
                    }
                    if (!this.initialized) {
                        this.init(this.type);
                    }
                };
                NgxGaugeComponent.prototype.render = function () {
                    this.gauge.setOptions(this.options);
                    this.gauge.ctx.clearRect(0, 0, this.gauge.ctx.canvas.width, this.gauge.ctx.canvas.height);
                    this.gauge.render();
                };
                NgxGaugeComponent.prototype.setValue = function (value) {
                    var val = parseFloat(value);
                    if (Number.isNaN(val)) {
                        // maybe boolean
                        val = Number(value);
                    }
                    else {
                        val = parseFloat(val.toFixed(5));
                    }
                    this.gauge.set(val);
                };
                NgxGaugeComponent.prototype.setOptions = function (options) {
                    this.options = options;
                    // if (options.backgroundColor) {
                    //     this.panel.nativeElement.style.backgroundColor = options.backgroundColor;
                    // }
                    this.gauge.animationSpeed = options.animationSpeed;
                    this.gauge.minValue = options.minValue;
                    this.gauge.maxValue = options.maxValue;
                    this.gaugetext.nativeElement.style.fontSize = options.fontSize + 'px';
                    if (options.fontFamily) {
                        this.gaugetext.nativeElement.style.fontFamily = options.fontFamily;
                    }
                    if (options.pointer && options.pointer.color) {
                        this.gaugetext.nativeElement.style.color = options.pointer.color;
                    }
                    this.gaugetext.nativeElement.style.top = options.textFilePosition + '%';
                    this.render();
                };
                NgxGaugeComponent.prototype.getOptions = function () {
                    return this.options;
                };
                NgxGaugeComponent.prototype.init = function (type) {
                    this.type = type;
                    if (type === _gaugeOptions__WEBPACK_IMPORTED_MODULE_1__["GaugeType"].Gauge) {
                        this.gauge = new Gauge(this.canvas.nativeElement);
                        this.gauge.setTextField(this.gaugetext.nativeElement);
                    }
                    else if (type === _gaugeOptions__WEBPACK_IMPORTED_MODULE_1__["GaugeType"].Zones) {
                        this.gauge = new Gauge(this.canvas.nativeElement);
                        this.gauge.setTextField(this.gaugetext.nativeElement);
                    }
                    else if (type === _gaugeOptions__WEBPACK_IMPORTED_MODULE_1__["GaugeType"].Donut) {
                        this.gauge = new Donut(this.canvas.nativeElement);
                        this.gauge.setTextField(this.gaugetext.nativeElement);
                    }
                    this.setOptions(this.options);
                    this.gauge.set(this.value);
                    this.initialized = true;
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", String)
                ], NgxGaugeComponent.prototype, "id", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", _gaugeOptions__WEBPACK_IMPORTED_MODULE_1__["GaugeOptions"])
                ], NgxGaugeComponent.prototype, "options", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Object)
                ], NgxGaugeComponent.prototype, "value", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('panel'),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"])
                ], NgxGaugeComponent.prototype, "panel", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('gauge'),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"])
                ], NgxGaugeComponent.prototype, "canvas", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('gaugetext'),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"])
                ], NgxGaugeComponent.prototype, "gaugetext", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('window:resize', ['$event']),
                    __metadata("design:type", Function),
                    __metadata("design:paramtypes", [Object]),
                    __metadata("design:returntype", void 0)
                ], NgxGaugeComponent.prototype, "onResize", null);
                NgxGaugeComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'ngx-gauge',
                        template: __webpack_require__(/*! ./ngx-gauge.component.html */ "./app/gui-helpers/ngx-gauge/ngx-gauge.component.html"),
                        styles: [__webpack_require__(/*! ./ngx-gauge.component.css */ "./app/gui-helpers/ngx-gauge/ngx-gauge.component.css")]
                    }),
                    __metadata("design:paramtypes", [])
                ], NgxGaugeComponent);
                return NgxGaugeComponent;
            }());



            /***/
}),

/***/ "./app/gui-helpers/ngx-nouislider/ngx-nouislider.component.css":
/*!*********************************************************************!*\
  !*** ./app/gui-helpers/ngx-nouislider/ngx-nouislider.component.css ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ".myslider-container {\n    z-index: 1;\n    margin: auto;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZ3VpLWhlbHBlcnMvbmd4LW5vdWlzbGlkZXIvbmd4LW5vdWlzbGlkZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFVBQVU7SUFDVixZQUFZO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvZ3VpLWhlbHBlcnMvbmd4LW5vdWlzbGlkZXIvbmd4LW5vdWlzbGlkZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5teXNsaWRlci1jb250YWluZXIge1xuICAgIHotaW5kZXg6IDE7XG4gICAgbWFyZ2luOiBhdXRvO1xufSJdfQ== */"

            /***/
}),

/***/ "./app/gui-helpers/ngx-nouislider/ngx-nouislider.component.html":
/*!**********************************************************************!*\
  !*** ./app/gui-helpers/ngx-nouislider/ngx-nouislider.component.html ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div style=\"margin: 40px 40px 40px 40px\" #panel>\n    <div #slider id=\"mySlider\" class=\"myslider-container\"></div>\n</div>"

            /***/
}),

/***/ "./app/gui-helpers/ngx-nouislider/ngx-nouislider.component.ts":
/*!********************************************************************!*\
  !*** ./app/gui-helpers/ngx-nouislider/ngx-nouislider.component.ts ***!
  \********************************************************************/
/*! exports provided: NgxNouisliderComponent, NgxNouisliderOptions */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgxNouisliderComponent", function () { return NgxNouisliderComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgxNouisliderOptions", function () { return NgxNouisliderOptions; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };

            var NgxNouisliderComponent = /** @class */ (function () {
                function NgxNouisliderComponent() {
                    this.size = { w: 0, h: 0 };
                    this.padding = 40;
                    this.defOptions = new NgxNouisliderOptions();
                    this.uiWorking = false;
                }
                NgxNouisliderComponent.prototype.ngOnInit = function () {
                    this.options = Object.assign(this.defOptions, this.options);
                };
                NgxNouisliderComponent.prototype.ngAfterViewInit = function () {
                    var _this = this;
                    setTimeout(function () {
                        _this.init();
                    }, 200);
                };
                NgxNouisliderComponent.prototype.resize = function (height, width) {
                    this.size.h = height - (2 * this.padding);
                    this.size.w = width - (2 * this.padding);
                    this.init();
                };
                NgxNouisliderComponent.prototype.ngOnDestroy = function () {
                    try {
                        this.slider.nativeElement.remove();
                        this.panel.nativeElement.remove();
                        if (this.uiWorkingTimeout) {
                            clearTimeout(this.uiWorkingTimeout);
                        }
                        if (this.uiSlider) {
                            this.uiSlider.off();
                            this.uiSlider.destroy();
                            delete this.uiSlider;
                            delete this.onUpdate;
                        }
                    }
                    catch (e) {
                    }
                };
                NgxNouisliderComponent.prototype.setOptions = function (options) {
                    var toInit = false;
                    if (this.options.orientation !== options.orientation || JSON.stringify(this.options.range) !== JSON.stringify(options.range) ||
                        JSON.stringify(this.options.pips) !== JSON.stringify(options.pips) || JSON.stringify(this.options.marker) !== JSON.stringify(options.marker) ||
                        JSON.stringify(this.options.tooltip) !== JSON.stringify(options.tooltip)) {
                        toInit = true;
                    }
                    if (options.fontFamily) {
                        this.panel.nativeElement.style.fontFamily = options.fontFamily;
                    }
                    this.options = options;
                    if (toInit) {
                        this.init();
                        return true;
                    }
                    return false;
                };
                NgxNouisliderComponent.prototype.getOptions = function () {
                    return this.options;
                };
                NgxNouisliderComponent.prototype.init = function () {
                    if (this.options.orientation === 'vertical') {
                        this.slider.nativeElement.style.height = this.size.h + "px";
                        this.slider.nativeElement.style.width = null;
                    }
                    else {
                        this.slider.nativeElement.style.width = this.size.w + "px";
                        this.slider.nativeElement.style.height = null;
                    }
                    var tooltip = [false];
                    if (this.options.tooltip.type === 'hide' || this.options.tooltip.type === 'show') {
                        tooltip = [wNumb({ decimals: this.options.tooltip.decimals })];
                    }
                    if (this.uiSlider) {
                        this.uiSlider.off();
                        this.uiSlider.destroy();
                    }
                    this.uiSlider = noUiSlider.create(this.slider.nativeElement, {
                        start: [this.options.range.min + Math.abs(this.options.range.max - this.options.range.min) / 2],
                        connect: [true, false],
                        orientation: this.options.orientation,
                        direction: this.options.direction,
                        tooltips: tooltip,
                        range: this.options.range,
                        step: this.options.step,
                        pips: {
                            mode: 'values',
                            values: this.options.pips.values,
                            density: this.options.pips.density,
                        },
                        shape: this.options.shape,
                        marker: this.options.marker,
                    });
                    // tooltip
                    if (this.options.tooltip.type === 'show') {
                        var tp = this.uiSlider.target.getElementsByClassName('noUi-tooltip');
                        if (tp && tp.length > 0)
                            tp[0].style.display = 'block';
                    }
                    else if (this.options.tooltip.type === 'hide') {
                        var tp = this.uiSlider.target.getElementsByClassName('noUi-active noUi-tooltip');
                        if (tp && tp.length > 0)
                            tp[0].style.display = 'block';
                    }
                    if (this.options.tooltip.type !== 'none') {
                        var tp = this.uiSlider.target.getElementsByClassName('noUi-tooltip');
                        if (tp && tp.length > 0) {
                            tp[0].style.color = this.options.tooltip.color;
                            tp[0].style.background = this.options.tooltip.background;
                            tp[0].style.fontSize = this.options.tooltip.fontSize + 'px';
                        }
                    }
                    var self = this;
                    this.uiSlider.on('slide', function (values, handle) {
                        if (self.onUpdate) {
                            self.resetWorkingTimeout();
                            self.onUpdate(values[handle]);
                        }
                    });
                };
                NgxNouisliderComponent.prototype.resetWorkingTimeout = function () {
                    this.uiWorking = true;
                    if (this.uiWorkingTimeout) {
                        clearTimeout(this.uiWorkingTimeout);
                    }
                    var self = this;
                    this.uiWorkingTimeout = setTimeout(function () {
                        self.uiWorking = false;
                    }, 1000);
                };
                NgxNouisliderComponent.prototype.setValue = function (value) {
                    if (!this.uiWorking) {
                        this.uiSlider.set(value);
                    }
                };
                NgxNouisliderComponent.prototype.bindUpdate = function (calback) {
                    this.onUpdate = calback;
                };
                NgxNouisliderComponent.prototype.currentValue = function () {
                    return parseFloat(this.uiSlider.get());
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", String)
                ], NgxNouisliderComponent.prototype, "id", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('panel'),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"])
                ], NgxNouisliderComponent.prototype, "panel", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('slider'),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"])
                ], NgxNouisliderComponent.prototype, "slider", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", NgxNouisliderOptions)
                ], NgxNouisliderComponent.prototype, "options", void 0);
                NgxNouisliderComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'ngx-nouislider',
                        template: __webpack_require__(/*! ./ngx-nouislider.component.html */ "./app/gui-helpers/ngx-nouislider/ngx-nouislider.component.html"),
                        styles: [__webpack_require__(/*! ./ngx-nouislider.component.css */ "./app/gui-helpers/ngx-nouislider/ngx-nouislider.component.css")]
                    }),
                    __metadata("design:paramtypes", [])
                ], NgxNouisliderComponent);
                return NgxNouisliderComponent;
            }());

            var NgxNouisliderOptions = /** @class */ (function () {
                function NgxNouisliderOptions() {
                    this.orientation = 'vertical'; //'horizontal';
                    this.direction = 'ltr';
                    this.fontFamily = 'Sans-serif';
                    this.shape = { baseColor: '#dcdcdc', connectColor: '#49b2ff', handleColor: '#018ef5' };
                    this.marker = { color: '#000', subWidth: 5, subHeight: 1, fontSize: 18, divHeight: 2, divWidth: 12 };
                    this.range = { min: 0, max: 100 };
                    this.step = 1;
                    this.pips = { mode: 'values', values: [0, 50, 100], density: 4 };
                    this.tooltip = { type: 'none', decimals: 0, background: '#FFF', color: '#000', fontSize: 12 };
                }
                return NgxNouisliderOptions;
            }());



            /***/
}),

/***/ "./app/gui-helpers/ngx-switch/ngx-switch.component.css":
/*!*************************************************************!*\
  !*** ./app/gui-helpers/ngx-switch/ngx-switch.component.css ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2d1aS1oZWxwZXJzL25neC1zd2l0Y2gvbmd4LXN3aXRjaC5jb21wb25lbnQuY3NzIn0= */"

            /***/
}),

/***/ "./app/gui-helpers/ngx-switch/ngx-switch.component.html":
/*!**************************************************************!*\
  !*** ./app/gui-helpers/ngx-switch/ngx-switch.component.html ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<label class=\"md-switch\" [style.borderRadius]=\"options.radius + 'px'\">\n    <div class=\"toggle-button\" #toggler>\n        <input type=\"checkbox\" (change)=\"onClick()\" #switcher>\n        <div class=\"inner-circle\" #slider style=\"text-align: center;line-height: inherit;\" [style.fontSize]=\"options.fontSize + 'px'\" [style.fontFamily]=\"options.fontFamily\">\n        </div>\n    </div>\n</label>\n\n"

            /***/
}),

/***/ "./app/gui-helpers/ngx-switch/ngx-switch.component.ts":
/*!************************************************************!*\
  !*** ./app/gui-helpers/ngx-switch/ngx-switch.component.ts ***!
  \************************************************************/
/*! exports provided: NgxSwitchComponent, SwitchOptions */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgxSwitchComponent", function () { return NgxSwitchComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SwitchOptions", function () { return SwitchOptions; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };

            var NgxSwitchComponent = /** @class */ (function () {
                function NgxSwitchComponent() {
                    this.options = new SwitchOptions();
                    this.checked = false;
                }
                NgxSwitchComponent.prototype.ngAfterViewInit = function () {
                    this.onRefresh();
                };
                NgxSwitchComponent.prototype.onClick = function () {
                    this.onRefresh();
                    if (this.onUpdate) {
                        this.onUpdate((this.checked) ? this.options.onValue.toString() : this.options.offValue.toString());
                    }
                };
                NgxSwitchComponent.prototype.onRefresh = function () {
                    this.checked = this.switcher.nativeElement.checked;
                    this.toggler.nativeElement.classList.toggle('active', this.checked);
                    if (this.switcher.nativeElement.checked) {
                        this.toggler.nativeElement.style.backgroundColor = this.options.onBackground;
                        this.slider.nativeElement.style.backgroundColor = this.options.onSliderColor;
                        this.slider.nativeElement.style.color = this.options.onTextColor;
                        this.slider.nativeElement.innerHTML = this.options.onText;
                    }
                    else {
                        this.toggler.nativeElement.style.backgroundColor = this.options.offBackground;
                        this.slider.nativeElement.style.backgroundColor = this.options.offSliderColor;
                        this.slider.nativeElement.style.color = this.options.offTextColor;
                        this.slider.nativeElement.innerHTML = this.options.offText;
                    }
                    this.slider.nativeElement.style.lineHeight = this.options.height + 'px';
                };
                NgxSwitchComponent.prototype.setOptions = function (options, force) {
                    var _this = this;
                    if (force === void 0) { force = false; }
                    if (force) {
                        this.options = options;
                        this.onRefresh();
                    }
                    else {
                        setTimeout(function () {
                            _this.options = options;
                            _this.onRefresh();
                        }, 200);
                    }
                    return true;
                };
                NgxSwitchComponent.prototype.setValue = function (value) {
                    this.switcher.nativeElement.checked = (value) ? true : false;
                    this.onRefresh();
                };
                NgxSwitchComponent.prototype.bindUpdate = function (calback) {
                    this.onUpdate = calback;
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('switcher'),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"])
                ], NgxSwitchComponent.prototype, "switcher", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('slider'),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"])
                ], NgxSwitchComponent.prototype, "slider", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('toggler'),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"])
                ], NgxSwitchComponent.prototype, "toggler", void 0);
                NgxSwitchComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'ngx-switch',
                        template: __webpack_require__(/*! ./ngx-switch.component.html */ "./app/gui-helpers/ngx-switch/ngx-switch.component.html"),
                        styles: [__webpack_require__(/*! ./ngx-switch.component.css */ "./app/gui-helpers/ngx-switch/ngx-switch.component.css")]
                    }),
                    __metadata("design:paramtypes", [])
                ], NgxSwitchComponent);
                return NgxSwitchComponent;
            }());

            var SwitchOptions = /** @class */ (function () {
                function SwitchOptions() {
                    this.offValue = 0;
                    this.onValue = 1;
                    this.offBackground = '#ccc';
                    this.onBackground = '#ccc';
                    this.offText = '';
                    this.onText = '';
                    this.offSliderColor = '#fff';
                    this.onSliderColor = '#0CC868';
                    this.offTextColor = '#000';
                    this.onTextColor = '#fff';
                    this.fontSize = 12;
                    this.fontFamily = '';
                    this.radius = 0;
                }
                return SwitchOptions;
            }());



            /***/
}),

/***/ "./app/gui-helpers/ngx-uplot/ngx-uplot.component.css":
/*!***********************************************************!*\
  !*** ./app/gui-helpers/ngx-uplot/ngx-uplot.component.css ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2d1aS1oZWxwZXJzL25neC11cGxvdC9uZ3gtdXBsb3QuY29tcG9uZW50LmNzcyJ9 */"

            /***/
}),

/***/ "./app/gui-helpers/ngx-uplot/ngx-uplot.component.html":
/*!************************************************************!*\
  !*** ./app/gui-helpers/ngx-uplot/ngx-uplot.component.html ***!
  \************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div #graph>\n</div>"

            /***/
}),

/***/ "./app/gui-helpers/ngx-uplot/ngx-uplot.component.ts":
/*!**********************************************************!*\
  !*** ./app/gui-helpers/ngx-uplot/ngx-uplot.component.ts ***!
  \**********************************************************/
/*! exports provided: NgxUplotComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgxUplotComponent", function () { return NgxUplotComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };

            var NgxUplotComponent = /** @class */ (function () {
                function NgxUplotComponent() {
                    var _this = this;
                    this.xtime = [new Date().getTime() / 1000 - 1, new Date().getTime() / 1000]; // start and sample x time
                    this.sampleData = [this.xtime, [35, 71]];
                    this.xTimeFormat = { hh_mm_ss: "{HH}:{mm}:{ss}", hh_mm_ss_AA: "{h}:{mm}:{ss} {AA}" };
                    this.xDateFormat = {};
                    this.fmtDate = uPlot.fmtDate("{DD}/{MM}/{YY} {HH}:{mm}:{ss}");
                    this.sampleSerie = [
                        {
                            value: function (self, rawValue) { return _this.fmtDate(new Date(rawValue * 1e3)); }
                        },
                        {
                            // initial toggled state (optional)
                            show: true,
                            spanGaps: false,
                            // // in-legend display
                            label: "Serie",
                            value: function (self, rawValue) { return rawValue.toFixed(_this.options.decimalsPrecision); },
                            // // series style
                            stroke: "red",
                            width: 1,
                            fill: "rgba(255, 0, 0, 0.3)",
                            dash: [10, 5],
                        }
                    ];
                    this.defOptions = {
                        title: "Default Chart",
                        id: "defchart",
                        class: "my-chart",
                        width: 800,
                        height: 600,
                        legend: { show: true, width: 1 },
                        scales: {
                            x: {
                                time: true,
                            },
                        },
                        series: this.sampleSerie,
                    };
                    this.languageLabels = { time: 'Time', serie: 'Serie', title: 'Title' };
                }
                NgxUplotComponent.prototype.getShortTimeFormat = function (min) {
                    if (min === void 0) { min = true; }
                    if (this.options && this.options.timeFormat === 'hh_mm_ss_AA') {
                        if (min)
                            return "{h}:{mm} {AA}";
                        return "{h} {AA}";
                    }
                    if (min)
                        return "{HH}:{mm}";
                    return "{HH}";
                };
                NgxUplotComponent.prototype.checkDateFormat = function () {
                    this.xDateFormat = {
                        YYYY_MM_DD: {
                            legendDate: '{YYYY}/{MM}/{DD}',
                            values: [
                                // tick incr default: year (3600 * 24 * 365), month(3600 * 24 * 28), day(3600 * 24), hour, min, sec, mode
                                [31536000, "{YYYY}", null, null, null, null, null, null, 1],
                                [2419200, "{MMM}", "\n{YYYY}", null, null, null, null, null, 1],
                                [86400, "{DD}/{MM}", "\n{YYYY}", null, null, null, null, null, 1],
                                [3600, "" + this.getShortTimeFormat(false), "\n{YYYY}/{MM}/{DD}", null, "\n{DD}/{MM}", null, null, null, 1],
                                [60, "" + this.getShortTimeFormat(), "\n{YYYY}/{MM}/{DD}", null, "\n{DD}/{MM}", null, null, null, 1],
                                [1, ":{ss}", "\n{YYYY}/{MM}/{DD} " + this.getShortTimeFormat(), null, "\n{DD}/{MM} " + this.getShortTimeFormat(), null, "\n" + this.getShortTimeFormat(), null, 1],
                                [0.001, ":{ss}.{fff}", "\n{YYYY}/{MM}/{DD} " + this.getShortTimeFormat(), null, "\n{DD}/{MM} " + this.getShortTimeFormat(), null, "\n" + this.getShortTimeFormat(), null, 1]
                            ]
                        },
                        MM_DD_YYYY: {
                            legendDate: '{MM}/{DD}/{YYYY}',
                            values: [
                                // tick incr default: year (3600 * 24 * 365), month(3600 * 24 * 28), day(3600 * 24), hour, min, sec, mode
                                [31536000, "{YYYY}", null, null, null, null, null, null, 1],
                                [2419200, "{MMM}", "\n{YYYY}", null, null, null, null, null, 1],
                                [86400, "{MM}/{DD}", "\n{YYYY}", null, null, null, null, null, 1],
                                [3600, "" + this.getShortTimeFormat(false), "\n{MM}/{DD}/{YYYY}", null, "\n{MM}/{DD}", null, null, null, 1],
                                [60, "" + this.getShortTimeFormat(), "\n{MM}/{DD}/{YYYY}", null, "\n{MM}/{DD}", null, null, null, 1],
                                [1, ":{ss}", "\n{MM}/{DD}/{YYYY} " + this.getShortTimeFormat(), null, "\n{MM}/{DD} " + this.getShortTimeFormat(), null, "\n" + this.getShortTimeFormat(), null, 1],
                                [0.001, ":{ss}.{fff}", "\n{MM}/{DD}/{YYYY} " + this.getShortTimeFormat(), null, "\n{MM}/{DD} " + this.getShortTimeFormat(), null, "\n" + this.getShortTimeFormat(), null, 1]
                            ]
                        },
                        DD_MM_YYYY: {
                            legendDate: '{DD}/{MM}/{YYYY}',
                            values: [
                                // tick incr default: year (3600 * 24 * 365), month(3600 * 24 * 28), day(3600 * 24), hour, min, sec, mode
                                [31536000, "{YYYY}", null, null, null, null, null, null, 1],
                                [2419200, "{MMM}", "\n{YYYY}", null, null, null, null, null, 1],
                                [86400, "{DD}/{MM}", "\n{YYYY}", null, null, null, null, null, 1],
                                [3600, "" + this.getShortTimeFormat(false), "\n{DD}/{MM}/{YYYY}", null, "\n{DD}/{MM}", null, null, null, 1],
                                [60, "" + this.getShortTimeFormat(), "\n{DD}/{MM}/{YYYY}", null, "\n{DD}/{MM}", null, null, null, 1],
                                [1, ":{ss}", "\n{DD}/{MM}/{YYYY} " + this.getShortTimeFormat(), null, "\n{DD}/{MM} " + this.getShortTimeFormat(), null, "\n" + this.getShortTimeFormat(), null, 1],
                                [0.001, ":{ss}.{fff}", "\n{DD}/{MM}/{YYYY} " + this.getShortTimeFormat(), null, "\n{DD}/{MM} " + this.getShortTimeFormat(), null, "\n" + this.getShortTimeFormat(), null, 1]
                            ]
                        },
                        MM_DD_YY: {
                            legendDate: '{MM}/{DD}/{YY}',
                            values: [
                                // tick incr default: year (3600 * 24 * 365), month(3600 * 24 * 28), day(3600 * 24), hour, min, sec, mode
                                [31536000, "{YYYY}", null, null, null, null, null, null, 1],
                                [2419200, "{MMM}", "\n{YYYY}", null, null, null, null, null, 1],
                                [86400, "{MM}/{DD}", "\n{YYYY}", null, null, null, null, null, 1],
                                [3600, "" + this.getShortTimeFormat(false), "\n{MM}/{DD}/{YY}", null, "\n{MM}/{DD}", null, null, null, 1],
                                [60, "" + this.getShortTimeFormat(), "\n{MM}/{DD}/{YY}", null, "\n{MM}/{DD}", null, null, null, 1],
                                [1, ":{ss}", "\n{MM}/{DD}/{YY} " + this.getShortTimeFormat(), null, "\n{MM}/{DD} " + this.getShortTimeFormat(), null, "\n" + this.getShortTimeFormat(), null, 1],
                                [0.001, ":{ss}.{fff}", "\n{MM}/{DD}/{YY} " + this.getShortTimeFormat(), null, "\n{MM}/{DD} " + this.getShortTimeFormat(), null, "\n" + this.getShortTimeFormat(), null, 1]
                            ]
                        },
                        DD_MM_YY: {
                            legendDate: '{DD}/{MM}/{YY}',
                            values: [
                                // tick incr default: year (3600 * 24 * 365), month(3600 * 24 * 28), day(3600 * 24), hour, min, sec, mode
                                [31536000, "{YYYY}", null, null, null, null, null, null, 1],
                                [2419200, "{MMM}", "\n{YYYY}", null, null, null, null, null, 1],
                                [86400, "{DD}/{MM}", "\n{YYYY}", null, null, null, null, null, 1],
                                [3600, "" + this.getShortTimeFormat(false), "\n{DD}/{MM}/{YY}", null, "\n{DD}/{MM}", null, null, null, 1],
                                [60, "" + this.getShortTimeFormat(), "\n{DD}/{MM}/{YY}", null, "\n{DD}/{MM}", null, null, null, 1],
                                [1, ":{ss}", "\n{DD}/{MM}/{YY} " + this.getShortTimeFormat(), null, "\n{DD}/{MM} " + this.getShortTimeFormat(), null, "\n" + this.getShortTimeFormat(), null, 1],
                                [0.001, ":{ss}.{fff}", "\n{DD}/{MM}/{YY} " + this.getShortTimeFormat(), null, "\n{DD}/{MM} " + this.getShortTimeFormat(), null, "\n" + this.getShortTimeFormat(), null, 1]
                            ]
                        },
                    };
                };
                NgxUplotComponent.prototype.ngOnInit = function () {
                    this.options = this.defOptions;
                    this.uplot = new uPlot(this.defOptions, this.sampleData, this.graph.nativeElement);
                };
                NgxUplotComponent.prototype.ngAfterViewInit = function () {
                };
                NgxUplotComponent.prototype.ngOnDestroy = function () {
                    try {
                        this.uplot.destroy();
                    }
                    catch (e) {
                        console.error(e);
                    }
                };
                NgxUplotComponent.prototype.resize = function (height, width) {
                    var chart = this.graph.nativeElement;
                    if (!height) {
                        height = chart.clientHeight;
                    }
                    if (!width) {
                        width = chart.clientWidth;
                    }
                    this.uplot.setSize({ height: height, width: width });
                    // this.uplot.redraw(false, true);
                };
                NgxUplotComponent.prototype.init = function (options) {
                    var _this = this;
                    this.data = [[]];
                    if (options) {
                        this.options = options;
                        if (!options.id) {
                            this.data = this.sampleData;
                            this.options.series = this.sampleSerie;
                        }
                        else {
                            // this.data = this.sampleData;
                            this.data = [this.xtime];
                        }
                    }
                    var opt = this.options || this.defOptions;
                    if (this.uplot) {
                        this.uplot.destroy();
                    }
                    // set x axis format (date/time)
                    this.checkDateFormat();
                    if (this.options.dateFormat && this.xDateFormat[this.options.dateFormat] && this.options.timeFormat && this.xTimeFormat[this.options.timeFormat]) {
                        this.fmtDate = uPlot.fmtDate(this.xDateFormat[this.options.dateFormat].legendDate + ' ' + this.xTimeFormat[this.options.timeFormat]);
                        this.options.axes[0].values = this.xDateFormat[this.options.dateFormat].values;
                    }
                    this.sampleSerie[1].label = this.languageLabels.serie;
                    if (this.options.series.length > 0) {
                        this.options.series[0].value = function (self, rawValue) { return _this.fmtDate(new Date(rawValue * 1e3)); };
                        this.options.series[0].label = this.languageLabels.time;
                    }
                    if (this.options.axes.length > 0) {
                        this.options.axes[0].label = this.languageLabels.time;
                    }
                    if (!this.options.title) {
                        this.options.title = this.languageLabels.title;
                    }
                    // set plugins
                    opt.plugins = (this.options.tooltip && this.options.tooltip.show) ? [this.tooltipPlugin()] : [];
                    this.uplot = new uPlot(opt, this.data, this.graph.nativeElement);
                };
                NgxUplotComponent.prototype.setOptions = function (options) {
                    this.options = options;
                    this.init(this.options);
                };
                NgxUplotComponent.prototype.addSerie = function (index, attribute) {
                    this.data.push([null, null]);
                    this.uplot.addSeries(attribute, index);
                    this.uplot.setData(this.data);
                };
                NgxUplotComponent.prototype.setSample = function () {
                    var sample = [this.xtime];
                    for (var i = 0; i < this.uplot.series.length; i++) {
                        sample.push([Math.floor(Math.random() * 20), Math.floor(Math.random() * 30)]);
                    }
                    this.setData(sample);
                };
                NgxUplotComponent.prototype.setData = function (data) {
                    if (data === void 0) { data = [[]]; }
                    this.data = data;
                    this.uplot.setData(this.data);
                };
                NgxUplotComponent.prototype.setXScala = function (min, max) {
                    this.uplot.setScale('x', { min: min, max: max });
                };
                NgxUplotComponent.prototype.addValue = function (index, x, y, size) {
                    var xpos = this.data[0].indexOf(x);
                    if (xpos < 0) {
                        this.data[0].push(x);
                        for (var i = 0; i < this.data.length; i++) {
                            if (i === index) {
                                this.data[i].push(y);
                            }
                            else if (i) {
                                this.data[i].push(null);
                            }
                        }
                    }
                    else {
                        this.data[index][xpos] = y;
                    }
                    // remove data out of size
                    var min = x - size;
                    if (this.data[0][0] < min) {
                        for (var i = 0; i < this.data.length; i++) {
                            this.data[i].shift();
                        }
                    }
                    this.uplot.setData(this.data);
                };
                NgxUplotComponent.prototype.redraw = function (flag) {
                    if (flag === void 0) { flag = false; }
                    this.uplot.redraw(flag);
                };
                NgxUplotComponent.prototype.checkAxisOptions = function () {
                };
                NgxUplotComponent.prototype.tooltipPlugin = function (opts) {
                    var _this = this;
                    if (opts === void 0) { opts = null; }
                    var over, bound, bLeft, bTop;
                    function syncBounds() {
                        var bbox = over.getBoundingClientRect();
                        bLeft = bbox.left;
                        bTop = bbox.top;
                    }
                    var overlay = document.createElement("div");
                    overlay.id = "overlay";
                    overlay.style.display = "none";
                    overlay.style.position = "absolute";
                    document.body.appendChild(overlay);
                    return {
                        hooks: {
                            init: function (u) {
                                over = u.root.querySelector(".u-over");
                                bound = over;
                                //	bound = document.body;
                                over.onmouseenter = function () {
                                    overlay.style.display = "block";
                                };
                                over.onmouseleave = function () {
                                    overlay.style.display = "none";
                                };
                            },
                            setSize: function (u) {
                                syncBounds();
                            },
                            setCursor: function (u) {
                                var _a = u.cursor, left = _a.left, top = _a.top, idx = _a.idx;
                                var x = u.data[0][idx];
                                var anchor = { left: left + bLeft, top: top + bTop };
                                var time = _this.fmtDate(new Date(x * 1e3));
                                var xdiv = "<div class=\"ut-head\">" + u.series[0].label + ": " + time + "</div>";
                                var series = '';
                                for (var i = 1; i < u.series.length; i++) {
                                    var value = '';
                                    try {
                                        if (!isNaN(u.data[i][idx])) {
                                            if (u.data[i][idx].toString().indexOf('.') != -1) {
                                                value = u.data[i][idx].toFixed(_this.options.decimalsPrecision);
                                            }
                                            else {
                                                value = u.data[i][idx];
                                            }
                                        }
                                    }
                                    catch (_b) { }
                                    series = series + ("<div class=\"ut-serie\"><div class=\"ut-marker\" style=\"border-color: " + u.series[i]._stroke + "\"></div>" + u.series[i].label + ": <div class=\"ut-value\">" + value + "</div></div>");
                                }
                                overlay.innerHTML = xdiv + series; // + `${x},${y} at ${Math.round(left)},${Math.round(top)}`;
                                placement(overlay, anchor, "right", "start", { bound: bound });
                            }
                        }
                    };
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", String)
                ], NgxUplotComponent.prototype, "id", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Object)
                ], NgxUplotComponent.prototype, "options", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('graph'),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"])
                ], NgxUplotComponent.prototype, "graph", void 0);
                NgxUplotComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'ngx-uplot',
                        template: __webpack_require__(/*! ./ngx-uplot.component.html */ "./app/gui-helpers/ngx-uplot/ngx-uplot.component.html"),
                        styles: [__webpack_require__(/*! ./ngx-uplot.component.css */ "./app/gui-helpers/ngx-uplot/ngx-uplot.component.css")]
                    }),
                    __metadata("design:paramtypes", [])
                ], NgxUplotComponent);
                return NgxUplotComponent;
            }());



            /***/
}),

/***/ "./app/gui-helpers/sel-options/sel-options.component.css":
/*!***************************************************************!*\
  !*** ./app/gui-helpers/sel-options/sel-options.component.css ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2d1aS1oZWxwZXJzL3NlbC1vcHRpb25zL3NlbC1vcHRpb25zLmNvbXBvbmVudC5jc3MifQ== */"

            /***/
}),

/***/ "./app/gui-helpers/sel-options/sel-options.component.html":
/*!****************************************************************!*\
  !*** ./app/gui-helpers/sel-options/sel-options.component.html ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<mat-selection-list *ngIf=\"extSelected\" #extGroups [(ngModel)]=\"extSelected\" style=\"display: inline-block; width: 40px;padding-top: 0px; padding-bottom: 10px;\" [disabled]=\"disabled\">\n\t<mat-list-option *ngFor=\"let opt of options\" [selected]=\"opt.selected\" [value]=\"opt\" style=\"height: 26px;cursor: pointer;\" checkboxPosition=\"before\">\n\t</mat-list-option>\t\n</mat-selection-list>\n<mat-selection-list #selGroups [(ngModel)]=\"selected\" style=\"display: inline-block; padding-top: 0px; padding-bottom: 10px;\" [disabled]=\"disabled\">\n\t<mat-list-option *ngFor=\"let opt of options\" [selected]=\"opt.selected\" [value]=\"opt\" style=\"font-size: 14px;height: 26px !important;cursor: pointer;\" checkboxPosition=\"before\">\n\t\t{{opt.label}}\n\t</mat-list-option>\n</mat-selection-list>"

            /***/
}),

/***/ "./app/gui-helpers/sel-options/sel-options.component.ts":
/*!**************************************************************!*\
  !*** ./app/gui-helpers/sel-options/sel-options.component.ts ***!
  \**************************************************************/
/*! exports provided: SelOptionsComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SelOptionsComponent", function () { return SelOptionsComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };

            var SelOptionsComponent = /** @class */ (function () {
                function SelOptionsComponent() {
                    this.selected = [];
                    this.options = [];
                }
                SelOptionsComponent.prototype.ngOnInit = function () {
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Object)
                ], SelOptionsComponent.prototype, "disabled", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Object)
                ], SelOptionsComponent.prototype, "selected", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Object)
                ], SelOptionsComponent.prototype, "options", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Object)
                ], SelOptionsComponent.prototype, "extSelected", void 0);
                SelOptionsComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'sel-options',
                        template: __webpack_require__(/*! ./sel-options.component.html */ "./app/gui-helpers/sel-options/sel-options.component.html"),
                        styles: [__webpack_require__(/*! ./sel-options.component.css */ "./app/gui-helpers/sel-options/sel-options.component.css")]
                    }),
                    __metadata("design:paramtypes", [])
                ], SelOptionsComponent);
                return SelOptionsComponent;
            }());



            /***/
}),

/***/ "./app/gui-helpers/treetable/treetable.component.css":
/*!***********************************************************!*\
  !*** ./app/gui-helpers/treetable/treetable.component.css ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ".container {\n    overflow: auto;\n}\n\n.item {\n    width: 100%;\n    height: 40px;\n}\n\n.item:hover {\n    background-color: rgba(0,0,0,0.1);\n}\n\n.item-text {\n    width: 500px;\n    position: relative;\n    display: inline-block;\n    overflow: hidden; \n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n\n.item-text div {\n    display: inline-block;\n    overflow-wrap: break-word;\n    text-overflow: ellipsis;\n    /* word-wrap: break-word; */\n    white-space: nowrap;\n}\n\n.item-property {\n    position: relative;\n    /* left: 400px; */\n    width: 400px;\n    display: inline-block;\n    overflow: hidden; \n    text-overflow: ellipsis;\n    white-space: nowrap;\n    line-height: 40px;\n}\n\n.item-info {\n    position: relative;\n    /* left: 400px; */\n    width: 200px;\n    display: inline-block;\n    overflow: hidden; \n    text-overflow: ellipsis;\n    white-space: nowrap;\n    line-height: 40px;\n}\n\n.item-check {\n    float: right;\n    margin-right: 20px;\n    line-height: 32px;\n    /* display: inline-block; */\n}\n\n.item-waiting {\n    /* -moz-transition: height .5s;\n    -ms-transition: height .5s;\n    -o-transition: height .5s;\n    -webkit-transition: height .5s;\n    transition: height .5s; */\n    display:inline-block;\n    height: 40;\n    vertical-align: middle;\n    /* width: 80%; */\n    overflow: hidden;\n}\n   \n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZ3VpLWhlbHBlcnMvdHJlZXRhYmxlL3RyZWV0YWJsZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksY0FBYztBQUNsQjs7QUFFQTtJQUNJLFdBQVc7SUFDWCxZQUFZO0FBQ2hCOztBQUNBO0lBQ0ksaUNBQWlDO0FBQ3JDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixxQkFBcUI7SUFDckIsZ0JBQWdCO0lBQ2hCLHVCQUF1QjtJQUN2QixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxxQkFBcUI7SUFDckIseUJBQXlCO0lBQ3pCLHVCQUF1QjtJQUN2QiwyQkFBMkI7SUFDM0IsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLGlCQUFpQjtJQUNqQixZQUFZO0lBQ1oscUJBQXFCO0lBQ3JCLGdCQUFnQjtJQUNoQix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixpQkFBaUI7SUFDakIsWUFBWTtJQUNaLHFCQUFxQjtJQUNyQixnQkFBZ0I7SUFDaEIsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLGlCQUFpQjtJQUNqQiwyQkFBMkI7QUFDL0I7O0FBRUE7SUFDSTs7Ozs2QkFJeUI7SUFDekIsb0JBQW9CO0lBQ3BCLFVBQVU7SUFDVixzQkFBc0I7SUFDdEIsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL2d1aS1oZWxwZXJzL3RyZWV0YWJsZS90cmVldGFibGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xuICAgIG92ZXJmbG93OiBhdXRvO1xufVxuXG4uaXRlbSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiA0MHB4O1xufVxuLml0ZW06aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwwLDAsMC4xKTtcbn1cblxuLml0ZW0tdGV4dCB7XG4gICAgd2lkdGg6IDUwMHB4O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjsgXG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbn1cblxuLml0ZW0tdGV4dCBkaXYge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBvdmVyZmxvdy13cmFwOiBicmVhay13b3JkO1xuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICAgIC8qIHdvcmQtd3JhcDogYnJlYWstd29yZDsgKi9cbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xufVxuXG4uaXRlbS1wcm9wZXJ0eSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIC8qIGxlZnQ6IDQwMHB4OyAqL1xuICAgIHdpZHRoOiA0MDBweDtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjsgXG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICBsaW5lLWhlaWdodDogNDBweDtcbn1cblxuLml0ZW0taW5mbyB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIC8qIGxlZnQ6IDQwMHB4OyAqL1xuICAgIHdpZHRoOiAyMDBweDtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjsgXG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICBsaW5lLWhlaWdodDogNDBweDtcbn1cblxuLml0ZW0tY2hlY2sge1xuICAgIGZsb2F0OiByaWdodDtcbiAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XG4gICAgbGluZS1oZWlnaHQ6IDMycHg7XG4gICAgLyogZGlzcGxheTogaW5saW5lLWJsb2NrOyAqL1xufVxuXG4uaXRlbS13YWl0aW5nIHtcbiAgICAvKiAtbW96LXRyYW5zaXRpb246IGhlaWdodCAuNXM7XG4gICAgLW1zLXRyYW5zaXRpb246IGhlaWdodCAuNXM7XG4gICAgLW8tdHJhbnNpdGlvbjogaGVpZ2h0IC41cztcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IGhlaWdodCAuNXM7XG4gICAgdHJhbnNpdGlvbjogaGVpZ2h0IC41czsgKi9cbiAgICBkaXNwbGF5OmlubGluZS1ibG9jaztcbiAgICBoZWlnaHQ6IDQwO1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgLyogd2lkdGg6IDgwJTsgKi9cbiAgICBvdmVyZmxvdzogaGlkZGVuO1xufVxuICAgIl19 */"

            /***/
}),

/***/ "./app/gui-helpers/treetable/treetable.component.html":
/*!************************************************************!*\
  !*** ./app/gui-helpers/treetable/treetable.component.html ***!
  \************************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div #treetable class=\"container\" [style.height]=\"containerProperty.height\" [style.width]=\"containerProperty.width\">\n\t<div *lazyFor=\"let node of list; index as i\" class=\"item\">\n\t\t<div *ngIf=\"node.visible\" [ngSwitch]=\"treeType\">\n\t\t\t<div *ngSwitchCase=\"TypeOfTree.Standard\">\n\t\t\t\t<div class=\"item-text\" [style.left.px]=\"node.childPos * 15\" [style.width.px]=\"500 - node.childPos * 15\">\n\t\t\t\t\t<button mat-icon-button (click)=\"onExpandToggle(node)\" [disabled]=\"!node.childs\">\n\t\t\t\t\t\t<mat-icon *ngIf=\"node.expanded\">expand_more</mat-icon>\n\t\t\t\t\t\t<mat-icon *ngIf=\"!node.expanded\">chevron_right</mat-icon>\n\t\t\t\t\t</button>\n\t\t\t\t\t<div *ngIf=\"!node.childs.length\" class=\"item-waiting\" style=\"width:40px\" [ngStyle]=\"{'display': (node.expanded) ? 'inline-block' : 'none'}\">\n\t\t\t\t\t\t<mat-spinner diameter=\"20\"></mat-spinner>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button mat-icon-button enabled=\"false\" *ngIf=\"node.class === nodeType.Variable\">\n\t\t\t\t\t\t<mat-icon>label</mat-icon>\n\t\t\t\t\t</button>\n\t\t\t\t\t{{node.text}}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"item-property\" [style.left.px]=\"node.childPos * 15\">\n\t\t\t\t\t{{node.property}}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"item-check\">\n\t\t\t\t\t<mat-checkbox [(ngModel)]=\"node.checked\" *ngIf=\"node.class == nodeType.Variable\" [disabled]=\"!node.enabled\" (change)=\"changeStatus(node,$event)\"></mat-checkbox>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div *ngSwitchCase=\"TypeOfTree.ToDefine\">\n\t\t\t\t<div class=\"item-text\" [style.left.px]=\"node.childPos * 15\" [style.width.px]=\"600 - node.childPos * 15\">\n\t\t\t\t\t<button mat-icon-button (click)=\"onExpandToggle(node)\" *ngIf=\"node.expandable\">\n\t\t\t\t\t\t<mat-icon *ngIf=\"node.expanded\">expand_more</mat-icon>\n\t\t\t\t\t\t<mat-icon *ngIf=\"!node.expanded\">chevron_right</mat-icon>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button mat-icon-button *ngIf=\"node.class === nodeType.Variable || node.class === nodeType.Item\">\n\t\t\t\t\t\t<mat-icon>label</mat-icon>\n\t\t\t\t\t</button>\n\t\t\t\t\t{{node.text}}\n\t\t\t\t\t<div *ngIf=\"node.class === nodeType.Array\">\n\t\t\t\t\t\t<span style=\"margin-left: 15px;margin-right: 5px;\">{{'device.tag-array-id' | translate}}</span>\n\t\t\t\t\t\t<mat-select [(value)]=\"node.todefine.id\" style=\"width: 120px\">\n\t\t\t\t\t\t\t<mat-option *ngFor=\"let key of node.todefine.options\" [value]=\"key\">\n\t\t\t\t\t\t\t\t{{ key }}\n\t\t\t\t\t\t\t</mat-option>\n\t\t\t\t\t\t</mat-select>\n\t\t\t\t\t\t<span style=\"margin-left: 15px;margin-right: 5px;\">{{'device.tag-array-value' | translate}}</span>\n\t\t\t\t\t\t<mat-select [(value)]=\"node.todefine.value\" style=\"width: 120px\">\n\t\t\t\t\t\t\t<mat-option *ngFor=\"let key of node.todefine.options\" [value]=\"key\">\n\t\t\t\t\t\t\t\t{{ key }}\n\t\t\t\t\t\t\t</mat-option>\n\t\t\t\t\t\t</mat-select>\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"item-info\" [style.left.px]=\"node.childPos * 15\">\n\t\t\t\t\t{{node.property}}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"item-check\">\n\t\t\t\t\t&nbsp;\n\t\t\t\t\t<mat-checkbox [(ngModel)]=\"node.checked\" *ngIf=\"node.text && (node.class == nodeType.Variable)\"\n\t\t\t\t\t\t[disabled]=\"!node.enabled\" (change)=\"changeStatus(node,$event)\"></mat-checkbox>\n\t\t\t\t</div>\n\t\t\t</div>\t\t\t\n\t\t</div>\n\t</div>\n</div>"

            /***/
}),

/***/ "./app/gui-helpers/treetable/treetable.component.ts":
/*!**********************************************************!*\
  !*** ./app/gui-helpers/treetable/treetable.component.ts ***!
  \**********************************************************/
/*! exports provided: TreetableComponent, Node, NodeType, TreeType */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TreetableComponent", function () { return TreetableComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Node", function () { return Node; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NodeType", function () { return NodeType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TreeType", function () { return TreeType; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };

            var TreetableComponent = /** @class */ (function () {
                function TreetableComponent() {
                    this.expand = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
                    this.TypeOfTree = TreeType;
                    this.treeType = TreeType.Standard;
                    this.nodeType = NodeType;
                    this.nodes = {};
                    this.list = [];
                    this.containerProperty = { width: '100%', height: '100%' };
                }
                TreetableComponent.prototype.ngOnInit = function () {
                    if (this.config) {
                        if (this.config.width) {
                            this.containerProperty.width = this.config.width;
                        }
                        if (this.config.height) {
                            this.containerProperty.height = this.config.height;
                        }
                        if (this.config.type === TreeType.ToDefine) {
                            this.treeType = TreeType.ToDefine;
                        }
                    }
                };
                TreetableComponent.prototype.onExpandToggle = function (node, event) {
                    var _this = this;
                    var currentPosition = this.treetable.nativeElement.scrollTop;
                    node.expanded = (node.expanded) ? false : true;
                    if (node.expanded) {
                        if (!node.childs.length) {
                            this.expand.emit(node);
                        }
                        this.hideNode(node, true);
                    }
                    else {
                        this.hideNode(node, false);
                    }
                    this.list = this.nodeToItems((this.treeType === TreeType.ToDefine) ? false : true);
                    setTimeout(function () { _this.treetable.nativeElement.scrollTop = currentPosition; }, 1);
                };
                TreetableComponent.prototype.hideNode = function (node, visible) {
                    var _this = this;
                    Object.values(node.childs).forEach(function (n) {
                        n.visible = visible;
                        _this.hideNode(n, (visible) ? n.expanded : visible);
                    });
                };
                TreetableComponent.prototype.addNode = function (node, parent, enabled) {
                    if (parent) {
                        var refp = this.nodes[parent.id];
                        node.setParent(refp);
                        if (node.parent) {
                            node.parent.waiting = false;
                        }
                        node.enabled = enabled;
                        if (!enabled) {
                            node.checked = true;
                        }
                    }
                    if (Object.keys(this.nodes).indexOf(node.id) < 0) {
                        this.nodes[node.id] = node;
                    }
                };
                TreetableComponent.prototype.update = function (sort) {
                    if (sort === void 0) { sort = true; }
                    this.list = this.nodeToItems(sort);
                };
                TreetableComponent.prototype.setNodeProperty = function (node, pro) {
                    if (this.nodes[node.id]) {
                        this.nodes[node.id].property = pro;
                        this.nodes[node.id].type = node.type;
                    }
                };
                TreetableComponent.prototype.nodeToItems = function (sort) {
                    if (sort === void 0) { sort = true; }
                    if (this.nodes && Object.values(this.nodes).length) {
                        var result_1 = [];
                        Object.values(this.nodes).forEach(function (value) {
                            if (value.visible) {
                                result_1.push(value);
                            }
                        });
                        if (sort) {
                            return result_1.sort(function (a, b) { return (a.path > b.path) ? 1 : -1; });
                        }
                        else {
                            return result_1;
                        }
                    }
                    else {
                        return [];
                    }
                };
                TreetableComponent.prototype.changeStatus = function (node, $event) {
                };
                TreetableComponent.prototype.expandable = function (type) {
                    if (type === NodeType.Object) {
                        return true;
                    }
                    else {
                        return false;
                    }
                };
                TreetableComponent.prototype.getDefinedKey = function (todefine) {
                    return '';
                };
                TreetableComponent.prototype.getToDefineOptions = function (todefine) {
                    return Object.keys(todefine.options);
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", Object)
                ], TreetableComponent.prototype, "config", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
                    __metadata("design:type", Object)
                ], TreetableComponent.prototype, "expand", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('treetable'),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"])
                ], TreetableComponent.prototype, "treetable", void 0);
                TreetableComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'ngx-treetable',
                        template: __webpack_require__(/*! ./treetable.component.html */ "./app/gui-helpers/treetable/treetable.component.html"),
                        styles: [__webpack_require__(/*! ./treetable.component.css */ "./app/gui-helpers/treetable/treetable.component.css")]
                    }),
                    __metadata("design:paramtypes", [])
                ], TreetableComponent);
                return TreetableComponent;
            }());

            var Node = /** @class */ (function () {
                function Node(id, text) {
                    this.id = '';
                    this.path = '';
                    this.text = '';
                    this.childPos = 0;
                    this.expandable = true;
                    this.expanded = false;
                    this.visible = true;
                    this.parent = null;
                    this.property = '';
                    this.type = ''; // boolean, int ...
                    this.checked = false;
                    this.childs = [];
                    this.waiting = true;
                    this.enabled = true;
                    this.todefine = null;
                    this.id = id;
                    this.text = text;
                    this.path = this.text;
                }
                Node.prototype.setParent = function (parent) {
                    if (parent) {
                        this.parent = parent;
                        this.path = parent.path + Node.SEPARATOR + this.text;
                        this.childPos = parent.childPos + 1;
                        this.parent.childs.push(this);
                    }
                };
                Node.prototype.setToDefine = function () {
                    this.todefine = { options: [''], id: '', value: '' };
                };
                Node.prototype.addToDefine = function (opt) {
                    if (this.todefine && this.todefine.options.indexOf(opt) === -1) {
                        this.todefine.options.push(opt);
                    }
                };
                Node.strToType = function (str) {
                    if (NodeType[str]) {
                        return NodeType[str];
                    }
                    return str;
                };
                Node.SEPARATOR = '>';
                return Node;
            }());

            var NodeType;
            (function (NodeType) {
                NodeType[NodeType["Unspecified"] = 0] = "Unspecified";
                NodeType[NodeType["Object"] = 1] = "Object";
                NodeType[NodeType["Variable"] = 2] = "Variable";
                NodeType[NodeType["Methode"] = 4] = "Methode";
                NodeType[NodeType["ObjectType"] = 8] = "ObjectType";
                NodeType[NodeType["VariableType"] = 16] = "VariableType";
                NodeType[NodeType["ReferenceType"] = 32] = "ReferenceType";
                NodeType[NodeType["DataType"] = 64] = "DataType";
                NodeType[NodeType["View"] = 128] = "View";
                NodeType[NodeType["Array"] = 256] = "Array";
                NodeType[NodeType["Item"] = 512] = "Item";
                NodeType[NodeType["Reference"] = 1024] = "Reference"; // JSON
            })(NodeType || (NodeType = {}));
            var TreeType;
            (function (TreeType) {
                TreeType["Standard"] = "standard";
                TreeType["ToDefine"] = "todefine"; // property to define (key and value)
            })(TreeType || (TreeType = {}));


            /***/
}),

/***/ "./app/header/header.component.css":
/*!*****************************************!*\
  !*** ./app/header/header.component.css ***!
  \*****************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "\n.header-panel {\n    z-index: 99 !important;\n    position: fixed;\n    top: 0px;\n    left: 0px;\n    background-color: var(--headerBackground);\n    color: var(--headerColor);\n    height: 36px;\n    width: 200px;\n}\n\n.header-right {\n    z-index: 99 !important;\n    position: fixed;\n    top: 0px;\n    right: 0px;\n    background-color: var(--headerBackground);\n    color: var(--headerColor);\n    height: 36px;\n    width: 120px;\n}\n\n.header-help {\n    float: right;\n    height: 36px;\n    width: 36px;\n    margin-right: 20px;\n}\n\n.header-theme {\n    float: right;\n    height: 36px;\n    width: 36px;\n    margin-right: 5px;\n}\n\n.main-btn {\n    height: 34px;\n    width: 34px;\n    min-width: unset !important;\n    padding:unset !important;\n    line-height: 34px;\n    margin-left: 5px;\n    margin-right: 5px;\n  }\n\n.main-btn mat-icon {\n    font-size: 24px;\n    height: unset;\n    width: unset;\n  }\n\n.header-menu {\n    box-shadow: 0 2px 2px 0 rgba(0,0,0,0.14), 0 3px 1px -2px rgba(0,0,0,0.12), 0 1px 5px 0 rgba(0,0,0,0.2); \n}\n\n.header-icon {\n    padding: 0 14px;\n}\n\n.menu-separator {\n    border-top-color: rgba(0,0,0,0.2);\n}\n\n::ng-deep .mat-menu-item {\n    font-size: 11px;\n    height: 30px !important;\n    line-height: unset !important;\n  }\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtJQUNJLHNCQUFzQjtJQUN0QixlQUFlO0lBQ2YsUUFBUTtJQUNSLFNBQVM7SUFDVCx5Q0FBeUM7SUFDekMseUJBQXlCO0lBQ3pCLFlBQVk7SUFDWixZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksc0JBQXNCO0lBQ3RCLGVBQWU7SUFDZixRQUFRO0lBQ1IsVUFBVTtJQUNWLHlDQUF5QztJQUN6Qyx5QkFBeUI7SUFDekIsWUFBWTtJQUNaLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osWUFBWTtJQUNaLFdBQVc7SUFDWCxrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osWUFBWTtJQUNaLFdBQVc7SUFDWCxpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osV0FBVztJQUNYLDJCQUEyQjtJQUMzQix3QkFBd0I7SUFDeEIsaUJBQWlCO0lBQ2pCLGdCQUFnQjtJQUNoQixpQkFBaUI7RUFDbkI7O0FBRUE7SUFDRSxlQUFlO0lBQ2YsYUFBYTtJQUNiLFlBQVk7RUFDZDs7QUFFRjtJQUNJLHNHQUFzRztBQUMxRzs7QUFFQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxpQ0FBaUM7QUFDckM7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsdUJBQXVCO0lBQ3ZCLDZCQUE2QjtFQUMvQiIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLmhlYWRlci1wYW5lbCB7XG4gICAgei1pbmRleDogOTkgIWltcG9ydGFudDtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgdG9wOiAwcHg7XG4gICAgbGVmdDogMHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWhlYWRlckJhY2tncm91bmQpO1xuICAgIGNvbG9yOiB2YXIoLS1oZWFkZXJDb2xvcik7XG4gICAgaGVpZ2h0OiAzNnB4O1xuICAgIHdpZHRoOiAyMDBweDtcbn1cblxuLmhlYWRlci1yaWdodCB7XG4gICAgei1pbmRleDogOTkgIWltcG9ydGFudDtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgdG9wOiAwcHg7XG4gICAgcmlnaHQ6IDBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1oZWFkZXJCYWNrZ3JvdW5kKTtcbiAgICBjb2xvcjogdmFyKC0taGVhZGVyQ29sb3IpO1xuICAgIGhlaWdodDogMzZweDtcbiAgICB3aWR0aDogMTIwcHg7XG59XG5cbi5oZWFkZXItaGVscCB7XG4gICAgZmxvYXQ6IHJpZ2h0O1xuICAgIGhlaWdodDogMzZweDtcbiAgICB3aWR0aDogMzZweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XG59XG5cbi5oZWFkZXItdGhlbWUge1xuICAgIGZsb2F0OiByaWdodDtcbiAgICBoZWlnaHQ6IDM2cHg7XG4gICAgd2lkdGg6IDM2cHg7XG4gICAgbWFyZ2luLXJpZ2h0OiA1cHg7XG59XG5cbi5tYWluLWJ0biB7XG4gICAgaGVpZ2h0OiAzNHB4O1xuICAgIHdpZHRoOiAzNHB4O1xuICAgIG1pbi13aWR0aDogdW5zZXQgIWltcG9ydGFudDtcbiAgICBwYWRkaW5nOnVuc2V0ICFpbXBvcnRhbnQ7XG4gICAgbGluZS1oZWlnaHQ6IDM0cHg7XG4gICAgbWFyZ2luLWxlZnQ6IDVweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDVweDtcbiAgfVxuICBcbiAgLm1haW4tYnRuIG1hdC1pY29uIHtcbiAgICBmb250LXNpemU6IDI0cHg7XG4gICAgaGVpZ2h0OiB1bnNldDtcbiAgICB3aWR0aDogdW5zZXQ7XG4gIH1cblxuLmhlYWRlci1tZW51IHtcbiAgICBib3gtc2hhZG93OiAwIDJweCAycHggMCByZ2JhKDAsMCwwLDAuMTQpLCAwIDNweCAxcHggLTJweCByZ2JhKDAsMCwwLDAuMTIpLCAwIDFweCA1cHggMCByZ2JhKDAsMCwwLDAuMik7IFxufVxuXG4uaGVhZGVyLWljb24ge1xuICAgIHBhZGRpbmc6IDAgMTRweDtcbn1cblxuLm1lbnUtc2VwYXJhdG9yIHtcbiAgICBib3JkZXItdG9wLWNvbG9yOiByZ2JhKDAsMCwwLDAuMik7XG59XG5cbjo6bmctZGVlcCAubWF0LW1lbnUtaXRlbSB7XG4gICAgZm9udC1zaXplOiAxMXB4O1xuICAgIGhlaWdodDogMzBweCAhaW1wb3J0YW50O1xuICAgIGxpbmUtaGVpZ2h0OiB1bnNldCAhaW1wb3J0YW50O1xuICB9Il19 */"

            /***/
}),

/***/ "./app/header/header.component.html":
/*!******************************************!*\
  !*** ./app/header/header.component.html ***!
  \******************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div class=\"header-panel\" *ngIf=\"ineditor\">\n    <button mat-button title=\"{{'header.save-project' | translate}}\" [matMenuTriggerFor]=\"prjview\" #prjviewtrigger=\"matMenuTrigger\" class=\"main-btn\">\n        <mat-icon aria-label=\"Save Project\">save</mat-icon>\n    </button>\n    <mat-menu #prjview=\"matMenu\" class=\"leftbar-item-menu header-menu\" yPosition=\"below\" [overlapTrigger]=\"false\">\n        <button mat-menu-item (click)=\"onNewProject()\">{{'header.new-project' | translate}}</button>\n        <mat-divider class=\"menu-separator\"></mat-divider>\n        <button mat-menu-item (click)=\"onSaveProject()\">{{'header.save-project' | translate}}</button>\n        <button mat-menu-item (click)=\"onSaveProjectAs()\">{{'header.saveas-project' | translate}}</button>\n        <mat-divider class=\"menu-separator\"></mat-divider>\n        <button mat-menu-item (click)=\"onOpenProject();$event.stopPropagation()\">{{'header.open-project' | translate}}</button>\n        <!-- <button mat-menu-item (click)=\"onImportVariable();$event.stopPropagation()\">Import Variable</button> -->\n        <input type=\"file\" #fileImportInput style=\"display: none\" id=\"projectFileUpload\" (change)=\"onFileChangeListener($event)\" accept=\".fuxap,.json\" />\n    </mat-menu>\n    <button mat-button title=\"{{'header.edit-project' | translate}}\" class=\"main-btn\" (click)=\"onSetup()\">\n        <mat-icon aria-label=\"Edit Views\">settings</mat-icon>\n    </button>\n\n</div>\n\n<div class=\"header-right\">\n    <div class=\"header-help\" *ngIf=\"ineditor\">\n        <button mat-button title=\"{{'header.help' | translate}}\" [matMenuTriggerFor]=\"helpmenu\" class=\"main-btn\">\n            <mat-icon aria-label=\"HELP\">help_outline</mat-icon>\n        </button>\n        <mat-menu #helpmenu=\"matMenu\" class=\"leftbar-item-menu header-menu\" yPosition=\"below\" [overlapTrigger]=\"false\">\n            <button mat-menu-item (click)=\"onShowHelp('help')\">{{'header.help-tutorial' | translate}}</button>\n            <mat-divider class=\"menu-separator\"></mat-divider>\n            <button mat-menu-item (click)=\"onShowHelp('info')\">{{'header.help-info' | translate}}</button>\n        </mat-menu>\n    </div>\n    <div class=\"header-theme\" *ngIf=\"ineditor\">\n        <button mat-button title=\"{{'header.theme' | translate}}\" class=\"main-btn\" (click)=\"onChangeTheme()\">\n            <mat-icon>invert_colors</mat-icon>\n        </button>\n    </div>\n</div>\n<app-tutorial #tutorial></app-tutorial>\n"

            /***/
}),

/***/ "./app/header/header.component.ts":
/*!****************************************!*\
  !*** ./app/header/header.component.ts ***!
  \****************************************/
/*! exports provided: HeaderComponent, DialogInfo */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HeaderComponent", function () { return HeaderComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DialogInfo", function () { return DialogInfo; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "../node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "../node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../environments/environment */ "./environments/environment.ts");
/* harmony import */ var _editor_setup_setup_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../editor/setup/setup.component */ "./app/editor/setup/setup.component.ts");
/* harmony import */ var _services_project_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../_services/project.service */ "./app/_services/project.service.ts");
/* harmony import */ var _services_theme_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../_services/theme.service */ "./app/_services/theme.service.ts");
/* harmony import */ var _models_hmi__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../_models/hmi */ "./app/_models/hmi.ts");
/* harmony import */ var _help_tutorial_tutorial_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../help/tutorial/tutorial.component */ "./app/help/tutorial/tutorial.component.ts");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ngx-translate/core */ "../node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };
            var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
                return function (target, key) { decorator(target, key, paramIndex); }
            };










            var HeaderComponent = /** @class */ (function () {
                function HeaderComponent(router, dialog, translateService, themeService, projectService) {
                    var _this = this;
                    this.router = router;
                    this.dialog = dialog;
                    this.translateService = translateService;
                    this.themeService = themeService;
                    this.projectService = projectService;
                    this.darkTheme = true;
                    this.ineditor = false;
                    this.savededitor = false;
                    this.router.events.subscribe(function () {
                        _this.ineditor = (_this.router.url.indexOf('editor') >= 0 || _this.router.url.indexOf('device') >= 0 ||
                            _this.router.url.indexOf('users') >= 0 || _this.router.url.indexOf('text') >= 0 || _this.router.url.indexOf('messages') >= 0) ? true : false;
                        _this.savededitor = (_this.router.url.indexOf('device') >= 0 || _this.router.url.indexOf('users') >= 0 ||
                            _this.router.url.indexOf('text') >= 0 || _this.router.url.indexOf('messages') >= 0) ? true : false;
                    });
                    this.themeService.setTheme(this.projectService.getLayoutTheme());
                }
                HeaderComponent.prototype.ngOnInit = function () {
                };
                HeaderComponent.prototype.ngAfterViewInit = function () {
                    var _this = this;
                    this.subscriptionLoad = this.projectService.onLoadHmi.subscribe(function (load) {
                        var theme = _this.projectService.getLayoutTheme();
                        _this.darkTheme = (theme !== _services_theme_service__WEBPACK_IMPORTED_MODULE_6__["ThemeService"].ThemeType.Default);
                        _this.themeService.setTheme(_this.projectService.getLayoutTheme());
                    }, function (error) {
                        console.error('Error loadHMI');
                    });
                };
                HeaderComponent.prototype.ngOnDestroy = function () {
                    try {
                        if (this.subscriptionShowHelp) {
                            this.subscriptionShowHelp.unsubscribe();
                        }
                        if (this.subscriptionLoad) {
                            this.subscriptionLoad.unsubscribe();
                        }
                    }
                    catch (e) {
                    }
                };
                HeaderComponent.prototype.onClick = function (targetElement) {
                    this.sidenav.close();
                };
                HeaderComponent.prototype.onShowHelp = function (page) {
                    var data = new _models_hmi__WEBPACK_IMPORTED_MODULE_7__["HelpData"]();
                    data.page = page;
                    data.tag = 'device';
                    this.showHelp(data);
                };
                HeaderComponent.prototype.onSetup = function () {
                    this.projectService.saveProject(_services_project_service__WEBPACK_IMPORTED_MODULE_5__["SaveMode"].Current);
                    var dialogRef = this.dialog.open(_editor_setup_setup_component__WEBPACK_IMPORTED_MODULE_4__["SetupComponent"], {
                        position: { top: '60px' },
                    });
                };
                HeaderComponent.prototype.showHelp = function (data) {
                    if (data.page === 'help') {
                        this.tutorial.show = true;
                    }
                    else if (data.page === 'info') {
                        this.showInfo();
                    }
                };
                HeaderComponent.prototype.showInfo = function () {
                    var dialogRef = this.dialog.open(DialogInfo, {
                        data: { name: 'Info', version: _environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].version }
                    });
                    dialogRef.afterClosed().subscribe(function (result) {
                    });
                };
                HeaderComponent.prototype.goTo = function (destination) {
                    this.router.navigate([destination]); //, this.ID]);
                };
                HeaderComponent.prototype.onChangeTheme = function () {
                    this.darkTheme = !this.darkTheme;
                    var theme = _services_theme_service__WEBPACK_IMPORTED_MODULE_6__["ThemeService"].ThemeType.Default;
                    if (this.darkTheme) {
                        theme = _services_theme_service__WEBPACK_IMPORTED_MODULE_6__["ThemeService"].ThemeType.Dark;
                    }
                    this.themeService.setTheme(theme);
                    this.projectService.setLayoutTheme(theme);
                };
                //#region Project Events
                HeaderComponent.prototype.onNewProject = function () {
                    try {
                        var msg_1 = '';
                        this.translateService.get('msg.project-save-ask').subscribe(function (txt) { msg_1 = txt; });
                        if (window.confirm(msg_1)) {
                            // this.projectService.saveProject(SaveMode.Save);
                            this.projectService.setNewProject();
                        }
                    }
                    catch (e) {
                    }
                };
                /**
                 * Aave Project as JSON file and Download in Browser
                 */
                HeaderComponent.prototype.onSaveProjectAs = function () {
                    try {
                        if (this.savededitor) {
                            this.projectService.saveAs();
                        }
                        else {
                            this.projectService.saveProject(_services_project_service__WEBPACK_IMPORTED_MODULE_5__["SaveMode"].SaveAs);
                        }
                    }
                    catch (e) {
                    }
                };
                HeaderComponent.prototype.onOpenProject = function () {
                    var ele = document.getElementById('projectFileUpload');
                    ele.click();
                };
                /**
                 * open Project event file loaded
                 * @param event file resource
                 */
                HeaderComponent.prototype.onFileChangeListener = function (event) {
                    var _this = this;
                    var text = [];
                    var files = event.srcElement.files;
                    var input = event.target;
                    var reader = new FileReader();
                    reader.onload = function (data) {
                        var prj = JSON.parse(reader.result.toString());
                        _this.projectService.setProject(prj, true);
                    };
                    reader.onerror = function () {
                        var msg = 'Unable to read ' + input.files[0];
                        // this.translateService.get('msg.project-load-error', {value: input.files[0]}).subscribe((txt: string) => { msg = txt });
                        alert(msg);
                    };
                    reader.readAsText(input.files[0]);
                    this.fileImportInput.nativeElement.value = null;
                };
                /**
                 * save Project and Download in Browser
                 */
                HeaderComponent.prototype.onSaveProject = function () {
                    try {
                        this.projectService.saveProject(_services_project_service__WEBPACK_IMPORTED_MODULE_5__["SaveMode"].Save);
                    }
                    catch (e) {
                    }
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('sidenav'),
                    __metadata("design:type", Object)
                ], HeaderComponent.prototype, "sidenav", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('tutorial'),
                    __metadata("design:type", _help_tutorial_tutorial_component__WEBPACK_IMPORTED_MODULE_8__["TutorialComponent"])
                ], HeaderComponent.prototype, "tutorial", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('fileImportInput'),
                    __metadata("design:type", Object)
                ], HeaderComponent.prototype, "fileImportInput", void 0);
                HeaderComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'app-header',
                        template: __webpack_require__(/*! ./header.component.html */ "./app/header/header.component.html"),
                        styles: [__webpack_require__(/*! ./header.component.css */ "./app/header/header.component.css")]
                    }),
                    __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"],
                    _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialog"],
                    _ngx_translate_core__WEBPACK_IMPORTED_MODULE_9__["TranslateService"],
                    _services_theme_service__WEBPACK_IMPORTED_MODULE_6__["ThemeService"],
                    _services_project_service__WEBPACK_IMPORTED_MODULE_5__["ProjectService"]])
                ], HeaderComponent);
                return HeaderComponent;
            }());

            var DialogInfo = /** @class */ (function () {
                function DialogInfo(dialogRef, data) {
                    this.dialogRef = dialogRef;
                    this.data = data;
                }
                DialogInfo.prototype.onNoClick = function () {
                    this.dialogRef.close();
                };
                DialogInfo = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'dialog-info',
                        template: __webpack_require__(/*! ./info.dialog.html */ "./app/header/info.dialog.html"),
                    }),
                    __param(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
                    __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"], Object])
                ], DialogInfo);
                return DialogInfo;
            }());



            /***/
}),

/***/ "./app/header/info.dialog.html":
/*!*************************************!*\
  !*** ./app/header/info.dialog.html ***!
  \*************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div style=\"width:280px\">\n    <div mat-dialog-title style=\"display:inline-block\">\n        <div class=\"logo\" style=\"display: inline-block\"></div>\n        <div style=\"font-size: 18px;display: inline-block;vertical-align: super;padding-left: 5px;\">{{'dlg.info-title' | translate}}</div>\n    </div>\n    <div mat-dialog-content style=\"margin-bottom: 10px;\">\n        <div style=\"display: block\">\n            {{'header.info-version' | translate}} {{data.version}}\n        </div>\n        <div style=\"display: block; font-size: 13px;margin-top: 10px;\">\n            powered by <span><b>frango</b>team</span>\n        </div>\n    </div>\n    <div mat-dialog-actions class=\"dialog-action\">\n        <button mat-raised-button [mat-dialog-close]=\"data\">{{'dlg.ok' | translate}}</button>\n    </div>\n</div>"

            /***/
}),

/***/ "./app/help/tutorial/tutorial.component.css":
/*!**************************************************!*\
  !*** ./app/help/tutorial/tutorial.component.css ***!
  \**************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ".tutorial-panel {\n    width: 460px;\n    height: 720px;\n    z-index: 99999 !important;\n    position: absolute;\n    right: 10px;\n    top: 50px;\n    background-color: rgb(240, 240, 240);\n    /* background-color: rgb(250,250,250); */\n    box-shadow: 0 2px 6px 0 rgba(0, 0, 0, 0.2),\n        0 2px 6px 0 rgba(0, 0, 0, 0.188235); /*1px 2px 5px 1px rgba(0,0,0,.26);*/\n    border: 0px !important;\n}\n\n.tutorial-header {\n    height: 36px;\n    background-color: #212121;\n    color: #ffffff;\n    padding-left: 5px;\n    cursor: move;\n    line-height: 30px;\n}\n\n.tutorial-title {\n    padding: 5px 10px 5px 20px;\n    font-size: 16px;\n}\n\n.tutorial-close {\n    font-size: 28px;\n    /* float: right; */\n    cursor: pointer;\n    /* padding-right: 5px; */\n    right: 5px;\n    position: absolute;\n    top: 0px;\n}\n\n.my-expansion-panel {\n    margin: 0px;\n}\n\n.header mat-panel-title {\n    font-size: 20px;\n    font-weight: 100;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaGVscC90dXRvcmlhbC90dXRvcmlhbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLGFBQWE7SUFDYix5QkFBeUI7SUFDekIsa0JBQWtCO0lBQ2xCLFdBQVc7SUFDWCxTQUFTO0lBQ1Qsb0NBQW9DO0lBQ3BDLHdDQUF3QztJQUN4QzsyQ0FDdUMsRUFBRSxtQ0FBbUM7SUFDNUUsc0JBQXNCO0FBQzFCOztBQUVBO0lBQ0ksWUFBWTtJQUNaLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsaUJBQWlCO0lBQ2pCLFlBQVk7SUFDWixpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGVBQWU7SUFDZixrQkFBa0I7SUFDbEIsZUFBZTtJQUNmLHdCQUF3QjtJQUN4QixVQUFVO0lBQ1Ysa0JBQWtCO0lBQ2xCLFFBQVE7QUFDWjs7QUFFQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLGVBQWU7SUFDZixnQkFBZ0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9oZWxwL3R1dG9yaWFsL3R1dG9yaWFsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudHV0b3JpYWwtcGFuZWwge1xuICAgIHdpZHRoOiA0NjBweDtcbiAgICBoZWlnaHQ6IDcyMHB4O1xuICAgIHotaW5kZXg6IDk5OTk5ICFpbXBvcnRhbnQ7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAxMHB4O1xuICAgIHRvcDogNTBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjQwLCAyNDAsIDI0MCk7XG4gICAgLyogYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1MCwyNTAsMjUwKTsgKi9cbiAgICBib3gtc2hhZG93OiAwIDJweCA2cHggMCByZ2JhKDAsIDAsIDAsIDAuMiksXG4gICAgICAgIDAgMnB4IDZweCAwIHJnYmEoMCwgMCwgMCwgMC4xODgyMzUpOyAvKjFweCAycHggNXB4IDFweCByZ2JhKDAsMCwwLC4yNik7Ki9cbiAgICBib3JkZXI6IDBweCAhaW1wb3J0YW50O1xufVxuXG4udHV0b3JpYWwtaGVhZGVyIHtcbiAgICBoZWlnaHQ6IDM2cHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzIxMjEyMTtcbiAgICBjb2xvcjogI2ZmZmZmZjtcbiAgICBwYWRkaW5nLWxlZnQ6IDVweDtcbiAgICBjdXJzb3I6IG1vdmU7XG4gICAgbGluZS1oZWlnaHQ6IDMwcHg7XG59XG5cbi50dXRvcmlhbC10aXRsZSB7XG4gICAgcGFkZGluZzogNXB4IDEwcHggNXB4IDIwcHg7XG4gICAgZm9udC1zaXplOiAxNnB4O1xufVxuXG4udHV0b3JpYWwtY2xvc2Uge1xuICAgIGZvbnQtc2l6ZTogMjhweDtcbiAgICAvKiBmbG9hdDogcmlnaHQ7ICovXG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIC8qIHBhZGRpbmctcmlnaHQ6IDVweDsgKi9cbiAgICByaWdodDogNXB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDBweDtcbn1cblxuLm15LWV4cGFuc2lvbi1wYW5lbCB7XG4gICAgbWFyZ2luOiAwcHg7XG59XG5cbi5oZWFkZXIgbWF0LXBhbmVsLXRpdGxlIHtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gICAgZm9udC13ZWlnaHQ6IDEwMDtcbn1cbiJdfQ== */"

            /***/
}),

/***/ "./app/help/tutorial/tutorial.component.html":
/*!***************************************************!*\
  !*** ./app/help/tutorial/tutorial.component.html ***!
  \***************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div class=\"tutorial-panel\" *ngIf=\"show\" ngDraggable>\n    <style>\n        pre {\n            white-space: pre-line;\n        }\n    </style>\n    <div class=\"tutorial-header\">\n        <div class=\"tutorial-title\">\n            {{'tutorial.title' | translate}}\n        </div>\n        <div class=\"tutorial-close\" (click)=\"close()\">\n            &times;\n        </div>\n    </div>\n    <div class=\"tutorial-body\">\n        <mat-accordion multi=\"true\">\n            <mat-expansion-panel class=\"my-expansion-panel\">\n                <mat-expansion-panel-header class=\"header\" [collapsedHeight]=\"'40px'\" [expandedHeight]=\"'40px'\">\n                    <mat-panel-title>\n                        Basic Layout\n                    </mat-panel-title>\n                    <mat-panel-description>\n\n                    </mat-panel-description>\n                </mat-expansion-panel-header>\n                Basic content\n\n            </mat-expansion-panel>\n            <mat-expansion-panel class=\"my-expansion-panel\">\n                <mat-expansion-panel-header class=\"header\" [collapsedHeight]=\"'40px'\" [expandedHeight]=\"'40px'\">\n                    <mat-panel-title>\n                        Page editor\n                    </mat-panel-title>\n                    <mat-panel-description>\n\n                    </mat-panel-description>\n                </mat-expansion-panel-header>\n                Page editor content\n            </mat-expansion-panel>\n            <mat-expansion-panel class=\"my-expansion-panel\">\n                <mat-expansion-panel-header class=\"header\" [collapsedHeight]=\"'40px'\" [expandedHeight]=\"'40px'\">\n                    <mat-panel-title>\n                        Device\n                    </mat-panel-title>\n                    <mat-panel-description>\n\n                    </mat-panel-description>\n                </mat-expansion-panel-header>\n                Device content\n            </mat-expansion-panel>\n        </mat-accordion>\n    </div>\n</div>"

            /***/
}),

/***/ "./app/help/tutorial/tutorial.component.ts":
/*!*************************************************!*\
  !*** ./app/help/tutorial/tutorial.component.ts ***!
  \*************************************************/
/*! exports provided: TutorialComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TutorialComponent", function () { return TutorialComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };

            var TutorialComponent = /** @class */ (function () {
                function TutorialComponent() {
                    this.show = false;
                }
                TutorialComponent.prototype.ngOnInit = function () {
                };
                TutorialComponent.prototype.close = function () {
                    this.show = false;
                };
                TutorialComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'app-tutorial',
                        template: __webpack_require__(/*! ./tutorial.component.html */ "./app/help/tutorial/tutorial.component.html"),
                        styles: [__webpack_require__(/*! ./tutorial.component.css */ "./app/help/tutorial/tutorial.component.css")]
                    }),
                    __metadata("design:paramtypes", [])
                ], TutorialComponent);
                return TutorialComponent;
            }());



            /***/
}),

/***/ "./app/home/home.component.html":
/*!**************************************!*\
  !*** ./app/home/home.component.html ***!
  \**************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div *ngIf=\"isLoading\" style=\"position:absolute;top:0px;left:0px;right:0px;bottom:0px;background-color:rgba(0,0,0,0.2); z-index: 99999;\">\n\t<mat-progress-bar mode=\"indeterminate\" color=\"warn\" style=\"position: absolute; top: 0px; left: 0px; right: 0px; z-index: 99999;\">\n\t</mat-progress-bar>\n</div>\n<mat-sidenav-container class=\"sidenav-container\" [hasBackdrop]=\"false\">\n\t<mat-sidenav #matsidenav *ngIf=\"showNavigation && showSidenav\" class=\"sidenav\" [mode]=\"showSidenav\">\n\t\t<app-sidenav #sidenav [sidenav]=\"matsidenav\" (goToPage)=\"onGoToPage($event)\" (goToLink)=\"onGoToLink($event)\"></app-sidenav>\n\t</mat-sidenav>\n\t<mat-sidenav-content [style.background-color]=\"backgroudColor\" (click)=\"checkToCloseSideNav()\">\n\t\t<div *ngIf=\"showNavigation\" class=\"header\" [style.background-color]=\"layoutHeader.bkcolor\" [style.color]=\"layoutHeader.fgcolor\">\n\t\t\t<button mat-icon-button *ngIf=\"showSidenav && showSidenav !== 'side'\" \n\t\t\t\t(click)=\"$event.stopPropagation(); (matsidenav.opened) ? matsidenav.close() : matsidenav.open()\" class=\"sidenav-toogle\">\n\t\t\t\t<mat-icon aria-label=\"Menu\">menu</mat-icon>\n\t\t\t</button>\n\t\t\t<div class=\"header-title\">\n\t\t\t\t{{title}}\n\t\t\t</div>\n\t\t\t<div *ngIf=\"securityEnabled\" class=\"header-login\">\n\t\t\t\t<button mat-icon-button (click)=\"onLogin()\">\n\t\t\t\t\t<mat-icon aria-label=\"Login\" [style.color]=\"isLoggedIn() ? 'rgb(59, 144, 255)' : layoutHeader.fgcolor\">account_circle</mat-icon>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div class=\"header-button\">\n\t\t\t\t<div class=\"alarm-layout\" style=\"min-width: 40px;\">\n\t\t\t\t\t<button mat-icon-button *ngIf=\"alarms.show\" (click)=\"onAlarmsShowMode('collapse')\">\n\t\t\t\t\t\t<mat-icon aria-label=\"Alarms\">notifications_none</mat-icon>\n\t\t\t\t\t\t<div class=\"button-counter alarm-color\" [style.opacity]=\"alarms.count?'':'0'\">{{alarms.count}}</div>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"info-layout\" style=\"min-width: 40px;\">\n\t\t\t\t\t<button mat-icon-button *ngIf=\"infos.show\" (click)=\"onAlarmsShowMode('collapse')\">\n\t\t\t\t\t\t<mat-icon aria-label=\"Info\">error_outline</mat-icon>\n\t\t\t\t\t\t<div class=\"button-counter info-color\" [style.opacity]=\"infos.count?'':'0'\">{{infos.count}}</div>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div id=\"container\"  class=\"home-container\" #container (click)=\"checkToCloseSideNav()\">\n\t\t\t<app-cards-view *ngIf=\"!showHomeLink && homeView.type === cardViewType\" #cardsview [edit]=\"false\" [options]=\"gridOptions\" [view]=\"homeView\" [hmi]=\"hmi\" [gaugesManager]=\"gaugesManager\"></app-cards-view>\n\t\t\t<app-fuxa-view *ngIf=\"!showHomeLink && homeView.type !== cardViewType\" #fuxaview class=\"home-body\" id=\"home\" [view]=\"homeView\" [hmi]=\"hmi\" [gaugesManager]=\"gaugesManager\"></app-fuxa-view>\n\t\t\t<app-iframe *ngIf=\"showHomeLink\" [hidden]=\"isLoading || !showHomeLink\" #iframeview [link]=\"homeLink\" class=\"home-body\" style=\"width:100%; height:100%\"></app-iframe>\n\t\t\t<!-- <div [style.display]=\"(homeView.type === cardViewType || showHomeLink) ? 'none' : 'block' \" class=\"home-body home-info\">\n\t\t\t\t<p>\n\t\t\t\t\t{{'msg.home-welcome' | translate}}.\n\t\t\t\t</p>\n\t\t\t</div> -->\n\t\t\t<div id=\"alarms-panel\">\n\t\t\t\t<app-alarm-view #alarmsview [fullview]=\"false\" (showMode)=\"onAlarmsShowMode($event)\"></app-alarm-view>\n\t\t\t</div>\n\t\t</div>\n\t</mat-sidenav-content>\n\n</mat-sidenav-container>"

            /***/
}),

/***/ "./app/home/home.component.scss":
/*!**************************************!*\
  !*** ./app/home/home.component.scss ***!
  \**************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ".home-body {\n  display: table;\n  margin: 0 auto; }\n\n.home-container {\n  position: absolute;\n  left: 0px;\n  top: 48px;\n  bottom: 0px;\n  right: 0px;\n  overflow: auto; }\n\n.home-info {\n  text-align: center; }\n\n.header {\n  display: block;\n  z-index: 9999 !important;\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.12), 0 1px 5px 0 rgba(0, 0, 0, 0.2) !important;\n  /* min-height: 46px !important; */\n  /* max-height: 46px !important; */\n  height: 46px !important;\n  padding-left: 4px;\n  padding-right: 10px;\n  background-color: white; }\n\n.header-title {\n  display: inline-block;\n  margin-left: 20px;\n  min-width: 200px;\n  text-align: right;\n  line-height: 46px; }\n\n.header-login {\n  float: right;\n  line-height: 46px;\n  border-left-width: 1px;\n  border-left-style: solid;\n  padding-left: 10px; }\n\n.header-button {\n  float: right;\n  width: 30%;\n  line-height: 46px;\n  text-align: right;\n  margin-right: 10px;\n  padding-right: 50px; }\n\n.header-button mat-icon {\n  font-size: 28px;\n  width: 28px;\n  height: 28px; }\n\n.button-counter {\n  display: inline-block;\n  position: absolute;\n  bottom: 7px;\n  right: 1px;\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  text-align: center;\n  line-height: 16px;\n  font-size: 12px;\n  font-weight: bold; }\n\n.alarm-layout {\n  position: relative;\n  right: 45px;\n  display: inline-block;\n  width: 40px; }\n\n.info-layout {\n  position: relative;\n  right: 20px;\n  display: inline-block;\n  width: 40px; }\n\n.sidenav {\n  padding: 0px 0px 0px 0px;\n  background-color: #2c2c2c !important;\n  color: white !important;\n  /* max-width: 100px; */\n  display: inline-block !important;\n  top: 0px;\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.12), 0 1px 5px 0 rgba(0, 0, 0, 0.2) !important; }\n\n.sidenav-container {\n  width: 100%;\n  height: 100% !important;\n  background-color: #FFFFFF; }\n\n::ng-deep .mat-drawer-backdrop.mat-drawer-shown {\n  background-color: transparent; }\n\n::ng-deep #myuserinfo {\n  padding: unset !important;\n  box-shadow: 0 2px 6px 0 rgba(0, 0, 0, 0.2), 0 2px 6px 0 rgba(0, 0, 0, 0.18); }\n\n#alarms-panel {\n  background: white;\n  height: 300px;\n  transition: bottom 300ms;\n  width: 100%;\n  position: fixed;\n  bottom: -300px;\n  overflow: auto; }\n\n#alarms-panel.is-active {\n  bottom: 0px;\n  transition: bottom 300ms;\n  z-index: 999; }\n\n#alarms-panel.is-full-active {\n  top: 46px;\n  height: 100%;\n  transition: top 300ms;\n  z-index: 999; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9iaWxhbC9Eb2N1bWVudHMvRlVYQS9jbGllbnQvc3JjL2FwcC9ob21lL2hvbWUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFjO0VBQ2QsY0FBYyxFQUFBOztBQUdsQjtFQUNJLGtCQUFrQjtFQUNyQixTQUFTO0VBQ1QsU0FBUztFQUNULFdBQVc7RUFDUixVQUFVO0VBQ1YsY0FBYyxFQUFBOztBQU9sQjtFQUNJLGtCQUFrQixFQUFBOztBQUd0QjtFQUNJLGNBQWM7RUFDZCx3QkFBd0I7RUFDeEIsMEhBQWlIO0VBQ2pILGlDQUFBO0VBQ0EsaUNBQUE7RUFDQSx1QkFBdUI7RUFDdkIsaUJBQWlCO0VBQ2pCLG1CQUFtQjtFQUNuQix1QkFBd0MsRUFBQTs7QUFHNUM7RUFDSSxxQkFBcUI7RUFDckIsaUJBQWlCO0VBQ2pCLGdCQUFnQjtFQUNoQixpQkFBaUI7RUFDakIsaUJBQ0osRUFBQTs7QUFFQTtFQUNJLFlBQVk7RUFDWixpQkFBaUI7RUFDakIsc0JBQXNCO0VBQ3RCLHdCQUF3QjtFQUN4QixrQkFBa0IsRUFBQTs7QUFHdEI7RUFDSSxZQUFZO0VBQ1osVUFBVTtFQUNWLGlCQUFpQjtFQUNqQixpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLG1CQUFtQixFQUFBOztBQUd2QjtFQUNJLGVBQWU7RUFDZixXQUFXO0VBQ1gsWUFBVyxFQUFBOztBQUVmO0VBQ0kscUJBQXFCO0VBQ3JCLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsVUFBVTtFQUNWLFdBQVc7RUFDWCxZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixpQkFBaUI7RUFDakIsZUFBZTtFQUNmLGlCQUFpQixFQUFBOztBQUdyQjtFQUNJLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gscUJBQXFCO0VBQ3JCLFdBQVcsRUFBQTs7QUFHZjtFQUNJLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gscUJBQXFCO0VBQ3JCLFdBQVcsRUFBQTs7QUFHZjtFQUNJLHdCQUF3QjtFQUN4QixvQ0FBZ0Q7RUFDaEQsdUJBQXdDO0VBQ3hDLHNCQUFBO0VBQ0EsZ0NBQWdDO0VBQ2hDLFFBQU87RUFDUCwwSEFBaUgsRUFBQTs7QUFHckg7RUFDSSxXQUFXO0VBQ1gsdUJBQXVCO0VBQ3ZCLHlCQUF3QixFQUFBOztBQUc1QjtFQUNJLDZCQUE2QixFQUFBOztBQUdqQztFQUNJLHlCQUF5QjtFQUN6QiwyRUFBb0UsRUFBQTs7QUFHeEU7RUFDSSxpQkFBaUI7RUFDakIsYUFBYTtFQUNiLHdCQUF3QjtFQUN4QixXQUFXO0VBQ1gsZUFBZTtFQUNmLGNBQWM7RUFDZCxjQUFjLEVBQUE7O0FBR2xCO0VBQ0ksV0FBVztFQUNYLHdCQUF3QjtFQUN4QixZQUFZLEVBQUE7O0FBR2hCO0VBQ0ksU0FBUztFQUNULFlBQVk7RUFDWixxQkFBc0I7RUFDdEIsWUFBWSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmhvbWUtYm9keSB7XG4gICAgZGlzcGxheTogdGFibGU7XG4gICAgbWFyZ2luOiAwIGF1dG87XG59XG5cbi5ob21lLWNvbnRhaW5lciB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuXHRsZWZ0OiAwcHg7XG5cdHRvcDogNDhweDtcblx0Ym90dG9tOiAwcHg7XG4gICAgcmlnaHQ6IDBweDtcbiAgICBvdmVyZmxvdzogYXV0bztcblx0Ly8gLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcblx0Ly8gLW1vei11c2VyLXNlbGVjdDogbm9uZTtcblx0Ly8gLW1zLXVzZXItc2VsZWN0OiBub25lO1xuXHQvLyAtby11c2VyLXNlbGVjdDogbm9uZTtcblx0Ly8gdXNlci1zZWxlY3Q6IG5vbmU7XG59XG4uaG9tZS1pbmZvIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5oZWFkZXIge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHotaW5kZXg6IDk5OTkgIWltcG9ydGFudDtcbiAgICBib3gtc2hhZG93OiAwIDJweCAycHggMCByZ2JhKDAsMCwwLDAuMTQpLCAwIDNweCAxcHggLTJweCByZ2JhKDAsMCwwLDAuMTIpLCAwIDFweCA1cHggMCByZ2JhKDAsMCwwLDAuMikgIWltcG9ydGFudDsgXG4gICAgLyogbWluLWhlaWdodDogNDZweCAhaW1wb3J0YW50OyAqL1xuICAgIC8qIG1heC1oZWlnaHQ6IDQ2cHggIWltcG9ydGFudDsgKi9cbiAgICBoZWlnaHQ6IDQ2cHggIWltcG9ydGFudDtcbiAgICBwYWRkaW5nLWxlZnQ6IDRweDtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxMHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMSk7XG59XG5cbi5oZWFkZXItdGl0bGUge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBtYXJnaW4tbGVmdDogMjBweDtcbiAgICBtaW4td2lkdGg6IDIwMHB4O1xuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgIGxpbmUtaGVpZ2h0OiA0NnB4XG59XG5cbi5oZWFkZXItbG9naW4ge1xuICAgIGZsb2F0OiByaWdodDsgXG4gICAgbGluZS1oZWlnaHQ6IDQ2cHg7XG4gICAgYm9yZGVyLWxlZnQtd2lkdGg6IDFweDtcbiAgICBib3JkZXItbGVmdC1zdHlsZTogc29saWQ7XG4gICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xufVxuXG4uaGVhZGVyLWJ1dHRvbiB7ICBcbiAgICBmbG9hdDogcmlnaHQ7XG4gICAgd2lkdGg6IDMwJTtcbiAgICBsaW5lLWhlaWdodDogNDZweDtcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gICAgcGFkZGluZy1yaWdodDogNTBweDtcbn1cblxuLmhlYWRlci1idXR0b24gbWF0LWljb24ge1xuICAgIGZvbnQtc2l6ZTogMjhweDtcbiAgICB3aWR0aDogMjhweDtcbiAgICBoZWlnaHQ6MjhweDtcbn1cbi5idXR0b24tY291bnRlciB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IDdweDtcbiAgICByaWdodDogMXB4O1xuICAgIHdpZHRoOiAxNnB4O1xuICAgIGhlaWdodDogMTZweDtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLmFsYXJtLWxheW91dCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHJpZ2h0OiA0NXB4OyAgICBcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgd2lkdGg6IDQwcHg7XG59XG5cbi5pbmZvLWxheW91dCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHJpZ2h0OiAyMHB4O1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB3aWR0aDogNDBweDtcbn1cblxuLnNpZGVuYXYge1xuICAgIHBhZGRpbmc6IDBweCAwcHggMHB4IDBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDQ0LCA0NCwgNDQsIDEpICFpbXBvcnRhbnQ7XG4gICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMSkgIWltcG9ydGFudDtcbiAgICAvKiBtYXgtd2lkdGg6IDEwMHB4OyAqL1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jayAhaW1wb3J0YW50O1xuICAgIHRvcDowcHg7XG4gICAgYm94LXNoYWRvdzogMCAycHggMnB4IDAgcmdiYSgwLDAsMCwwLjE0KSwgMCAzcHggMXB4IC0ycHggcmdiYSgwLDAsMCwwLjEyKSwgMCAxcHggNXB4IDAgcmdiYSgwLDAsMCwwLjIpICFpbXBvcnRhbnQ7IFxufVxuXG4uc2lkZW5hdi1jb250YWluZXIge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJSAhaW1wb3J0YW50O1xuICAgIGJhY2tncm91bmQtY29sb3I6I0ZGRkZGRjtcbn1cblxuOjpuZy1kZWVwIC5tYXQtZHJhd2VyLWJhY2tkcm9wLm1hdC1kcmF3ZXItc2hvd24ge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufSBcblxuOjpuZy1kZWVwICNteXVzZXJpbmZvIHtcbiAgICBwYWRkaW5nOiB1bnNldCAhaW1wb3J0YW50O1xuICAgIGJveC1zaGFkb3c6IDAgMnB4IDZweCAwIHJnYmEoMCwwLDAsMC4yKSwwIDJweCA2cHggMCByZ2JhKDAsMCwwLDAuMTgpO1xufVxuXG4jYWxhcm1zLXBhbmVsIHtcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICBoZWlnaHQ6IDMwMHB4O1xuICAgIHRyYW5zaXRpb246IGJvdHRvbSAzMDBtcztcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwb3NpdGlvbjogZml4ZWQ7IFxuICAgIGJvdHRvbTogLTMwMHB4O1xuICAgIG92ZXJmbG93OiBhdXRvO1xufVxuXG4jYWxhcm1zLXBhbmVsLmlzLWFjdGl2ZSB7XG4gICAgYm90dG9tOiAwcHg7XG4gICAgdHJhbnNpdGlvbjogYm90dG9tIDMwMG1zO1xuICAgIHotaW5kZXg6IDk5OTtcbn1cblxuI2FsYXJtcy1wYW5lbC5pcy1mdWxsLWFjdGl2ZSB7XG4gICAgdG9wOiA0NnB4O1xuICAgIGhlaWdodDogMTAwJTtcbiAgICB0cmFuc2l0aW9uOiAgdG9wIDMwMG1zO1xuICAgIHotaW5kZXg6IDk5OTtcbn0iXX0= */"

            /***/
}),

/***/ "./app/home/home.component.ts":
/*!************************************!*\
  !*** ./app/home/home.component.ts ***!
  \************************************/
/*! exports provided: HomeComponent, DialogUserInfo */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HomeComponent", function () { return HomeComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DialogUserInfo", function () { return DialogUserInfo; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "../node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "../node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _sidenav_sidenav_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../sidenav/sidenav.component */ "./app/sidenav/sidenav.component.ts");
/* harmony import */ var _fuxa_view_fuxa_view_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../fuxa-view/fuxa-view.component */ "./app/fuxa-view/fuxa-view.component.ts");
/* harmony import */ var _iframe_iframe_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../iframe/iframe.component */ "./app/iframe/iframe.component.ts");
/* harmony import */ var _services_hmi_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../_services/hmi.service */ "./app/_services/hmi.service.ts");
/* harmony import */ var _services_project_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../_services/project.service */ "./app/_services/project.service.ts");
/* harmony import */ var _services_auth_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../_services/auth.service */ "./app/_services/auth.service.ts");
/* harmony import */ var _gauges_gauges_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../gauges/gauges.component */ "./app/gauges/gauges.component.ts");
/* harmony import */ var _models_hmi__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../_models/hmi */ "./app/_models/hmi.ts");
/* harmony import */ var _login_login_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../login/login.component */ "./app/login/login.component.ts");
/* harmony import */ var _alarms_alarm_view_alarm_view_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../alarms/alarm-view/alarm-view.component */ "./app/alarms/alarm-view/alarm-view.component.ts");
/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../_helpers/utils */ "./app/_helpers/utils.ts");
/* harmony import */ var _cards_view_cards_view_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../cards-view/cards-view.component */ "./app/cards-view/cards-view.component.ts");
/* harmony import */ var panzoom__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! panzoom */ "../node_modules/panzoom/index.js");
/* harmony import */ var panzoom__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(panzoom__WEBPACK_IMPORTED_MODULE_15__);
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };
            var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
                return function (target, key) { decorator(target, key, paramIndex); }
            };

















            // declare var panzoom: any;
            var HomeComponent = /** @class */ (function () {
                function HomeComponent(projectService, changeDetector, dialog, router, hmiService, authService, gaugesManager) {
                    this.projectService = projectService;
                    this.changeDetector = changeDetector;
                    this.dialog = dialog;
                    this.router = router;
                    this.hmiService = hmiService;
                    this.authService = authService;
                    this.gaugesManager = gaugesManager;
                    this.isLoading = true;
                    this.homeView = new _models_hmi__WEBPACK_IMPORTED_MODULE_10__["View"]();
                    this.hmi = new _models_hmi__WEBPACK_IMPORTED_MODULE_10__["Hmi"]();
                    this.showSidenav = 'over';
                    this.homeLink = '';
                    this.showHomeLink = false;
                    this.securityEnabled = false;
                    this.backgroudColor = 'unset';
                    this.title = '';
                    this.alarms = { show: false, count: 0, mode: '' };
                    this.infos = { show: false, count: 0, mode: '' };
                    this.headerButtonMode = _models_hmi__WEBPACK_IMPORTED_MODULE_10__["NotificationModeType"];
                    this.alarmsPanelOpen = false;
                    this.layoutHeader = new _models_hmi__WEBPACK_IMPORTED_MODULE_10__["HeaderSettings"]();
                    this.showNavigation = true;
                    this.cardViewType = _helpers_utils__WEBPACK_IMPORTED_MODULE_13__["Utils"].getEnumKey(_models_hmi__WEBPACK_IMPORTED_MODULE_10__["ViewType"], _models_hmi__WEBPACK_IMPORTED_MODULE_10__["ViewType"].cards);
                    this.gridOptions = new _cards_view_cards_view_component__WEBPACK_IMPORTED_MODULE_14__["GridOptions"]();
                    this.gridOptions.draggable = { enabled: false };
                    this.gridOptions.resizable = { enabled: false };
                }
                HomeComponent.prototype.ngOnInit = function () {
                };
                HomeComponent.prototype.ngAfterViewInit = function () {
                    var _this = this;
                    try {
                        var hmi = this.projectService.getHmi();
                        if (hmi) {
                            this.loadHmi();
                        }
                        this.subscriptionLoad = this.projectService.onLoadHmi.subscribe(function (load) {
                            _this.loadHmi();
                        }, function (error) {
                            console.error('Error loadHMI');
                        });
                        this.subscriptionAlarmsStatus = this.hmiService.onAlarmsStatus.subscribe(function (event) {
                            _this.setAlarmsStatus(event);
                        });
                        this.hmiService.askAlarmsStatus();
                        this.changeDetector.detectChanges();
                    }
                    catch (err) {
                        console.error(err);
                    }
                };
                HomeComponent.prototype.ngOnDestroy = function () {
                    try {
                        if (this.subscriptionLoad) {
                            this.subscriptionLoad.unsubscribe();
                        }
                        if (this.subscriptionAlarmsStatus) {
                            this.subscriptionAlarmsStatus.unsubscribe();
                        }
                    }
                    catch (e) {
                    }
                };
                HomeComponent.prototype.onGoToPage = function (event) {
                    var view = this.hmi.views.find(function (x) { return x.id === event; });
                    this.showHomeLink = false;
                    this.changeDetector.detectChanges();
                    if (view) {
                        this.homeView = view;
                        this.changeDetector.detectChanges();
                        this.setBackground();
                        if (this.homeView.type !== this.cardViewType) {
                            this.fuxaview.hmi.layout = this.hmi.layout;
                            this.fuxaview.loadHmi(this.homeView);
                        }
                    }
                    this.checkToCloseSideNav();
                };
                HomeComponent.prototype.onGoToLink = function (event) {
                    if (event.indexOf('://') >= 0) {
                        this.showHomeLink = true;
                        this.changeDetector.detectChanges();
                        this.iframeview.loadLink(event);
                    }
                    else {
                        this.router.navigate([event]).then(function (data) {
                        }).catch(function (err) {
                            console.error('Route ' + event + '  not found, redirection stopped with no error raised');
                            // try iframe link
                        });
                    }
                    this.checkToCloseSideNav();
                };
                HomeComponent.prototype.checkToCloseSideNav = function () {
                    var nvoid = _models_hmi__WEBPACK_IMPORTED_MODULE_10__["NaviModeType"][this.hmi.layout.navigation.mode];
                    if (this.hmi.layout && nvoid !== _models_hmi__WEBPACK_IMPORTED_MODULE_10__["NaviModeType"].fix && this.matsidenav) {
                        this.matsidenav.close();
                    }
                };
                HomeComponent.prototype.onLogin = function () {
                    var _this = this;
                    var cuser = this.authService.getUser();
                    if (cuser) {
                        var dialogRef = this.dialog.open(DialogUserInfo, {
                            id: 'myuserinfo',
                            // minWidth: '250px',
                            position: { top: '50px', right: '15px' },
                            backdropClass: 'user-info',
                            data: cuser
                        });
                        dialogRef.afterClosed().subscribe(function (result) {
                            if (result) {
                                _this.authService.signOut();
                                _this.projectService.reload();
                            }
                        });
                    }
                    else {
                        var dialogRef = this.dialog.open(_login_login_component__WEBPACK_IMPORTED_MODULE_11__["LoginComponent"], {
                            // minWidth: '250px',
                            data: {}
                        });
                        dialogRef.afterClosed().subscribe(function (result) {
                        });
                    }
                };
                HomeComponent.prototype.askValue = function () {
                    this.hmiService.askDeviceValues();
                };
                HomeComponent.prototype.askStatus = function () {
                    this.hmiService.askDeviceStatus();
                };
                HomeComponent.prototype.isLoggedIn = function () {
                    return (this.authService.getUser()) ? true : false;
                };
                HomeComponent.prototype.onAlarmsShowMode = function (mode) {
                    var ele = document.getElementById("alarms-panel");
                    if (mode === 'expand') {
                        ele.classList.add("is-full-active");
                        // ele.classList.remove('is-active');			
                        this.alarmsPanelOpen = true;
                        this.alarmsview.startAskAlarmsValues();
                    }
                    else if (mode === 'collapse') {
                        ele.classList.add('is-active');
                        ele.classList.remove('is-full-active');
                        this.alarmsPanelOpen = true;
                        this.alarmsview.startAskAlarmsValues();
                    }
                    else {
                        // ele.classList.toggle("is-active");
                        ele.classList.remove('is-active');
                        ele.classList.remove('is-full-active');
                        this.alarmsPanelOpen = false;
                    }
                };
                HomeComponent.prototype.goTo = function (destination) {
                    this.router.navigate([destination]); //, this.ID]);
                };
                HomeComponent.prototype.loadHmi = function () {
                    var _this = this;
                    var hmi = this.projectService.getHmi();
                    if (hmi) {
                        this.hmi = hmi;
                    }
                    if (this.hmi && this.hmi.views && this.hmi.views.length > 0) {
                        var viewToShow = null;
                        if (this.hmi.layout && this.hmi.layout.start) {
                            viewToShow = this.hmi.views.find(function (x) { return x.id === _this.hmi.layout.start; });
                        }
                        if (!viewToShow) {
                            viewToShow = this.hmi.views[0];
                        }
                        this.homeView = viewToShow;
                        this.setBackground();
                        // check sidenav
                        this.showSidenav = null;
                        if (this.hmi.layout) {
                            if (_helpers_utils__WEBPACK_IMPORTED_MODULE_13__["Utils"].Boolify(this.hmi.layout.hidenavigation)) {
                                this.showNavigation = false;
                            }
                            var nvoid = _models_hmi__WEBPACK_IMPORTED_MODULE_10__["NaviModeType"][this.hmi.layout.navigation.mode];
                            if (this.hmi.layout && nvoid !== _models_hmi__WEBPACK_IMPORTED_MODULE_10__["NaviModeType"].void) {
                                if (nvoid === _models_hmi__WEBPACK_IMPORTED_MODULE_10__["NaviModeType"].over) {
                                    this.showSidenav = 'over';
                                }
                                else if (nvoid === _models_hmi__WEBPACK_IMPORTED_MODULE_10__["NaviModeType"].fix) {
                                    this.showSidenav = 'side';
                                    if (this.matsidenav)
                                        this.matsidenav.open();
                                }
                                else if (nvoid === _models_hmi__WEBPACK_IMPORTED_MODULE_10__["NaviModeType"].push) {
                                    this.showSidenav = 'push';
                                }
                                this.sidenav.setLayout(this.hmi.layout);
                            }
                            if (this.hmi.layout.header) {
                                this.title = this.hmi.layout.header.title;
                                if (this.hmi.layout.header.alarms) {
                                    this.alarms.mode = this.hmi.layout.header.alarms;
                                }
                                if (this.hmi.layout.header.infos) {
                                    this.infos.mode = this.hmi.layout.header.infos;
                                }
                                this.checkHeaderButton();
                                this.layoutHeader = this.hmi.layout.header;
                            }
                            if (this.hmi.layout.zoom && _models_hmi__WEBPACK_IMPORTED_MODULE_10__["ZoomModeType"][this.hmi.layout.zoom] === _models_hmi__WEBPACK_IMPORTED_MODULE_10__["ZoomModeType"].enabled) {
                                setTimeout(function () {
                                    var element = document.querySelector('#home');
                                    if (element && panzoom__WEBPACK_IMPORTED_MODULE_15___default.a) {
                                        panzoom__WEBPACK_IMPORTED_MODULE_15___default()(element, {
                                            bounds: true,
                                            boundsPadding: 0.05,
                                        });
                                    }
                                    _this.container.nativeElement.style.overflow = 'hidden';
                                }, 1000);
                            }
                        }
                    }
                    if (this.homeView && this.fuxaview) {
                        this.fuxaview.hmi.layout = this.hmi.layout;
                        this.fuxaview.loadHmi(this.homeView);
                    }
                    this.isLoading = false;
                    this.securityEnabled = this.projectService.isSecurityEnabled();
                };
                HomeComponent.prototype.setBackground = function () {
                    if (this.homeView && this.homeView.profile) {
                        this.backgroudColor = this.homeView.profile.bkcolor;
                    }
                };
                HomeComponent.prototype.checkHeaderButton = function () {
                    var fix = Object.keys(_models_hmi__WEBPACK_IMPORTED_MODULE_10__["NotificationModeType"])[Object.values(_models_hmi__WEBPACK_IMPORTED_MODULE_10__["NotificationModeType"]).indexOf(_models_hmi__WEBPACK_IMPORTED_MODULE_10__["NotificationModeType"].fix)];
                    var float = Object.keys(_models_hmi__WEBPACK_IMPORTED_MODULE_10__["NotificationModeType"])[Object.values(_models_hmi__WEBPACK_IMPORTED_MODULE_10__["NotificationModeType"]).indexOf(_models_hmi__WEBPACK_IMPORTED_MODULE_10__["NotificationModeType"].float)];
                    if (this.alarms.mode === fix || (this.alarms.mode === float && this.alarms.count > 0)) {
                        this.alarms.show = true;
                    }
                    else {
                        this.alarms.show = false;
                    }
                    if (this.infos.mode === fix || (this.infos.mode === float && this.infos.count > 0)) {
                        this.infos.show = true;
                    }
                    else {
                        this.infos.show = false;
                    }
                };
                HomeComponent.prototype.setAlarmsStatus = function (status) {
                    if (status) {
                        this.alarms.count = status.highhigh + status.high + status.low;
                        this.infos.count = status.info;
                        this.checkHeaderButton();
                    }
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('sidenav'),
                    __metadata("design:type", _sidenav_sidenav_component__WEBPACK_IMPORTED_MODULE_3__["SidenavComponent"])
                ], HomeComponent.prototype, "sidenav", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('matsidenav'),
                    __metadata("design:type", _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatSidenav"])
                ], HomeComponent.prototype, "matsidenav", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('fuxaview'),
                    __metadata("design:type", _fuxa_view_fuxa_view_component__WEBPACK_IMPORTED_MODULE_4__["FuxaViewComponent"])
                ], HomeComponent.prototype, "fuxaview", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('alarmsview'),
                    __metadata("design:type", _alarms_alarm_view_alarm_view_component__WEBPACK_IMPORTED_MODULE_12__["AlarmViewComponent"])
                ], HomeComponent.prototype, "alarmsview", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('container'),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"])
                ], HomeComponent.prototype, "container", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('iframeview'),
                    __metadata("design:type", _iframe_iframe_component__WEBPACK_IMPORTED_MODULE_5__["IframeComponent"])
                ], HomeComponent.prototype, "iframeview", void 0);
                HomeComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'app-home',
                        template: __webpack_require__(/*! ./home.component.html */ "./app/home/home.component.html"),
                        styles: [__webpack_require__(/*! ./home.component.scss */ "./app/home/home.component.scss")]
                    }),
                    __metadata("design:paramtypes", [_services_project_service__WEBPACK_IMPORTED_MODULE_7__["ProjectService"],
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"],
                    _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialog"],
                    _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"],
                    _services_hmi_service__WEBPACK_IMPORTED_MODULE_6__["HmiService"],
                    _services_auth_service__WEBPACK_IMPORTED_MODULE_8__["AuthService"],
                    _gauges_gauges_component__WEBPACK_IMPORTED_MODULE_9__["GaugesManager"]])
                ], HomeComponent);
                return HomeComponent;
            }());

            var DialogUserInfo = /** @class */ (function () {
                function DialogUserInfo(dialogRef, data) {
                    this.dialogRef = dialogRef;
                    this.data = data;
                }
                DialogUserInfo.prototype.onOkClick = function () {
                    this.dialogRef.close(true);
                };
                DialogUserInfo = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'user-info',
                        template: __webpack_require__(/*! ./userinfo.dialog.html */ "./app/home/userinfo.dialog.html"),
                    }),
                    __param(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MAT_DIALOG_DATA"])),
                    __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialogRef"], Object])
                ], DialogUserInfo);
                return DialogUserInfo;
            }());



            /***/
}),

/***/ "./app/home/userinfo.dialog.html":
/*!***************************************!*\
  !*** ./app/home/userinfo.dialog.html ***!
  \***************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div style=\"display:block; text-align: center;padding-top: 20px; padding-bottom: 10px;width: 220px\">\n\t<div style=\"display: block; margin: auto\">\n\t\t<mat-icon [style.color]=\"'rgb(59, 144, 255)'\">account_circle</mat-icon>\n\t</div>\n\t<div style=\"font-size: 14px;display: block;padding-top: 10px;padding-bottom: 10px;\">\n\t\t{{data.username}}\n\t</div>\n\t<div style=\"font-size: 14px;display: block;padding-top: 10px;padding-bottom: 10px;\">\n\t\t{{data.fullname}}\n\t</div>\n\t<div style=\"display: block; padding-bottom:20px; padding-top: 20px; border-top: 1px solid rgba(0,0,0,0.1);\">\n\t\t<button mat-raised-button [mat-dialog-close]=\"true\">{{'dlg.logout-btn' | translate}}</button>\n\t</div>\n\t<div style=\"display: block; font-size: 10px; padding-top: 10px; border-top: 1px solid rgba(0,0,0,0.1);\">\n\t\tFUXA powered by <span><b>frango</b>team</span>\n\t</div>\n</div>"

            /***/
}),

/***/ "./app/iframe/iframe.component.css":
/*!*****************************************!*\
  !*** ./app/iframe/iframe.component.css ***!
  \*****************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2lmcmFtZS9pZnJhbWUuY29tcG9uZW50LmNzcyJ9 */"

            /***/
}),

/***/ "./app/iframe/iframe.component.html":
/*!******************************************!*\
  !*** ./app/iframe/iframe.component.html ***!
  \******************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<iframe width=\"100%\" height=\"100%\" frameBorder=\"0\" [src]=\"urlSafe\"></iframe>\n"

            /***/
}),

/***/ "./app/iframe/iframe.component.ts":
/*!****************************************!*\
  !*** ./app/iframe/iframe.component.ts ***!
  \****************************************/
/*! exports provided: IframeComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IframeComponent", function () { return IframeComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/platform-browser */ "../node_modules/@angular/platform-browser/fesm5/platform-browser.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "../node_modules/@angular/router/fesm5/router.js");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };



            var IframeComponent = /** @class */ (function () {
                function IframeComponent(activeroute, sanitizer) {
                    this.activeroute = activeroute;
                    this.sanitizer = sanitizer;
                }
                IframeComponent.prototype.ngOnInit = function () {
                    var _this = this;
                    if (this.link) {
                        // input
                        this.urlSafe = this.sanitizer.bypassSecurityTrustResourceUrl(this.link);
                    }
                    else {
                        this.subscription = this.activeroute.params.subscribe(function (params) {
                            // routing
                            _this.link = params['url'];
                            _this.urlSafe = _this.sanitizer.bypassSecurityTrustResourceUrl(_this.link);
                        });
                    }
                };
                IframeComponent.prototype.ngOnDestroy = function () {
                    if (this.subscription) {
                        this.subscription.unsubscribe();
                    }
                };
                IframeComponent.prototype.loadLink = function (link) {
                    this.link = link;
                    if (this.link) {
                        this.urlSafe = this.sanitizer.bypassSecurityTrustResourceUrl(this.link);
                    }
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", String)
                ], IframeComponent.prototype, "link", void 0);
                IframeComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'app-iframe',
                        template: __webpack_require__(/*! ./iframe.component.html */ "./app/iframe/iframe.component.html"),
                        styles: [__webpack_require__(/*! ./iframe.component.css */ "./app/iframe/iframe.component.css")]
                    }),
                    __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"],
                    _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__["DomSanitizer"]])
                ], IframeComponent);
                return IframeComponent;
            }());



            /***/
}),

/***/ "./app/lab/lab.component.css":
/*!***********************************!*\
  !*** ./app/lab/lab.component.css ***!
  \***********************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "\n.lab-body {\n    display: table;\n    margin: 0 auto;\n}\n.box_shadow {\n    box-shadow: 0px 2px 6px -1px #888888;\n    filter: \n    drop-shadow( 3px 3px 2px rgba(0,0,0,.7) );\n}\n.fab-btn {\n    position: absolute;\n    right: 10px;\n    bottom: 10px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGFiL2xhYi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtJQUNJLGNBQWM7SUFDZCxjQUFjO0FBQ2xCO0FBQ0E7SUFHSSxvQ0FBb0M7SUFHOUI7NkNBQ21DO0FBQzdDO0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsV0FBVztJQUNYLFlBQVk7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9sYWIvbGFiLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbi5sYWItYm9keSB7XG4gICAgZGlzcGxheTogdGFibGU7XG4gICAgbWFyZ2luOiAwIGF1dG87XG59XG4uYm94X3NoYWRvdyB7XG4gICAgLXdlYmtpdC1ib3gtc2hhZG93OiAwcHggMnB4IDZweCAtMXB4ICM4ODg4ODg7XG4gICAgLW1vei1ib3gtc2hhZG93OiAwcHggMnB4IDZweCAtMXB4ICM4ODg4ODg7XG4gICAgYm94LXNoYWRvdzogMHB4IDJweCA2cHggLTFweCAjODg4ODg4O1xuICAgIC13ZWJraXQtZmlsdGVyOiBcbiAgICBkcm9wLXNoYWRvdyggM3B4IDNweCAycHggcmdiYSgwLDAsMCwuNykgKTtcbiAgICAgICAgICBmaWx0ZXI6IFxuICAgIGRyb3Atc2hhZG93KCAzcHggM3B4IDJweCByZ2JhKDAsMCwwLC43KSApO1xufVxuXG4uZmFiLWJ0biB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAxMHB4O1xuICAgIGJvdHRvbTogMTBweDtcbn0iXX0= */"

            /***/
}),

/***/ "./app/lab/lab.component.html":
/*!************************************!*\
  !*** ./app/lab/lab.component.html ***!
  \************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div *ngIf=\"isLoading\" style=\"position:absolute;top:0px;left:0px;right:0px;bottom:0px;background-color:rgba(0,0,0,0.2); z-index: 99999;\">\n    <mat-progress-bar mode=\"indeterminate\" color=\"warn\" style=\"position: absolute; top: 0px; left: 0px; right: 0px; z-index: 99999;\">\n    </mat-progress-bar>\n</div>\n<div [style.background-color]=\"backgroudColor\" style=\"height: 100%\">\n    <app-fuxa-view *ngIf=\"labView\" class=\"lab-body\" id=\"lab\" [view]=\"currentView\" [hmi]=\"hmi\" [gaugesManager]=\"gaugesManager\"></app-fuxa-view>\n    <div *ngIf=\"!labView\">\n        Loading...\n    </div>\n    <template #messagecontainer>\n    </template>\n    <button mat-mini-fab color=\"warn\" class=\"fab-btn\" (click)=\"onTest()\">Test</button>\n    <app-tester #tester></app-tester>\n</div>"

            /***/
}),

/***/ "./app/lab/lab.component.ts":
/*!**********************************!*\
  !*** ./app/lab/lab.component.ts ***!
  \**********************************/
/*! exports provided: LabComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LabComponent", function () { return LabComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _services_project_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_services/project.service */ "./app/_services/project.service.ts");
/* harmony import */ var _models_hmi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../_models/hmi */ "./app/_models/hmi.ts");
/* harmony import */ var _gauges_gauges_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../gauges/gauges.component */ "./app/gauges/gauges.component.ts");
/* harmony import */ var _tester_tester_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../tester/tester.service */ "./app/tester/tester.service.ts");
/* harmony import */ var _tester_tester_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../tester/tester.component */ "./app/tester/tester.component.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };






            var LabComponent = /** @class */ (function () {
                function LabComponent(projectService, gaugesManager, changeDetector, testerService) {
                    this.projectService = projectService;
                    this.gaugesManager = gaugesManager;
                    this.changeDetector = changeDetector;
                    this.testerService = testerService;
                    this.isLoading = true;
                    this.currentView = new _models_hmi__WEBPACK_IMPORTED_MODULE_2__["View"]();
                    this.hmi = new _models_hmi__WEBPACK_IMPORTED_MODULE_2__["Hmi"]();
                    this.labView = null;
                    this.backgroudColor = 'unset';
                }
                LabComponent.prototype.ngOnInit = function () {
                };
                LabComponent.prototype.ngAfterViewInit = function () {
                    var _this = this;
                    try {
                        var hmi = this.projectService.getHmi();
                        if (!hmi) {
                            this.subscriptionLoad = this.projectService.onLoadHmi.subscribe(function (load) {
                                _this.loadHmi();
                            }, function (error) {
                                console.error('Error loadHMI');
                            });
                        }
                        else {
                            this.loadHmi();
                        }
                        this.changeDetector.detectChanges();
                    }
                    catch (err) {
                        console.error(err);
                    }
                };
                LabComponent.prototype.ngOnDestroy = function () {
                    try {
                        if (this.subscriptionLoad) {
                            this.subscriptionLoad.unsubscribe();
                        }
                    }
                    catch (e) {
                    }
                };
                LabComponent.prototype.onTest = function () {
                    this.tester.setSignals(this.gaugesManager.getMappedGaugesSignals(true));
                    this.testerService.toggle(true);
                };
                LabComponent.prototype.loadHmi = function () {
                    this.hmi = this.projectService.getHmi();
                    if (this.hmi && this.hmi.views && this.hmi.views.length > 0) {
                        this.currentView = this.hmi.views[0];
                        this.labView = this.hmi.views[0];
                        var oldsel = localStorage.getItem("@frango.webeditor.currentview");
                        if (oldsel) {
                            for (var i = 0; i < this.hmi.views.length; i++) {
                                if (this.hmi.views[i].name === oldsel) {
                                    this.currentView = this.hmi.views[i];
                                    this.setBackground();
                                    break;
                                }
                            }
                        }
                    }
                    this.isLoading = false;
                };
                LabComponent.prototype.setBackground = function () {
                    if (this.currentView && this.currentView.profile) {
                        this.backgroudColor = this.currentView.profile.bkcolor;
                    }
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('messagecontainer', { read: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"] }),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"])
                ], LabComponent.prototype, "entry", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('tester'),
                    __metadata("design:type", _tester_tester_component__WEBPACK_IMPORTED_MODULE_5__["TesterComponent"])
                ], LabComponent.prototype, "tester", void 0);
                LabComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        template: __webpack_require__(/*! ./lab.component.html */ "./app/lab/lab.component.html"),
                        styles: [__webpack_require__(/*! ./lab.component.css */ "./app/lab/lab.component.css")]
                    }),
                    __metadata("design:paramtypes", [_services_project_service__WEBPACK_IMPORTED_MODULE_1__["ProjectService"],
                    _gauges_gauges_component__WEBPACK_IMPORTED_MODULE_3__["GaugesManager"],
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"],
                    _tester_tester_service__WEBPACK_IMPORTED_MODULE_4__["TesterService"]])
                ], LabComponent);
                return LabComponent;
            }());



            /***/
}),

/***/ "./app/login/login.component.css":
/*!***************************************!*\
  !*** ./app/login/login.component.css ***!
  \***************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ".error {\n    display: block;\n    font-size: 12px;\n}\n\n.message-error {\n    width: 100%;\n    /* background-color: red;; */\n    color: red;\n    padding-bottom: 20px;\n    font-size: 13px;\n}\n\n.show-password {\n    bottom: 2px;\n    right: 0px;\n    position: absolute;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGNBQWM7SUFDZCxlQUFlO0FBQ25COztBQUVBO0lBQ0ksV0FBVztJQUNYLDRCQUE0QjtJQUM1QixVQUFVO0lBQ1Ysb0JBQW9CO0lBQ3BCLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtJQUNWLGtCQUFrQjtBQUN0QiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXJyb3Ige1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbn1cblxuLm1lc3NhZ2UtZXJyb3Ige1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIC8qIGJhY2tncm91bmQtY29sb3I6IHJlZDs7ICovXG4gICAgY29sb3I6IHJlZDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMjBweDtcbiAgICBmb250LXNpemU6IDEzcHg7XG59XG5cbi5zaG93LXBhc3N3b3JkIHtcbiAgICBib3R0b206IDJweDtcbiAgICByaWdodDogMHB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbn1cbiJdfQ== */"

            /***/
}),

/***/ "./app/login/login.component.html":
/*!****************************************!*\
  !*** ./app/login/login.component.html ***!
  \****************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<form>\n\t<div style=\"width: 250px;position: relative;padding-bottom: 40px\">\n\t\t<h1 mat-dialog-title style=\"display:inline-block;margin-bottom: 14px !important;\">{{'dlg.login-title' | translate}}</h1>\n\t\t<div mat-dialog-content>\n\t\t\t<div class=\"my-form-field\" style=\"display: block;margin-bottom: 10px;margin-right: 5px;\">\n\t\t\t\t<span>{{'general.username' | translate}}</span>\n\t\t\t\t<input cdkFocusInitial autocomplete=\"off\" [type]=\"'text'\" [formControl]=\"username\" style=\"width:100%;\">\n\t\t\t\t<mat-error class=\"error\" *ngIf=\"errorEnabled && username.errors && username.errors.required\">{{'msg.login-username-required' | translate}}\n\t\t\t\t</mat-error>\n\t\t\t</div>\n\t\t\t<div class=\"my-form-field\" style=\"display: block;margin-bottom: 10px;margin-right: 5px;\">\n\t\t\t\t<span>{{'general.password' | translate}}</span>\n\t\t\t\t<input autocomplete=\"off\" [type]=\"showPassword ? 'text' : 'password'\" [formControl]=\"password\" style=\"width:100%;\">\n\t\t\t\t<mat-icon matSuffix (click)=\"showPassword = !showPassword\" class=\"show-password\">{{showPassword ? 'visibility' : 'visibility_off'}}</mat-icon>\n\t\t\t\t<mat-error class=\"error\" *ngIf=\"errorEnabled && password.errors && password.errors.required\">{{'msg.login-password-required' | translate}}\n\t\t\t\t</mat-error>\n\t\t\t</div>\n\t\t</div>\n\t\t<div *ngIf=\"messageError\" class=\"message-error\">\n\t\t\t{{messageError}}\n\t\t</div>\n\t\t<div *ngIf=\"submitLoading\">\n\t\t\t<mat-spinner style=\"margin: auto\" diameter=\"20\"></mat-spinner>\n\t\t</div>\n\t\t<div mat-dialog-actions class=\"dialog-action\">\n\t\t\t<button mat-raised-button [mat-dialog-close]=\"\">{{'dlg.cancel' | translate}}</button>\n\t\t\t<button mat-raised-button color=\"primary\" (click)=\"onOkClick()\" [disabled]=\"!isValidate()\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\n\t\t</div>\n\t</div>\n</form>"

            /***/
}),

/***/ "./app/login/login.component.ts":
/*!**************************************!*\
  !*** ./app/login/login.component.ts ***!
  \**************************************/
/*! exports provided: LoginComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoginComponent", function () { return LoginComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "../node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "../node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _services_auth_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../_services/auth.service */ "./app/_services/auth.service.ts");
/* harmony import */ var _services_project_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../_services/project.service */ "./app/_services/project.service.ts");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ngx-translate/core */ "../node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };
            var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
                return function (target, key) { decorator(target, key, paramIndex); }
            };






            var LoginComponent = /** @class */ (function () {
                function LoginComponent(authService, projectService, translateService, dialogRef, data) {
                    this.authService = authService;
                    this.projectService = projectService;
                    this.translateService = translateService;
                    this.dialogRef = dialogRef;
                    this.data = data;
                    this.loading = false;
                    this.showPassword = false;
                    this.submitLoading = false;
                    this.username = new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"]();
                    this.password = new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"]();
                    this.errorEnabled = false;
                }
                LoginComponent.prototype.ngOnInit = function () {
                };
                LoginComponent.prototype.onNoClick = function () {
                    this.dialogRef.close();
                };
                LoginComponent.prototype.onOkClick = function () {
                    this.errorEnabled = true;
                    this.messageError = '';
                    this.signIn();
                };
                LoginComponent.prototype.isValidate = function () {
                    if (this.username.value && this.password.value) {
                        return true;
                    }
                    return false;
                };
                LoginComponent.prototype.signIn = function () {
                    var _this = this;
                    this.submitLoading = true;
                    this.authService.signIn(this.username.value, this.password.value).subscribe(function (result) {
                        // 		this.router.navigate([this.returnUrl]);
                        _this.submitLoading = false;
                        _this.dialogRef.close(_this.data.user);
                        _this.projectService.reload();
                    }, function (error) {
                        _this.submitLoading = false;
                        _this.translateService.get('msg.signin-failed').subscribe(function (txt) { return _this.messageError = txt; });
                    });
                };
                LoginComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'app-login',
                        template: __webpack_require__(/*! ./login.component.html */ "./app/login/login.component.html"),
                        styles: [__webpack_require__(/*! ./login.component.css */ "./app/login/login.component.css")]
                    }),
                    __param(4, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
                    __metadata("design:paramtypes", [_services_auth_service__WEBPACK_IMPORTED_MODULE_3__["AuthService"],
                    _services_project_service__WEBPACK_IMPORTED_MODULE_4__["ProjectService"],
                    _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateService"],
                    _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"], Object])
                ], LoginComponent);
                return LoginComponent;
            }());



            /***/
}),

/***/ "./app/material.module.ts":
/*!********************************!*\
  !*** ./app/material.module.ts ***!
  \********************************/
/*! exports provided: MaterialModule */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MaterialModule", function () { return MaterialModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "../node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_cdk_table__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/cdk/table */ "../node_modules/@angular/cdk/esm5/table.es5.js");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };



            var MaterialModule = /** @class */ (function () {
                function MaterialModule() {
                }
                MaterialModule = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
                        imports: [
                            _angular_cdk_table__WEBPACK_IMPORTED_MODULE_2__["CdkTableModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatAutocompleteModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatButtonModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatButtonToggleModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatCardModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatCheckboxModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatChipsModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatStepperModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDatepickerModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialogModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatExpansionModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatGridListModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatIconModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatInputModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatListModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatMenuModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatNativeDateModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatPaginatorModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatProgressBarModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatProgressSpinnerModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatRadioModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatRippleModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatSelectModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatSidenavModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatSliderModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatSlideToggleModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatSnackBarModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatSortModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatTableModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatTabsModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatToolbarModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatTooltipModule"],
                        ],
                        exports: [
                            _angular_cdk_table__WEBPACK_IMPORTED_MODULE_2__["CdkTableModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatAutocompleteModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatButtonModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatButtonToggleModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatCardModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatCheckboxModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatChipsModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatStepperModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDatepickerModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialogModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatExpansionModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatGridListModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatIconModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatInputModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatListModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatMenuModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatNativeDateModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatPaginatorModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatProgressBarModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatProgressSpinnerModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatRadioModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatRippleModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatSelectModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatSidenavModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatSliderModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatSlideToggleModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatSnackBarModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatSortModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatTableModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatTabsModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatToolbarModule"],
                            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatTooltipModule"],
                        ]
                    })
                ], MaterialModule);
                return MaterialModule;
            }());



            /***/
}),

/***/ "./app/sidenav/sidenav.component.css":
/*!*******************************************!*\
  !*** ./app/sidenav/sidenav.component.css ***!
  \*******************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = " \n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZGVuYXYvc2lkZW5hdi5jb21wb25lbnQuY3NzIn0= */"

            /***/
}),

/***/ "./app/sidenav/sidenav.component.html":
/*!********************************************!*\
  !*** ./app/sidenav/sidenav.component.html ***!
  \********************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div class=\"sidenav-menu\" *ngIf=\"showSidenav\" style=\"height: 100%\" [ngClass]=\"'sidenav-menu-' + layout.navigation.type\"\n                        [style.background-color]=\"layoutNavigation.bkcolor\" [style.color]=\"layoutNavigation.fgcolor\">\n    <mat-list>\n        <mat-list-item style=\"height: 35px; font-weight: bold; padding-left: 10px;padding-bottom: 10px;margin-bottom: 10px; width: unset\">\n            {{'sidenav.title' | translate}}\n        </mat-list-item>\n        <mat-list-item *ngFor=\"let item of layout.navigation.items; let i = index\" [ngClass]=\"'menu-item-' + layout.navigation.type\" style=\"width: unset\">\n            <button type=\"button\" mat-button class=\"sidenav-btn\" (click)=\"onGoTo(item)\" [ngSwitch]=\"layout.navigation.type\">\n                <div *ngSwitchCase=\"'icon'\" class=\"menu-item-content-icon\">\n                    <mat-icon>{{item.icon}}</mat-icon>\n                </div>\n                <div *ngSwitchCase=\"'text'\" class=\"menu-item-content-text\">\n                    <span>{{item.text}}</span>\n                </div>\n                <div *ngSwitchCase=\"'block'\" class=\"menu-item-content-block\">\n                    <mat-icon style=\"display: block;\">{{item.icon}}</mat-icon>\n                    <span>{{item.text}}</span>\n                </div>\n                <div *ngSwitchCase=\"'inline'\" class=\"menu-item-content-inline\">\n                    <mat-icon style=\"display: inline-block\">{{item.icon}}</mat-icon>\n                    <span style=\"display: inline-block\">{{item.text}}</span>\n                </div>\n            </button>\n        </mat-list-item>\n    </mat-list>\n</div>"

            /***/
}),

/***/ "./app/sidenav/sidenav.component.ts":
/*!******************************************!*\
  !*** ./app/sidenav/sidenav.component.ts ***!
  \******************************************/
/*! exports provided: SidenavComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SidenavComponent", function () { return SidenavComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "../node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "../node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _models_hmi__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../_models/hmi */ "./app/_models/hmi.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };




            var SidenavComponent = /** @class */ (function () {
                function SidenavComponent(router, changeDetector) {
                    this.router = router;
                    this.changeDetector = changeDetector;
                    this.goToPage = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
                    this.goToLink = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
                    this.layout = null;
                    this.showSidenav = false;
                    this.layoutNavigation = new _models_hmi__WEBPACK_IMPORTED_MODULE_3__["NavigationSettings"]();
                }
                SidenavComponent.prototype.ngAfterViewInit = function () {
                };
                SidenavComponent.prototype.ngAfterContentChecked = function () {
                    this.showSidenav = (this.layout) ? true : false;
                    this.changeDetector.detectChanges();
                };
                SidenavComponent.prototype.onGoTo = function (item) {
                    if (item.view) {
                        this.goToPage.emit(item.view);
                    }
                    else if (item.link) {
                        this.goToLink.emit(item.link);
                    }
                };
                SidenavComponent.prototype.setLayout = function (ly) {
                    this.layout = ly;
                    if (this.layout.navigation) {
                        this.layoutNavigation = this.layout.navigation;
                    }
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
                    __metadata("design:type", _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatSidenav"])
                ], SidenavComponent.prototype, "sidenav", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"])
                ], SidenavComponent.prototype, "goToPage", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"])
                ], SidenavComponent.prototype, "goToLink", void 0);
                SidenavComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'app-sidenav',
                        template: __webpack_require__(/*! ./sidenav.component.html */ "./app/sidenav/sidenav.component.html"),
                        styles: [__webpack_require__(/*! ./sidenav.component.css */ "./app/sidenav/sidenav.component.css")]
                    }),
                    __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"],
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]])
                ], SidenavComponent);
                return SidenavComponent;
            }());



            /***/
}),

/***/ "./app/tester/tester.component.css":
/*!*****************************************!*\
  !*** ./app/tester/tester.component.css ***!
  \*****************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ".tester-panel {\n    width: 300px;\n    height: 563px;\n    z-index: 99999 !important;\n    position: absolute;\n    right: 10px;\n    top: 50px;\n    color: rgb(240, 240, 240);\n    background-color: rgb(46, 46, 48);\n    box-shadow: 0 2px 6px 0 rgba(0, 0, 0, 0.2), 0 2px 6px 0 rgba(0, 0, 0, 0.18);\n    border: 0px !important;\n}\n\n.tester-header {\n    height: 30px;\n    color: rgb(230, 230, 230);\n    padding-left: 10px;\n    cursor: move;\n    line-height: 30px;\n    background-color: rgb(0, 0, 0);\n}\n\n.tester-close {\n    font-size: 28px;\n    cursor: pointer;\n    right: 5px;\n    position: absolute;\n    top: 0px;\n}\n\n.tester-body {\n    overflow-y: auto;\n    height: 350px;\n    color: rgb(230, 230, 230);\n}\n\n.tester-output {\n    overflow-y: auto;\n    height: 180px;\n    border-top: 1px solid gray;\n    padding: 2px 2px 0px 2px;\n    color: rgb(230, 230, 230);\n    padding-left: 5px;\n}\n\n.output-item {\n    display: block;\n    font-size: 12px;\n}\n\n.svg-property {\n    color: rgba(0, 0, 0, 0.75);\n}\n\n.svg-property span {\n    display: block;\n    font-size: 12px;\n    margin: 0px 5px 0px 10px;\n    color: rgb(230, 230, 230);\n}\n\n.svg-property input {\n    width: 50%;\n    display: inline-block;\n    margin: 0px 10px 12px 10px;\n    border: unset;\n    background-color: inherit;\n    color: rgb(230, 230, 230);\n    background-color: rgb(66, 66, 66);\n    height: 22px;\n}\n\n.svg-property button {\n    height: 26px;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGVzdGVyL3Rlc3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLGFBQWE7SUFDYix5QkFBeUI7SUFDekIsa0JBQWtCO0lBQ2xCLFdBQVc7SUFDWCxTQUFTO0lBQ1QseUJBQXlCO0lBQ3pCLGlDQUFpQztJQUNqQywyRUFBMkU7SUFDM0Usc0JBQXNCO0FBQzFCOztBQUVBO0lBQ0ksWUFBWTtJQUNaLHlCQUF5QjtJQUN6QixrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLGlCQUFpQjtJQUNqQiw4QkFBOEI7QUFDbEM7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsZUFBZTtJQUNmLFVBQVU7SUFDVixrQkFBa0I7SUFDbEIsUUFBUTtBQUNaOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGFBQWE7SUFDYix5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLDBCQUEwQjtJQUMxQix3QkFBd0I7SUFDeEIseUJBQXlCO0lBQ3pCLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGNBQWM7SUFDZCxlQUFlO0FBQ25COztBQUVBO0lBQ0ksMEJBQTBCO0FBQzlCOztBQUVBO0lBQ0ksY0FBYztJQUNkLGVBQWU7SUFDZix3QkFBd0I7SUFDeEIseUJBQXlCO0FBQzdCOztBQUVBO0lBQ0ksVUFBVTtJQUNWLHFCQUFxQjtJQUNyQiwwQkFBMEI7SUFDMUIsYUFBYTtJQUNiLHlCQUF5QjtJQUN6Qix5QkFBeUI7SUFDekIsaUNBQWlDO0lBQ2pDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxZQUFZO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvdGVzdGVyL3Rlc3Rlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRlc3Rlci1wYW5lbCB7XG4gICAgd2lkdGg6IDMwMHB4O1xuICAgIGhlaWdodDogNTYzcHg7XG4gICAgei1pbmRleDogOTk5OTkgIWltcG9ydGFudDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcmlnaHQ6IDEwcHg7XG4gICAgdG9wOiA1MHB4O1xuICAgIGNvbG9yOiByZ2IoMjQwLCAyNDAsIDI0MCk7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDQ2LCA0NiwgNDgpO1xuICAgIGJveC1zaGFkb3c6IDAgMnB4IDZweCAwIHJnYmEoMCwgMCwgMCwgMC4yKSwgMCAycHggNnB4IDAgcmdiYSgwLCAwLCAwLCAwLjE4KTtcbiAgICBib3JkZXI6IDBweCAhaW1wb3J0YW50O1xufVxuXG4udGVzdGVyLWhlYWRlciB7XG4gICAgaGVpZ2h0OiAzMHB4O1xuICAgIGNvbG9yOiByZ2IoMjMwLCAyMzAsIDIzMCk7XG4gICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xuICAgIGN1cnNvcjogbW92ZTtcbiAgICBsaW5lLWhlaWdodDogMzBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMCwgMCwgMCk7XG59XG5cbi50ZXN0ZXItY2xvc2Uge1xuICAgIGZvbnQtc2l6ZTogMjhweDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgcmlnaHQ6IDVweDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwcHg7XG59XG5cbi50ZXN0ZXItYm9keSB7XG4gICAgb3ZlcmZsb3cteTogYXV0bztcbiAgICBoZWlnaHQ6IDM1MHB4O1xuICAgIGNvbG9yOiByZ2IoMjMwLCAyMzAsIDIzMCk7XG59XG5cbi50ZXN0ZXItb3V0cHV0IHtcbiAgICBvdmVyZmxvdy15OiBhdXRvO1xuICAgIGhlaWdodDogMTgwcHg7XG4gICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIGdyYXk7XG4gICAgcGFkZGluZzogMnB4IDJweCAwcHggMnB4O1xuICAgIGNvbG9yOiByZ2IoMjMwLCAyMzAsIDIzMCk7XG4gICAgcGFkZGluZy1sZWZ0OiA1cHg7XG59XG5cbi5vdXRwdXQtaXRlbSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZm9udC1zaXplOiAxMnB4O1xufVxuXG4uc3ZnLXByb3BlcnR5IHtcbiAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjc1KTtcbn1cblxuLnN2Zy1wcm9wZXJ0eSBzcGFuIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgbWFyZ2luOiAwcHggNXB4IDBweCAxMHB4O1xuICAgIGNvbG9yOiByZ2IoMjMwLCAyMzAsIDIzMCk7XG59XG5cbi5zdmctcHJvcGVydHkgaW5wdXQge1xuICAgIHdpZHRoOiA1MCU7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIG1hcmdpbjogMHB4IDEwcHggMTJweCAxMHB4O1xuICAgIGJvcmRlcjogdW5zZXQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogaW5oZXJpdDtcbiAgICBjb2xvcjogcmdiKDIzMCwgMjMwLCAyMzApO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYig2NiwgNjYsIDY2KTtcbiAgICBoZWlnaHQ6IDIycHg7XG59XG5cbi5zdmctcHJvcGVydHkgYnV0dG9uIHtcbiAgICBoZWlnaHQ6IDI2cHg7XG59XG4iXX0= */"

            /***/
}),

/***/ "./app/tester/tester.component.html":
/*!******************************************!*\
  !*** ./app/tester/tester.component.html ***!
  \******************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div class=\"tester-panel\" *ngIf=\"show\" ngDraggable>\n    <style>\n        pre {\n            white-space: pre-line;\n        }\n    </style>\n    <div name=\"dlgTesterForm\">\n        <div class=\"tester-header\">\n            <div class=\"tester-title\">\n                {{'tester.title' | translate}}\n            </div>\n            <div class=\"tester-close\" (click)=\"close()\">\n                &times;\n            </div>\n        </div>\n        <div class=\"tester-body\">\n            <div class=\"_svg-property\" mat-dialog-actions>\n            </div>\n            <br>\n            <div *ngFor=\"let item of items\">\n                <div class=\"svg-property\">\n                    <span>{{item.source}} - {{item.name}} :</span>\n                    <input id=\"item.name\" [(ngModel)]=\"item.value\" type=\"text\" class=\"no-spinners\" />\n                    <button mat-raised-button color=\"primary\" type=\"button\" class=\"\" (click)=\"setSignal(item)\">\n                        {{'tester.send' | translate}}\n                    </button>\n                </div>\n            </div>\n        </div>\n        <div class=\"tester-output\">\n            <span *ngFor=\"let item of output; index as i\" class=\"output-item\">\n                {{item}}\n            </span>\n        </div>\n    </div>\n</div>"

            /***/
}),

/***/ "./app/tester/tester.component.ts":
/*!****************************************!*\
  !*** ./app/tester/tester.component.ts ***!
  \****************************************/
/*! exports provided: TesterComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TesterComponent", function () { return TesterComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _gauges_gauges_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../gauges/gauges.component */ "./app/gauges/gauges.component.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "../node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _services_hmi_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../_services/hmi.service */ "./app/_services/hmi.service.ts");
/* harmony import */ var _tester_tester_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../tester/tester.service */ "./app/tester/tester.service.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };





            var TesterComponent = /** @class */ (function () {
                // items: Map<string, GaugeSettings> = new Map<string, GaugeSettings>();
                function TesterComponent(hmiService, gaugesManager, testerService) {
                    this.hmiService = hmiService;
                    this.gaugesManager = gaugesManager;
                    this.testerService = testerService;
                    this.show = false;
                    this.items = [];
                    this.output = [];
                    this.demoSwitch = true;
                }
                TesterComponent.prototype.ngOnInit = function () {
                    var _this = this;
                    this.testerService.change.subscribe(function (isOpen) {
                        _this.show = isOpen;
                    });
                    this.gaugesManager.onevent.subscribe(function (event) {
                        if (event.dbg) {
                            _this.addOutput(event.dbg);
                        }
                    });
                };
                TesterComponent.prototype.ngOnDestroy = function () {
                    this.stopDemo();
                };
                TesterComponent.prototype.setSignal = function (sig) {
                    this.hmiService.setSignalValue(sig);
                    this.addOutput(' > ' + sig.source + ' - ' + sig.name + ' = ' + sig.value);
                };
                TesterComponent.prototype.setSignals = function (items) {
                    this.items = items;
                };
                TesterComponent.prototype.setDemo = function (flag) {
                    if (flag) {
                        // this.gaugesManager.startDemo();
                    }
                    else {
                        // this.gaugesManager.stopDemo();
                    }
                };
                TesterComponent.prototype.addOutput = function (item) {
                    this.output.unshift(item);
                };
                TesterComponent.prototype.close = function () {
                    this.testerService.toggle(false);
                };
                TesterComponent.prototype.startDemo = function () {
                    var _this = this;
                    this.stopDemo();
                    var sourcetimer = Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["timer"])(2000, 1500);
                    this.subscription = sourcetimer.subscribe(function (t) {
                        _this.demoValue();
                    });
                };
                TesterComponent.prototype.stopDemo = function () {
                    try {
                        if (this.subscription) {
                            this.subscription.unsubscribe();
                        }
                    }
                    catch (e) {
                    }
                };
                TesterComponent.prototype.demoValue = function () {
                };
                TesterComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'app-tester',
                        template: __webpack_require__(/*! ./tester.component.html */ "./app/tester/tester.component.html"),
                        styles: [__webpack_require__(/*! ./tester.component.css */ "./app/tester/tester.component.css")]
                    }),
                    __metadata("design:paramtypes", [_services_hmi_service__WEBPACK_IMPORTED_MODULE_3__["HmiService"], _gauges_gauges_component__WEBPACK_IMPORTED_MODULE_1__["GaugesManager"],
                    _tester_tester_service__WEBPACK_IMPORTED_MODULE_4__["TesterService"]])
                ], TesterComponent);
                return TesterComponent;
            }());



            /***/
}),

/***/ "./app/tester/tester.service.ts":
/*!**************************************!*\
  !*** ./app/tester/tester.service.ts ***!
  \**************************************/
/*! exports provided: TesterService */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TesterService", function () { return TesterService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };

            var TesterService = /** @class */ (function () {
                function TesterService() {
                    this.change = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
                }
                TesterService.prototype.toggle = function (flag) {
                    this.change.emit(flag);
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"])
                ], TesterService.prototype, "change", void 0);
                TesterService = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])()
                ], TesterService);
                return TesterService;
            }());



            /***/
}),

/***/ "./app/text-list/item-text.dialog.html":
/*!*********************************************!*\
  !*** ./app/text-list/item-text.dialog.html ***!
  \*********************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div style=\"width: 600px;\">\n    <h1 mat-dialog-title style=\"display:inline-block;cursor:move;\" mat-dialog-draggable>{{'dlg.textproperty-title' | translate}}</h1>\n    <mat-icon (click)=\"onNoClick()\" style=\"float:right;margin-right:-10px;margin-top:-10px;cursor:pointer;color:gray;\">clear</mat-icon>\n    <div mat-dialog-content *ngIf=\"data.editmode < 0\">\n\t\t{{'msg.text-remove' | translate}} ({{data.text.name}}) '{{data.text.value}}' ?\n\t</div>\n    <div mat-dialog-content *ngIf=\"data.editmode >= 0\">\n        <div class=\"my-form-field\" style=\"display: inline-block;margin-bottom: 10px;\">\n            <span>{{'dlg.textproperty-id' | translate}}</span>\n            <input [(ngModel)]=\"data.text.name\" type=\"text\" (change)=\"checkValid()\">\n        </div>\n        <div class=\"my-form-field\" style=\"margin-bottom: 10px;padding-left: 20px;float: right;\">\n            <span>{{'dlg.textproperty-group' | translate}}</span>\n            <input [(ngModel)]=\"data.text.group\" type=\"text\" (change)=\"checkValid()\" style=\"width:325px\">\n        </div>\n        <div class=\"my-form-field\" style=\"display: block;margin-bottom: 10px;width: 100%;\">\n            <span>{{'dlg.textproperty-value' | translate}}</span>\n            <input [(ngModel)]=\"data.text.value\" type=\"text\" (change)=\"checkValid()\" style=\"width: 545px;\">\n        </div>\n        <div style=\"height: 20px\">\n            <div class=\"message-error\" *ngIf=\"errorExist\">\n                <span>{{'msg.textproperty-error-exist' | translate}}</span>\n            </div>\n            <div class=\"message-error\" *ngIf=\"errorMissingValue\">\n                <span>{{'msg.textproperty-missing-value' | translate}}</span>\n            </div>\n        </div>\n    </div>\n    <div mat-dialog-actions class=\"dialog-action\">\n        <button mat-raised-button (click)=\"onNoClick()\">{{'dlg.cancel' | translate}}</button>\n        <button mat-raised-button color=\"primary\" (click)=\"onOkClick()\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\n    </div>\n</div>"

            /***/
}),

/***/ "./app/text-list/text-list.component.css":
/*!***********************************************!*\
  !*** ./app/text-list/text-list.component.css ***!
  \***********************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ".header-panel {\n    /* z-index: 9999 !important; */\n    position: fixed;\n    top: 0px;\n    left: 0px;\n    background-color: rgba(33,33,33,1);\n    /* background-color: rgba(33,33,33,0.92); */\n    color: rgba(255,255,255,1);\n    height: 40px;\n    width: 100%;\n    text-align: center;\n    line-height: 40px;\n}\n\n.work-panel {\n    position: absolute;\n    top: 40px;\n    left: 0px;\n    right: 0px;\n    bottom: 0px;\n}\n\n.filter {\n    display: inline-block;\n    min-height: 60px;\n    padding: 8px 24px 0;\n}\n\n.filter .mat-form-field {\n    font-size: 14px;\n    width: 100%;\n}\n\n.table {\n    height: 705px;\n}\n\n.mat-table {\n    overflow: auto;\n    min-width: 1560px;\n    /* margin: 5px; */\n    /* max-height: 500px; */\n}\n\n.mat-header-cell.mat-sort-header-sorted {\n    color: black;\n}\n\n.mat-header-row {\n    top: 0;\n    position: -webkit-sticky;\n    position: sticky;\n    z-index: 1;\n    background-color: rgba(76,76,76,1);\n    color: white;\n}\n\n.mat-header-cell {\n    color: white;\n    font-size: 14px;\n}\n\n.mat-column-select {\n    overflow: visible;\n    flex: 0 0 100px;\n}\n\n.mat-column-id {\n    flex: 0 0 300px;\n}\n\n.mat-column-group {\n    flex: 0 0 200px;\n}\n\n.mat-column-value {\n    flex: 0 0 800px;\n}\n\n.mat-column-remove {\n    flex: 0 0 60px;\n}\n\n.selectidthClass{\n    flex: 0 0 50px;\n }\n\n.message-error {\n    display: inline-block;\n    /* background-color: red;; */\n    color:red;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGV4dC1saXN0L3RleHQtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksOEJBQThCO0lBQzlCLGVBQWU7SUFDZixRQUFRO0lBQ1IsU0FBUztJQUNULGtDQUFrQztJQUNsQywyQ0FBMkM7SUFDM0MsMEJBQTBCO0lBQzFCLFlBQVk7SUFDWixXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixTQUFTO0lBQ1QsU0FBUztJQUNULFVBQVU7SUFDVixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxxQkFBcUI7SUFDckIsZ0JBQWdCO0lBQ2hCLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGVBQWU7SUFDZixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksY0FBYztJQUNkLGlCQUFpQjtJQUNqQixpQkFBaUI7SUFDakIsdUJBQXVCO0FBQzNCOztBQUVBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtJQUNJLE1BQU07SUFDTix3QkFBZ0I7SUFBaEIsZ0JBQWdCO0lBQ2hCLFVBQVU7SUFDVixrQ0FBa0M7SUFDbEMsWUFBWTtBQUNoQjs7QUFDQTtJQUNJLFlBQVk7SUFDWixlQUFlO0FBQ25COztBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxlQUFlO0FBQ25COztBQUdBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksY0FBYztDQUNqQjs7QUFFRDtJQUNJLHFCQUFxQjtJQUNyQiw0QkFBNEI7SUFDNUIsU0FBUztBQUNiIiwiZmlsZSI6InNyYy9hcHAvdGV4dC1saXN0L3RleHQtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmhlYWRlci1wYW5lbCB7XG4gICAgLyogei1pbmRleDogOTk5OSAhaW1wb3J0YW50OyAqL1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB0b3A6IDBweDtcbiAgICBsZWZ0OiAwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgzMywzMywzMywxKTtcbiAgICAvKiBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDMzLDMzLDMzLDAuOTIpOyAqL1xuICAgIGNvbG9yOiByZ2JhKDI1NSwyNTUsMjU1LDEpO1xuICAgIGhlaWdodDogNDBweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbGluZS1oZWlnaHQ6IDQwcHg7XG59XG5cbi53b3JrLXBhbmVsIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA0MHB4O1xuICAgIGxlZnQ6IDBweDtcbiAgICByaWdodDogMHB4O1xuICAgIGJvdHRvbTogMHB4O1xufVxuXG4uZmlsdGVyIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgbWluLWhlaWdodDogNjBweDtcbiAgICBwYWRkaW5nOiA4cHggMjRweCAwO1xufVxuXG4uZmlsdGVyIC5tYXQtZm9ybS1maWVsZCB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIHdpZHRoOiAxMDAlO1xufVxuXG4udGFibGUge1xuICAgIGhlaWdodDogNzA1cHg7XG59XG5cbi5tYXQtdGFibGUge1xuICAgIG92ZXJmbG93OiBhdXRvO1xuICAgIG1pbi13aWR0aDogMTU2MHB4O1xuICAgIC8qIG1hcmdpbjogNXB4OyAqL1xuICAgIC8qIG1heC1oZWlnaHQ6IDUwMHB4OyAqL1xufVxuICBcbi5tYXQtaGVhZGVyLWNlbGwubWF0LXNvcnQtaGVhZGVyLXNvcnRlZCB7XG4gICAgY29sb3I6IGJsYWNrO1xufVxuXG4ubWF0LWhlYWRlci1yb3cge1xuICAgIHRvcDogMDtcbiAgICBwb3NpdGlvbjogc3RpY2t5O1xuICAgIHotaW5kZXg6IDE7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg3Niw3Niw3NiwxKTtcbiAgICBjb2xvcjogd2hpdGU7XG59XG4ubWF0LWhlYWRlci1jZWxsIHtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgZm9udC1zaXplOiAxNHB4O1xufVxuXG4ubWF0LWNvbHVtbi1zZWxlY3Qge1xuICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuICAgIGZsZXg6IDAgMCAxMDBweDtcbn1cblxuLm1hdC1jb2x1bW4taWQge1xuICAgIGZsZXg6IDAgMCAzMDBweDtcbn1cblxuXG4ubWF0LWNvbHVtbi1ncm91cCB7XG4gICAgZmxleDogMCAwIDIwMHB4O1xufVxuXG4ubWF0LWNvbHVtbi12YWx1ZSB7XG4gICAgZmxleDogMCAwIDgwMHB4O1xufVxuXG4ubWF0LWNvbHVtbi1yZW1vdmUge1xuICAgIGZsZXg6IDAgMCA2MHB4O1xufVxuXG4uc2VsZWN0aWR0aENsYXNze1xuICAgIGZsZXg6IDAgMCA1MHB4O1xuIH1cblxuLm1lc3NhZ2UtZXJyb3Ige1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAvKiBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7OyAqL1xuICAgIGNvbG9yOnJlZDtcbn0iXX0= */"

            /***/
}),

/***/ "./app/text-list/text-list.component.html":
/*!************************************************!*\
  !*** ./app/text-list/text-list.component.html ***!
  \************************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div class=\"header-panel\">\n    {{'texts.list-title' | translate}}\n</div>\n<div class=\"work-panel\">\n    <!-- <div class=\"filter\">\n        <div class=\"my-form-field\" style=\"padding-right: 10px;\">\n            <span>{{'texts.list-filter-group' | translate}}</span>\n            <mat-select [(value)]=\"groupSelected\" style=\"width: 300px\" (selectionChange)=\"onGroupChange($event.source)\">\n                <mat-option *ngFor=\"let group of groups\" [value]=\"group\">\n                    {{ group }}\n                </mat-option>\n            </mat-select>\n        </div>\n        <div class=\"my-form-field\" style=\"padding-right: 10px;\">\n            <span>{{'texts.list-filter' | translate}}</span>\n            <input (keyup)=\"applyFilter($event.target.value)\" style=\"width: 450px\" type=\"text\">\n        </div>\n    </div> -->\n    <mat-table #table [dataSource]=\"dataSource\" matSort>\n        <!-- Checkbox Column -->\n        <ng-container matColumnDef=\"select\">\n            <mat-header-cell *matHeaderCellDef [ngClass]=\"'selectidthClass'\">\n                <button mat-icon-button (click)=\"onAddText()\" class=\"remove\">\n                    <mat-icon>add</mat-icon>\n                </button>\n            </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\" [ngClass]=\"'selectidthClass'\">\n                <button mat-icon-button (click)=\"onEditText(element)\" class=\"remove\">\n                    <mat-icon>edit</mat-icon>\n                </button>\n            </mat-cell>\n        </ng-container>\n\n        <!-- ID Column -->\n        <ng-container matColumnDef=\"id\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header> {{'texts.list-id' | translate}} </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\n        </ng-container>\n\n        <!-- Group Column -->\n        <ng-container matColumnDef=\"group\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header> {{'texts.list-group' | translate}} </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\"> {{element.group}} </mat-cell>\n        </ng-container>\n\n        <!-- Device Column -->\n        <ng-container matColumnDef=\"value\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header> {{'texts.list-value' | translate}} </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\"> {{element.value}} </mat-cell>\n        </ng-container>\n\n        <!-- Button remove Column -->\n        <ng-container matColumnDef=\"remove\">\n            <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\">\n                <button mat-icon-button (click)=\"$event.stopPropagation();onRemoveText(element)\" class=\"remove\">\n                    <mat-icon>clear</mat-icon>\n                </button>\n            </mat-cell>\n        </ng-container>\n\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n        <mat-row *matRowDef=\"let row; columns: displayedColumns;\" class=\"my-mat-row\"></mat-row>\n    </mat-table>\n</div>\n<button mat-fab color=\"primary\" (click)=\"onAddText()\"\n    style=\"position: absolute; right: 20px; bottom: 30px; z-index: 9999;\">\n    <mat-icon class=\"\">add</mat-icon>\n</button>"

            /***/
}),

/***/ "./app/text-list/text-list.component.ts":
/*!**********************************************!*\
  !*** ./app/text-list/text-list.component.ts ***!
  \**********************************************/
/*! exports provided: TextListComponent, DialogItemText */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TextListComponent", function () { return TextListComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DialogItemText", function () { return DialogItemText; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "../node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/cdk/collections */ "../node_modules/@angular/cdk/esm5/collections.es5.js");
/* harmony import */ var _services_project_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../_services/project.service */ "./app/_services/project.service.ts");
/* harmony import */ var _models_text__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../_models/text */ "./app/_models/text.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };
            var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
                return function (target, key) { decorator(target, key, paramIndex); }
            };





            var TextListComponent = /** @class */ (function () {
                function TextListComponent(dialog, projectService) {
                    this.dialog = dialog;
                    this.projectService = projectService;
                    this.displayedColumns = ['select', 'id', 'group', 'value', 'remove'];
                    this.dataSource = new _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatTableDataSource"]([]);
                    this.selection = new _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_2__["SelectionModel"](true, []);
                }
                TextListComponent.prototype.ngOnInit = function () {
                    var _this = this;
                    this.loadTexts();
                    this.subscriptionLoad = this.projectService.onLoadHmi.subscribe(function (res) {
                        _this.loadTexts();
                    });
                };
                TextListComponent.prototype.ngAfterViewInit = function () {
                    this.dataSource.sort = this.sort;
                };
                TextListComponent.prototype.ngOnDestroy = function () {
                    try {
                        if (this.subscriptionLoad) {
                            this.subscriptionLoad.unsubscribe();
                        }
                    }
                    catch (e) {
                    }
                };
                TextListComponent.prototype.onAddText = function () {
                    var text = new _models_text__WEBPACK_IMPORTED_MODULE_4__["Text"]();
                    this.editText(text, 1);
                };
                TextListComponent.prototype.onEditText = function (text) {
                    this.editText(text, 0);
                };
                TextListComponent.prototype.onRemoveText = function (text) {
                    this.editText(text, -1);
                };
                TextListComponent.prototype.editText = function (text, toAdd) {
                    var _this = this;
                    var mtext = JSON.parse(JSON.stringify(text));
                    var dialogRef = this.dialog.open(DialogItemText, {
                        position: { top: '60px' },
                        data: { text: mtext, editmode: toAdd, texts: this.dataSource.data }
                    });
                    dialogRef.afterClosed().subscribe(function (result) {
                        if (result) {
                            if (toAdd < 0) {
                                _this.projectService.removeText(result);
                            }
                            else {
                                _this.projectService.setText(result, text);
                            }
                            _this.loadTexts();
                        }
                    });
                };
                TextListComponent.prototype.loadTexts = function () {
                    this.dataSource.data = this.projectService.getTexts();
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatTable"]),
                    __metadata("design:type", _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatTable"])
                ], TextListComponent.prototype, "table", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatSort"]),
                    __metadata("design:type", _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatSort"])
                ], TextListComponent.prototype, "sort", void 0);
                TextListComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'app-text-list',
                        template: __webpack_require__(/*! ./text-list.component.html */ "./app/text-list/text-list.component.html"),
                        styles: [__webpack_require__(/*! ./text-list.component.css */ "./app/text-list/text-list.component.css")]
                    }),
                    __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialog"],
                    _services_project_service__WEBPACK_IMPORTED_MODULE_3__["ProjectService"]])
                ], TextListComponent);
                return TextListComponent;
            }());

            var DialogItemText = /** @class */ (function () {
                function DialogItemText(dialogRef, data) {
                    this.dialogRef = dialogRef;
                    this.data = data;
                    this.existtexts = [];
                    this.errorExist = false;
                    this.errorMissingValue = false;
                    if (data.editmode > 0) {
                        data.text.name = this.getNextTextId();
                    }
                    if (data.texts) {
                        this.existtexts = data.texts.filter(function (t) { return t.name !== data.text.name; });
                    }
                }
                DialogItemText.prototype.onNoClick = function () {
                    this.dialogRef.close();
                };
                DialogItemText.prototype.onOkClick = function () {
                    if (this.data.editmode < 0 || this.checkValid())
                        this.dialogRef.close(this.data.text);
                };
                DialogItemText.prototype.checkValid = function () {
                    var _this = this;
                    this.errorMissingValue = (!this.data.text.name || !this.data.text.value);
                    this.errorExist = (this.existtexts.find(function (tx) { return tx.name === _this.data.text.name; })) ? true : false;
                    return !(this.errorMissingValue || this.errorExist);
                };
                DialogItemText.prototype.getNextTextId = function () {
                    var prefix = 'text_';
                    var num = 1;
                    if (this.data.texts) {
                        while (this.data.texts.find(function (tx) { return tx.name === prefix + num; })) {
                            num++;
                        }
                    }
                    return prefix + num;
                };
                DialogItemText = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'dialog-item-text',
                        template: __webpack_require__(/*! ./item-text.dialog.html */ "./app/text-list/item-text.dialog.html"),
                        styles: [__webpack_require__(/*! ./text-list.component.css */ "./app/text-list/text-list.component.css")]
                    }),
                    __param(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MAT_DIALOG_DATA"])),
                    __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialogRef"], Object])
                ], DialogItemText);
                return DialogItemText;
            }());



            /***/
}),

/***/ "./app/users/user.dialog.html":
/*!************************************!*\
  !*** ./app/users/user.dialog.html ***!
  \************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div>\n    <h1 mat-dialog-title style=\"display:inline-block;cursor:move;\" mat-dialog-draggable>{{'dlg.userproperty-title' | translate}}</h1>\n    <mat-icon (click)=\"onNoClick()\" style=\"float:right;margin-right:-10px;margin-top:-10px;cursor:pointer;color:gray;\">clear</mat-icon>\n    <div mat-dialog-content *ngIf=\"!data.current\">\n\t\t{{'msg.user-remove' | translate}} '{{data.user.username}}' ?\n\t</div>\n    <div mat-dialog-content *ngIf=\"data.current\">\n        <div class=\"my-form-field\" style=\"display: block;margin-bottom: 10px;\">\n            <span>{{'general.username' | translate}}</span>\n            <input [(ngModel)]=\"data.user.username\" type=\"text\" style=\"width: 125px\" [disabled]=\"isNewUser()\">\n        </div>\n        <div class=\"my-form-field\" style=\"display: block;margin-bottom: 10px;\">\n            <span>{{'general.fullname' | translate}}</span>\n            <input [(ngModel)]=\"data.user.fullname\" type=\"text\" style=\"width: 250px\">\n        </div>\n        <div class=\"my-form-field\" style=\"display: block;margin-bottom: 10px;\">\n            <span>{{'general.password' | translate}}</span>\n            <input autocomplete=\"off\" [(ngModel)]=\"data.user.password\" [type]=\"showPassword ? 'text' : 'password'\" placeholder=\"•••••••\" style=\"width: 250px\">\n            <mat-icon matSuffix (click)=\"showPassword = !showPassword\" class=\"show-password\">{{showPassword ? 'visibility' : 'visibility_off'}}</mat-icon>\n        </div>\n        <div class=\"my-form-field\" style=\"display: block;margin-bottom: 10px;\">\n            <span>{{'dlg.userproperty-groups' | translate}}</span>\n            <sel-options #seloptions [selected]=\"selectedGroups\" [disabled]=\"isAdmin()\" [options]=\"groups\"></sel-options>\n        </div>\n    </div>\n    <div mat-dialog-actions class=\"dialog-action\">\n        <button mat-raised-button (click)=\"onNoClick()\">{{'dlg.cancel' | translate}}</button>\n        <button mat-raised-button [disabled]=\"!isValid(data.user.username)\" color=\"primary\" (click)=\"onOkClick()\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\n    </div>\n</div>"

            /***/
}),

/***/ "./app/users/users.component.css":
/*!***************************************!*\
  !*** ./app/users/users.component.css ***!
  \***************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ".header-panel {\n    /* z-index: 9999 !important; */\n    background-color: var(--headerBackground);\n    color: var(--headerColor);\n    position: fixed;\n    top: 0px;\n    left: 0px;\n    height: 36px;\n    width: 100%;\n    text-align: center;\n    line-height: 36px;\n    border-bottom: 1px solid var(--headerBorder);\n}\n\n.work-panel {\n    position: absolute;\n    top: 37px;\n    left: 0px;\n    right: 0px;\n    bottom: 0px;\n    background-color: var(--workPanelBackground);\n}\n\n.container {\n    display: flex;\n    flex-direction: column;\n    min-width: 300px;\n    position: absolute;\n    bottom: 0px;\n    top: 0px;\n    left:0px;\n    right:0px;\n}\n\n.mat-table {\n    overflow: auto;\n    /* min-width: 1560px; */\n}\n\n.mat-row {\n    min-height: 40px;\n    height: 43px;\n}\n\n.mat-cell {\n    font-size: 13px;\n}\n\n.mat-header-row {\n    top: 0;\n    position: -webkit-sticky;\n    position: sticky;\n    z-index: 1;\n}\n\n.mat-header-cell {\n    font-size: 15px;\n}\n\n.mat-column-select {\n    overflow: visible;\n    flex: 0 0 100px;\n}\n\n.mat-column-username {\n    flex: 0 0 200px;\n}\n\n.mat-column-fullname {\n    flex: 0 0 250px;\n}\n\n.mat-column-groups {\n    flex: 0 0 750px;\n}\n\n.mat-column-remove {\n    flex: 0 0 60px;\n}\n\n.selectidthClass{\n    flex: 0 0 50px;\n }\n\n.show-password {\n    bottom: 2px;\n    right: 8px;\n    position: absolute;\n}\n\n.my-header-filter /deep/ .mat-sort-header-button {\n    display: block;\n    text-align: left;\n    margin-top: 5px;\n}\n\n.my-header-filter /deep/ .mat-sort-header-arrow {\n    top: -12px;\n    right: 20px;\n}\n\n.my-header-filter-input {\n    display: block; \n    margin-top: 4px;\n    margin-bottom: 6px;\n    padding: 3px 1px 3px 2px;\n    border-radius: 2px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlcnMvdXNlcnMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLDhCQUE4QjtJQUM5Qix5Q0FBeUM7SUFDekMseUJBQXlCO0lBQ3pCLGVBQWU7SUFDZixRQUFRO0lBQ1IsU0FBUztJQUNULFlBQVk7SUFDWixXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLGlCQUFpQjtJQUNqQiw0Q0FBNEM7QUFDaEQ7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsU0FBUztJQUNULFNBQVM7SUFDVCxVQUFVO0lBQ1YsV0FBVztJQUNYLDRDQUE0QztBQUNoRDs7QUFFQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsUUFBUTtJQUNSLFFBQVE7SUFDUixTQUFTO0FBQ2I7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsdUJBQXVCO0FBQzNCOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxlQUFlO0FBQ25COztBQUVBO0lBQ0ksTUFBTTtJQUNOLHdCQUFnQjtJQUFoQixnQkFBZ0I7SUFDaEIsVUFBVTtBQUNkOztBQUdBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixlQUFlO0FBQ25COztBQUVBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxlQUFlO0FBQ25COztBQUVBO0lBQ0ksY0FBYztBQUNsQjs7QUFFQTtJQUNJLGNBQWM7Q0FDakI7O0FBRUE7SUFDRyxXQUFXO0lBQ1gsVUFBVTtJQUNWLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGNBQWM7SUFDZCxnQkFBZ0I7SUFDaEIsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLFVBQVU7SUFDVixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsZUFBZTtJQUNmLGtCQUFrQjtJQUNsQix3QkFBd0I7SUFDeEIsa0JBQWtCO0FBQ3RCIiwiZmlsZSI6InNyYy9hcHAvdXNlcnMvdXNlcnMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5oZWFkZXItcGFuZWwge1xuICAgIC8qIHotaW5kZXg6IDk5OTkgIWltcG9ydGFudDsgKi9cbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1oZWFkZXJCYWNrZ3JvdW5kKTtcbiAgICBjb2xvcjogdmFyKC0taGVhZGVyQ29sb3IpO1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB0b3A6IDBweDtcbiAgICBsZWZ0OiAwcHg7XG4gICAgaGVpZ2h0OiAzNnB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBsaW5lLWhlaWdodDogMzZweDtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgdmFyKC0taGVhZGVyQm9yZGVyKTtcbn1cblxuLndvcmstcGFuZWwge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDM3cHg7XG4gICAgbGVmdDogMHB4O1xuICAgIHJpZ2h0OiAwcHg7XG4gICAgYm90dG9tOiAwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0td29ya1BhbmVsQmFja2dyb3VuZCk7XG59XG5cbi5jb250YWluZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBtaW4td2lkdGg6IDMwMHB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IDBweDtcbiAgICB0b3A6IDBweDtcbiAgICBsZWZ0OjBweDtcbiAgICByaWdodDowcHg7XG59XG5cbi5tYXQtdGFibGUge1xuICAgIG92ZXJmbG93OiBhdXRvO1xuICAgIC8qIG1pbi13aWR0aDogMTU2MHB4OyAqL1xufVxuICBcbi5tYXQtcm93IHtcbiAgICBtaW4taGVpZ2h0OiA0MHB4O1xuICAgIGhlaWdodDogNDNweDtcbn1cblxuLm1hdC1jZWxsIHtcbiAgICBmb250LXNpemU6IDEzcHg7XG59XG5cbi5tYXQtaGVhZGVyLXJvdyB7XG4gICAgdG9wOiAwO1xuICAgIHBvc2l0aW9uOiBzdGlja3k7XG4gICAgei1pbmRleDogMTtcbn1cblxuXG4ubWF0LWhlYWRlci1jZWxsIHtcbiAgICBmb250LXNpemU6IDE1cHg7XG59XG5cbi5tYXQtY29sdW1uLXNlbGVjdCB7XG4gICAgb3ZlcmZsb3c6IHZpc2libGU7XG4gICAgZmxleDogMCAwIDEwMHB4O1xufVxuXG4ubWF0LWNvbHVtbi11c2VybmFtZSB7XG4gICAgZmxleDogMCAwIDIwMHB4O1xufVxuXG4ubWF0LWNvbHVtbi1mdWxsbmFtZSB7XG4gICAgZmxleDogMCAwIDI1MHB4O1xufVxuXG4ubWF0LWNvbHVtbi1ncm91cHMge1xuICAgIGZsZXg6IDAgMCA3NTBweDtcbn1cblxuLm1hdC1jb2x1bW4tcmVtb3ZlIHtcbiAgICBmbGV4OiAwIDAgNjBweDtcbn1cblxuLnNlbGVjdGlkdGhDbGFzc3tcbiAgICBmbGV4OiAwIDAgNTBweDtcbiB9XG5cbiAuc2hvdy1wYXNzd29yZCB7XG4gICAgYm90dG9tOiAycHg7XG4gICAgcmlnaHQ6IDhweDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG59XG5cbi5teS1oZWFkZXItZmlsdGVyIC9kZWVwLyAubWF0LXNvcnQtaGVhZGVyLWJ1dHRvbiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICBtYXJnaW4tdG9wOiA1cHg7XG59XG5cbi5teS1oZWFkZXItZmlsdGVyIC9kZWVwLyAubWF0LXNvcnQtaGVhZGVyLWFycm93IHtcbiAgICB0b3A6IC0xMnB4O1xuICAgIHJpZ2h0OiAyMHB4O1xufVxuXG4ubXktaGVhZGVyLWZpbHRlci1pbnB1dCB7XG4gICAgZGlzcGxheTogYmxvY2s7IFxuICAgIG1hcmdpbi10b3A6IDRweDtcbiAgICBtYXJnaW4tYm90dG9tOiA2cHg7XG4gICAgcGFkZGluZzogM3B4IDFweCAzcHggMnB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDJweDtcbn0iXX0= */"

            /***/
}),

/***/ "./app/users/users.component.html":
/*!****************************************!*\
  !*** ./app/users/users.component.html ***!
  \****************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div class=\"header-panel\">\n\t{{'users.list-title' | translate}}\n</div>\n<div class=\"work-panel\">\n\t<div class=\"container\">\n\t\t<mat-table #table [dataSource]=\"dataSource\" matSort>\n\t\t\t<!-- Edit Column -->\n\t\t\t<ng-container matColumnDef=\"select\">\n\t\t\t\t<mat-header-cell *matHeaderCellDef [ngClass]=\"'selectidthClass'\">\n\t\t\t\t\t<button mat-icon-button (click)=\"onAddUser()\" class=\"remove\">\n\t\t\t\t\t\t<mat-icon>add</mat-icon>\n\t\t\t\t\t</button>\n\t\t\t\t</mat-header-cell>\n\t\t\t\t<mat-cell *matCellDef=\"let element\" [ngClass]=\"'selectidthClass'\">\n\t\t\t\t\t<button mat-icon-button (click)=\"onEditUser(element)\" class=\"remove\">\n\t\t\t\t\t\t<mat-icon>edit</mat-icon>\n\t\t\t\t\t</button>\n\t\t\t\t</mat-cell>\n\t\t\t</ng-container>\n\n\t\t\t<!-- Username Column -->\n\t\t\t<ng-container matColumnDef=\"username\">\n\t\t\t\t<mat-header-cell *matHeaderCellDef mat-sort-header> {{'users.list-name' | translate}} </mat-header-cell>\n\t\t\t\t<mat-cell *matCellDef=\"let element\"> {{element.username}} </mat-cell>\n\t\t\t</ng-container>\n\n\t\t\t<!-- Fullname Column -->\n\t\t\t<ng-container matColumnDef=\"fullname\">\n\t\t\t\t<mat-header-cell *matHeaderCellDef mat-sort-header> {{'users.list-fullname' | translate}} </mat-header-cell>\n\t\t\t\t<mat-cell *matCellDef=\"let element\"> {{element.fullname}} </mat-cell>\n\t\t\t</ng-container>\n\t\t\t\n\t\t\t<!-- Access Column -->\n\t\t\t<ng-container matColumnDef=\"groups\">\n\t\t\t\t<mat-header-cell *matHeaderCellDef mat-sort-header> {{'users.list-groups' | translate}} </mat-header-cell>\n\t\t\t\t<mat-cell *matCellDef=\"let element\"> {{groupValueToLabel(element.groups)}} </mat-cell>\n\t\t\t</ng-container>\n\n\t\t\t<!-- Button remove Column -->\n\t\t\t<ng-container matColumnDef=\"remove\">\n\t\t\t\t<mat-header-cell *matHeaderCellDef> </mat-header-cell>\n\t\t\t\t<mat-cell *matCellDef=\"let element\">\n\t\t\t\t\t<button mat-icon-button (click)=\"$event.stopPropagation();onRemoveUser(element)\" class=\"remove\" *ngIf=\"!isAdmin(element)\">\n\t\t\t\t\t\t<mat-icon>clear</mat-icon>\n\t\t\t\t\t</button>\n\t\t\t\t</mat-cell>\n\t\t\t</ng-container>\n\n\t\t\t<mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n\t\t\t<mat-row *matRowDef=\"let row; columns: displayedColumns;\" class=\"my-mat-row\"></mat-row>\n\t\t</mat-table>\n\t</div>\n</div>\n\n<button mat-fab color=\"primary\" (click)=\"onAddUser()\" class=\"fab-add\">\n\t<mat-icon class=\"\">add</mat-icon>\n</button>"

            /***/
}),

/***/ "./app/users/users.component.ts":
/*!**************************************!*\
  !*** ./app/users/users.component.ts ***!
  \**************************************/
/*! exports provided: UsersComponent, DialogUser */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UsersComponent", function () { return UsersComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DialogUser", function () { return DialogUser; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "../node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _gui_helpers_sel_options_sel_options_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../gui-helpers/sel-options/sel-options.component */ "./app/gui-helpers/sel-options/sel-options.component.ts");
/* harmony import */ var _services_user_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../_services/user.service */ "./app/_services/user.service.ts");
/* harmony import */ var _models_user__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../_models/user */ "./app/_models/user.ts");
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };
            var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
                return function (target, key) { decorator(target, key, paramIndex); }
            };






            var UsersComponent = /** @class */ (function () {
                function UsersComponent(dialog, userService) {
                    this.dialog = dialog;
                    this.userService = userService;
                    this.displayedColumns = ['select', 'username', 'fullname', 'groups', 'remove'];
                    this.dataSource = new _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatTableDataSource"]([]);
                }
                UsersComponent.prototype.ngOnInit = function () {
                    this.loadUsers();
                };
                UsersComponent.prototype.ngAfterViewInit = function () {
                    this.dataSource.sort = this.sort;
                };
                UsersComponent.prototype.onAddUser = function () {
                    var user = new _models_user__WEBPACK_IMPORTED_MODULE_4__["User"]();
                    this.editUser(user, user);
                };
                UsersComponent.prototype.onEditUser = function (user) {
                    this.editUser(user, user);
                };
                UsersComponent.prototype.onRemoveUser = function (user) {
                    this.editUser(user, null);
                };
                UsersComponent.prototype.isAdmin = function (user) {
                    if (user && user.username === 'admin') {
                        return true;
                    }
                    else {
                        return false;
                    }
                };
                UsersComponent.prototype.groupValueToLabel = function (grp) {
                    return _models_user__WEBPACK_IMPORTED_MODULE_4__["UserGroups"].GroupToLabel(grp);
                };
                UsersComponent.prototype.loadUsers = function () {
                    var _this = this;
                    this.users = [];
                    this.userService.getUsers(null).subscribe(function (result) {
                        Object.values(result).forEach(function (u) {
                            _this.users.push(u);
                        });
                        _this.bindToTable(_this.users);
                    }, function (err) {
                        console.error('get Users err: ' + err);
                    });
                };
                UsersComponent.prototype.editUser = function (user, current) {
                    var _this = this;
                    var muser = JSON.parse(JSON.stringify(user));
                    muser.password = '';
                    var dialogRef = this.dialog.open(DialogUser, {
                        position: { top: '60px' },
                        data: { user: muser, current: current, users: this.users.map(function (u) { return u.username; }) }
                    });
                    dialogRef.afterClosed().subscribe(function (result) {
                        if (result) {
                            if (!current) {
                                _this.userService.removeUser(result).subscribe(function (result) {
                                    _this.users = _this.users.filter(function (el) { return el.username !== muser.username; });
                                    _this.bindToTable(_this.users);
                                }, function (err) {
                                });
                            }
                            else {
                                _this.userService.setUser(result).subscribe(function (result) {
                                    _this.loadUsers();
                                }, function (err) {
                                });
                            }
                        }
                    }, function (err) {
                    });
                };
                UsersComponent.prototype.bindToTable = function (users) {
                    this.dataSource.data = users;
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatTable"]),
                    __metadata("design:type", _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatTable"])
                ], UsersComponent.prototype, "table", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatSort"]),
                    __metadata("design:type", _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatSort"])
                ], UsersComponent.prototype, "sort", void 0);
                UsersComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'app-users',
                        template: __webpack_require__(/*! ./users.component.html */ "./app/users/users.component.html"),
                        styles: [__webpack_require__(/*! ./users.component.css */ "./app/users/users.component.css")]
                    }),
                    __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialog"],
                    _services_user_service__WEBPACK_IMPORTED_MODULE_3__["UserService"]])
                ], UsersComponent);
                return UsersComponent;
            }());

            var DialogUser = /** @class */ (function () {
                function DialogUser(dialogRef, data) {
                    this.dialogRef = dialogRef;
                    this.data = data;
                    this.selectedGroups = [];
                    this.groups = _models_user__WEBPACK_IMPORTED_MODULE_4__["UserGroups"].Groups;
                    this.selectedGroups = _models_user__WEBPACK_IMPORTED_MODULE_4__["UserGroups"].ValueToGroups(this.data.user.groups);
                }
                DialogUser.prototype.onNoClick = function () {
                    this.dialogRef.close();
                };
                DialogUser.prototype.onOkClick = function () {
                    if (this.seloptions) {
                        this.data.user.groups = _models_user__WEBPACK_IMPORTED_MODULE_4__["UserGroups"].GroupsToValue(this.seloptions.selected);
                    }
                    this.dialogRef.close(this.data.user);
                };
                DialogUser.prototype.isValid = function (name) {
                    if (!this.data.current) { // to remove
                        return true;
                    }
                    else if (name) {
                        var editname_1 = (this.data.user) ? this.data.user.username : null;
                        return (this.data.users.find(function (n) { return n === name && n !== editname_1; })) ? false : true;
                    }
                    return false;
                };
                DialogUser.prototype.isNewUser = function () {
                    return (this.data.current && this.data.current.username) ? true : false;
                };
                DialogUser.prototype.isAdmin = function () {
                    if (this.data.user && this.data.user.username === 'admin') {
                        return true;
                    }
                    else {
                        return false;
                    }
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])(_gui_helpers_sel_options_sel_options_component__WEBPACK_IMPORTED_MODULE_2__["SelOptionsComponent"]),
                    __metadata("design:type", _gui_helpers_sel_options_sel_options_component__WEBPACK_IMPORTED_MODULE_2__["SelOptionsComponent"])
                ], DialogUser.prototype, "seloptions", void 0);
                DialogUser = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'dialog-user',
                        template: __webpack_require__(/*! ./user.dialog.html */ "./app/users/user.dialog.html"),
                    }),
                    __param(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MAT_DIALOG_DATA"])),
                    __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialogRef"], Object])
                ], DialogUser);
                return DialogUser;
            }());



            /***/
}),

/***/ "./app/view/view.component.css":
/*!*************************************!*\
  !*** ./app/view/view.component.css ***!
  \*************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = ".view-body {\n    display: table;\n    margin: 0 auto;\n}\n\n.view-container {\n    position: absolute;\n\tleft: 0px;\n\ttop: 0px;\n\tbottom: 0px;\n\tright: 0px;\n\toverflow: auto;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlldy92aWV3LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0lBQ2QsY0FBYztBQUNsQjs7QUFFQTtJQUNJLGtCQUFrQjtDQUNyQixTQUFTO0NBQ1QsUUFBUTtDQUNSLFdBQVc7Q0FDWCxVQUFVO0NBQ1YsY0FBYztBQUNmIiwiZmlsZSI6InNyYy9hcHAvdmlldy92aWV3LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudmlldy1ib2R5IHtcbiAgICBkaXNwbGF5OiB0YWJsZTtcbiAgICBtYXJnaW46IDAgYXV0bztcbn1cblxuLnZpZXctY29udGFpbmVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG5cdGxlZnQ6IDBweDtcblx0dG9wOiAwcHg7XG5cdGJvdHRvbTogMHB4O1xuXHRyaWdodDogMHB4O1xuXHRvdmVyZmxvdzogYXV0bztcbn0iXX0= */"

            /***/
}),

/***/ "./app/view/view.component.html":
/*!**************************************!*\
  !*** ./app/view/view.component.html ***!
  \**************************************/
/*! no static exports found */
/***/ (function (module, exports) {

            module.exports = "<div id=\"container\"  class=\"view-container\" #container>\n    <app-fuxa-view #fuxaview class=\"view-body\" id=\"view\" [view]=\"startView\" [hmi]=\"hmi\" [gaugesManager]=\"gaugesManager\"></app-fuxa-view>\n</div>\n"

            /***/
}),

/***/ "./app/view/view.component.ts":
/*!************************************!*\
  !*** ./app/view/view.component.ts ***!
  \************************************/
/*! exports provided: ViewComponent */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewComponent", function () { return ViewComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "../node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _services_project_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../_services/project.service */ "./app/_services/project.service.ts");
/* harmony import */ var _models_hmi__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../_models/hmi */ "./app/_models/hmi.ts");
/* harmony import */ var _gauges_gauges_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../gauges/gauges.component */ "./app/gauges/gauges.component.ts");
/* harmony import */ var _fuxa_view_fuxa_view_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../fuxa-view/fuxa-view.component */ "./app/fuxa-view/fuxa-view.component.ts");
/* harmony import */ var panzoom__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! panzoom */ "../node_modules/panzoom/index.js");
/* harmony import */ var panzoom__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(panzoom__WEBPACK_IMPORTED_MODULE_6__);
            var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
                var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
                if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
                else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
                return c > 3 && r && Object.defineProperty(target, key, r), r;
            };
            var __metadata = (undefined && undefined.__metadata) || function (k, v) {
                if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
            };







            var ViewComponent = /** @class */ (function () {
                function ViewComponent(projectService, route, changeDetector, gaugesManager) {
                    this.projectService = projectService;
                    this.route = route;
                    this.changeDetector = changeDetector;
                    this.gaugesManager = gaugesManager;
                    this.startView = new _models_hmi__WEBPACK_IMPORTED_MODULE_3__["View"]();
                    this.hmi = new _models_hmi__WEBPACK_IMPORTED_MODULE_3__["Hmi"]();
                }
                ViewComponent.prototype.ngOnInit = function () {
                    this.viewName = this.route.snapshot.queryParamMap.get('name');
                };
                ViewComponent.prototype.ngAfterViewInit = function () {
                    var _this = this;
                    try {
                        var hmi = this.projectService.getHmi();
                        if (hmi) {
                            this.loadHmi();
                        }
                        this.subscriptionLoad = this.projectService.onLoadHmi.subscribe(function (load) {
                            _this.loadHmi();
                        }, function (error) {
                            console.error('Error loadHMI');
                        });
                        this.changeDetector.detectChanges();
                    }
                    catch (err) {
                        console.error(err);
                    }
                };
                ViewComponent.prototype.ngOnDestroy = function () {
                    try {
                        if (this.subscriptionLoad) {
                            this.subscriptionLoad.unsubscribe();
                        }
                    }
                    catch (e) {
                    }
                };
                ViewComponent.prototype.loadHmi = function () {
                    var _this = this;
                    var hmi = this.projectService.getHmi();
                    if (hmi) {
                        this.hmi = hmi;
                    }
                    if (this.hmi && this.hmi.views && this.hmi.views.length > 0) {
                        this.startView = this.hmi.views.find(function (x) { return x.name === _this.viewName; });
                        this.setBackground();
                        if (this.startView && this.fuxaview) {
                            this.fuxaview.loadHmi(this.startView);
                        }
                        if (this.hmi.layout && this.hmi.layout.zoom && _models_hmi__WEBPACK_IMPORTED_MODULE_3__["ZoomModeType"][this.hmi.layout.zoom] === _models_hmi__WEBPACK_IMPORTED_MODULE_3__["ZoomModeType"].enabled) {
                            setTimeout(function () {
                                var element = document.querySelector('#view');
                                if (element && panzoom__WEBPACK_IMPORTED_MODULE_6___default.a) {
                                    panzoom__WEBPACK_IMPORTED_MODULE_6___default()(element, {
                                        bounds: true,
                                        boundsPadding: 0.05,
                                    });
                                    _this.container.nativeElement.style.overflow = 'hidden';
                                }
                            }, 1000);
                        }
                    }
                };
                ViewComponent.prototype.setBackground = function () {
                    if (this.startView && this.startView.profile) {
                        document.getElementById("main-container").style.backgroundColor = this.startView.profile.bkcolor;
                    }
                };
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('fuxaview'),
                    __metadata("design:type", _fuxa_view_fuxa_view_component__WEBPACK_IMPORTED_MODULE_5__["FuxaViewComponent"])
                ], ViewComponent.prototype, "fuxaview", void 0);
                __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('container'),
                    __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"])
                ], ViewComponent.prototype, "container", void 0);
                ViewComponent = __decorate([
                    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
                        selector: 'app-view',
                        template: __webpack_require__(/*! ./view.component.html */ "./app/view/view.component.html"),
                        styles: [__webpack_require__(/*! ./view.component.css */ "./app/view/view.component.css")]
                    }),
                    __metadata("design:paramtypes", [_services_project_service__WEBPACK_IMPORTED_MODULE_2__["ProjectService"],
                    _angular_router__WEBPACK_IMPORTED_MODULE_1__["ActivatedRoute"],
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"],
                    _gauges_gauges_component__WEBPACK_IMPORTED_MODULE_4__["GaugesManager"]])
                ], ViewComponent);
                return ViewComponent;
            }());



            /***/
}),

/***/ "./environments/environment.ts":
/*!*************************************!*\
  !*** ./environments/environment.ts ***!
  \*************************************/
/*! exports provided: environment */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "environment", function () { return environment; });
            var environment = {
                version: __webpack_require__(/*! ../../package.json */ "../package.json").version,
                production: false,
                apiEndpoint: null,
                apiPort: 8080,
                serverEnabled: true,
                type: null
            };


            /***/
}),

/***/ "./main.ts":
/*!*****************!*\
  !*** ./main.ts ***!
  \*****************/
/*! no exports provided */
/***/ (function (module, __webpack_exports__, __webpack_require__) {

            "use strict";
            __webpack_require__.r(__webpack_exports__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/platform-browser-dynamic */ "../node_modules/@angular/platform-browser-dynamic/fesm5/platform-browser-dynamic.js");
/* harmony import */ var _app_app_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app/app.module */ "./app/app.module.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./environments/environment */ "./environments/environment.ts");




            if (_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].production) {
                Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["enableProdMode"])();
            }
            Object(_angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_1__["platformBrowserDynamic"])().bootstrapModule(_app_app_module__WEBPACK_IMPORTED_MODULE_2__["AppModule"])
                .catch(function (err) { return console.log(err); });


            /***/
}),

/***/ 0:
/*!***********************!*\
  !*** multi ./main.ts ***!
  \***********************/
/*! no static exports found */
/***/ (function (module, exports, __webpack_require__) {

            module.exports = __webpack_require__(/*! /Users/bilal/Documents/FUXA/client/src/main.ts */"./main.ts");


            /***/
}),

/***/ 1:
/*!********************!*\
  !*** ws (ignored) ***!
  \********************/
/*! no static exports found */
/***/ (function (module, exports) {

            /* (ignored) */

            /***/
})

}, [[0, "runtime", "vendor"]]]);
//# sourceMappingURL=main.js.map