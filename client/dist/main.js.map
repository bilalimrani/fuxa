{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./app/_config/theme.config.ts","webpack:///./app/_directives/dialog-draggable.directive.ts","webpack:///./app/_directives/lazyFor.directive.ts","webpack:///./app/_directives/modal-position.cache.ts","webpack:///./app/_directives/ngx-draggable.directive.ts","webpack:///./app/_directives/number.directive.ts","webpack:///./app/_helpers/auth-interceptor.ts","webpack:///./app/_helpers/custom-http.ts","webpack:///./app/_helpers/define.ts","webpack:///./app/_helpers/dictionary.ts","webpack:///./app/_helpers/endpointapi.ts","webpack:///./app/_helpers/utils.ts","webpack:///./app/_helpers/windowref.ts","webpack:///./app/_models/alarm.ts","webpack:///./app/_models/chart.ts","webpack:///./app/_models/device.ts","webpack:///./app/_models/hmi.ts","webpack:///./app/_models/project.ts","webpack:///./app/_models/settings.ts","webpack:///./app/_models/text.ts","webpack:///./app/_models/user.ts","webpack:///./app/_services/app.service.ts","webpack:///./app/_services/auth.service.ts","webpack:///./app/_services/hmi.service.ts","webpack:///./app/_services/plugin.service.ts","webpack:///./app/_services/project.service.ts","webpack:///./app/_services/rcgi/resclient.service.ts","webpack:///./app/_services/rcgi/resdemo.service.ts","webpack:///./app/_services/rcgi/resource-storage.service.ts","webpack:///./app/_services/rcgi/reswebapi.service.ts","webpack:///./app/_services/settings.service.ts","webpack:///./app/_services/theme.service.ts","webpack:///./app/_services/user.service.ts","webpack:///./app/alarms/alarm-list/alarm-list.component.css","webpack:///./app/alarms/alarm-list/alarm-list.component.html","webpack:///./app/alarms/alarm-list/alarm-list.component.ts","webpack:///./app/alarms/alarm-property/alarm-property.component.css","webpack:///./app/alarms/alarm-property/alarm-property.component.html","webpack:///./app/alarms/alarm-property/alarm-property.component.ts","webpack:///./app/alarms/alarm-view/alarm-view.component.css","webpack:///./app/alarms/alarm-view/alarm-view.component.html","webpack:///./app/alarms/alarm-view/alarm-view.component.ts","webpack:///./app/app.component.css","webpack:///./app/app.component.html","webpack:///./app/app.component.ts","webpack:///./app/app.config.ts","webpack:///./app/app.module.ts","webpack:///./app/app.routing.ts","webpack:///./app/auth.guard.ts","webpack:///./app/cards-view/cards-view.component.css","webpack:///./app/cards-view/cards-view.component.html","webpack:///./app/cards-view/cards-view.component.ts","webpack:///./app/device/device-list/device-list.component.css","webpack:///./app/device/device-list/device-list.component.html","webpack:///./app/device/device-list/device-list.component.ts","webpack:///./app/device/device-map/device-map.component.html","webpack:///./app/device/device-map/device-map.component.scss","webpack:///./app/device/device-map/device-map.component.ts","webpack:///./app/device/device-property/device-property.component.css","webpack:///./app/device/device-property/device-property.component.html","webpack:///./app/device/device-property/device-property.component.ts","webpack:///./app/device/device-tag.dialog.html","webpack:///./app/device/device.component.css","webpack:///./app/device/device.component.html","webpack:///./app/device/device.component.ts","webpack:///./app/device/tag-property/tag-property.component.css","webpack:///./app/device/tag-property/tag-property.component.html","webpack:///./app/device/tag-property/tag-property.component.ts","webpack:///./app/device/topic-property/topic-property.component.css","webpack:///./app/device/topic-property/topic-property.component.html","webpack:///./app/device/topic-property/topic-property.component.ts","webpack:///./app/editor/app-settings/app-settings.component.css","webpack:///./app/editor/app-settings/app-settings.component.html","webpack:///./app/editor/app-settings/app-settings.component.ts","webpack:///./app/editor/card-config/card-config.component.css","webpack:///./app/editor/card-config/card-config.component.html","webpack:///./app/editor/card-config/card-config.component.ts","webpack:///./app/editor/chart-config/chart-config.component.css","webpack:///./app/editor/chart-config/chart-config.component.html","webpack:///./app/editor/chart-config/chart-config.component.ts","webpack:///./app/editor/chart-config/chart-line.dialog.html","webpack:///./app/editor/chart-config/list-item.dialog.html","webpack:///./app/editor/docname.dialog.html","webpack:///./app/editor/docproperty.dialog.css","webpack:///./app/editor/docproperty.dialog.html","webpack:///./app/editor/editor.component.css","webpack:///./app/editor/editor.component.html","webpack:///./app/editor/editor.component.ts","webpack:///./app/editor/layout-property/layout-property.component.html","webpack:///./app/editor/layout-property/layout-property.component.scss","webpack:///./app/editor/layout-property/layout-property.component.ts","webpack:///./app/editor/layout-property/menuitem.dialog.html","webpack:///./app/editor/linkproperty.dialog.html","webpack:///./app/editor/newdoc.dialog.html","webpack:///./app/editor/plugins/plugins.component.css","webpack:///./app/editor/plugins/plugins.component.html","webpack:///./app/editor/plugins/plugins.component.ts","webpack:///./app/editor/setup/setup.component.html","webpack:///./app/editor/setup/setup.component.scss","webpack:///./app/editor/setup/setup.component.ts","webpack:///./app/fuxa-view/fuxa-view.component.css","webpack:///./app/fuxa-view/fuxa-view.component.html","webpack:///./app/fuxa-view/fuxa-view.component.ts","webpack:///./app/gauges/controls/gauge-progress/gauge-progress.component.css","webpack:///./app/gauges/controls/gauge-progress/gauge-progress.component.html","webpack:///./app/gauges/controls/gauge-progress/gauge-progress.component.ts","webpack:///./app/gauges/controls/gauge-semaphore/gauge-semaphore.component.css","webpack:///./app/gauges/controls/gauge-semaphore/gauge-semaphore.component.html","webpack:///./app/gauges/controls/gauge-semaphore/gauge-semaphore.component.ts","webpack:///./app/gauges/controls/html-bag/bag-property/bag-property.component.css","webpack:///./app/gauges/controls/html-bag/bag-property/bag-property.component.html","webpack:///./app/gauges/controls/html-bag/bag-property/bag-property.component.ts","webpack:///./app/gauges/controls/html-bag/html-bag.component.css","webpack:///./app/gauges/controls/html-bag/html-bag.component.html","webpack:///./app/gauges/controls/html-bag/html-bag.component.ts","webpack:///./app/gauges/controls/html-button/html-button.component.css","webpack:///./app/gauges/controls/html-button/html-button.component.html","webpack:///./app/gauges/controls/html-button/html-button.component.ts","webpack:///./app/gauges/controls/html-chart/chart-property/chart-property.component.css","webpack:///./app/gauges/controls/html-chart/chart-property/chart-property.component.html","webpack:///./app/gauges/controls/html-chart/chart-property/chart-property.component.ts","webpack:///./app/gauges/controls/html-chart/chart-uplot/chart-uplot.component.css","webpack:///./app/gauges/controls/html-chart/chart-uplot/chart-uplot.component.html","webpack:///./app/gauges/controls/html-chart/chart-uplot/chart-uplot.component.ts","webpack:///./app/gauges/controls/html-chart/html-chart.component.css","webpack:///./app/gauges/controls/html-chart/html-chart.component.html","webpack:///./app/gauges/controls/html-chart/html-chart.component.ts","webpack:///./app/gauges/controls/html-input/html-input.component.css","webpack:///./app/gauges/controls/html-input/html-input.component.html","webpack:///./app/gauges/controls/html-input/html-input.component.ts","webpack:///./app/gauges/controls/html-select/html-select.component.css","webpack:///./app/gauges/controls/html-select/html-select.component.html","webpack:///./app/gauges/controls/html-select/html-select.component.ts","webpack:///./app/gauges/controls/html-switch/html-switch-property/html-switch-property.component.html","webpack:///./app/gauges/controls/html-switch/html-switch-property/html-switch-property.component.scss","webpack:///./app/gauges/controls/html-switch/html-switch-property/html-switch-property.component.ts","webpack:///./app/gauges/controls/html-switch/html-switch.component.ts","webpack:///./app/gauges/controls/pipe/pipe-property/pipe-property.component.css","webpack:///./app/gauges/controls/pipe/pipe-property/pipe-property.component.html","webpack:///./app/gauges/controls/pipe/pipe-property/pipe-property.component.ts","webpack:///./app/gauges/controls/pipe/pipe.component.ts","webpack:///./app/gauges/controls/slider/slider-property/slider-property.component.css","webpack:///./app/gauges/controls/slider/slider-property/slider-property.component.html","webpack:///./app/gauges/controls/slider/slider-property/slider-property.component.ts","webpack:///./app/gauges/controls/slider/slider.component.ts","webpack:///./app/gauges/controls/value/value.component.css","webpack:///./app/gauges/controls/value/value.component.html","webpack:///./app/gauges/controls/value/value.component.ts","webpack:///./app/gauges/gauge-base/gauge-base.component.css","webpack:///./app/gauges/gauge-base/gauge-base.component.html","webpack:///./app/gauges/gauge-base/gauge-base.component.ts","webpack:///./app/gauges/gauge-property/flex-action/flex-action.component.css","webpack:///./app/gauges/gauge-property/flex-action/flex-action.component.html","webpack:///./app/gauges/gauge-property/flex-action/flex-action.component.ts","webpack:///./app/gauges/gauge-property/flex-auth/flex-auth.component.css","webpack:///./app/gauges/gauge-property/flex-auth/flex-auth.component.html","webpack:///./app/gauges/gauge-property/flex-auth/flex-auth.component.ts","webpack:///./app/gauges/gauge-property/flex-event/flex-event.component.css","webpack:///./app/gauges/gauge-property/flex-event/flex-event.component.html","webpack:///./app/gauges/gauge-property/flex-event/flex-event.component.ts","webpack:///./app/gauges/gauge-property/flex-head/flex-head.component.css","webpack:///./app/gauges/gauge-property/flex-head/flex-head.component.html","webpack:///./app/gauges/gauge-property/flex-head/flex-head.component.ts","webpack:///./app/gauges/gauge-property/flex-input/flex-input.component.css","webpack:///./app/gauges/gauge-property/flex-input/flex-input.component.html","webpack:///./app/gauges/gauge-property/flex-input/flex-input.component.ts","webpack:///./app/gauges/gauge-property/flex-variable-map/flex-variable-map.component.css","webpack:///./app/gauges/gauge-property/flex-variable-map/flex-variable-map.component.html","webpack:///./app/gauges/gauge-property/flex-variable-map/flex-variable-map.component.ts","webpack:///./app/gauges/gauge-property/flex-variable/flex-variable.component.css","webpack:///./app/gauges/gauge-property/flex-variable/flex-variable.component.html","webpack:///./app/gauges/gauge-property/flex-variable/flex-variable.component.ts","webpack:///./app/gauges/gauge-property/flex-variables-mapping/flex-variables-mapping.component.css","webpack:///./app/gauges/gauge-property/flex-variables-mapping/flex-variables-mapping.component.html","webpack:///./app/gauges/gauge-property/flex-variables-mapping/flex-variables-mapping.component.ts","webpack:///./app/gauges/gauge-property/gauge-permission.dialog.html","webpack:///./app/gauges/gauge-property/gauge-property.component.css","webpack:///./app/gauges/gauge-property/gauge-property.component.html","webpack:///./app/gauges/gauge-property/gauge-property.component.ts","webpack:///./app/gauges/gauges.component.ts","webpack:///./app/gauges/shapes/ape-shapes/ape-shapes.component.css","webpack:///./app/gauges/shapes/ape-shapes/ape-shapes.component.html","webpack:///./app/gauges/shapes/ape-shapes/ape-shapes.component.ts","webpack:///./app/gauges/shapes/proc-eng/proc-eng.component.css","webpack:///./app/gauges/shapes/proc-eng/proc-eng.component.html","webpack:///./app/gauges/shapes/proc-eng/proc-eng.component.ts","webpack:///./app/gauges/shapes/shapes.component.css","webpack:///./app/gauges/shapes/shapes.component.html","webpack:///./app/gauges/shapes/shapes.component.ts","webpack:///./app/gui-helpers/confirm-dialog/confirm-dialog.component.css","webpack:///./app/gui-helpers/confirm-dialog/confirm-dialog.component.html","webpack:///./app/gui-helpers/confirm-dialog/confirm-dialog.component.ts","webpack:///./app/gui-helpers/fab-button/ngx-fab-button.component.ts","webpack:///./app/gui-helpers/fab-button/ngx-fab-item-button.component.ts","webpack:///./app/gui-helpers/mat-select-search/mat-select-search.component.html","webpack:///./app/gui-helpers/mat-select-search/mat-select-search.component.scss","webpack:///./app/gui-helpers/mat-select-search/mat-select-search.component.ts","webpack:///./app/gui-helpers/mat-select-search/mat-select-search.module.ts","webpack:///./app/gui-helpers/ngx-gauge/gaugeOptions.ts","webpack:///./app/gui-helpers/ngx-gauge/ngx-gauge.component.css","webpack:///./app/gui-helpers/ngx-gauge/ngx-gauge.component.html","webpack:///./app/gui-helpers/ngx-gauge/ngx-gauge.component.ts","webpack:///./app/gui-helpers/ngx-nouislider/ngx-nouislider.component.css","webpack:///./app/gui-helpers/ngx-nouislider/ngx-nouislider.component.html","webpack:///./app/gui-helpers/ngx-nouislider/ngx-nouislider.component.ts","webpack:///./app/gui-helpers/ngx-switch/ngx-switch.component.css","webpack:///./app/gui-helpers/ngx-switch/ngx-switch.component.html","webpack:///./app/gui-helpers/ngx-switch/ngx-switch.component.ts","webpack:///./app/gui-helpers/ngx-uplot/ngx-uplot.component.css","webpack:///./app/gui-helpers/ngx-uplot/ngx-uplot.component.html","webpack:///./app/gui-helpers/ngx-uplot/ngx-uplot.component.ts","webpack:///./app/gui-helpers/sel-options/sel-options.component.css","webpack:///./app/gui-helpers/sel-options/sel-options.component.html","webpack:///./app/gui-helpers/sel-options/sel-options.component.ts","webpack:///./app/gui-helpers/treetable/treetable.component.css","webpack:///./app/gui-helpers/treetable/treetable.component.html","webpack:///./app/gui-helpers/treetable/treetable.component.ts","webpack:///./app/header/header.component.css","webpack:///./app/header/header.component.html","webpack:///./app/header/header.component.ts","webpack:///./app/header/info.dialog.html","webpack:///./app/help/tutorial/tutorial.component.css","webpack:///./app/help/tutorial/tutorial.component.html","webpack:///./app/help/tutorial/tutorial.component.ts","webpack:///./app/home/home.component.html","webpack:///./app/home/home.component.scss","webpack:///./app/home/home.component.ts","webpack:///./app/home/userinfo.dialog.html","webpack:///./app/iframe/iframe.component.css","webpack:///./app/iframe/iframe.component.html","webpack:///./app/iframe/iframe.component.ts","webpack:///./app/lab/lab.component.css","webpack:///./app/lab/lab.component.html","webpack:///./app/lab/lab.component.ts","webpack:///./app/login/login.component.css","webpack:///./app/login/login.component.html","webpack:///./app/login/login.component.ts","webpack:///./app/material.module.ts","webpack:///./app/sidenav/sidenav.component.css","webpack:///./app/sidenav/sidenav.component.html","webpack:///./app/sidenav/sidenav.component.ts","webpack:///./app/tester/tester.component.css","webpack:///./app/tester/tester.component.html","webpack:///./app/tester/tester.component.ts","webpack:///./app/tester/tester.service.ts","webpack:///./app/text-list/item-text.dialog.html","webpack:///./app/text-list/text-list.component.css","webpack:///./app/text-list/text-list.component.html","webpack:///./app/text-list/text-list.component.ts","webpack:///./app/users/user.dialog.html","webpack:///./app/users/users.component.css","webpack:///./app/users/users.component.html","webpack:///./app/users/users.component.ts","webpack:///./app/view/view.component.css","webpack:///./app/view/view.component.html","webpack:///./app/view/view.component.ts","webpack:///./environments/environment.ts","webpack:///./main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export const THEMES = {\n    default: {\n        headerBackground: 'hsl(0, 0%, 100%)',\n        headerColor: 'rgba(33,33,33,0.92)',\n        headerBorder: '#f9f9f9',\n        toolboxBackground: '#FBFBFB',\n        toolboxColor: '#000000',\n        toolboxBorder: '#F1F3F4',\n        toolboxPanelBackgroung: '#f9f9f9',\n        toolboxButton: '#545454',\n        sidenavBackgroung: '#f9f9f9',\n        toolboxItemActiveBackgroung: '#3059af',\n        toolboxItemActiveColor: '#FFFFFF',\n        toolboxFlyColor: '#000000',\n        footZoomBackground: '#E4E4E4',\n        footZoomBackgroundHover: '#CDCDCD',\n        footZoomColor: '#000000',\n        svgEditRulersBackground: '#f9f9f9',\n        svgEditRulersColor: '#000000',\n        svgEditWorkareaBackground: '#e4e4e4',\n        svgEditWorkareaContextMenu: '#e4e4e4',\n        svgEditWorkareaContextColor: '#000000',\n        formInputBackground: '#f1f3f4',\n        formInputColor: '#000000',\n        formInputReadonlyBackground: '#f1f3f4',\n        formInputBorderFocus: '#ccc',\n        formInputBackgroundFocus: '#FFFFFF',\n        formSliderBackground: '#f1f3f4',\n        formSeparatorColor: '#e0e0e0',\n        formBorder: '#F1F3F4',\n        setupSeparatorColor: '#ccc',\n        workPanelBackground: '#FFFFFF',\n        mapBorderColor: '#3C3C3C',\n        formExtBackground: '#f1f3f4',\n        formInputExtBackground: '#FFFFFF',\n    },\n    dark: {\n        headerBackground: '#333333',\n        headerColor: 'rgba(255,255,255,1)',\n        headerBorder: '#252526',\n        toolboxBackground: '#252526',\n        toolboxColor: '#FFFFFF',\n        toolboxBorder: 'rgba(33,33,33,0.92)',\n        toolboxPanelBackgroung: '#252526',\n        toolboxButton: '##313131',\n        sidenavBackgroung: '#252526',\n        toolboxItemActiveBackgroung: '#3059af',\n        toolboxItemActiveColor: '#FFFFFF',\n        toolboxFlyColor: '#FFFFFF',\n        footZoomBackground: '#212121',\n        footZoomBackgroundHover: '#161616',\n        footZoomColor: '#FFFFFF',\n        svgEditRulersBackground: '#2f2f2f',\n        svgEditRulersColor: '#A4A4A4',\n        svgEditWorkareaBackground: '#434343',\n        svgEditWorkareaContextMenu: '#212121',\n        svgEditWorkareaContextColor: '#FFFFFF',\n        formInputBackground: '#37373D',\n        formInputColor: '#FFFFFF',\n        formInputReadonlyBackground: '#37373D',\n        formInputBorderFocus: '#1177BB',\n        formInputBackgroundFocus: '#37373D',\n        formSliderBackground: '#37373D',\n        formSeparatorColor: '#37373D',\n        formBorder: 'rgba(33,33,33,0.92)',\n        setupSeparatorColor: '#808080',\n        workPanelBackground: '#424242',\n        mapBorderColor: '#333333',\n        formExtBackground: '#37373D',\n        formInputExtBackground: '#424242',\n    }\n};\n","import { Directive, HostListener, OnInit, AfterViewInit } from '@angular/core';\nimport { MatDialogContainer, MatDialogRef } from '@angular/material';\nimport { Subscription, Observable } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators/takeUntil';\nimport 'rxjs/add/observable/fromEvent';\nimport { take } from 'rxjs/operators/take';\nimport { ModalPositionCache, Position } from './modal-position.cache';\n\n@Directive({\n    selector: '[mat-dialog-draggable]'\n})\nexport class DialogDraggableDirective implements OnInit, AfterViewInit {\n\n    // private _subscription: Subscription;\n\n    mouseStart: Position;\n\n    mouseDelta: Position;\n\n    offset: Position;\n\n    constructor(\n        private matDialogRef: MatDialogRef<any>,\n        private container: MatDialogContainer,\n        // private positionCache: ModalPositionCache\n    ) { }\n\n    ngOnInit() {\n    }\n\n    ngAfterViewInit() {\n        const dialogType = this.matDialogRef.componentInstance.constructor;\n        // const cachedValue = this.positionCache.get(dialogType);\n        this.offset = this._getOffset();\n        // this._updatePosition(this.offset.y, this.offset.x);\n\n        // this.matDialogRef.beforeClose().pipe(take(1))\n        //   .subscribe(() => this.positionCache.set(dialogType, this.offset));\n    }\n\n    @HostListener('mousedown', ['$event'])\n    onMouseDown(event: MouseEvent) {\n        this.offset = this._getOffset();\n        this.mouseStart = { x: event.pageX, y: event.pageY };\n\n        const mouseup$ = Observable.fromEvent(document, 'mouseup');\n        // this._subscription = mouseup$.subscribe(() => this.onMouseup());\n\n        const mousemove$ = Observable.fromEvent(document, 'mousemove')\n            .pipe(takeUntil(mouseup$))\n            .subscribe((e: MouseEvent) => this.onMouseMove(e));\n\n        // this._subscription.add(mousemove$);\n    }\n\n    onMouseMove(event: MouseEvent) {\n        this.mouseDelta = { x: (event.pageX - this.mouseStart.x), y: (event.pageY - this.mouseStart.y) };\n\n        this._updatePosition(this.offset.y + this.mouseDelta.y, this.offset.x + this.mouseDelta.x);\n    }\n\n    onMouseup() {\n        // if (this._subscription) {\n        //   this._subscription.unsubscribe();\n        //   this._subscription = undefined;\n        // }\n        if (this.mouseDelta) {\n            this.offset.x += this.mouseDelta.x;\n            this.offset.y += this.mouseDelta.y;\n        }\n    }\n\n    private _updatePosition(top: number, left: number) {\n        this.matDialogRef.updatePosition({\n            top: top + 'px',\n            left: left + 'px'\n        });\n    }\n\n    private _getOffset(): Position {\n        const box = this.container['_elementRef'].nativeElement.getBoundingClientRect();\n        return {\n            x: box.left + pageXOffset,\n            y: box.top + pageYOffset\n        };\n    }\n}\n","import {\n    Input, Directive, ViewContainerRef,\n    OnInit, TemplateRef, DoCheck,\n    IterableDiffers, IterableDiffer\n} from '@angular/core';\n\n@Directive({\n    selector: '[lazyFor]'\n})\nexport class LazyForDirective implements DoCheck, OnInit {\n\n    lazyForContainer: HTMLElement;\n\n    itemHeight: number;\n    itemTagName: string;\n\n    @Input()\n    set lazyForOf(list: any[]) {\n        this.list = list;\n\n        if (list) {\n            this.differ = this.iterableDiffers.find(list).create();\n\n            if (this.initialized) {\n                this.update();\n            }\n        }\n    }\n\n    private templateElem: HTMLElement;\n\n    private beforeListElem: HTMLElement;\n    private afterListElem: HTMLElement;\n\n    private list: any[] = [];\n\n    private initialized = false;\n    private firstUpdate = true;\n\n    private differ: IterableDiffer<any>;\n\n    private lastChangeTriggeredByScroll = false;\n\n    constructor(private vcr: ViewContainerRef,\n        private tpl: TemplateRef<any>,\n        private iterableDiffers: IterableDiffers) { }\n\n    ngOnInit() {\n        this.templateElem = this.vcr.element.nativeElement;\n\n        this.lazyForContainer = this.templateElem.parentElement;\n\n        //Adding an event listener will trigger ngDoCheck whenever the event fires so we don't actually need to call\n        //update here.\n        this.lazyForContainer.addEventListener('scroll', () => {\n            this.lastChangeTriggeredByScroll = true;\n        });\n\n        this.initialized = true;\n    }\n\n    ngDoCheck() {\n        if (this.differ && Array.isArray(this.list)) {\n\n            if (this.lastChangeTriggeredByScroll) {\n                this.update();\n                this.lastChangeTriggeredByScroll = false;\n            } else {\n                const changes = this.differ.diff(this.list);\n\n                if (changes !== null) {\n                    this.update();\n                }\n            }\n        }\n    }\n\n    /**\n     * List update\n     *\n     * @returns {void}\n     */\n    private update(): void {\n\n        //Can't run the first update unless there is an element in the list\n        if (this.list.length === 0) {\n            this.vcr.clear();\n            if (!this.firstUpdate) {\n                this.beforeListElem.style.height = '0';\n                this.afterListElem.style.height = '0';\n            }\n            return;\n        }\n\n        if (this.firstUpdate) {\n            this.onFirstUpdate();\n        }\n\n        const listHeight = this.lazyForContainer.clientHeight;\n        const scrollTop = this.lazyForContainer.scrollTop;\n\n        //The height of anything inside the container but above the lazyFor content\n        const fixedHeaderHeight =\n            (this.beforeListElem.getBoundingClientRect().top - this.beforeListElem.scrollTop) -\n            (this.lazyForContainer.getBoundingClientRect().top - this.lazyForContainer.scrollTop);\n\n        //This needs to run after the scrollTop is retrieved.\n        this.vcr.clear();\n\n        let listStartI = Math.floor((scrollTop - fixedHeaderHeight) / this.itemHeight);\n        listStartI = this.limitToRange(listStartI, 0, this.list.length);\n\n        let listEndI = Math.ceil((scrollTop - fixedHeaderHeight + listHeight) / this.itemHeight);\n        listEndI = this.limitToRange(listEndI, -1, this.list.length - 1);\n\n        for (let i = listStartI; i <= listEndI; i++) {\n            this.vcr.createEmbeddedView(this.tpl, {\n                $implicit: this.list[i],\n                index: i\n            });\n        }\n\n        this.beforeListElem.style.height = `${listStartI * this.itemHeight}px`;\n        this.afterListElem.style.height = `${(this.list.length - listEndI - 1) * this.itemHeight}px`;\n    }\n\n    /**\n     * First update.\n     *\n     * @returns {void}\n     */\n    private onFirstUpdate(): void {\n\n        let sampleItemElem: HTMLElement;\n        if (this.itemHeight === undefined || this.itemTagName === undefined) {\n            this.vcr.createEmbeddedView(this.tpl, {\n                $implicit: this.list[0],\n                index: 0\n            });\n            sampleItemElem = <HTMLElement>this.templateElem.nextSibling;\n        }\n\n        if (this.itemHeight === undefined) {\n            this.itemHeight = sampleItemElem.clientHeight;\n        }\n\n        if (this.itemTagName === undefined) {\n            this.itemTagName = sampleItemElem.tagName;\n        }\n\n        this.beforeListElem = document.createElement(this.itemTagName);\n        this.templateElem.parentElement.insertBefore(this.beforeListElem, this.templateElem);\n\n        this.afterListElem = document.createElement(this.itemTagName);\n        this.templateElem.parentElement.insertBefore(this.afterListElem, this.templateElem.nextSibling);\n\n        // If you want to use <li> elements\n        if (this.itemTagName.toLowerCase() === 'li') {\n            this.beforeListElem.style.listStyleType = 'none';\n            this.afterListElem.style.listStyleType = 'none';\n        }\n\n        this.firstUpdate = false;\n    }\n\n    /**\n     * Limit To Range\n     *\n     * @param {number} num - Element number.\n     * @param {number} min - Min element number.\n     * @param {number} max - Max element number.\n     *\n     * @returns {number}\n     */\n    private limitToRange(num: number, min: number, max: number) {\n        return Math.max(\n            Math.min(num, max),\n            min\n        );\n    }\n}","import { Injectable, Type } from '@angular/core';\n\nexport interface Position {\n    x: number;\n    y: number;\n}\n\n\n@Injectable()\nexport class ModalPositionCache {\n    private _cache = new Map<Type<any>, Position>();\n\n    set(dialog: Type<any>, position: Position) {\n        this._cache.set(dialog, position);\n    }\n\n    get(dialog: Type<any>): Position | null {\n        return this._cache.get(dialog);\n    }\n}\n","import { Directive, ElementRef, Renderer, OnDestroy, OnInit, AfterViewInit, Input } from '@angular/core';\n\n\n@Directive({\n    selector: '[draggable]',\n    host: {\n        '(dragstart)': 'onDragStart($event)',\n        '(dragend)': 'onDragEnd($event)',\n        '(drag)': 'onDrag($event)'\n    }\n})\nexport class DraggableDirective implements OnDestroy, OnInit, AfterViewInit {\n    private dx: number = 0;\n    private dy: number = 0;\n\n    private canDrag: string = '';\n    private active = false;\n\n    @Input('draggable')\n    set draggable(val: any) {\n        if (val === undefined || val === null || val === '') return;\n        this.canDrag = val;\n    }\n    @Input() draggableHeight: number;\n\n    private mustBePosition: Array<string> = ['absolute', 'fixed', 'relative'];\n    constructor(\n        private el: ElementRef, private renderer: Renderer\n    ) {\n\n    }\n\n    ngOnInit(): void {\n        this.renderer.setElementAttribute(this.el.nativeElement, 'draggable', 'true');\n    }\n    ngAfterViewInit() {\n        try {\n            let position = window.getComputedStyle(this.el.nativeElement).position;\n            if (this.mustBePosition.indexOf(position) === -1) {\n                console.warn(this.el.nativeElement, 'Must be having position attribute set to ' + this.mustBePosition.join('|'));\n            }\n        } catch (ex) {\n            console.error(ex);\n        }\n    }\n    ngOnDestroy(): void {\n        this.renderer.setElementAttribute(this.el.nativeElement, 'draggable', 'false');\n    }\n\n    onDragStart(event: any) {\n        event.dataTransfer.setData(\"text/plain\", event.target.id);\n        this.active = false;\n        if (this.draggableHeight && this.draggableHeight < event.offsetY) {\n            return;\n        }\n        this.active = true;\n        this.dx = event.x - this.el.nativeElement.offsetLeft;\n        this.dy = event.y - this.el.nativeElement.offsetTop;\n    }\n\n    onDrag(event: MouseEvent) {\n        if (!this.active) {\n            return;\n        }\n        this.doTranslation(event.x, event.y);\n    }\n\n    onDragEnd(event: MouseEvent) {\n        if (!this.active) {\n            return;\n        }\n        this.dx = 0;\n        this.dy = 0;\n    }\n\n    doTranslation(x: number, y: number) {\n        if (!x || !y) return;\n        this.renderer.setElementStyle(this.el.nativeElement, 'top', (y - this.dy) + 'px');\n        this.renderer.setElementStyle(this.el.nativeElement, 'left', (x - this.dx) + 'px');\n    }\n}","import { Directive, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n    selector: '[numberOnly]'\n})\nexport class NumberOnlyDirective {\n    // Allow decimal numbers and negative values\n    private regex: RegExp = new RegExp(/^-?[0-9]+(\\.[0-9]*){0,1}$/g);///^-?[0-9]+(\\.[0-9]*){0,1}$/g);\n    // Allow key codes for special events. Reflect :\n    // Backspace, tab, end, home\n    private specialKeys: Array<string> = ['Backspace', 'Delete', 'Tab', 'End', 'Home', 'ArrowLeft', 'ArrowRight'];\n\n    constructor(private el: ElementRef) {\n    }\n    @HostListener('keydown', ['$event'])\n    onKeyDown(event: KeyboardEvent) {\n        // Allow Backspace, tab, end, and home keys\n        if (this.specialKeys.indexOf(event.key) !== -1) {\n            return;\n        }\n        let current: string = this.el.nativeElement.value;\n        let next: string = '';\n        if (event.key === '-') {\n            event.preventDefault();\n            if (!current.startsWith('-')) {\n                next = event.key + current;\n                this.el.nativeElement.value = next;\n            }\n        } else {\n            next = current.concat(event.key);\n        }\n        if (next && !String(next).match(this.regex)) {\n            event.preventDefault();\n        }\n    }\n}","import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Injectable, Injector } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { AuthService } from '../_services/auth.service';\nimport { ProjectService } from '../_services/project.service';\n\nconst TOKEN_HEADER_KEY = 'x-access-token';\nconst USER_HEADER_KEY = 'x-auth-user';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n    constructor(private injector: Injector) {\n    }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        const authService = this.injector.get(AuthService)\n        if (authService.getUserToken) {\n            const token = authService.getUserToken();\n            if (token != null) {\n                const user = authService.getUser();\n\n                if (user) {\n                    let locuser = {user: user.username, groups: user.groups};\n                    req = req.clone({ headers: req.headers.set(USER_HEADER_KEY, JSON.stringify(locuser)) });\n                }\n                req = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, token) });\n            }\n        }\n        // if (!req.headers.has('Content-Type')) {\n        //     req = req.clone({ headers: req.headers.set('Content-Type', 'application/json') });\n        // }\n        // req = req.clone({ headers: req.headers.set('Accept', 'application/json') });\n        return next.handle(req).pipe(\n            tap((event: HttpEvent<any>) => {\n            }, (err: any) => {\n                if (err instanceof HttpErrorResponse) {\n                    if (err.status === 403) {\n                        // redirect to the login route or show a modal\n                        authService.signOut();\n                        const projectService = this.injector.get(ProjectService)\n                        projectService.reload();\n                    }\n                }\n            }\n        ));\n    }\n}\n\nexport const httpInterceptorProviders = [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\n];","﻿import { Injectable } from \"@angular/core\";\nimport { ConnectionBackend, XHRBackend, RequestOptions, Request, RequestOptionsArgs, Response, Http, Headers } from \"@angular/http\";\nimport { appConfig } from '../app.config';\n\nimport { Observable } from \"rxjs\";\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/throw';\n\n@Injectable()\nexport class CustomHttp extends Http {\n    constructor(backend: ConnectionBackend, defaultOptions: RequestOptions) {\n        super(backend, defaultOptions);\n    }\n\n    get(url: string, options?: RequestOptionsArgs): Observable<Response> {\n        // return super.get(appConfig.apiUrl + url).catch(this.handleError);\n       return super.get(appConfig.apiUrl + url, this.addJwt(options)).catch(this.handleError);\n    }\n\n    post(url: string, body: string, options?: RequestOptionsArgs): Observable<Response> {\n        // return super.post(appConfig.apiUrl + url, body).catch(this.handleError);\n        return super.post(appConfig.apiUrl + url, body, this.addJwt(options)).catch(this.handleError);\n    }\n\n    put(url: string, body: string, options?: RequestOptionsArgs): Observable<Response> {\n        return super.put(appConfig.apiUrl + url, body, this.addJwt(options)).catch(this.handleError);\n    }\n\n    delete(url: string, options?: RequestOptionsArgs): Observable<Response> {\n        return super.delete(appConfig.apiUrl + url, this.addJwt(options)).catch(this.handleError);\n    }\n\n    // private helper methods\n\n    private addJwt(options?: RequestOptionsArgs): RequestOptionsArgs {\n        // ensure request options and headers are not null\n        options = options || new RequestOptions();\n        options.headers = options.headers || new Headers();\n\n        // add authorization header with jwt token\n        let currentUser = JSON.parse(localStorage.getItem('currentUser'));\n        if (currentUser && currentUser.token) {\n            options.headers.append('Authorization', 'Bearer ' + currentUser.token);\n        }\n\n        return options;\n    }\n\n    private handleError(error: any) {\n        if (error.status === 401) {\n            // 401 unauthorized response so log user out of client\n            window.location.href = '/login';\n        }\n\n        return Observable.throw(error._body);\n    }\n}\n\nexport function customHttpFactory(xhrBackend: XHRBackend, requestOptions: RequestOptions): Http {\n    return new CustomHttp(xhrBackend, requestOptions);\n}\n\nexport let customHttpProvider = {\n    provide: Http,\n    useFactory: customHttpFactory,\n    deps: [XHRBackend, RequestOptions]\n};","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class Define {\n\n    static materialIcons = [\n    // Action\n    'accessibility', 'accessible', 'account_balance', 'account_box', 'account_circle', 'alarm', 'alarm_add', 'alarm_off', \n    'alarm_on', 'all_out', 'android', 'announcement', 'aspect_ratio', 'assessment', 'assignment', 'assignment_ind', 'assignment_late', \n    'assignment_return', 'assignment_returned', 'assignment_turned_in', 'autorenew', 'backup', 'book', 'bookmark', 'bookmark_border', 'bug_report', 'build', \n    'cached', 'camera_enhance', 'change_history', 'check_circle', 'check_circle_outline', 'chrome_reader_mode', 'class', 'code', \n    'compare_arrows', 'copyright', 'credit_card', 'dashboard', 'delete', 'delete_outline', 'description', 'dns', \n    'done', 'done_all', 'done_outline', 'donut_large', 'donut_small', 'eject', 'euro_symbol', 'event', 'event_seat', 'exit_to_app', \n    'explore', 'extension', 'face', 'favorite', 'favorite_border', 'feedback', 'find_in_page', 'find_replace', 'fingerprint', 'flight_land', 'flight_takeoff', \n    'flip_to_back', 'flip_to_front', 'gavel', 'get_app', 'gif', 'grade', 'group_work', 'help', 'help_outline', 'highlight_off', 'history', \n    'home', 'hourglass_empty', 'hourglass_full', 'important_devices', 'info', 'input', 'invert_colors', 'label',  \n    'language', 'launch', 'list', 'lock', 'lock_open', 'loyalty', 'markunread_mailbox', 'motorcycle', 'note_add', 'offline_pin', \n    'opacity', 'open_in_browser', 'open_with', 'pageview', 'pan_tool', 'perm_camera_mic', 'perm_contact_calendar', 'perm_data_setting', 'perm_device_information', 'perm_identity', 'perm_media', \n    'perm_phone_msg', 'perm_scan_wifi', 'pets', 'picture_in_picture', 'play_for_work', 'polymer', 'power_settings_new', 'print', 'query_builder', \n    'question_answer', 'receipt', 'record_voice_over', 'reorder', 'report_problem', 'restore_page', 'room', 'rowing', 'search', 'settings', \n    'settings_applications', 'settings_backup_restore', 'settings_bluetooth', 'settings_brightness', 'settings_cell', 'settings_ethernet', \n    'settings_input_antenna', 'settings_input_component', 'settings_input_hdmi', 'settings_input_svideo', \n    'settings_overscan', 'settings_phone', 'settings_power', 'settings_remote', 'settings_voice', 'shop', 'shopping_basket', 'shopping_cart', 'speaker_notes', 'spellcheck', \n    'stars', 'store', 'subject', 'supervisor_account', 'swap_horiz', 'swap_horizontal_circle', 'swap_vert', 'swap_vertical_circle', 'tab', \n    'tab_unselected', 'theaters', 'thumb_down', 'thumb_up', 'thumbs_up_down', 'timeline', 'toc', 'toll', 'touch_app', 'track_changes', \n    'trending_down', 'trending_flat', 'trending_up', 'verified_user', 'view_agenda', 'view_array', 'view_carousel', 'view_column', 'view_day', \n    'view_list', 'view_module', 'view_quilt', 'view_stream', 'view_week', 'visibility', 'visibility_off', 'watch_later', 'work', \n    'zoom_in', 'zoom_out', \n    // Alert\n    'add_alert', 'error', 'error_outline', 'warning',\n    // Av\n    'airplay', 'av_timer', \n    'fast_forward', 'fast_rewind', 'featured_play_list', 'featured_video', 'fiber_manual_record', 'fiber_new', 'fiber_pin', 'fiber_smart_record', 'games', \n    'library_add', 'library_books', 'mic', 'mic_none', 'mic_off', 'new_releases', 'not_interested', 'note', 'pause', 'pause_circle_filled', \n    'pause_circle_outline', 'play_arrow', 'play_circle_filled', 'play_circle_outline', 'playlist_add', 'playlist_add_check', 'playlist_play', 'queue', 'queue_play_next', 'radio', \n    'recent_actors', 'remove_from_queue', 'repeat', 'repeat_one', 'shuffle', 'skip_next', 'skip_previous', 'slow_motion_video', 'snooze', 'sort_by_alpha', \n    'stop', 'subscriptions', 'subtitles', 'surround_sound', 'video_label', 'volume_down', 'volume_mute', 'volume_off', 'volume_up', 'web', 'web_asset', \n    // Communication\n    'business', 'call', 'call_end', 'call_made', 'call_merge', 'call_missed', 'call_missed_outgoing', 'call_received', \n    'call_split', 'cancel_presentation', 'chat ', 'chat_bubble', 'chat_bubble_outline', 'clear_all', 'comment', 'contact_mail', 'contact_phone', 'contacts', \n    'dialer_sip', 'dialpad', 'email', 'forum', 'import_contacts', 'import_export', 'invert_colors_off', 'list_alt', \n    'live_help', 'location_off', 'location_on', 'mail_outline', 'message', 'no_sim', 'pause_presentation', 'person_add_disabled', 'phonelink_erase', 'phonelink_lock', \n    'phonelink_ring', 'phonelink_setup', 'portable_wifi_off', 'present_to_all', 'print_disabled', 'ring_volume', 'rss_feed', 'screen_share', 'sentiment_satisfied_alt', 'speaker_phone', 'stay_current_landscape', \n    'stay_current_portrait', 'stop_screen_share', 'swap_calls', 'textsms', 'voicemail', 'vpn_key', \n    // Content\n    'add', 'add_box', 'add_circle', 'add_circle_outline', \n    'archive', 'backspace', 'block', 'clear', 'create', 'delete_sweep', 'drafts', 'filter_list', 'flag', \n    'font_download', 'forward', 'gesture', 'inbox', 'link', 'link_off', 'low_priority', 'move_to_inbox', 'next_week', \n    'redo', 'remove', 'remove_circle', 'remove_circle_outline', 'reply', 'reply_all', 'report', 'report_off', 'save', 'save_alt', \n    'select_all', 'send', 'sort', 'text_format', 'unarchive', 'undo', 'weekend', \n    // Device\n    'access_alarm', 'access_time', 'add_alarm', 'add_to_home_screen', 'airplanemode_active', 'airplanemode_inactive', 'battery_alert', 'battery_full', 'battery_unknown',\n    'bluetooth', 'bluetooth_connected', 'bluetooth_disabled', 'bluetooth_searching', 'brightness_auto', 'brightness_high', 'brightness_low', 'brightness_medium', 'data_usage', \n    'developer_mode', 'devices', 'dvr', 'gps_fixed', 'gps_not_fixed', 'gps_off', 'graphic_eq', 'network_cell', 'network_wifi', 'nfc', \n    'screen_rotation', 'screen_lock_rotation', 'sd_storage', 'settings_system_daydream', 'signal_cellular_no_sim', \n    'signal_cellular_null', 'signal_cellular_off', 'signal_wifi_4_bar_lock', 'signal_wifi_off', 'storage', 'usb', 'wallpaper', 'widgets', 'wifi_tethering', \n    // Editor\n    'attach_file', 'attach_money', 'border_all', 'border_bottom', 'border_clear', 'border_color', 'border_horizontal', 'border_inner', 'border_left', 'border_outer', \n    'border_right', 'border_style', 'border_top', 'border_vertical', 'bubble_chart', 'drag_handle', 'format_align_center', 'format_align_justify', 'format_align_left', 'format_align_right', \n    'format_bold', 'format_clear', 'format_color_fill', 'format_color_reset', 'format_color_text', 'format_indent_decrease', 'format_indent_increase', 'format_italic', 'format_line_spacing', \n    'format_list_bulleted', 'format_list_numbered', 'format_list_numbered_rtl', 'format_paint', 'format_quote', 'format_shapes', 'format_size', 'format_strikethrough', 'format_underlined', \n    'functions', 'highlight', 'insert_chart', 'insert_chart_outlined', 'insert_comment', 'insert_drive_file', 'insert_emoticon', 'insert_photo', 'linear_scale', 'merge_type', 'mode_comment', \n    'monetization_on', 'money_off', 'multiline_chart', 'notes', 'pie_chart', 'publish', 'short_text', 'show_chart', 'space_bar', 'strikethrough_s', 'table_chart', \n    'title', 'vertical_align_bottom', 'vertical_align_center', 'vertical_align_top', 'wrap_text', \n    // File\n    'attachment', 'cloud', 'cloud_circle', 'cloud_done', 'cloud_download', 'cloud_off', 'cloud_queue', 'cloud_upload', 'create_new_folder', 'folder', 'folder_open', 'folder_shared', \n    // Hardware\n    'cast', 'cast_connected', 'cast_for_education', 'computer', 'desktop_mac', 'desktop_windows', 'developer_board', 'device_hub', 'devices_other', 'dock', 'gamepad', \n    'headset', 'headset_mic', 'keyboard', 'keyboard_arrow_down', 'keyboard_arrow_left', 'keyboard_arrow_right', 'keyboard_arrow_up', 'keyboard_backspace', 'keyboard_capslock', 'keyboard_hide', \n    'keyboard_return', 'keyboard_tab', 'keyboard_voice', 'laptop', 'laptop_chromebook', 'laptop_windows', 'memory', 'mouse', 'power_input', 'router', 'scanner', 'security', 'sim_card', \n    'speaker', 'speaker_group', 'tablet_android', 'toys', 'tv', 'videogame_asset', 'watch', \n    // Image\n    'add_a_photo', 'add_to_photos', 'adjust', 'assistant', 'audiotrack', 'blur_circular', 'blur_linear', 'blur_on', 'brightness_1', 'brightness_2', 'brightness_3', \n    'brightness_5', 'brightness_6', 'brightness_7', 'broken_image', 'brush', 'burst_mode', 'camera', 'camera_alt', 'camera_front', 'camera_rear', 'center_focus_strong', 'center_focus_weak', \n    'collections', 'collections_bookmark', 'color_lens', 'colorize', 'compare', 'control_point_duplicate', 'crop', 'crop_7_5', 'crop_16_9', 'crop_5_4', 'crop_3_2', 'crop_din', 'crop_free', \n    'crop_original', 'crop_rotate', 'dehaze', 'details', 'edit', 'exposure', 'exposure_neg_1', 'exposure_neg_2', 'exposure_plus_1', 'exposure_plus_2', 'exposure_zero', 'filter', \n    'filter_1', 'filter_2', 'filter_3', 'filter_4', 'filter_5', 'filter_6', 'filter_7', 'filter_8', 'filter_9', 'filter_b_and_w', 'filter_drama', 'filter_frames', 'filter_hdr', 'filter_none', \n    'filter_tilt_shift', 'filter_vintage', 'flare', 'flash_auto', 'flash_off', 'flash_on', 'flip', 'gradient', 'grain', 'grid_off', 'grid_on', 'hdr_strong', 'hdr_weak', 'healing', \n    'image_aspect_ratio', 'iso', 'leak_add', 'leak_remove', 'looks', 'looks_one', 'looks_two', 'looks_3', 'looks_4', 'looks_5', 'looks_6', 'loupe', 'movie_creation', \n    'movie_filter', 'music_note', 'nature', 'nature_people', 'panorama_fish_eye', 'panorama_horizontal', 'panorama_vertical', 'panorama_wide_angle', 'photo_filter', \n    'photo_size_select_small', 'picture_as_pdf', 'portrait', 'remove_red_eye', 'rotate_left', 'rotate_right', 'slideshow', 'straighten', 'style', 'switch_camera', 'texture', \n    'timelapse', 'timer', 'timer_off', 'tonality', 'transform', 'tune', 'view_comfy', 'view_compact', 'vignette', 'wb_incandescent', 'wb_iridescent', 'wb_sunny', \n    // Maps\n    'beenhere', 'directions', 'directions_bike', 'directions_boat', 'directions_bus', 'directions_car', 'directions_railway', 'directions_run', \n    'directions_subway', 'directions_walk', 'edit_attributes', 'ev_station', 'flight', 'hotel', 'layers', 'layers_clear', 'local_activity', 'local_atm', 'local_bar', 'local_cafe', \n    'local_car_wash', 'local_dining', 'local_drink', 'local_florist', 'local_gas_station', 'local_hospital', 'local_laundry_service', 'local_library', 'local_mall', 'local_parking', \n    'local_pharmacy', 'local_pizza', 'local_printshop', 'local_shipping', 'local_taxi', 'map', 'navigation', 'near_me', 'person_pin', 'person_pin_circle', 'pin_drop', 'rate_review', \n    'restaurant', 'restaurant_menu', 'satellite', 'store_mall_directory', 'streetview', 'subway', 'traffic', 'train', 'tram', 'transfer_within_a_station', 'zoom_out_map', \n    // Navigation\n    'apps', 'arrow_back', 'arrow_downward', 'arrow_drop_down', 'arrow_drop_down_circle', 'arrow_drop_up', 'arrow_forward', \n    'arrow_upward', 'cancel', 'check', 'chevron_left', 'chevron_right', 'close', 'expand_less', 'expand_more', 'first_page', 'fullscreen', 'fullscreen_exit', 'last_page', 'menu', 'more_horiz', \n    'more_vert', 'refresh', 'subdirectory_arrow_left', 'subdirectory_arrow_right', 'unfold_less', 'unfold_more', \n    // Notification\n    'adb', 'airline_seat_flat', 'airline_seat_flat_angled', 'airline_seat_recline_extra', 'airline_seat_recline_normal', 'disc_full', 'more', 'network_check', 'network_locked', 'no_encryption', \n    'power', 'power_off', 'priority_high', 'sd_card', 'sms', 'sms_failed', 'sync', 'sync_disabled', 'sync_problem', 'system_update', 'vibration', 'vpn_lock', 'wc', 'wifi', 'wifi_off', \n    // Places\n    'ac_unit', 'airport_shuttle', 'all_inclusive', 'beach_access', 'business_center', 'casino', 'child_care', 'child_friendly', 'fitness_center', 'golf_course', 'hot_tub', 'kitchen', \n    'pool', 'room_service', 'rv_hookup', 'smoke_free', 'smoking_rooms', 'spa', \n    // Social\n    'cake', 'domain', 'group', 'group_add', 'location_city', 'mood', 'mood_bad', 'notifications', 'notifications_active', 'notifications_none', 'notifications_off', 'notifications_paused', \n    'pages', 'party_mode', 'people_outline', 'person', 'person_add', 'person_outline', 'public', 'school', 'sentiment_dissatisfied', 'sentiment_satisfied', 'sentiment_very_dissatisfied', \n    'sentiment_very_satisfied', 'share', 'thumb_down_alt', 'thumb_up_alt', 'whatshot', \n    // Toggle\n    'check_box', 'check_box_outline_blank', 'indeterminate_check_box', 'radio_button_checked', 'radio_button_unchecked', 'star', 'star_border', 'star_half'];\n\n    static fonts = ['Sans-serif', 'Roboto-Thin', 'Roboto-Light', 'Roboto-Regular', 'Roboto-Medium', 'Roboto-Bold', 'Quicksand-Regular', 'Quicksand-Medium', 'Quicksand-Bold']; \n}","export interface IDictionary<T> {\n    Add(key: string, value: T);\n    ContainsKey(key: string): boolean;\n    Count(): number;\n    Item(key: string): T;\n    Keys(): string[];\n    Remove(key: string): T;\n    Values(): T[];\n}\n\nexport class Dictionary<T> implements IDictionary<T> {\n    private items: { [index: string]: T } = {};\n \n    private count: number = 0;\n \n    public ContainsKey(key: string): boolean {\n        return this.items.hasOwnProperty(key);\n    }\n \n    public Count(): number {\n        return this.count;\n    }\n \n    public Add(key: string, value: T) {\n        if(!this.items.hasOwnProperty(key))\n             this.count++;\n \n        this.items[key] = value;\n    }\n \n    public Remove(key: string): T {\n        var val = this.items[key];\n        delete this.items[key];\n        this.count--;\n        return val;\n    }\n \n    public Item(key: string): T {\n        return this.items[key];\n    }\n \n    public Keys(): string[] {\n        var keySet: string[] = [];\n \n        for (var prop in this.items) {\n            if (this.items.hasOwnProperty(prop)) {\n                keySet.push(prop);\n            }\n        }\n        return keySet;\n    }\n \n    public Values(): T[] {\n        var values: T[] = [];\n \n        for (var prop in this.items) {\n            if (this.items.hasOwnProperty(prop)) {\n                values.push(this.items[prop]);\n            }\n        }\n        return values;\n    }\n}","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\n\n@Injectable()\nexport class EndPointApi {\n    private static url: string = null;\n\n    public static getURL() {\n        if (!this.url) {\n            if (environment.apiEndpoint) {\n                this.url = environment.apiEndpoint;\n            } else {\n                const origin = location.origin;\n                let path = location.origin.split('/')[2];\n                const protocoll = location.origin.split(':')[0];\n                const temp = path.split(':')[0];\n                if (temp.length > 1 && environment.apiPort) {\n                    path = temp + ':' + environment.apiPort;\n                }\n                this.url = protocoll + '://' + path;\n            }\n        }\n        return this.url;\n    }\n\n    public static getRemoteURL(destIp: string) {\n        const protocoll = location.origin.split(':')[0];\n        const path = destIp + ':' + environment.apiPort;\n        return protocoll + '://' + path + '/api';\n\n    }\n}","import { Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Injectable()\nexport class Utils {\n\n    static defaultColor = ['#FFFFFF', '#000000', '#EEECE1', '#1F497D', '#4F81BD', '#C0504D', '#9BBB59', '#8064A2', '#4BACC6',\n        '#F79646', '#C00000', '#FF0000', '#FFC000', '#FFD04A', '#FFFF00', '#92D050', '#0AC97D', '#00B050', '#00B0F0', '#4484EF', '#3358C0',\n        '#002060', '#7030A0', '#D8D8D8', '#BFBFBF', '#A5A5A5', '#7F7F7F', '#595959', '#3F3F3F', '#262626'];\n\n    static lineColor = ['#4484ef', '#ef0909', '#00b050', '#ffd04a', '#7030a0', '#a5a5a5', '#c0504d', '#000000'];\n\n    static searchTreeStartWith(element, matchingStart) {\n        if (element.id.startsWith(matchingStart)) {\n            return element;\n        } else if (element.children != null) {\n            var i;\n            var result = null;\n            for (i = 0; result == null && i < element.children.length; i++) {\n                result = Utils.searchTreeStartWith(element.children[i], matchingStart);\n            }\n            return result;\n        }\n        return null;\n    }\n\n    static isNullOrUndefined(ele) {\n        return (ele === null || ele === undefined) ? true : false;\n    }\n\n    // returns keys of enum\n    static enumKeys(p): Array<string> {\n        const keys = Object.keys(p);\n        return keys;\n    }\n\n    // returns values of enum\n    static enumValues(p): Array<string> {\n        const keys = Object.keys(p);\n        return keys.map(el => Object(p)[el]);\n    }\n\n    static getGUID(prefix: string = ''): string {\n        var uuid = \"\", i, random;\n        for (i = 0; i < 16; i++) {\n            random = Math.random() * 16 | 0;\n            if (i == 8) {\n                uuid += \"-\"\n            }\n            uuid += (i == 12 ? 4 : (i == 16 ? (random & 3 | 8) : random)).toString(16);\n        }\n        return prefix + uuid; \n    };\n\n    static getShortGUID(prefix: string = ''): string {\n        var uuid = \"\", i, random;\n        for (i = 0; i < 12; i++) {\n            random = Math.random() * 16 | 0;\n            if (i == 8) {\n                uuid += \"-\"\n            }\n            uuid += (i == 4 ? 4 : (i == 6 ? (random & 3 | 8) : random)).toString(12);\n        }\n        return prefix + uuid; \n    }\n\n    static getNextName(prefix: string, inuse: string[]) {\n        let index = 1;\n        let result = prefix + index;\n        while (inuse.indexOf(result) >= 0) {\n            index++;\n            result = prefix + index;\n        }\n        return result;\n    }\n\n    static isObject(value) {\n        return typeof (value) == 'object' && value !== null;\n    }\n\n    static getType(value: any) {\n        return typeof value;\n    }\n\n    static getTextHeight(font) {\n        // re-use canvas object for better performance\n        var canvas = document.createElement(\"canvas\");\n        var context = canvas.getContext(\"2d\");\n        context.font = font;\n        var metrics = context.measureText('M');\n        return metrics.width;\n    }\n\n    static getDomTextHeight(size: number, font: string) {\n        let text = document.createElement(\"span\");\n        document.body.appendChild(text);\n        text.style.font = font;\n        text.style.fontSize = size + \"px\";\n        text.style.height = 'auto';\n        text.style.width = 'auto';\n        text.style.position = 'absolute';\n        text.style.whiteSpace = 'no-wrap';\n        text.innerHTML = 'M';\n\n        let height = Math.ceil(text.clientHeight);\n        document.body.removeChild(text);\n        return height;\n    }\n\n    static getEnumKey(etype: any, ekey: any) {\n        return Object.keys(etype).find(key => etype[key] === ekey);\n    }\n\n    static isJson(item) {\n        try {\n            let obj = JSON.parse(item);\n            if (obj && Object.keys(obj).length) {\n                return true;\n            }\n\n        } catch (e) {\n        }        \n        return false;\n    }\n\n}\n\n@Pipe({\n    name: 'enumToArray'\n})\nexport class EnumToArrayPipe implements PipeTransform {\n\n    transform(value, args: string[]): any {\n        let result = [];\n        var keys = Object.keys(value);\n        var values = Object.values(value);\n        for (var i = 0; i < keys.length; i++) {\n            result.push({ key: keys[i], value: values[i] });\n        }\n        return result;\n        //or if you want to order the result:\n        //return result.sort((a, b) => a.value < b.value ? -1 : 1);\n    }\n}\n\n@Pipe({ name: 'keepHtml', pure: false })\nexport class EscapeHtmlPipe implements PipeTransform {\n  constructor(private sanitizer: DomSanitizer) {\n  }\n\n  transform(content) {\n    return this.sanitizer.bypassSecurityTrustHtml(content);\n  }\n}\n","import { Injectable } from '@angular/core';\nfunction _window() : any {\n   // return the global native browser window object\n   return window;\n}\n@Injectable()\nexport class WindowRef {\n   get nativeWindow() : any {\n      return _window();\n   }\n}","export class Alarm {\n    name: string;\n    property: AlarmProperty;\n    highhigh: AlarmSubProperty\n    high: AlarmSubProperty\n    low: AlarmSubProperty\n    info: AlarmSubProperty\n    value: string;\n}\nexport class AlarmProperty {\n    variableId: string;\n    permission: number;\n}\nexport class AlarmSubProperty {\n    enabled: boolean;\n    checkdelay: number;\n    min: number;\n    max: number;\n    timedelay: number;\n    text: string;\n    group: string;\n    ackmode: AlarmAckMode;\n    bkcolor: string;\n    color: string;\n}\n\nexport enum AlarmAckMode {\n    float = 'alarm.ack-float',\n    ackactive = 'alarm.ack-active',\n    ackpassive = 'alarm.ack-passive',\n}\nexport class AlarmEvent {\n    ontime: string;\n    offtime: string;\n    acktime: string;\n    name: string;\n    type: string;\n    text: string;\n    group: string;\n    status: string;\n    toack: boolean;\n}","\nexport class Chart {\n    id: string;\n    name: string;\n    lines: ChartLine[];\n}\n\nexport class ChartLine {\n    device: string;\n    id: string;\n    name: string;\n    label: string;\n    color: string;\n    yaxis: number;\n}\n\nexport enum ChartViewType {\n    realtime1 = 'chart.viewtype-realtime1',\n    history = 'chart.viewtype-history'\n}\n\nexport enum ChartRangeType {\n    last8h = 'chart.rangetype-last8h',\n    last1d = 'chart.rangetype-last1d',\n    last3d = 'chart.rangetype-last3d',\n    last1w = 'chart.rangetype-last1w'\n}\n\nexport enum ChartLegendMode {\n    always = 'chart.legend-always',\n    follow = 'chart.legend-follow',\n    bottom = 'chart.legend-bottom',\n    // onmouseover = 'chart.legend-onmouseover',\n    never = 'chart.legend-never'\n}\n\nexport class ChartRangeConverter {\n    static ChartRangeToHours (crt: ChartRangeType) {\n        let types = Object.keys(ChartRangeType);\n        if (crt === types[0]) {         // ChartRangeType.last8h) {\n            return 8;\n        } else if (crt === types[1]) {  // ChartRangeType.last1d) {\n            return 24;\n        } else if (crt === types[2]) {  // ChartRangeType.last3d) {\n            return 24 * 3; \n        } else if (crt === types[3]) {  // ChartRangeType.last1w) {\n            return 24 * 7;\n        }\n        return 0;\n    }\n}","\nexport class Device {\n    /** Device id, GUID */\n    id: string;\n    /** Device name */\n    name: string;\n    /** Enabled */\n    enabled: boolean;\n    /** Connection property, DeviceNetProperty */\n    property: any;\n    /** Device type, OPC, Modbus, S7, etc. */\n    type: DeviceType;\n    /** Polling interval, check changed value after ask value, by OPCUA there is a monitor  */\n    polling: number;\n    /** Tags list of Tag */\n    tags: any;\n\n    constructor(_id: string) {\n        this.id = _id;\n    }\n}\n\nexport class Tag {\n    /** Tag id, GUID */\n    id: string;\n    /** Tag name, is like the id  */\n    name: string;\n    /** Tag label, used by BACnet and WebAPI  */\n    label: string;\n    /** not used yet */\n    value: string;\n    /** Tag type, Bool, Byte, etc. */\n    type: string;\n    /** Address of Tag, combine with address by Modbus, some property for WebAPI */\n    memaddress: string;\n    /** Tag address, for OPCUA like the id */\n    address: string;\n    /** Value divisor, used by Modbus */\n    divisor: number;\n    /** not used yet */\n    access: string;\n    /** Options, used for WebAPI and MQTT */\n    options: any;\n    /** not used yet */\n    format: any;\n\n    constructor(_id: string) {\n        this.id = _id;\n    }\n}\n\nexport class DeviceNetProperty {\n    /** Device address (IP) */\n    address: string;\n    /** Address port */\n    port: string;\n    /** Slot number used for Siemens S7 connection */\n    slot: string;\n    /** Rack number used for Siemens S7 connection */\n    rack: string;\n    /** Slave ID used for Modbus connection */\n    slaveid: string;\n    /** Serial baudrate used for Modbus RTU connection */\n    baudrate: string;\n    /** Serial databits used for Modbus RTU connection */\n    databits: string;\n    /** Serial stopbits used for Modbus RTU connection */\n    stopbits: string;\n    /** Serial parity used for Modbus RTU connection */\n    parity: string;\n    /** Options settings used for Modbus tockenized frame */\n    options: string;\n    /** Method flag used for WebAPI (GET/POST) */\n    method: string;\n    /** Data format flag used for WebAPI (CSV/JSON) */\n    format: string;\n}\n\nexport class DeviceSecurity {\n    mode: any;\n    username: string;\n    password: string;\n    clientId: string;\n    grant_type: string;\n}\n\nexport enum DeviceType {\n    FuxaServer = 'FuxaServer',\n    SiemensS7 = 'SiemensS7',\n    OPCUA = 'OPCUA',\n    BACnet = 'BACnet',\n    ModbusRTU = 'ModbusRTU',\n    ModbusTCP = 'ModbusTCP',\n    WebAPI = 'WebAPI',\n    MQTTclient = 'MQTTclient',\n    WebStudio = 'WebStudio',\n    internal = 'internal'\n    // Template: 'template'\n}\n\nexport enum TagType {\n    Bool = 'Bool',\n    Byte = 'Byte',\n    Int = 'Int',\n    Word = 'Word',\n    DInt = 'DInt',\n    DWord = 'DWord',\n    Real = 'Real'\n}\n\nexport enum ModbusTagType {\n    Bool = 'Bool',\n    Int16 = 'Int16',\n    UInt16 = 'UInt16',\n    Int32 = 'Int32',\n    UInt32 = 'UInt32',\n    Float32 = 'Float32',\n    Float64 = 'Float64',\n    Int16LE = 'Int16LE',\n    UInt16LE = 'UInt16LE',\n    Int32LE = 'Int32LE',\n    UInt32LE = 'UInt32LE',\n    Float32LE = 'Float32LE',\n    Float64LE = 'Float64LE'\n    // String = 'String'\n}\n\nexport enum MessageSecurityMode {\n    /** The MessageSecurityMode is invalid */\n    INVALID,\n    /** No security is applied. */\n    NONE = '1', //'NONE',\n    /** All messages are signed but not encrypted. */\n    SIGN = '2', //'SIGN',\n    /** All messages are signed and encrypted. */\n    SIGNANDENCRYPT = '3'    //'SIGNANDENCRYPT'\n}\n\nexport enum SecurityPolicy {\n    /** see http://opcfoundation.org/UA/SecurityPolicy#None */\n    None = 'None',\n    /** see http://opcfoundation.org/UA/SecurityPolicy#Basic128 */\n    Basic128 = 'Basic128',\n    /** see http://opcfoundation.org/UA/SecurityPolicy#Basic128Rsa15 */\n    Basic128Rsa15 = 'Basic128Rsa15',\n    /** see http://opcfoundation.org/UA/SecurityPolicy#Basic192 */\n    Basic192 = 'Basic192',\n    /** see http://opcfoundation.org/UA/SecurityPolicy#Basic192Rsa15 */\n    Basic192Rsa15 = 'Basic192Rsa15',\n    /** see http://opcfoundation.org/UA/SecurityPolicy#Basic256 */\n    Basic256 = 'Basic256',\n    /** see http://opcfoundation.org/UA/SecurityPolicy#Basic256Rsa15 */\n    Basic256Rsa15 = 'Basic256Rsa15',\n    /** see http://opcfoundation.org/UA/SecurityPolicy#Basic256Sha25 */\n    Basic256Sha256 = 'Basic256Sha256',\n    /** see 'http://opcfoundation.org/UA/SecurityPolicy#Aes256_Sha256_RsaPss' */\n    Aes256_Sha256_RsaPss = 'Aes256_Sha256_RsaPss',\n    /** see ''http://opcfoundation.org/UA/SecurityPolicy#Aes128_Sha256_RsaOaep'' */\n    Aes128_Sha256_RsaOaep = 'Aes128_Sha256_RsaOaep'\n}\n\nexport enum BACnetObjectType {\n    ANALOG_INPUT = 'Analog Input',              // 0\n    ANALOG_OUTPUT = 'Analog Output',            // 1\n    ANALOG_VALUE = 'Analog Value',              // 2\n    BINARY_INPUT = 'Binary Input',              // 3\n    BINARY_OUTPUT = 'Binary Output',            // 4\n    BINARY_VALUE = 'Binary Value',              // 5\n    CALENDAR = '',                              // 6\n    COMMAND = '',                               // 7\n    DEVICE = ''                                 // 8\n}\n\nexport const DEVICE_PREFIX = 'd_';\nexport const TAG_PREFIX = 't_';\n\nexport class DevicesUtils {\n    static getDeviceFromTagId (devices: Device[], id: string): Device {\n        for (let i = 0; i < devices.length; i++) {\n            if (devices[i].tags[id]) {\n                return devices[i];\n            }\n        }\n        return null;\n    }\n\n    static getTagFromTagId (devices: Device[], id: string): Tag {\n        for (let i = 0; i < devices.length; i++) {\n            if (devices[i].tags[id]) {\n                return devices[i].tags[id];\n            }\n        }\n        return null;\n    }\n\n    static getTagFromTagAddress (device: Device, address: string): Tag {\n        return <Tag>Object.values(device.tags).find((tag: Tag) => tag.address === address);\n    }\n}","import { Tag, Device } from './device';\nimport { extend } from 'webdriver-js-extender';\n\nexport class Hmi {\n    /** Layout for navigation menu, header bar, ...  */\n    layout: LayoutSettings = new LayoutSettings();\n    /** Views list of hmi project */\n    views: View[] = [];\n}\n\nexport class View {\n    /** View id, random number */\n    id: string = '';\n    /** View name used as reference in configuration */\n    name: string = '';\n    /** View profile size, background color */\n    profile: DocProfile = new DocProfile();\n    /** Gauges settings list used in the view  */\n    items: DictionaryGaugeSettings = {};\n    /** Variables (Tags) list used in the view */\n    variables: DictionaryVariables = {};\n    /** Svg code content of the view  */\n    svgcontent: string = '';\n    /** Type of view SVG/CARDS */\n    type: ViewType;\n}\n\nexport enum ViewType {\n    svg = 'editor.view-svg',\n    cards ='editor.view-cards'\n} \n\nexport class LayoutSettings {\n    /** Start view (home) */\n    start: string = '';\n    /** Left side navigation menu settings */\n    navigation: NavigationSettings = new NavigationSettings();\n    /** On top header settings */\n    header: HeaderSettings = new HeaderSettings();\n    /** Show development blue button (Home, Lab, Editor) */\n    showdev: boolean = true;\n    /** Enable zoom in view */\n    zoom: ZoomModeType;\n    /** Show input dialog for input field */\n    inputdialog: string = 'false';\n    /** GUI Theme */\n    theme = '';\n}\n\nexport class NavigationSettings {\n    /** Side menu mode (over, push, fix) */\n    mode: NaviModeType;\n    /** Menu item show type (text, icon) */\n    type: NaviItemType;\n    /** Menu background color */\n    bkcolor: string;\n    /** Menu item text and icon color */\n    fgcolor: string;\n    /** Menu items */\n    items: NaviItem[];\n    constructor() {\n        this.mode = Object.keys(NaviModeType).find(key => NaviModeType[key] === NaviModeType.over) as NaviModeType;\n        this.type = Object.keys(NaviItemType).find(key => NaviItemType[key] === NaviItemType.block) as NaviItemType;\n    }\n}\n\nexport enum NaviModeType {\n    void = 'item.navsmode-none',\n    push = 'item.navsmode-push',\n    over = 'item.navsmode-over',\n    fix = 'item.navsmode-fix',\n}\n\nexport enum NaviItemType {\n    icon = 'item.navtype-icons',\n    text = 'item.navtype-text',\n    block = 'item.navtype-icons-text-block',\n    inline = 'item.navtype-icons-text-inline',\n}\n\nexport class NaviItem {\n    text: string;\n    link: string;\n    view: string;\n    icon: string;\n    permission: number;\n}\n\nexport class HeaderSettings {\n    title: string;\n    alarms: NotificationModeType;\n    infos: NotificationModeType;\n    bkcolor: string = '#ffffff';\n    fgcolor: string = '#000000';\n}\n\nexport enum NotificationModeType {\n    hide = 'item.notifymode-hide',\n    fix = 'item.notifymode-fix',\n    float = 'item.notifymode-float',\n}\n\nexport enum ZoomModeType {\n    disabled = 'item.zoommode-disabled',\n    enabled = 'item.zoommode-enabled',\n}\n\nexport enum InputModeType {\n    false = 'item.inputmode-disabled',\n    true = 'item.inputmode-enabled',\n}\n\nexport class DocProfile {\n    width: number = 640;\n    height: number = 480;\n    bkcolor: string = '';\n    margin: number = 10;\n}\n\nexport class MyItem {\n\n}\n\nexport class GaugeSettings {\n    name: string = '';\n    property: any = null;   // set to GaugeProperty after upgrate\n    label: string = '';\n    constructor(public id: string, public type: string) {\n    }\n}\n\nexport class GaugeProperty {\n    variableId: string;\n    variableValue: string;\n    permission: number;\n    ranges: GaugeRangeProperty[];\n    events: GaugeEvent[] = [];\n    actions: GaugeAction[] = [];\n    options: any;\n    readonly: boolean;\n}\n\nexport class GaugeEvent {\n    type: string;\n    action: string;\n    actparam: string;\n    actoptions = {};\n}\n\nexport enum GaugeActionsType {\n    hide = 'shapes.action-hide',\n    show = 'shapes.action-show',\n    blink = 'shapes.action-blink',\n    stop = 'shapes.action-stop',\n    clockwise = 'shapes.action-clockwise',\n    anticlockwise = 'shapes.action-anticlockwise',\n    downup = 'shapes.action-downup'\n}\n\nexport class GaugeAction {\n    variableId: string;\n    range: GaugeRangeProperty;\n    type: any;\n    options: any = {};\n}\n\nexport class GaugeActionBlink {\n    strokeA: string = null;\n    strokeB: string = null;\n    fillA: string = null;\n    fillB: string = null;\n    interval: number = 1000;\n}\n\nexport class GaugeStatus {\n    variablesValue = {};\n    onlyChange = false;         // to process value only by change\n    takeValue = false;          // to process value by check change with gauge value\n    actionRef: GaugeActionStatus;\n}\n\nexport class GaugeActionStatus {\n    type: string;\n    timer: any = null;\n    animr: any = null;\n    spool: any;\n    constructor(type: string) {\n        this.type = type;\n    }\n}\n\nexport enum GaugeEventType {\n    click = 'shapes.event-click',\n}\n\nexport enum GaugeEventActionType {\n    onpage = 'shapes.event-onpage',\n    onwindow = 'shapes.event-onwindow',\n    ondialog = 'shapes.event-ondialog',\n    oniframe = 'shapes.event-oniframe',\n    oncard = 'shapes.event-oncard',     // wrong name exchange with 'onwindow'\n    onSetValue = 'shapes.event-onsetvalue',\n    onToggleValue = 'shapes.event-ontogglevalue',\n    onSetInput = 'shapes.event-onsetinput',\n    onclose = 'shapes.event-onclose',\n}\n\nexport class GaugeRangeProperty {\n    min: number;\n    max: number;\n    text: string;\n    textId: string;\n    color: string;\n    type: any;\n    style: any;\n    stroke: string;\n}\n\nexport interface GaugeChartProperty {\n    id: string;\n    type: string;\n    options: any;\n}\n\nexport class Variable {\n    id: string;\n    name: string;\n    source: string;\n    value: string;\n    error: number;\n    constructor(id: string, source: string, name: string) {\n        this.id = id; this.name = name; this.source = source;\n    }\n}\n\nexport class VariableRange {\n    min: number;\n    max: number;\n}\n\nexport class Alarm extends Tag {\n    id: string;\n    group: string;\n    device: string;\n}\n\nexport class WindowLink {\n    name: string = '';\n    title: string = '';\n    type: string;\n}\n\nexport class SelElement {\n    type: string = '';\n    ele: any = null;\n}\n\nexport class Event {\n    id: string = '';\n    dom: any;\n    value: any = null;\n    dbg: string = '';\n    type: string;\n    ga: GaugeSettings;\n}\n\nexport class DaqQuery {\n    gid: string;\n    from: any;\n    to: any;\n    event: string;\n    sids: string[];\n}\n\nexport class DaqResult {\n    gid: string;\n    result: any;\n}\n\nexport class HelpData {\n    page: string;\n    tag: string;\n}\n\ninterface DictionaryGaugeSettings {\n    [x: string]: GaugeSettings\n}\n\ninterface DictionaryVariables {\n    [id: string]: Variable\n}\n\nexport enum DateFormatType {\n    YYYY_MM_DD = '1998/03/25',\n    MM_DD_YYYY = '03/25/1998',\n    DD_MM_YYYY = '25/03/1998',\n    MM_DD_YY = '03/25/98',\n    DD_MM_YY = '25/03/98',\n}\n\nexport enum TimeFormatType {\n    hh_mm_ss = '16:58:10',\n    hh_mm_ss_AA = '04:58:10 PM',\n}\n\nexport class CardWidget {\n    data: string;\n    type: string;\n    zoom: number = 1;\n    constructor(type: string, data: string) {\n        this.type = type;\n        this.data = data;\n    }\n}\n\nexport enum CardWidgetType {\n    view = 'card.widget-view',\n    alarms = 'card.widget-alarms',\n    table = 'card.widget-table',\n}","import { Device, DEVICE_PREFIX } from './device';\nimport { Hmi } from './hmi';\nimport { Chart } from './chart';\nimport { Alarm } from './alarm';\nimport { Text } from './text';\nimport { Utils } from '../_helpers/utils';\n\nexport class ProjectData {\n    version: string = \"1.01\";\n    /** FUXA Server */\n    server: Device = new Device(Utils.getGUID(DEVICE_PREFIX));\n    /** Hmi resource, layout, SVG, etc. */\n    hmi: Hmi = new Hmi();\n    /** Devices, connection, Tags, etc. */\n    devices = {};\n    /** Charts, Tags, colors, etc. */\n    charts: Chart[] = [];\n    /** Alarms, Tags, logic, level, colors, etc.  */\n    alarms: Alarm[] = [];\n    /** not used yet */\n    texts: Text[] = [];\n    /** Plugins, name, version */\n    plugin: Plugin[] = [];\n}\n\nexport enum ProjectDataCmdType {\n    SetDevice = 'set-device',\n    DelDevice = 'del-device',\n    SetView = 'set-view',\n    DelView = 'del-view',\n    HmiLayout = 'layout',\n    Charts = 'charts',\n    SetText = 'set-text',\n    DelText = 'del-text',\n    SetAlarm = 'set-alarm',\n    DelAlarm = 'del-alarm',\n}","export class AppSettings {\n    /** Editor language */\n    language = 'en';\n    /** Web server port */\n    uiPort = 8080;\n    /** Security access to enable user and authentication */\n    secureEnabled = false;\n    /** Expiration of authanticated token (15m)*/\n    tokenExpiresIn = '1h';\n}","export class Text {\n    name: string;\n    group: string;\n    value: string;\n}","export class User {\n    username: string;\n\tfullname: string;\n    password: string;\n    groups: number;\n}\n\nexport class UserGroups {\n    static ADMINMASK = [-1, 255];\n    static EXTENSION = 8;\n    static Groups = [{id: 1, label: 'Viewer'},\n            {id: 2, label: 'Operator'},\n            {id: 4, label: 'Engineer'},\n            {id: 8, label: 'Supervisor'},\n            {id: 16, label: 'Manager'},\n            {id: 32, label: 'Administrator'},\n            {id: 64, label: 'G'},\n            {id: 128, label: 'H'}];\n\n    static GroupsToValue (grps: any, extended?: boolean): number {\n        let result = 0;\n        if (grps) {\n            for (let i = 0; i < grps.length; i++) {\n                result += grps[i].id;\n            }\n        } \n        let shift = (extended) ? this.EXTENSION : 0;\n        return result << shift;\n    }\n\n    static ValueToGroups(value: number, extended?: boolean): any {\n        let result = [];\n        let shift = (extended) ? this.EXTENSION : 0;\n        for (let i = 0; i < this.Groups.length; i++) {\n            if ((value >> shift) & this.Groups[i].id) {\n                result.push(this.Groups[i]);\n            }\n        }\n        return result;\n    }\n\n    static GroupToLabel(value: number): string {\n        let result = '';\n        for (let i = 0; i < this.Groups.length; i++) {\n            if (value & this.Groups[i].id) {\n                if (result) {\n                    result += ',';\n                }\n                result += this.Groups[i].label;\n            }\n        }\n        return result;\n    }\n}","import { Injectable, Output, EventEmitter } from '@angular/core';\n\nimport { environment } from '../../environments/environment';\nimport { SettingsService } from './settings.service';\n\n@Injectable()\nexport class AppService {\n\n    @Output() onShowModeChanged: EventEmitter<string> = new EventEmitter();\n\n    private static APP_DEMO = 'demo';\n    private static APP_CLIENT = 'client';\n\n    private showMode: string;\n\n    constructor(private settingsService: SettingsService) {\n    }\n\n    setShowMode(mode: string): string {\n        if (mode === 'editor' && this.settingsService.isEditModeLocked()) {\n            this.settingsService.notifyEditorLocked();\n            return this.showMode;\n        } else {\n            this.showMode = mode;\n            this.onShowModeChanged.emit(this.showMode);\n            return this.showMode;\n        }\n    }\n\n    lockEditMode() {\n        this.settingsService.lockEditMode();\n    }\n\n    unlockEditMode() {\n        this.settingsService.unlockEditMode();\n    }\n\n    get isDemoApp() {\n        return (environment.type === AppService.APP_DEMO);\n    }\n\n    get isClientApp() {\n        return (environment.type === AppService.APP_CLIENT);\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { User, UserGroups } from '../_models/user';\nimport { environment } from '../../environments/environment';\nimport { EndPointApi } from '../_helpers/endpointapi';\n\n@Injectable()\nexport class AuthService {\n\n\tprivate currentUser: UserProfile;\n\tprivate endPointConfig: string = EndPointApi.getURL();\n\n\tconstructor(private http: HttpClient) { \n\t\tlet user = JSON.parse(localStorage.getItem('currentUser'));\n\t\tif (user) {\n\t\t  this.currentUser = user;\n\t\t}\n\t}\n\n\tsignIn(username: string, password: string) {\n\t\treturn new Observable((observer) => {\n\t\t\tif (environment.serverEnabled) {\n\t\t\t\tlet header = new HttpHeaders({ 'Content-Type': 'application/json' });\n\t\t\t\treturn this.http.post(this.endPointConfig + '/api/signin', { username: username, password: password }).subscribe((result: any) => {\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\tthis.currentUser = <UserProfile>result.data;\n\t\t\t\t\t\tthis.saveUserToken(this.currentUser)\n\t\t\t\t\t}\n\t\t\t\t\tobserver.next();\n\t\t\t\t}, err => {\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t\tobserver.error(err);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tobserver.next();\n\t\t\t}\n\t\t});\n\n\t}\n\n\tsignOut() {\n\t\tthis.removeUser();\n\t}\n\n\tgetUser(): User {\n\t\treturn this.currentUser;\n\t}\n\n\tgetUserToken(): string {\n\t\tif (this.currentUser) {\n\t\t\treturn this.currentUser.token;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n    isAdmin(): boolean {\n        if (this.currentUser && UserGroups.ADMINMASK.indexOf(this.currentUser.groups) !== -1) {\n            return true;\n        }\n        return false;\n    }\n\n\t// to check by page refresh\n\tprivate saveUserToken(user: UserProfile) {\n\t\tlocalStorage.setItem('currentUser', JSON.stringify(user));\n\t}\n\n\tprivate removeUser() {\n\t\tthis.currentUser = null;\n\t\tlocalStorage.removeItem('currentUser');\n\t}\n}\n\nexport class UserProfile extends User {\n\ttoken: string;\n}","import { Injectable, Output, EventEmitter } from '@angular/core';\nimport { Http, Headers, RequestOptions, Response } from '@angular/http';\nimport { Observable } from \"rxjs\";\nimport * as io from 'socket.io-client';\n\nimport { environment } from '../../environments/environment';\nimport { Device, Tag, DeviceType } from '../_models/device';\nimport { Hmi, Variable, GaugeSettings, DaqQuery, DaqResult } from '../_models/hmi';\nimport { AlarmEvent } from '../_models/alarm';\nimport { ProjectService } from '../_services/project.service';\nimport { EndPointApi } from '../_helpers/endpointapi';\nimport { ToastrService } from 'ngx-toastr';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable()\nexport class HmiService {\n\n    @Output() onVariableChanged: EventEmitter<Variable> = new EventEmitter();\n    @Output() onDeviceChanged: EventEmitter<boolean> = new EventEmitter();\n    @Output() onDeviceBrowse: EventEmitter<any> = new EventEmitter();\n    @Output() onDeviceNodeAttribute: EventEmitter<any> = new EventEmitter();\n    @Output() onDaqResult: EventEmitter<DaqResult> = new EventEmitter();\n    @Output() onDeviceProperty: EventEmitter<any> = new EventEmitter();\n    @Output() onHostInterfaces: EventEmitter<any> = new EventEmitter();\n    @Output() onAlarmsStatus: EventEmitter<any> = new EventEmitter();\n    @Output() onDeviceWebApiRequest: EventEmitter<any> = new EventEmitter();\n\n    public static separator = '^~^';\n    public hmi: Hmi;\n    viewSignalGaugeMap = new ViewSignalGaugeMap();\n    variables = {};\n    alarms = { highhigh: 0, high: 0, low: 0, info: 0 };\n    private socket;\n    private endPointConfig: string = EndPointApi.getURL();//\"http://localhost:8080\";\n    private bridge: any = null;\n\n    constructor(public projectService: ProjectService,\n        private translateService: TranslateService,\n        private toastr: ToastrService) {\n        if (environment.serverEnabled) {\n            this.initSocket();\n        }\n    }\n\n    /**\n     * Set signal value in current frontend signal array\n     * Called from Test and value beckame from backend\n     * @param sig\n     */\n    setSignalValue(sig: Variable) {\n        // update the signals array value\n\n        // notify the gui\n        this.onVariableChanged.emit(sig);\n    }\n\n    /**\n     * Set signal value to backend\n     * Value input in frontend\n     * @param sigId\n     * @param value\n     */\n    putSignalValue(sigId: string, value: string) {\n        if (this.variables[sigId]) {\n            this.variables[sigId].value = value;\n            if (this.socket) {\n                let device = this.projectService.getDeviceFromTagId(sigId);\n                if (device) {\n                    this.variables[sigId]['source'] = device.id;\n                }\n                if (device.type === DeviceType.internal) {\n                    this.setSignalValue(this.variables[sigId]);\n                } else {\n                    this.socket.emit(IoEventTypes.DEVICE_VALUES, { cmd: 'set', var: this.variables[sigId] });\n                }\n            } else if (this.bridge) {\n                this.bridge.setDeviceValue(this.variables[sigId]);\n                this.setSignalValue(this.variables[sigId]);\n            } else if (!environment.serverEnabled) {\n                // for demo, only frontend\n                this.setSignalValue(this.variables[sigId]);\n            }\n        }\n    }\n\n    public getAllSignals() {\n        return this.variables;\n    }\n\n    //#region Communication Socket.io and Bridge\n    /**\n     * Init the bridge for client communication\n     * @param bridge \n     * @returns \n     */\n    initClient(bridge?: any) {\n        if (!bridge) return false;\n        this.bridge = bridge;\n        if (this.bridge) {\n            this.bridge.onDeviceValues = (tags: Variable[]) => this.onDeviceValues(tags);\n            this.askDeviceValues();\n            return true;\n        }\n        return false;\n    }\n\n    private onDeviceValues(tags: Variable[]) {\n        for (let idx = 0; idx < tags.length; idx++) {\n            let varid = tags[idx].id;\n            if (!this.variables[varid]) {\n                this.variables[varid] = new Variable(varid, null, null);\n            }\n            this.variables[varid].value = tags[idx].value;\n            this.variables[varid].error = tags[idx].error;\n            this.setSignalValue(this.variables[varid]);\n        }\n    }\n\n    /**\n     * Init the socket and subsribe to device status and signal value change\n     */\n    public initSocket() {\n        // check to init socket io\n        if (!this.socket) {\n            this.socket = io(this.endPointConfig);\n            // devicse status\n            this.socket.on(IoEventTypes.DEVICE_STATUS, (message) => {\n                this.onDeviceChanged.emit(message);\n                if (message.status === 'connect-error') {\n                    let name = message.id;\n                    let device = this.projectService.getDeviceFromId(message.id);\n                    if (device) name = device.name;\n                    let msg = '';\n                    this.translateService.get('msg.device-connection-error', { value: name }).subscribe((txt: string) => { msg = txt });\n                    this.toastr.error(msg, '', {\n                        timeOut: 3000,\n                        closeButton: true,\n                        // disableTimeOut: true\n                    });\n                }\n            });\n            // device property\n            this.socket.on(IoEventTypes.DEVICE_PROPERTY, (message) => {\n                this.onDeviceProperty.emit(message);\n            });\n            // devices values\n            this.socket.on(IoEventTypes.DEVICE_VALUES, (message) => {\n                for (let idx = 0; idx < message.values.length; idx++) {\n                    let varid = message.values[idx].id;\n                    if (!this.variables[varid]) {\n                        this.variables[varid] = new Variable(varid, null, null);\n                    }\n                    this.variables[varid].value = message.values[idx].value;\n                    this.setSignalValue(this.variables[varid]);\n                }\n            });\n            // device browse\n            this.socket.on(IoEventTypes.DEVICE_BROWSE, (message) => {\n                this.onDeviceBrowse.emit(message);\n            });\n            // device node attribute\n            this.socket.on(IoEventTypes.DEVICE_NODE_ATTRIBUTE, (message) => {\n                this.onDeviceNodeAttribute.emit(message);\n            });\n            // daq values\n            this.socket.on(IoEventTypes.DAQ_RESULT, (message) => {\n                this.onDaqResult.emit(message);\n            });\n            // alarms status\n            this.socket.on(IoEventTypes.ALARMS_STATUS, (alarmsstatus) => {\n                this.onAlarmsStatus.emit(alarmsstatus);\n            });\n            this.socket.on(IoEventTypes.HOST_INTERFACES, (message) => {\n                this.onHostInterfaces.emit(message);\n            });\n            this.socket.on(IoEventTypes.DEVICE_WEBAPI_REQUEST, (message) => {\n                this.onDeviceWebApiRequest.emit(message);\n            });\n\n            this.askDeviceValues();\n            this.askAlarmsStatus();\n        }\n    }\n\n    /**\n     * Ask device status to backend\n     */\n    public askDeviceStatus() {\n        if (this.socket) {\n            this.socket.emit('device-status', 'get');\n        }\n    }\n\n    /**\n     * Ask device status to backend\n     */\n    public askDeviceProperty(endpoint, type) {\n        if (this.socket) {\n            let msg = { endpoint: endpoint, type: type };\n            this.socket.emit(IoEventTypes.DEVICE_PROPERTY, msg);\n        }\n    }\n\n    /**\n     * Ask device webapi result to test\n     */\n    public askWebApiProperty(property) {\n        if (this.socket) {\n            let msg = { property: property };\n            this.socket.emit(IoEventTypes.DEVICE_WEBAPI_REQUEST, msg);\n        }\n    }\n\n    /**\n     * Ask host interface available\n     */\n    public askHostInterface() {\n        if (this.socket) {\n            this.socket.emit(IoEventTypes.HOST_INTERFACES, 'get');\n        }\n    }\n\n    /**\n     * Ask device status to backend\n     */\n    public askDeviceValues() {\n        if (this.socket) {\n            this.socket.emit(IoEventTypes.DEVICE_VALUES, 'get');\n        } else if (this.bridge) {\n            this.bridge.getDeviceValues(null);\n        }\n    }\n\n    /**\n     * Ask alarms status to backend\n     */\n    public askAlarmsStatus() {\n        if (this.socket) {\n            this.socket.emit(IoEventTypes.ALARMS_STATUS, 'get');\n        }\n    }\n\n    public emitMappedSignalsGauge(domViewId: string) {\n        let sigsToEmit = this.viewSignalGaugeMap.getSignalIds(domViewId);\n        for (let idx = 0; idx < sigsToEmit.length; idx++) {\n            if (this.variables[sigsToEmit[idx]]) {\n                this.setSignalValue(this.variables[sigsToEmit[idx]]);\n            }\n        }\n    }\n\n    /**\n     * Ask device browse to backend\n     */\n    public askDeviceBrowse(deviceId: string, node: any) {\n        if (this.socket) {\n            let msg = { device: deviceId, node: node };\n            this.socket.emit(IoEventTypes.DEVICE_BROWSE, msg);\n        }\n    }\n\n    /**\n     * Ask device node attribute to backend\n     */\n    public askNodeAttributes(deviceId: string, node: any) {\n        if (this.socket) {\n            let msg = { device: deviceId, node: node };\n            this.socket.emit(IoEventTypes.DEVICE_NODE_ATTRIBUTE, msg);\n        }\n    }\n\n    public queryDaqValues(msg: DaqQuery) {\n        if (this.socket) {\n            this.socket.emit(IoEventTypes.DAQ_QUERY, msg);\n        }\n    }\n\n    //#endregion\n\n    //#region Signals Gauges Mapping\n    addSignal(signalId: string, ga: GaugeSettings) {\n        // add to variable list\n        if (!this.variables[signalId]) {\n            let v = new Variable(signalId, null, null);\n            this.variables[signalId] = v;\n        }\n    }\n\n    /**\n     * map the dom view with signal and gauge settings\n     * @param domViewId\n     * @param signalId\n     * @param ga\n     */\n    addSignalGaugeToMap(domViewId: string, signalId: string, ga: GaugeSettings) {\n        this.viewSignalGaugeMap.add(domViewId, signalId, ga);\n        // add to variable list\n        if (!this.variables[signalId]) {\n            let v = new Variable(signalId, null, null);\n            this.variables[signalId] = v;\n        }\n    }\n\n    /**\n     * remove mapped dom view Gauges\n     * @param domViewId\n     * return the removed gauge settings id list with signal id binded\n     */\n    removeSignalGaugeFromMap(domViewId: string) {\n        let sigsIdremoved = this.viewSignalGaugeMap.getSignalIds(domViewId);\n        let result = {};\n        sigsIdremoved.forEach(sigid => {\n            let gaugesSettings: GaugeSettings[] = this.viewSignalGaugeMap.signalsGauges(domViewId, sigid);\n            if (gaugesSettings) {\n                result[sigid] = gaugesSettings.map(gs => { return gs.id });\n            }\n        })\n        this.viewSignalGaugeMap.remove(domViewId);\n        return result;\n    }\n\n    /**\n     * get the gauges settings list of mapped dom view with the signal\n     * @param domViewId\n     * @param sigid\n     */\n    getMappedSignalsGauges(domViewId: string, sigid: string): GaugeSettings[] {\n        return Object.values(this.viewSignalGaugeMap.signalsGauges(domViewId, sigid));\n    }\n\n    /**\n     * get all signals property mapped in all dom views\n     * @param fulltext a copy with item name and source\n     */\n    getMappedVariables(fulltext: boolean): Variable[] {\n        let result: Variable[] = [];\n        this.viewSignalGaugeMap.getAllSignalIds().forEach(sigid => {\n            if (this.variables[sigid]) {\n                let toadd = this.variables[sigid];\n                if (fulltext) {\n                    toadd = Object.assign({}, this.variables[sigid]);\n                    let device = this.projectService.getDeviceFromTagId(toadd.id);\n                    if (device) {\n                        toadd['source'] = device.name;\n                        if (device.tags[toadd.id]) {\n                            toadd['name'] = this.getTagLabel(device.tags[toadd.id]);\n                        }\n                    }\n                }\n                result.push(toadd);\n            }\n        });\n        return result;\n    }\n\n    /**\n     * get singal property, complate the signal property with device tag property\n     * @param sigid\n     * @param fulltext\n     */\n    getMappedVariable(sigid: string, fulltext: boolean): Variable {\n        if (!this.variables[sigid]) return null;\n\n        if (this.variables[sigid]) {\n            let result = this.variables[sigid];\n            if (fulltext) {\n                result = Object.assign({}, this.variables[sigid]);\n                let device = this.projectService.getDeviceFromTagId(result.id);\n                if (device) {\n                    result['source'] = device.name;\n                    if (device.tags[result.id]) {\n                        result['name'] = this.getTagLabel(device.tags[result.id]);\n                    }\n                }\n            }\n            return result;\n        }\n    }\n\n    private getTagLabel(tag: Tag) {\n        if (tag.label) {\n            return tag.label;\n        } else {\n            return tag.name;\n        }\n    }\n\n    //#endregion\n\n    //#region Chart functions\n    getChart(id: string) {\n        return this.projectService.getChart(id);\n    }\n\n    getChartSignal(id: string) {\n        let chart = this.projectService.getChart(id);\n        if (chart) {\n            let varsId = [];\n            chart.lines.forEach(line => {\n                varsId.push(line.id);\n            });\n            return varsId;\n        }\n    }\n    //#endregion\n\n    //#region Current Alarms functions\n    getAlarmsValues() {\n        return this.projectService.getAlarmsValues();\n    }\n\n    setAlarmAck(alarmName: string) {\n        return this.projectService.setAlarmAck(alarmName);\n    }\n\n    //#endregion\n\n    //#region My Static functions\n    public static toVariableId(src: string, name: string) {\n        return src + HmiService.separator + name;\n    }\n\n    //#endregion\n}\n\nclass ViewSignalGaugeMap {\n    views = {};\n\n    public add(domViewId: string, signalId: string, ga: GaugeSettings) {\n        if (!this.views[domViewId]) {\n            this.views[domViewId] = {};\n        }\n        if (!this.views[domViewId][signalId]) {\n            this.views[domViewId][signalId] = [];\n        }\n        this.views[domViewId][signalId].push(ga);\n        return true;\n    }\n\n    public remove(domViewId: string) {\n        delete this.views[domViewId];\n        return;\n    }\n\n    public signalsGauges(domViewId: string, sigid: string) {\n        return this.views[domViewId][sigid];\n    }\n\n    public getSignalIds(domViewId: string) {\n        let result: string[] = [];\n        if (this.views[domViewId]) {\n            result = Object.keys(this.views[domViewId]);\n        }\n        return result;\n    }\n\n    public getAllSignalIds() {\n        let result: string[] = [];\n        Object.values(this.views).forEach(evi => {\n            Object.keys(evi).forEach(key => {\n                if (result.indexOf(key) === -1) {\n                    result.push(key);\n                }\n            });\n        });\n        return result;\n    }\n}\n\nexport enum IoEventTypes {\n    DEVICE_STATUS = 'device-status',\n    DEVICE_PROPERTY = 'device-property',\n    DEVICE_VALUES = 'device-values',\n    DEVICE_BROWSE = 'device-browse',\n    DEVICE_NODE_ATTRIBUTE = 'device-node-attribute',\n    DEVICE_WEBAPI_REQUEST = 'device-webapi-request',\n    DAQ_QUERY = 'daq-query',\n    DAQ_RESULT = 'daq-result',\n    DAQ_ERROR = 'daq-error',\n    ALARMS_STATUS = 'alarms-status',\n    HOST_INTERFACES = 'host-interfaces'\n}","import { Injectable, Output, EventEmitter } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { EndPointApi } from '../_helpers/endpointapi';\nimport { Plugin } from '../_models/plugin';\nimport { environment } from '../../environments/environment';\nimport { ToastrService } from 'ngx-toastr';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable()\nexport class PluginService {\n\n    @Output() onPluginsChanged: EventEmitter<any> = new EventEmitter();\nv\n    private endPointConfig: string = EndPointApi.getURL();\n\n    constructor(private http: HttpClient,\n        private translateService: TranslateService,\n        private toastr: ToastrService) { \n\n    }\n    \n    getPlugins() {\n        return this.http.get<Plugin[]>(this.endPointConfig + '/api/plugins');\n    }\n\n    installPlugin(plugin: Plugin) {\n        return new Observable((observer) => {\n            if (environment.serverEnabled) {\n                let header = new HttpHeaders({ 'Content-Type': 'application/json' });\n                this.http.post<any>(this.endPointConfig + '/api/plugins', { headers: header, params: plugin }).subscribe(result => {\n                    observer.next();\n                    this.onPluginsChanged.emit();\n                }, err => {\n                    console.error(err);\n                    observer.error(err);\n                });                \n            } else {\n                observer.next();\n            }\n        });\n    }\n\n    removePlugin(plugin: Plugin) {\n        return new Observable((observer) => {\n            if (environment.serverEnabled) {\n                let header = new HttpHeaders({ 'Content-Type': 'application/json' });\n                this.http.delete<any>(this.endPointConfig + '/api/plugins', { headers: header, params: {param:  plugin.name} }).subscribe(result => {\n                    observer.next();\n                    this.onPluginsChanged.emit();\n                }, err => {\n                    console.error(err);\n                    observer.error(err);\n                });                \n            } else {\n                observer.next();\n            }\n        });\n    }\n}","\nimport { Injectable, Output, EventEmitter, Inject, Optional } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '../../environments/environment';\nimport { ProjectData, ProjectDataCmdType } from '../_models/project';\nimport { Hmi, View, LayoutSettings } from '../_models/hmi';\nimport { Chart } from '../_models/chart';\nimport { Alarm } from '../_models/alarm';\nimport { Text } from '../_models/text';\nimport { Device, DeviceType, DeviceNetProperty, DEVICE_PREFIX } from '../_models/device';\nimport { EndPointApi } from '../_helpers/endpointapi';\nimport { ToastrService } from 'ngx-toastr';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ResourceStorageService } from './rcgi/resource-storage.service';\nimport { ResDemoService } from './rcgi/resdemo.service';\nimport { ResClientService } from './rcgi/resclient.service';\nimport { ResWebApiService } from './rcgi/reswebapi.service';\nimport { AppService } from './app.service';\nimport { Utils } from '../_helpers/utils';\n\nimport * as FileSaver from 'file-saver';\n\n@Injectable()\nexport class ProjectService {\n\n    @Output() onSaveCurrent: EventEmitter<SaveMode> = new EventEmitter();\n    @Output() onLoadHmi: EventEmitter<boolean> = new EventEmitter();\n\n    private projectData = new ProjectData();            // Project data\n    public AppId = '';\n\n    public serverSettings: ServerSettings;\n    private storage: ResourceStorageService;\n\n    private projectOld: string = '';\n    private ready = false;\n\n    constructor(private resewbApiService: ResWebApiService,\n        private resDemoService: ResDemoService,\n        private resClientService: ResClientService,\n        private appService: AppService,\n        private translateService: TranslateService,        \n        private toastr: ToastrService) {\n\n        this.storage = resewbApiService;\n        if (appService.isDemoApp) {\n            this.storage = resDemoService;\n        } else if (appService.isClientApp) {\n            this.storage = resClientService;\n        }\n        // console.log(\"mode:\", environment.type);\n        this.storage.getAppId = () => { return this.getAppId(); }\n        this.storage.onRefreshProject = (): boolean => { return this.onRefreshProject() };\n        this.storage.checkServer().subscribe(result => {\n            if (result) {\n                this.serverSettings = result;\n                this.load();\n            }\n        }, error => {\n            console.error('project.service err: ' + error);\n            this.load();\n            this.notifyServerError();\n        });\n    }\n\n    getAppId() {\n        return this.AppId;\n    }\n\n    init(bridge?: any) {\n        this.storage.init(bridge);            \n        if (this.appService.isClientApp) {\n        }\n        this.reload();\n    }\n\n    onRefreshProject(): boolean {\n        this.storage.getStorageProject().subscribe(prj => {\n            if (prj) {\n                this.projectData = prj;\n                // copy to check before save\n                this.projectOld = JSON.parse(JSON.stringify(this.projectData));\n                this.ready = true;\n                this.notifyToLoadHmi();\n            } else {\n                let msg = '';\n                this.translateService.get('msg.get-project-void').subscribe((txt: string) => { msg = txt });\n                console.warn(msg);\n                // this.notifySaveError(msg);\n            }\n        }, err => {\n            console.error('FUXA onRefreshProject error', err);\n        });\n        return true;\n    }\n\n    //#region Load and Save\n    /**\n     * Load Project from Server if enable.\n     * From Local Storage, from 'assets' if demo or create a local project\n     */\n    private load() {\n        this.storage.getStorageProject().subscribe(prj => {\n            if (!prj && this.appService.isDemoApp) {\n                console.log('create demo');\n                this.setNewProject();\n            } else if (this.appService.isClientApp) {\n                if (!prj && (this.storage as ResClientService).isReady) {\n                    this.setNewProject();\n                } else {\n                    this.projectData = prj;\n                }\n                this.ready = true;\n                this.notifyToLoadHmi();\n            } else {\n                this.projectData = prj;\n                // copy to check before save\n                this.projectOld = JSON.parse(JSON.stringify(this.projectData));\n                this.ready = true;\n                this.notifyToLoadHmi();\n            }\n        }, err => {\n            console.error('FUXA load error', err);\n        });\n    }\n\n    /**\n     * Save Project\n     */\n    save(): boolean {\n        // check project change don't work some svg object change the order and this to check isn't easy...boooo\n        this.storage.setServerProject(this.projectData).subscribe(result => {\n            this.load();\n            var msg = '';\n            this.translateService.get('msg.project-save-success').subscribe((txt: string) => { msg = txt });\n            this.toastr.success(msg);\n        }, err => {\n            console.error(err);\n            var msg = '';\n            this.translateService.get('msg.project-save-error').subscribe((txt: string) => { msg = txt });\n            this.toastr.error(msg, '', {\n                timeOut: 3000,\n                closeButton: true,\n                disableTimeOut: true\n            });\n        });\n        return true;\n    }\n\n    saveAs() {\n        let filename = 'fuxa-project.json';\n        let date = new Date();\n        let content = JSON.stringify(this.convertToSave(this.getProject()));\n        let blob = new Blob([content], { type: 'text/plain;charset=utf-8' });\n        FileSaver.saveAs(blob, filename);\n    }\n\n    reload() {\n        this.load();\n    }\n\n    /**\n     * Remove Tag value to save without value\n     * Value was added by HmiService from socketIo event\n     * @param prj\n     */\n    private convertToSave(prj: ProjectData) {\n        let result = JSON.parse(JSON.stringify(prj));\n        if (this.appService.isClientApp) {\n            let sprj = ResourceStorageService.sanitizeProject(prj);\n            result = JSON.parse(JSON.stringify(sprj));\n        }\n        for (let devid in result.devices) {\n            for (let tagid in result.devices[devid].tags) {\n                delete result.devices[devid].tags[tagid].value;\n            }\n        }\n        return result;\n    }\n    //#endregion\n\n    //#region Device to Save\n    /**\n     * Add or update Device to Project.\n     * Save to Server\n     * @param device\n     * @param old\n     */\n    setDevice(device: Device, old: Device, security?: any) {\n        if (this.projectData.devices) {\n            this.projectData.devices[device.id] = device;\n            this.storage.setDeviceSecurity(device.id, security).subscribe(() => {\n                this.storage.setServerProjectData(ProjectDataCmdType.SetDevice, device, this.projectData).subscribe(result => {\n                    if (old && old.id !== device.id) {\n                        this.removeDevice(old);\n                    }\n                }, err => {\n                    console.error(err);\n                    this.notifySaveError(err);\n                });                \n            }, err => {\n                console.error(err);\n                this.notifySaveError(err);\n            });\n        }\n    }\n\n    setDeviceTags(device: Device) {\n        this.projectData.devices[device.id] = device;\n        this.storage.setServerProjectData(ProjectDataCmdType.SetDevice, device, this.projectData).subscribe(result => {\n        }, err => {\n            console.error(err);\n            this.notifySaveError(err);\n        });                \n    }\n\n    /**\n     * Remove Device from Project.\n     * Save to Server\n     * @param device\n     */\n    removeDevice(device: Device) {\n        delete this.projectData.devices[device.id];\n        this.storage.setServerProjectData(ProjectDataCmdType.DelDevice, device, this.projectData).subscribe(result => {\n        }, err => {\n            console.error(err);\n            this.notifySaveError(err);\n        });\n        this.storage.setDeviceSecurity(device.id, '').subscribe(() => {\n        }, err => {\n            console.error(err);\n            this.notifySaveError(err);\n        });\n    }\n\n    getDeviceSecurity(id: string): Observable<any> {\n        return this.storage.getDeviceSecurity(id);\n    }\n    //#endregion\n\n    //#region View to Save\n    /**\n     * Add or update View to Project.\n     * Save to Server\n     * @param view\n     */\n    setView(view: View) {\n        let v = null;\n        for (let i = 0; i < this.projectData.hmi.views.length; i++) {\n            if (this.projectData.hmi.views[i].id === view.id) {\n                v = this.projectData.hmi.views[i];\n            }\n        }\n        if (v) {\n            v = view;\n        } else {\n            this.projectData.hmi.views.push(view);\n        }\n        this.storage.setServerProjectData(ProjectDataCmdType.SetView, view, this.projectData).subscribe(result => {\n        }, err => {\n            console.error(err);\n            this.notifySaveError(err);\n        });\n    }\n\n    /**\n     * Remove the View from Project\n     * Delete from Server\n     * @param view\n     */\n    removeView(view: View) {\n        for (let i = 0; i < this.projectData.hmi.views.length; i++) {\n            if (this.projectData.hmi.views[i].id === view.id) {\n                this.projectData.hmi.views.splice(i, 1);\n                break;\n            }\n        }\n        this.storage.setServerProjectData(ProjectDataCmdType.DelView, view, this.projectData).subscribe(result => {\n        }, err => {\n            console.error(err);\n            this.notifySaveError(err);\n        });\n    }\n    //#endregion\n\n    //#region Hmi, Layout resource json struct\n\n    /**\n     * get hmi resource\n     */\n    getHmi() {\n        return (this.ready && this.projectData) ? this.projectData.hmi : null;\n    }\n\n    setLayout(layout: LayoutSettings) {\n        this.projectData.hmi.layout = layout;\n        this.saveLayout();\n    }\n\n    \n    setLayoutTheme(theme: string) {\n        this.projectData.hmi.layout.theme = theme;\n        this.saveLayout();\n    }\n\n    getLayoutTheme() {\n        if (this.projectData.hmi.layout) {\n            return this.projectData.hmi.layout.theme;\n        }\n        return null;\n    }\n\n    saveLayout() {\n        this.storage.setServerProjectData(ProjectDataCmdType.HmiLayout, this.projectData.hmi.layout, this.projectData).subscribe(result => {\n        }, err => {\n            console.error(err);\n            this.notifySaveError(err);\n        });\n    }\n    //#endregion\n\n    //#region Charts resource\n    /**\n     * get charts resource\n     */\n    getCharts() {\n        return (this.projectData) ? (this.projectData.charts) ? this.projectData.charts : [] : null;\n    }\n\n    getChart(id: string) {\n        for (let i = 0; i < this.projectData.charts.length; i++) {\n            if (this.projectData.charts[i].id === id) {\n                return this.projectData.charts[i];\n            }\n        }\n    }\n\n    /**\n     * save the charts to project\n     * @param charts\n     */\n    setCharts(charts: Chart[]) {\n        this.projectData.charts = charts;\n        this.storage.setServerProjectData(ProjectDataCmdType.Charts, charts, this.projectData).subscribe(result => {\n        }, err => {\n            console.error(err);\n            this.notifySaveError(err);\n        });\n    }\n    //#endregion\n\n    //#region Alarms resource    \n    /**\n     * get alarms resource\n     */\n    getAlarms() {\n        return (this.projectData) ? (this.projectData.alarms) ? this.projectData.alarms : [] : null;\n    }\n\n    /**\n     * save the alarm to project\n     * @param text\n     */\n    setAlarm(alarm: Alarm, old: Alarm) {\n        return new Observable((observer) => {\n            if (!this.projectData.alarms) {\n                this.projectData.alarms = [];\n            }\n            let exist = this.projectData.alarms.find(tx => tx.name === alarm.name);\n            if (exist) {\n                exist.property = alarm.property;\n                exist.highhigh = alarm.highhigh;\n                exist.high = alarm.high;\n                exist.low = alarm.low;\n                exist.info = alarm.info;\n                exist.value = alarm.value;\n            } else {\n                this.projectData.alarms.push(alarm);\n            }\n            this.storage.setServerProjectData(ProjectDataCmdType.SetAlarm, alarm, this.projectData).subscribe(result => {\n                if (old && old.name && old.name !== alarm.name) {\n                    this.removeAlarm(old).subscribe(result => {\n                        observer.next();\n                    });\n                } else {\n                    observer.next();\n                }\n            }, err => {\n                console.error(err);\n                this.notifySaveError(err);\n                observer.error(err);\n            });\n        });\n    }\n\n    /**\n     * remove the text from project\n     * @param text \n     */\n    removeAlarm(alarm: Alarm) {\n        return new Observable((observer) => {\n            if (this.projectData.alarms) {\n                for (let i = 0; i < this.projectData.alarms.length; i++) {\n                    if (this.projectData.alarms[i].name === alarm.name) {\n                        this.projectData.alarms.splice(i, 1);\n                        break;\n                    }\n                }\n            }\n            this.storage.setServerProjectData(ProjectDataCmdType.DelAlarm, alarm, this.projectData).subscribe(result => {\n                observer.next();\n            }, err => {\n                console.error(err);\n                this.notifySaveError(err);\n                observer.error(err);\n            });\n        });\n    }\n\n    getAlarmsValues(): Observable<any> {\n        return this.storage.getAlarmsValues();\n    }\n    \n    setAlarmAck(name: string): Observable<any> {\n        return this.storage.setAlarmAck(name);\n    }\n    //#endregion\n\n    //#region Texts resource\n    /**\n     * get texts resource\n     */\n    getTexts() {\n        return (this.projectData) ? (this.projectData.texts) ? this.projectData.texts : [] : null;\n    }\n\n    /**\n     * save the text to project\n     * @param text\n     */\n    setText(text: Text, old: Text) {\n        if (!this.projectData.texts) {\n            this.projectData.texts = [];\n        }\n        let exist = this.projectData.texts.find(tx => tx.name === text.name);\n        if (exist) {\n            exist.group = text.group;\n            exist.value = text.value;\n        } else {\n            this.projectData.texts.push(text);\n        }\n        this.storage.setServerProjectData(ProjectDataCmdType.SetText, text, this.projectData).subscribe(result => {\n            if (old && old.name && old.name !== text.name) {\n                this.removeText(old);\n            }\n        }, err => {\n            console.error(err);\n            this.notifySaveError(err);\n        });                \n    }\n\n    /**\n     * remove the text from project\n     * @param text \n     */\n    removeText(text: Text) {\n        if (this.projectData.texts) {\n            for (let i = 0; i < this.projectData.texts.length; i++) {\n                if (this.projectData.texts[i].name === text.name) {\n                    this.projectData.texts.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this.storage.setServerProjectData(ProjectDataCmdType.DelText, text, this.projectData).subscribe(result => {\n        }, err => {\n            console.error(err);\n            this.notifySaveError(err);\n        });           \n    }\n    //#endregion\n\n    //#region Notify\n\n    private notifyToLoadHmi() {\n        this.onLoadHmi.emit(true);\n    }\n\n    private notifySaveError(err: any) {\n        console.error('FUXA notifySaveError error', err);\n        let msg = null;\n        this.translateService.get('msg.project-save-error').subscribe((txt: string) => { msg = txt });\n        if (err.status === 401) {\n            this.translateService.get('msg.project-save-unauthorized').subscribe((txt: string) => { msg = txt });\n        }\n        if (msg) {\n            this.toastr.error(msg, '', {\n                timeOut: 3000,\n                closeButton: true,\n                disableTimeOut: true\n            });\n        }\n    }\n\n    private notifyServerError() {\n        console.error('FUXA notifyServerError error');\n        let msg = null;\n        this.translateService.get('msg.server-connection-error').subscribe((txt: string) => { msg = txt });\n        if (msg) {\n            this.toastr.error(msg, '', {\n                timeOut: 3000,\n                closeButton: true,\n                disableTimeOut: true\n            });\n        }\n    }\n    //#endregion\n\n    /**\n     * Set Project data and save resource to backend\n     * Used from open and upload JSON Project file\n     * @param prj project data to save\n     */\n    setProject(prj: ProjectData, notify?: boolean) {\n        this.projectData = prj;\n        if (this.appService.isClientApp) {\n            this.projectData = ResourceStorageService.defileProject(prj);\n        }\n        this.save();\n    }\n\n    setNewProject() {\n        this.projectData = new ProjectData();\n        let server = new Device(Utils.getGUID(DEVICE_PREFIX));\n        server.name = 'FUXA';\n        server.id = '0';\n        server.type = DeviceType.FuxaServer;\n        server.property = new DeviceNetProperty();\n        if (!this.appService.isClientApp) {\n            this.projectData.server = server;\n        } else {\n            delete this.projectData.server;\n        }\n        this.save();\n    }\n\n    getProject() {\n        return this.projectData;\n    }\n\n    checkServer() {\n        return this.storage.checkServer();\n    }\n\n    getServer(): Device {\n        return (this.projectData) ? this.projectData.server : null;\n    }\n\n    getDevices(): any {\n        return (this.projectData) ? this.projectData.devices : {};\n    }\n\n    getDeviceFromId(id: string): any {\n        let result;\n        Object.keys(this.projectData.devices).forEach(k => {\n            if (this.projectData.devices[k].id === id) {\n                result = this.projectData.devices[k];\n            }\n        });\n        return result;\n    }\n\n    getDeviceFromTagId(tagId: string): Device {\n        let devices = <Device[]>Object.values(this.projectData.devices);\n        for (let i = 0; i < devices.length; i++) {\n            if (devices[i].tags[tagId]) {\n                return devices[i];\n            }\n        }\n    }\n\n    /**\n     * Send Save Project to to editor component\n     * @param saveas \n     */\n    saveProject(mode = SaveMode.Save) {\n        this.onSaveCurrent.emit(mode);\n    }\n\n    isSecurityEnabled() {\n        if (environment.serverEnabled) {\n            if (this.serverSettings && !this.serverSettings.secureEnabled) {\n                return false;\n            }\n            return true;\n        } else {\n            return false;\n        }\n\n    }\n\n    private _deepEquals(x, y) {\n        if (JSON.stringify(x) === JSON.stringify(y)) {\n            return true; // if both x and y are null or undefined and exactly the same\n\n        } else {\n            try {\n                for (const p in x) {\n                    if (!x.hasOwnProperty(p)) {\n                        continue; // other properties were tested using x.constructor === y.constructor\n                    }\n                    if (!y.hasOwnProperty(p)) {\n                        return false; // allows to compare x[ p ] and y[ p ] when set to undefined\n                    }\n                    if (p === 'svgcontent') {\n                        // the xml have to be transform in json\n                        const parser = new DOMParser();  // initialize dom parser\n                        const aDOM = parser.parseFromString(x[p], \"text/xml\")\n                        const bDOM = parser.parseFromString(y[p], \"text/xml\")\n                        let a = this._xml2json(aDOM);\n                        let b = this._xml2json(bDOM);\n                        return this._deepEquals(a, b);\n                    }\n                    if (x[p] === y[p]) {\n                        continue; // if they have the same strict value or identity then they are equal\n                    }\n                    if (!this._deepEquals(x[p], y[p])) {\n                        return false;\n                    }\n                }\n                for (const p in y) {\n                    if (y.hasOwnProperty(p) && !x.hasOwnProperty(p)) {\n                        return false;\n                    }\n                }\n            } catch (ex) {\n                console.error(ex);\n                return false;\n            }\n            return true;\n        }\n    }\n\n    /**\n     * This function coverts a DOM Tree into JavaScript Object. \n     * @param srcDOM: DOM Tree to be converted. \n     */\n    private _xml2json(xml) {\n        // Create the return object\n        var obj = {};\n\n        if (xml.nodeType == 1) { // element\n            // do attributes\n            if (xml.attributes.length > 0) {\n                obj[\"@attributes\"] = {};\n                for (var j = 0; j < xml.attributes.length; j++) {\n                    var attribute = xml.attributes.item(j);\n                    obj[\"@attributes\"][attribute.nodeName] = attribute.nodeValue;\n                }\n            }\n        } else if (xml.nodeType == 3) { // text\n            obj = xml.nodeValue;\n        }\n\n        // do children\n        if (xml.hasChildNodes()) {\n            for (var i = 0; i < xml.childNodes.length; i++) {\n                var item = xml.childNodes.item(i);\n                var nodeName = item.nodeName;\n                if (typeof (obj[nodeName]) == \"undefined\") {\n                    obj[nodeName] = this._xml2json(item);\n                } else {\n                    if (typeof (obj[nodeName].push) == \"undefined\") {\n                        var old = obj[nodeName];\n                        obj[nodeName] = [];\n                        obj[nodeName].push(old);\n                    }\n                    obj[nodeName].push(this._xml2json(item));\n                }\n            }\n        }\n        return obj;\n    }\n}\n\nexport class ServerSettings {\n    version: string;\n    secureEnabled: boolean;\n}\n\nexport enum SaveMode {\n    Current,\n    Save,\n    SaveAs\n}","\nimport { Injectable, EventEmitter } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { ProjectData, ProjectDataCmdType } from '../../_models/project';\nimport { Device } from '../../_models/device';\nimport { ResourceStorageService } from './resource-storage.service';\nimport { Utils } from '../../_helpers/utils';\n\n@Injectable()\nexport class ResClientService implements ResourceStorageService {\n\n    bridge: any = null;     \n    id: string = null;\n    get isReady() { return (this.bridge) ? true : false; } \n\n    public onRefreshProject: () => boolean;\n\n    constructor(private http: HttpClient) {\n    }\n\n    init(bridge?: any): boolean {\n        this.id = this.getAppId();\n        if (!this.bindBridge(bridge)) {\n            return false;\n        }\n        return true;\n    }\n\n    private bindBridge(bridge?: any): boolean {\n        if (!bridge) return false;\n        this.bridge = bridge;\n        if (this.bridge) {\n            this.bridge.onRefreshProject = this.onRefreshProject;\n            return true;\n        }\n        return false;\n    }\n\n    getDemoProject(): Observable<any> {\n        return this.http.get<any>('./assets/project.demo.fuxap', {});\n    }\n\n    getStorageProject(): Observable<any> {\n        return new Observable((observer) => {\n            if (this.bridge) {\n                let sprj = this.bridge.loadProject();\n                let prj = ResourceStorageService.defileProject(sprj);\n                observer.next(prj);\n            } else {\n                let prj = localStorage.getItem(this.getAppId());\n                if (prj) {\n                    observer.next(JSON.parse(prj));\n                } else {\n                    observer.next();\n                }\n            }\n        });\n    }\n\n    setServerProject(prj: ProjectData) {\n        return new Observable((observer) => {\n            if (!prj) {\n                observer.next(); \n            } else if (this.bridge) {\n                let sprj = ResourceStorageService.sanitizeProject(prj);\n                if (this.bridge.saveProject(sprj, true)) {\n                    observer.next(); \n                } else {\n                    observer.error();\n                }\n            } else {\n                this.saveInLocalStorage(prj);\n                observer.next();\n            }\n        });\n    }\n\n    setServerProjectData(cmd: ProjectDataCmdType, data: any, prj: ProjectData) {\n        return new Observable((observer) => {\n            if (!prj) {\n                observer.next(); \n            } else if (this.bridge) {\n                let sprj = ResourceStorageService.sanitizeProject(prj);\n                if (this.bridge.saveProject(sprj, false)) {\n                    // if (this.isDataCmdForDevice(cmd)) {\n                    //     let sdevice = ResourceStorageService.sanitizeDevice(data);\n                    //     this.bridge.deviceChange(sdevice);\n                    // }\n                    observer.next(); \n                } else {\n                    observer.error();\n                }\n            } else {\n                this.saveInLocalStorage(prj);\n                observer.next();\n            }\n        });\n    }\n    \n    private isDataCmdForDevice(cmd: ProjectDataCmdType): boolean {\n        return (cmd === ProjectDataCmdType.DelDevice || cmd === ProjectDataCmdType.SetDevice);\n    }\n\n    saveInLocalStorage(prj: any) {\n        if (this.getAppId()) {\n            localStorage.setItem(this.getAppId(), JSON.stringify(prj));\n        }\n    }\n\n    getDeviceSecurity(id: string): Observable<any> {\n        return new Observable((observer) => {\n            observer.error('Not supported!');\n        });\n    }\n\n    setDeviceSecurity(name: string, value: string): Observable<any> {\n        return new Observable((observer) => {\n            observer.next('Not supported!');\n        });\n    }\n\n    getAlarmsValues(): Observable<any> {\n        return new Observable((observer) => {\n            observer.error('Not supported!');\n        });\n    }\n    \n    setAlarmAck(name: string): Observable<any> {\n        return new Observable((observer) => {\n            observer.error('Not supported!');\n        });\n    }\n\n    checkServer(): Observable<any> {\n        return new Observable((observer) => {\n            observer.next();\n        });\n    }\n\n    getAppId() {\n        return ResourceStorageService.prjresource;\n    }\n}","\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { ProjectData, ProjectDataCmdType } from '../../_models/project';\nimport { ResourceStorageService } from './resource-storage.service';\n\n@Injectable()\nexport class ResDemoService implements ResourceStorageService {\n\n    public onRefreshProject: () => boolean;\n\n    constructor(private http: HttpClient) {\n    }\n\n    init(): boolean {\n        return true;\n    }\n\n    getDemoProject(): Observable<any> {\n        return this.http.get<any>('./assets/project.demo.fuxap', {});\n    }\n\n    getStorageProject(): Observable<any> {\n        return new Observable((observer) => {\n            let prj = localStorage.getItem(this.getAppId());\n            if (prj) {\n                observer.next(JSON.parse(prj));\n            } else {\n                // try root path\n                this.getDemoProject().subscribe(demo => {\n                    observer.next(demo);\n                }, err => {\n                    observer.error(err);\n                });\n            }\n        });\n    }\n\n    setServerProject(prj: ProjectData) {\n        return new Observable((observer) => {\n            localStorage.setItem(this.getAppId(), JSON.stringify(prj));\n            observer.next();\n        });\n    }\n\n    setServerProjectData(cmd: ProjectDataCmdType, data: any) {\n        return new Observable((observer) => {\n            observer.next('Not supported!');\n        });\n    }\n    \n    getDeviceSecurity(id: string): Observable<any> {\n        return new Observable((observer) => {\n            observer.error('Not supported!');\n        });\n    }\n\n    setDeviceSecurity(name: string, value: string): Observable<any> {\n        return new Observable((observer) => {\n            observer.next('Not supported!');\n        });\n    }\n\n    getAlarmsValues(): Observable<any> {\n        return new Observable((observer) => {\n            observer.error('Not supported!');\n        });\n    }\n    \n    setAlarmAck(name: string): Observable<any> {\n        return new Observable((observer) => {\n            observer.error('Not supported!');\n        });\n    }\n\n    checkServer(): Observable<any> {\n        return new Observable((observer) => {\n            observer.next();\n        });\n    }\n\n    getAppId() {\n        return ResourceStorageService.prjresource;\n    }\n}","import { forwardRef } from \"@angular/core\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from 'rxjs';\n\nimport { ResWebApiService } from './reswebapi.service';\nimport { Device } from '../../_models/device';\nimport { ProjectData, ProjectDataCmdType } from '../../_models/project';\n\n@Injectable()\nexport abstract class ResourceStorageService {\n    \n    public static prjresource = 'prj-data';\n\n    public abstract init(bridge?: any): boolean;\n\n    public abstract onRefreshProject(): boolean;\n    \n    public abstract getDemoProject(): Observable<any>;\n    \n    public abstract getStorageProject(): Observable<any>;\n\n    public abstract setServerProject(prj: ProjectData);\n\n    public abstract setServerProjectData(cmd: ProjectDataCmdType, data: any, prj: ProjectData);\n    \n    public abstract getDeviceSecurity(id: string): Observable<any>;\n\n    public abstract setDeviceSecurity(id: string, value: string): Observable<any>;\n\n    public abstract getAlarmsValues(): Observable<any>;\n    \n    public abstract setAlarmAck(name: string): Observable<any>;\n\n    public abstract checkServer(): Observable<any>;\n\n    public abstract getAppId(): string;\n    \n    public static defileProject(source: ProjectData): ProjectData {\n        if (!source) return source;\n        let destination = JSON.parse(JSON.stringify(source));\n        let devices = {};\n        for (let i = 0; i < destination.devices.length; i++) {\n            let tags = {};\n            for (let x = 0; x < destination.devices[i].tags.length; x++) {\n                tags[destination.devices[i].tags[x].id] = destination.devices[i].tags[x];\n            }\n            destination.devices[i].tags = tags;\n            devices[destination.devices[i].id] = destination.devices[i];\n        }\n        destination.devices = devices;\n        return destination;\n    }\n\n    public static sanitizeProject(source: ProjectData): ProjectData {\n        let destination = JSON.parse(JSON.stringify(source));\n        destination.devices = Object.values(destination.devices);\n        for (let i = 0; i < destination.devices.length; i++) {\n            destination.devices[i].tags = Object.values(destination.devices[i].tags);\n            for (let x = 0; x < destination.devices[i].tags.length; x++) {\n                delete destination.devices[i].tags[x].value;\n            }\n        }\n        return destination;\n    }\n\n    public static sanitizeDevice(source: Device) {\n        let destination = JSON.parse(JSON.stringify(source));\n        destination.tags = Object.values(destination.tags);\n        return destination;\n    }\n}","\nimport { Injectable, Output, EventEmitter } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { EndPointApi } from '../../_helpers/endpointapi';\nimport { ProjectData, ProjectDataCmdType } from '../../_models/project';\nimport { ResourceStorageService } from './resource-storage.service';\n\n@Injectable()\nexport class ResWebApiService implements ResourceStorageService {\n\n    private endPointConfig: string = EndPointApi.getURL();\n    public onRefreshProject: () => boolean;\n\n    constructor(private http: HttpClient) {\n    }\n\n    init(): boolean {\n        return true;\n    }\n\n    getDemoProject(): Observable<any> {\n        return this.http.get<any>('./assets/project.demo.fuxap', {});\n    }\n\n    getStorageProject(): Observable<any> {\n        return this.http.get<any>(this.endPointConfig + '/api/project', {});\n    }\n\n    setServerProject(prj: ProjectData) {\n        // let header = new HttpHeaders();\n        // header.append(\"Access-Control-Allow-Origin\", \"*\");\n        // header.append(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n        let header = new HttpHeaders({ 'Content-Type': 'application/json' });\n        return this.http.post<ProjectData>(this.endPointConfig + '/api/project', prj, { headers: header });\n    }\n\n    setServerProjectData(cmd: ProjectDataCmdType, data: any) {\n        let header = new HttpHeaders({ 'Content-Type': 'application/json' });\n        let params = { cmd: cmd, data: data };\n        return this.http.post<any>(this.endPointConfig + '/api/projectData', params, { headers: header });\n    }\n    \n    getDeviceSecurity(id: string): Observable<any> {\n        let header = new HttpHeaders({ 'Content-Type': 'application/json' });\n        let params = { query: 'security', name: id };\n        return this.http.get<any>(this.endPointConfig + '/api/device', { headers: header, params: params });\n    }\n\n    setDeviceSecurity(id: string, value: string): Observable<any> {\n        let header = new HttpHeaders({ 'Content-Type': 'application/json' });\n        let params = { query: 'security', name: id, value: value };\n        return this.http.post<any>(this.endPointConfig + '/api/device', { headers: header, params: params });\n    }\n\n    getAlarmsValues(): Observable<any> {\n        return this.http.get<any>(this.endPointConfig + '/api/alarms', {});\n    }\n    \n    setAlarmAck(name: string): Observable<any> {\n        return new Observable((observer) => {\n            let header = new HttpHeaders({ 'Content-Type': 'application/json' });\n            this.http.post<any>(this.endPointConfig + '/api/alarmack', { headers: header, params: name }).subscribe(result => {\n                observer.next();\n            }, err => {\n                observer.error(err);\n            });                \n        });\n    }\n\n    checkServer(): Observable<any> {\n        return this.http.get<any>(this.endPointConfig + '/api/settings');\n    }\n\n    getAppId() {\n        return ResourceStorageService.prjresource;\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { environment } from '../../environments/environment';\nimport { TranslateService } from '@ngx-translate/core';\nimport { EndPointApi } from '../_helpers/endpointapi';\nimport { ToastrService } from 'ngx-toastr';\nimport { AppSettings } from '../_models/settings';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SettingsService {\n\n    private appSettings = new AppSettings();\n    private endPointConfig: string = EndPointApi.getURL();\n\n    private editModeLocked = false;\n\n    constructor(private http: HttpClient,\n        private fuxaLanguage: TranslateService,\n        private translateService: TranslateService,\n        private toastr: ToastrService) { \n    }\n    \n    init() {\n        // this language will be used as a fallback when a translation isn't found in the current language\n\t\tthis.fuxaLanguage.setDefaultLang('en');\n\t\t// the lang to use, if the lang isn't available, it will use the current loader to get them\n\t\tthis.fuxaLanguage.use('en');        \n        // to load saved settings\n        if (environment.serverEnabled) {\n            this.http.get<any>(this.endPointConfig + '/api/settings').subscribe(result => {\n                this.setSettings(result);\n            }, error => {\n                console.error('settings.service err: ' + error);\n            });\n        }\n        // this.setLanguage(this.appSettings.language);\n    }\n\n    getSettings() {\n        return this.appSettings;\n    }\n\n    setSettings(settings: AppSettings) {\n        var dirty = false;\n        if (settings.language && settings.language != this.appSettings.language) {\n            this.fuxaLanguage.use(settings.language);\n            this.appSettings.language = settings.language;\n            dirty = true;\n        }\n        if (settings.uiPort && settings.uiPort != this.appSettings.uiPort) {\n            this.appSettings.uiPort = settings.uiPort;\n            dirty = true;\n        }\n        if (settings.secureEnabled != this.appSettings.secureEnabled || settings.tokenExpiresIn != this.appSettings.tokenExpiresIn) {\n            this.appSettings.secureEnabled = settings.secureEnabled;\n            this.appSettings.tokenExpiresIn = settings.tokenExpiresIn;\n            dirty = true;\n        }\n        return dirty;\n    }\n\n    saveSettings() {\n        if (environment.serverEnabled) {\n            let header = new HttpHeaders({ 'Content-Type': 'application/json' });\n            this.http.post<AppSettings>(this.endPointConfig + '/api/settings', this.appSettings, { headers: header }).subscribe(result => {\n            }, err => {\n                this.notifySaveError(err);\n            });\n        }\n    }\n\n    private notifySaveError(err: any) {\n        let msg = '';\n        this.translateService.get('msg.settings-save-error').subscribe((txt: string) => { msg = txt });\n        if (err.status === 401) {\n            this.translateService.get('msg.settings-save-unauthorized').subscribe((txt: string) => { msg = txt });\n        }\n        this.toastr.error(msg, '', {\n            timeOut: 3000,\n            closeButton: true,\n            disableTimeOut: true\n        });\n    }\n\n    //#region Editor Mode Check\n    lockEditMode() {\n        this.editModeLocked = true;\n    }\n\n    unlockEditMode() {\n        this.editModeLocked = false;\n    }\n\n    isEditModeLocked(): boolean {\n        return this.editModeLocked;\n    }\n\n    notifyEditorLocked() {\n        var msg = '';\n        this.translateService.get('msg.editor-mode-locked').subscribe((txt: string) => { msg = txt });\n        this.toastr.warning(msg, '', {\n            timeOut: 3000,\n            closeButton: true,\n            disableTimeOut: false\n        });\n    }\n    //#endregion\n}\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\nimport { THEMES } from '../_config/theme.config';\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class ThemeService {\n    constructor(@Inject(DOCUMENT) private document: Document) { }\n\n    static ThemeType = { Dark: 'dark', Default: 'default' };\n\n    setTheme(name = ThemeService.ThemeType.Dark) {\n        if (!THEMES[name]) {\n            name = ThemeService.ThemeType.Dark;\n        }\n        const theme = THEMES[name];\n        Object.keys(theme).forEach((key) => {\n            this.document.documentElement.style.setProperty(`--${key}`, theme[key]);\n        });\n\n        const body = document.getElementsByTagName('body')[0];\n        body.classList.remove('dark-theme');\n        if (name === ThemeService.ThemeType.Dark) {\n            body.classList.add('dark-theme');\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { EndPointApi } from '../_helpers/endpointapi';\nimport { User } from '../_models/user';\nimport { environment } from '../../environments/environment';\nimport { ToastrService } from 'ngx-toastr';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable()\nexport class UserService {\n\n    private endPointConfig: string = EndPointApi.getURL();\n\n    constructor(private http: HttpClient,\n        private translateService: TranslateService,\n        private toastr: ToastrService) { \n\n    }\n\n    getUsers(user: any): Observable<any> {\n        let header = new HttpHeaders({ 'Content-Type': 'application/json' });\n        let params = user;\n        return this.http.get<any>(this.endPointConfig + '/api/users', { headers: header, params: params });\n    }\n\n    setUser(user: User) {\n        return new Observable((observer) => {\n            if (environment.serverEnabled) {\n                let header = new HttpHeaders({ 'Content-Type': 'application/json' });\n                this.http.post<any>(this.endPointConfig + '/api/users', { headers: header, params: user }).subscribe(result => {\n                    observer.next();\n                }, err => {\n                    console.error(err);\n                    this.notifySaveError();\n                    observer.error(err);\n                });                \n            } else {\n                observer.next();\n            }\n        });\n    }\n\n    removeUser(user: User) {\n        return new Observable((observer) => {\n            if (environment.serverEnabled) {\n                let header = new HttpHeaders({ 'Content-Type': 'application/json' });\n                this.http.delete<any>(this.endPointConfig + '/api/users', { headers: header, params: {param: user.username} }).subscribe(result => {\n                    observer.next();\n                }, err => {\n                    console.error(err);\n                    this.notifySaveError();\n                    observer.error(err);\n                });                \n            } else {\n                observer.next();\n            }\n        });\n    }\n\n    //#region Notify\n    private notifySaveError() {\n        let msg = '';\n        this.translateService.get('msg.users-save-error').subscribe((txt: string) => { msg = txt });\n        this.toastr.error(msg, '', {\n            timeOut: 3000,\n            closeButton: true,\n            disableTimeOut: true\n        });\n    }\n    //#endregion\n}","module.exports = \".header-panel {\\n    background-color: var(--headerBackground);\\n    color: var(--headerColor);\\n    position: absolute;\\n    top: 0px;\\n    left: 0px;\\n    height: 36px;\\n    width: 100%;\\n    text-align: center;\\n    line-height: 36px;\\n    border-bottom: 1px solid var(--headerBorder);\\n}\\n\\n.work-panel {\\n    position: absolute;\\n    top: 37px;\\n    left: 0px;\\n    right: 0px;\\n    bottom: 0px;\\n}\\n\\n.container {\\n    display: flex;\\n    flex-direction: column;\\n    min-width: 300px;\\n    position: absolute;\\n    bottom: 0px;\\n    top: 0px;\\n    left:0px;\\n    right:0px;\\n}\\n\\n.filter {\\n    display: inline-block;\\n    min-height: 60px;\\n    padding: 8px 24px 0;\\n}\\n\\n.filter .mat-form-field {\\n    font-size: 14px;\\n    width: 100%;\\n}\\n\\n.table {\\n    height: 705px;\\n}\\n\\n.mat-table {\\n    overflow: auto;\\n    height: 100%;\\n}\\n\\n.mat-row {\\n    min-height: 40px;\\n    height: 43px;\\n}\\n\\n.mat-cell {\\n    font-size: 13px;\\n}\\n\\n.mat-header-row {\\n    top: 0;\\n    position: sticky;\\n    z-index: 1;\\n}\\n\\n.mat-header-cell {\\n    font-size: 15px;\\n}\\n\\n.mat-column-select {\\n    overflow: visible;\\n    flex: 0 0 100px;\\n}\\n\\n.mat-column-name {\\n    flex: 0 0 200px;\\n}\\n\\n.mat-column-device {\\n    flex: 0 0 350px;\\n}\\n\\n.mat-column-highhigh {\\n    flex: 0 0 200px;\\n}\\n\\n.mat-column-high {\\n    flex: 0 0 200px;\\n}\\n\\n.mat-column-low {\\n    flex: 0 0 200px;\\n}\\n\\n.mat-column-info {\\n    flex: 0 0 200px;\\n}\\n\\n.mat-column-value {\\n    flex: 0 0 800px;\\n}\\n\\n.mat-column-remove {\\n    flex: 0 0 60px;\\n}\\n\\n.selectidthClass{\\n    flex: 0 0 50px;\\n }\\n\\n.message-error {\\n    display: inline-block;\\n    color:red;\\n}\\n\\n.my-header-filter /deep/ .mat-sort-header-button {\\n    display: block;\\n    text-align: left;\\n    margin-top: 5px;\\n}\\n\\n.my-header-filter /deep/ .mat-sort-header-arrow {\\n    top: -12px;\\n    right: 20px;\\n}\\n\\n.my-header-filter-input {\\n    display: block; \\n    margin-top: 4px;\\n    margin-bottom: 6px;\\n    padding: 3px 1px 3px 2px;\\n    border-radius: 2px;\\n}\"","module.exports = \"<div class=\\\"header-panel\\\">\\n    {{'alarms.list-title' | translate}}\\n</div>\\n<div class=\\\"work-panel\\\">\\n    <!-- <div class=\\\"filter\\\">\\n      <div class=\\\"my-form-field\\\" style=\\\"padding-right: 10px;\\\">\\n          <span>{{'texts.list-filter-group' | translate}}</span>\\n          <mat-select [(value)]=\\\"groupSelected\\\" style=\\\"width: 300px\\\" (selectionChange)=\\\"onGroupChange($event.source)\\\">\\n              <mat-option *ngFor=\\\"let group of groups\\\" [value]=\\\"group\\\">\\n                  {{ group }}\\n              </mat-option>\\n          </mat-select>\\n      </div>\\n      <div class=\\\"my-form-field\\\" style=\\\"padding-right: 10px;\\\">\\n          <span>{{'texts.list-filter' | translate}}</span>\\n          <input (keyup)=\\\"applyFilter($event.target.value)\\\" style=\\\"width: 450px\\\" type=\\\"text\\\">\\n      </div>\\n  </div> -->\\n    <div class=\\\"container\\\">\\n        <mat-table #table [dataSource]=\\\"dataSource\\\" matSort>\\n            <!-- Checkbox Column -->\\n            <ng-container matColumnDef=\\\"select\\\">\\n                <mat-header-cell *matHeaderCellDef [ngClass]=\\\"'selectidthClass'\\\">\\n                    <button mat-icon-button (click)=\\\"onAddAlarm()\\\" class=\\\"remove\\\">\\n                        <mat-icon>add</mat-icon>\\n                    </button>\\n                </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\" [ngClass]=\\\"'selectidthClass'\\\">\\n                    <button mat-icon-button (click)=\\\"onEditAlarm(element)\\\" class=\\\"remove\\\">\\n                        <mat-icon>edit</mat-icon>\\n                    </button>\\n                </mat-cell>\\n            </ng-container>\\n\\n            <!-- Name Column -->\\n            <ng-container matColumnDef=\\\"name\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> {{'alarms.list-name' | translate}} </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </mat-cell>\\n            </ng-container>\\n            <!-- Device Column -->\\n            <ng-container matColumnDef=\\\"device\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> {{'alarms.list-device' | translate}} </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{getVariableLabel(element.property)}}</mat-cell>\\n            </ng-container>\\n            <!-- HighHigh Column -->\\n            <ng-container matColumnDef=\\\"highhigh\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> {{'alarms.list-highhigh' | translate}} </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{getSubProperty(element.highhigh)}} </mat-cell>\\n            </ng-container>\\n            <!-- High Column -->\\n            <ng-container matColumnDef=\\\"high\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> {{'alarms.list-high' | translate}} </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{getSubProperty(element.high)}} </mat-cell>\\n            </ng-container>\\n            <!-- Low Column -->\\n            <ng-container matColumnDef=\\\"low\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> {{'alarms.list-low' | translate}} </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{getSubProperty(element.low)}} </mat-cell>\\n            </ng-container>\\n            <!-- Info Column -->\\n            <ng-container matColumnDef=\\\"info\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> {{'alarms.list-info' | translate}} </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{getSubProperty(element.info)}} </mat-cell>\\n            </ng-container>\\n\\n            <!-- Button remove Column -->\\n            <ng-container matColumnDef=\\\"remove\\\">\\n                <mat-header-cell *matHeaderCellDef> </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\">\\n                    <button mat-icon-button (click)=\\\"$event.stopPropagation();onRemoveAlarm(element)\\\" class=\\\"remove\\\">\\n                        <mat-icon>clear</mat-icon>\\n                    </button>\\n                </mat-cell>\\n            </ng-container>\\n\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" class=\\\"my-mat-row\\\"></mat-row>\\n        </mat-table>\\n    </div>\\n</div>\\n<button mat-fab color=\\\"primary\\\" (click)=\\\"onAddAlarm()\\\" class=\\\"fab-add\\\">\\n    <mat-icon class=\\\"\\\">add</mat-icon>\\n</button>\"","import { Component, OnInit, AfterViewInit, OnDestroy, Inject, ViewChild } from '@angular/core';\nimport { MatDialog, MatDialogRef, MatTable, MatTableDataSource, MAT_DIALOG_DATA, MatSort, MatMenuTrigger } from '@angular/material';\nimport { Subscription } from \"rxjs\";\n\nimport { ProjectService } from '../../_services/project.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport {AlarmPropertyComponent } from '..//alarm-property/alarm-property.component';\nimport { Alarm, AlarmSubProperty } from '../../_models/alarm';\n\n@Component({\n    selector: 'app-alarm-list',\n    templateUrl: './alarm-list.component.html',\n    styleUrls: ['./alarm-list.component.css']\n})\nexport class AlarmListComponent implements OnInit, AfterViewInit, OnDestroy {\n\n    displayedColumns = ['select', 'name', 'device', 'highhigh', 'high', 'low', 'info', 'remove'];\n    dataSource = new MatTableDataSource([]);\n\n    private subscriptionLoad: Subscription;\n    private enabledText = \"\";\n\n    @ViewChild(MatTable) table: MatTable<any>;\n    @ViewChild(MatSort) sort: MatSort;\n\n    constructor(public dialog: MatDialog,\n        private translateService: TranslateService,\n        private projectService: ProjectService) { }\n\n    ngOnInit() {\n        this.loadAlarms();\n        this.subscriptionLoad = this.projectService.onLoadHmi.subscribe(res => {\n            this.loadAlarms();\n        });\n    \tthis.translateService.get('alarm.property-enabled').subscribe((txt: string) => { this.enabledText = txt });\n    }\n\n    ngAfterViewInit() {\n        this.dataSource.sort = this.sort;\n    }\n\n    ngOnDestroy() {\n        try {\n            if (this.subscriptionLoad) {\n                this.subscriptionLoad.unsubscribe();\n            }\n        } catch (e) {\n        }\n    }\n\n    onAddAlarm() {\n\t\tlet alarm = new Alarm();\n\t\tthis.editAlarm(alarm, 1);\n    }\n\n    onEditAlarm(alarm: Alarm, toAdd: number) {\n\t\tthis.editAlarm(alarm, 0);\n    }\n\n    onRemoveAlarm(alarm: Alarm) {\n\t\tthis.editAlarm(alarm, -1);\n    }\n\n    editAlarm(alarm: Alarm, toAdd: number) {\n\t\tlet malarm: Text = JSON.parse(JSON.stringify(alarm));\n        let dialogRef = this.dialog.open(AlarmPropertyComponent, {\n            data: { alarm: malarm, editmode: toAdd, alarms: this.dataSource.data,\n                devices: Object.values(this.projectService.getDevices()) },\n            position: { top: '80px' }\n        });\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                if (toAdd < 0) {\n                    this.projectService.removeAlarm(result).subscribe(result => {\n                        this.loadAlarms();\n                    });\n\t\t\t\t} else {\n                    this.projectService.setAlarm(result, alarm).subscribe(result => {\n                        this.loadAlarms();\n                    });\n                }\n            }\n        });\n    }\n\n    getSubProperty(alrSubPro: AlarmSubProperty) {\n        if (alrSubPro && alrSubPro.enabled && alrSubPro.checkdelay > 0) {\n            return this.enabledText;\n        }\n        return \"\";\n    }\n\n    getVariableLabel(varProp) {\n        if (!varProp.variableId) {\n            return '';\n        }\n        let device = this.projectService.getDeviceFromTagId(varProp.variableId);\n        return device.name + ' - ' + device.tags[varProp.variableId].name;\n    }\n\n    private loadAlarms() {\n        this.dataSource.data = this.projectService.getAlarms(); \n\t}\n}\n","module.exports = \"\\n.alarm-sample {\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n}\\n\\n.message-error {\\n    display: inline-block;\\n    /* background-color: red;; */\\n    color:red;\\n}\\n\\n::ng-deep .mat-tab-label {\\n    height: 34px !important;\\n}\"","module.exports = \"<div style=\\\"position: relative;\\\">\\n    <h1 mat-dialog-title style=\\\"display:inline-block;cursor:move;\\\" mat-dialog-draggable>{{'alarm.property-title' | translate}}</h1>\\n    <mat-icon (click)=\\\"onNoClick()\\\" style=\\\"float:right;margin-right:-10px;margin-top:-10px;color:gray;cursor:pointer;\\\">clear</mat-icon>\\n    <div mat-dialog-content *ngIf=\\\"data.editmode < 0\\\">\\n        {{'msg.alarm-remove' | translate}} '{{data.alarm.name}}' ?\\n    </div>\\n    <div mat-dialog-content *ngIf=\\\"data.editmode >= 0\\\">\\n        <div style=\\\"display: block;width: 660px; padding-bottom: 20px;\\\">\\n            <div style=\\\"display: block;\\\">\\n                <flex-auth [name]=\\\"data.alarm.name\\\" [permission]=\\\"property.permission\\\" #flexauth></flex-auth>\\n            </div>\\n            <div mat-dialog-content style=\\\"overflow: hidden; width:100%\\\">\\n                <flex-head [data]=\\\"data\\\" [property]=\\\"property\\\" #flexhead [withStaticValue]=\\\"false\\\"></flex-head>\\n            </div>\\n        </div>\\n        <mat-autocomplete #textAuto=\\\"matAutocomplete\\\">\\n            <mat-option *ngFor=\\\"let option of existtexts\\\" [value]=\\\"option\\\">{{option}}</mat-option>\\n        </mat-autocomplete>\\n        <mat-autocomplete #groupAuto=\\\"matAutocomplete\\\">\\n            <mat-option *ngFor=\\\"let option of existgroups\\\" [value]=\\\"option\\\">{{option}}</mat-option>\\n        </mat-autocomplete>\\n        <mat-tab-group style=\\\"width: 100%;min-height: 300px;\\\">\\n            <mat-tab label=\\\"{{'alarm.property-highhigh' | translate}}\\\">\\n                <div style=\\\"overflow: hidden; padding-top: 25px;\\\">\\n                    <div style=\\\"display: block;\\\">\\n                        <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;margin-left: 20px;\\\">\\n                            <span>{{'alarm.property-enabled' | translate}}</span>\\n                            <mat-slide-toggle color=\\\"primary\\\" [(ngModel)]=\\\"data.alarm.highhigh.enabled\\\"></mat-slide-toggle>\\n                        </div>\\n                        <div class=\\\"my-form-field\\\" style=\\\"margin-bottom: 10px; float:right\\\">\\n                            <span>{{'alarm.property-ackmode' | translate}}</span>\\n                            <mat-select [(value)]=\\\"data.alarm.highhigh.ackmode\\\" style=\\\"width: 323px\\\">\\n                                <mat-option *ngFor=\\\"let ev of ackMode | enumToArray\\\" [value]=\\\"ev.key\\\">\\n                                    {{ ev.value }}\\n                                </mat-option>\\n                            </mat-select>\\n                        </div>\\n                    </div>\\n                    <div style=\\\"display: inline-table;\\\">\\n                        <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;padding-right: 13px;\\\">\\n                            <span>{{'alarm.property-checkdelay' | translate}}</span>\\n                            <input numberOnly [(ngModel)]=\\\"data.alarm.highhigh.checkdelay\\\" style=\\\"width: 145px\\\" type=\\\"text\\\">\\n                        </div>\\n                        <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;padding-right: 13px;\\\">\\n                            <span>{{'alarm.property-min' | translate}}</span>\\n                            <input numberOnly [(ngModel)]=\\\"data.alarm.highhigh.min\\\" style=\\\"width: 145px\\\" type=\\\"text\\\">\\n                        </div>\\n                        <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;padding-right: 13px;\\\">\\n                            <span>{{'alarm.property-max' | translate}}</span>\\n                            <input numberOnly [(ngModel)]=\\\"data.alarm.highhigh.max\\\" style=\\\"width: 145px\\\" type=\\\"text\\\">\\n                        </div>\\n                        <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;\\\">\\n                            <span>{{'alarm.property-timedelay' | translate}}</span>\\n                            <input numberOnly [(ngModel)]=\\\"data.alarm.highhigh.timedelay\\\" style=\\\"width: 158px\\\" type=\\\"text\\\">\\n                        </div>\\n                    </div>\\n                    <div style=\\\"display: block;\\\">\\n                        <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;padding-right: 13px;\\\">\\n                            <span>{{'alarm.property-text' | translate}}</span>\\n                            <input [(ngModel)]=\\\"data.alarm.highhigh.text\\\" [matAutocomplete]=\\\"textAuto\\\" style=\\\"width: 400px\\\" type=\\\"text\\\">\\n                            <!-- <mat-autocomplete #highhighAuto=\\\"matAutocomplete\\\">\\n                                <mat-option *ngFor=\\\"let option of existtexts\\\" [value]=\\\"option\\\">{{option}}</mat-option>\\n                            </mat-autocomplete>       -->\\n                        </div>\\n                        <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;\\\">\\n                            <span>{{'alarm.property-group' | translate}}</span>\\n                            <input [(ngModel)]=\\\"data.alarm.highhigh.group\\\" [matAutocomplete]=\\\"groupAuto\\\" style=\\\"width: 233px\\\" type=\\\"text\\\">\\n                            <!-- <mat-autocomplete #highhighAuto=\\\"matAutocomplete\\\">\\n                                <mat-option *ngFor=\\\"let option of existgroups\\\" [value]=\\\"option\\\">{{option}}</mat-option>\\n                            </mat-autocomplete>     -->\\n                        </div>\\n                    </div>\\n                    <div style=\\\"display: block; height: 35px;margin-top: 15px;\\\" [style.background]=\\\"data.alarm.highhigh.bkcolor\\\" [style.color]=\\\"data.alarm.highhigh.color\\\">\\n                        <div class=\\\"alarm-sample\\\" style=\\\"display: inline-block;padding-right: 13px;width: 403px;line-height: 35px;padding-left: 5px;\\\">\\n                            <span>{{data.alarm.highhigh.text}}</span>\\n                        </div>\\n                        <div class=\\\"alarm-sample\\\" style=\\\"display: inline-block;width: 240px;line-height: 35px\\\">\\n                            <span>{{data.alarm.highhigh.group}}</span>\\n                        </div>\\n                    </div>\\n                </div>\\n            </mat-tab>\\n            <mat-tab label=\\\"{{'alarm.property-high' | translate}}\\\">\\n                <div style=\\\"overflow: hidden; padding-top: 25px;\\\">\\n                    <div style=\\\"display: block;\\\">\\n                        <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;margin-left: 20px;\\\">\\n                            <span>{{'alarm.property-enabled' | translate}}</span>\\n                            <mat-slide-toggle color=\\\"primary\\\" [(ngModel)]=\\\"data.alarm.high.enabled\\\"></mat-slide-toggle>\\n                        </div>\\n                        <div class=\\\"my-form-field\\\" style=\\\"margin-bottom: 10px; float:right\\\">\\n                            <span>{{'alarm.property-ackmode' | translate}}</span>\\n                            <mat-select [(value)]=\\\"data.alarm.high.ackmode\\\" style=\\\"width: 323px\\\">\\n                                <mat-option *ngFor=\\\"let ev of ackMode | enumToArray\\\" [value]=\\\"ev.key\\\">\\n                                    {{ ev.value }}\\n                                </mat-option>\\n                            </mat-select>\\n                        </div>\\n                    </div>\\n                    <div style=\\\"display: inline-table;\\\">\\n                        <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;padding-right: 13px;\\\">\\n                            <span>{{'alarm.property-checkdelay' | translate}}</span>\\n                            <input numberOnly [(ngModel)]=\\\"data.alarm.high.checkdelay\\\" style=\\\"width: 145px\\\" type=\\\"text\\\">\\n                        </div>\\n                        <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;padding-right: 13px;\\\">\\n                            <span>{{'alarm.property-min' | translate}}</span>\\n                            <input numberOnly [(ngModel)]=\\\"data.alarm.high.min\\\" style=\\\"width: 145px\\\" type=\\\"text\\\">\\n                        </div>\\n                        <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;padding-right: 13px;\\\">\\n                            <span>{{'alarm.property-max' | translate}}</span>\\n                            <input numberOnly [(ngModel)]=\\\"data.alarm.high.max\\\" style=\\\"width: 145px\\\" type=\\\"text\\\">\\n                        </div>\\n                        <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;\\\">\\n                            <span>{{'alarm.property-timedelay' | translate}}</span>\\n                            <input numberOnly [(ngModel)]=\\\"data.alarm.high.timedelay\\\" style=\\\"width: 158px\\\" type=\\\"text\\\">\\n                        </div>\\n                    </div>\\n                    <div style=\\\"display: block;\\\">\\n                        <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;padding-right: 13px;\\\">\\n                            <span>{{'alarm.property-text' | translate}}</span>\\n                            <input [(ngModel)]=\\\"data.alarm.high.text\\\" [matAutocomplete]=\\\"textAuto\\\" style=\\\"width: 400px\\\" type=\\\"text\\\">                    \\n                        </div>\\n                        <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;\\\">\\n                            <span>{{'alarm.property-group' | translate}}</span>\\n                            <input [(ngModel)]=\\\"data.alarm.high.group\\\" [matAutocomplete]=\\\"groupAuto\\\" style=\\\"width: 233px\\\" type=\\\"text\\\">\\n                        </div>\\n                    </div>\\n                    <div style=\\\"display: block; height: 35px;margin-top: 15px;\\\" [style.background]=\\\"data.alarm.high.bkcolor\\\" [style.color]=\\\"data.alarm.high.color\\\">\\n                        <div class=\\\"alarm-sample\\\" style=\\\"display: inline-block;padding-right: 13px;width: 403px;line-height: 35px;padding-left: 5px;\\\">\\n                            <span>{{data.alarm.high.text}}</span>\\n                        </div>\\n                        <div class=\\\"alarm-sample\\\" style=\\\"display: inline-block;width: 240px;line-height: 35px\\\">\\n                            <span>{{data.alarm.high.group}}</span>\\n                        </div>\\n                    </div>\\n                </div>\\n            </mat-tab>\\n            <mat-tab label=\\\"{{'alarm.property-low' | translate}}\\\">\\n                <div style=\\\"overflow: hidden; padding-top: 25px;\\\">\\n                    <div style=\\\"display: block;\\\">\\n                        <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;margin-left: 20px;\\\">\\n                            <span>{{'alarm.property-enabled' | translate}}</span>\\n                            <mat-slide-toggle color=\\\"primary\\\" [(ngModel)]=\\\"data.alarm.low.enabled\\\"></mat-slide-toggle>\\n                        </div>\\n                        <div class=\\\"my-form-field\\\" style=\\\"margin-bottom: 10px; float:right\\\">\\n                            <span>{{'alarm.property-ackmode' | translate}}</span>\\n                            <mat-select [(value)]=\\\"data.alarm.low.ackmode\\\" style=\\\"width: 323px\\\">\\n                                <mat-option *ngFor=\\\"let ev of ackMode | enumToArray\\\" [value]=\\\"ev.key\\\">\\n                                    {{ ev.value }}\\n                                </mat-option>\\n                            </mat-select>\\n                        </div>\\n                    </div>\\n                    <div style=\\\"display: inline-table;\\\">\\n                        <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;padding-right: 13px;\\\">\\n                            <span>{{'alarm.property-checkdelay' | translate}}</span>\\n                            <input numberOnly [(ngModel)]=\\\"data.alarm.low.checkdelay\\\" style=\\\"width: 145px\\\" type=\\\"text\\\">\\n                        </div>\\n                        <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;padding-right: 13px;\\\">\\n                            <span>{{'alarm.property-min' | translate}}</span>\\n                            <input numberOnly [(ngModel)]=\\\"data.alarm.low.min\\\" style=\\\"width: 145px\\\" type=\\\"text\\\">\\n                        </div>\\n                        <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;padding-right: 13px;\\\">\\n                            <span>{{'alarm.property-max' | translate}}</span>\\n                            <input numberOnly [(ngModel)]=\\\"data.alarm.low.max\\\" style=\\\"width: 145px\\\" type=\\\"text\\\">\\n                        </div>\\n                        <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;\\\">\\n                            <span>{{'alarm.property-timedelay' | translate}}</span>\\n                            <input numberOnly [(ngModel)]=\\\"data.alarm.low.timedelay\\\" style=\\\"width: 158px\\\" type=\\\"text\\\">\\n                        </div>\\n                    </div>\\n                    <div style=\\\"display: block;\\\">\\n                        <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;padding-right: 13px;\\\">\\n                            <span>{{'alarm.property-text' | translate}}</span>\\n                            <input [(ngModel)]=\\\"data.alarm.low.text\\\" [matAutocomplete]=\\\"textAuto\\\" style=\\\"width: 400px\\\" type=\\\"text\\\">\\n                        </div>\\n                        <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;\\\">\\n                            <span>{{'alarm.property-group' | translate}}</span>\\n                            <input [(ngModel)]=\\\"data.alarm.low.group\\\" [matAutocomplete]=\\\"groupAuto\\\" style=\\\"width: 233px\\\" type=\\\"text\\\">\\n                        </div>\\n                    </div>\\n                    <div style=\\\"display: block; height: 35px;margin-top: 15px;\\\" [style.background]=\\\"data.alarm.low.bkcolor\\\" [style.color]=\\\"data.alarm.low.color\\\">\\n                        <div class=\\\"alarm-sample\\\" style=\\\"display: inline-block;padding-right: 13px;width: 403px;line-height: 35px;padding-left: 5px;\\\">\\n                            <span>{{data.alarm.low.text}}</span>\\n                        </div>\\n                        <div class=\\\"alarm-sample\\\" style=\\\"display: inline-block;width: 240px;line-height: 35px\\\">\\n                            <span>{{data.alarm.low.group}}</span>\\n                        </div>\\n                    </div>\\n                </div>\\n            </mat-tab>\\n            <mat-tab label=\\\"{{'alarm.property-info' | translate}}\\\">\\n                <div style=\\\"overflow: hidden; padding-top: 25px;\\\">\\n                    <div style=\\\"display: block;\\\">\\n                        <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;margin-left: 20px;\\\">\\n                            <span>{{'alarm.property-enabled' | translate}}</span>\\n                            <mat-slide-toggle color=\\\"primary\\\" [(ngModel)]=\\\"data.alarm.info.enabled\\\"></mat-slide-toggle>\\n                        </div>\\n                        <div class=\\\"my-form-field\\\" style=\\\"margin-bottom: 10px; float:right\\\">\\n                            <span>{{'alarm.property-ackmode' | translate}}</span>\\n                            <mat-select [(value)]=\\\"data.alarm.info.ackmode\\\" style=\\\"width: 323px\\\">\\n                                <mat-option *ngFor=\\\"let ev of ackMode | enumToArray\\\" [value]=\\\"ev.key\\\">\\n                                    {{ ev.value }}\\n                                </mat-option>\\n                            </mat-select>\\n                        </div>\\n                    </div>\\n                    <div style=\\\"display: inline-table;\\\">\\n                        <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;padding-right: 13px;\\\">\\n                            <span>{{'alarm.property-checkdelay' | translate}}</span>\\n                            <input numberOnly [(ngModel)]=\\\"data.alarm.info.checkdelay\\\" style=\\\"width: 145px\\\" type=\\\"text\\\">\\n                        </div>\\n                        <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;padding-right: 13px;\\\">\\n                            <span>{{'alarm.property-min' | translate}}</span>\\n                            <input numberOnly [(ngModel)]=\\\"data.alarm.info.min\\\" style=\\\"width: 145px\\\" type=\\\"text\\\">\\n                        </div>\\n                        <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;padding-right: 13px;\\\">\\n                            <span>{{'alarm.property-max' | translate}}</span>\\n                            <input numberOnly [(ngModel)]=\\\"data.alarm.info.max\\\" style=\\\"width: 145px\\\" type=\\\"text\\\">\\n                        </div>\\n                        <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;\\\">\\n                            <span>{{'alarm.property-timedelay' | translate}}</span>\\n                            <input numberOnly [(ngModel)]=\\\"data.alarm.info.timedelay\\\" style=\\\"width: 158px\\\" type=\\\"text\\\">\\n                        </div>\\n                    </div>\\n                    <div style=\\\"display: block;\\\">\\n                        <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;padding-right: 13px;\\\">\\n                            <span>{{'alarm.property-text' | translate}}</span>\\n                            <input [(ngModel)]=\\\"data.alarm.info.text\\\" [matAutocomplete]=\\\"textAuto\\\" style=\\\"width: 400px\\\" type=\\\"text\\\">\\n                        </div>\\n                        <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;\\\">\\n                            <span>{{'alarm.property-group' | translate}}</span>\\n                            <input [(ngModel)]=\\\"data.alarm.info.group\\\" [matAutocomplete]=\\\"groupAuto\\\" style=\\\"width: 233px\\\" type=\\\"text\\\">\\n                        </div>\\n                    </div>\\n                    <div style=\\\"display: block; height: 35px;margin-top: 15px;\\\" [style.background]=\\\"data.alarm.info.bkcolor\\\" [style.color]=\\\"data.alarm.info.color\\\">\\n                        <div class=\\\"alarm-sample\\\" style=\\\"display: inline-block;padding-right: 13px;width: 403px;line-height: 35px;padding-left: 5px;\\\">\\n                            <span>{{data.alarm.info.text}}</span>\\n                        </div>\\n                        <div class=\\\"alarm-sample\\\" style=\\\"display: inline-block;width: 240px;line-height: 35px\\\">\\n                            <span>{{data.alarm.info.group}}</span>\\n                        </div>\\n                    </div>\\n                </div>\\n            </mat-tab>\\n        </mat-tab-group>\\n        <div style=\\\"height: 20px\\\">\\n            <div class=\\\"message-error\\\" *ngIf=\\\"errorExist\\\">\\n                <span>{{'msg.alarmproperty-error-exist' | translate}}</span>\\n            </div>\\n            <div class=\\\"message-error\\\" *ngIf=\\\"errorMissingValue\\\">\\n                <span>{{'msg.alarmproperty-missing-value' | translate}}</span>\\n            </div>\\n        </div>\\n    </div>\\n    <div mat-dialog-actions class=\\\"dialog-action\\\">\\n        <button mat-raised-button (click)=\\\"onNoClick()\\\">{{'dlg.cancel' | translate}}</button>\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onOkClick()\\\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\\n    </div>\\n</div>\"","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n\nimport { FlexHeadComponent } from '../../gauges/gauge-property/flex-head/flex-head.component';\nimport { FlexAuthComponent } from '../../gauges/gauge-property/flex-auth/flex-auth.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AlarmProperty, AlarmAckMode, AlarmSubProperty } from '../../_models/alarm';\n\n@Component({\n    selector: 'app-alarm-property',\n    templateUrl: './alarm-property.component.html',\n    styleUrls: ['./alarm-property.component.css']\n})\nexport class AlarmPropertyComponent implements OnInit {\n\n\t@ViewChild('flexauth') flexAuth: FlexAuthComponent;\n    @ViewChild('flexhead') flexHead: FlexHeadComponent;\n\n    property: AlarmProperty;\n    ackMode = AlarmAckMode;\n    errorExist = false;\n    errorMissingValue = false;\n    existnames = [];\n    existtexts = [];\n    existgroups = [];\n\n    constructor(\n        public dialogRef: MatDialogRef<AlarmPropertyComponent>,\n        private translateService: TranslateService,\n        @Inject(MAT_DIALOG_DATA) public data: any) {\n        if (this.data.alarm.property) {\n           this.property = <AlarmProperty>JSON.parse(JSON.stringify(this.data.alarm.property));\n        } else {\n            this.property = new AlarmProperty();\n        }\n        if (!this.data.alarm.highhigh) {\n            this.data.alarm.highhigh = new AlarmSubProperty();\n            this.data.alarm.highhigh.bkcolor = \"#FF4848\";\n            this.data.alarm.highhigh.color = \"#FFF\";\n            this.data.alarm.highhigh.enabled = true;\n            this.data.alarm.highhigh.ackmode = <AlarmAckMode>Object.keys(AlarmAckMode)[Object.values(AlarmAckMode).indexOf(AlarmAckMode.ackactive)];\n        }\n        if (!this.data.alarm.high) {\n            this.data.alarm.high = new AlarmSubProperty();\n            this.data.alarm.high.bkcolor = \"#F9CF59\";\n            this.data.alarm.high.color = \"#000\";\n            this.data.alarm.high.enabled = true;\n            this.data.alarm.high.ackmode = <AlarmAckMode>Object.keys(AlarmAckMode)[Object.values(AlarmAckMode).indexOf(AlarmAckMode.ackactive)];\n            // this.data.alarm.info = new AlarmSubProperty();\n        }\n        if (!this.data.alarm.low) {\n            this.data.alarm.low = new AlarmSubProperty();\n            this.data.alarm.low.bkcolor = \"#E5E5E5\";\n            this.data.alarm.low.color = \"#000\";\n            this.data.alarm.low.enabled = true;\n            this.data.alarm.low.ackmode = <AlarmAckMode>Object.keys(AlarmAckMode)[Object.values(AlarmAckMode).indexOf(AlarmAckMode.ackactive)];\n        }\n        if (!this.data.alarm.info) {\n            this.data.alarm.info = new AlarmSubProperty();\n            this.data.alarm.info.bkcolor = \"#22A7F2\";\n            this.data.alarm.info.color = \"#FFF\";\n            this.data.alarm.info.enabled = true;\n            this.data.alarm.info.ackmode = <AlarmAckMode>Object.keys(AlarmAckMode)[Object.values(AlarmAckMode).indexOf(AlarmAckMode.float)];\n        }\n\n        Object.keys(this.ackMode).forEach(key => {\n            this.translateService.get(this.ackMode[key]).subscribe((txt: string) => { this.ackMode[key] = txt });\n        });\n        if (data.alarms) {\n            this.existnames = data.alarms.filter(a => a.name !== data.alarm.name);\n            data.alarms.forEach(item => {\n                if (item.highhigh.text && this.existtexts.indexOf(item.highhigh.text) === -1) this.existtexts.push(item.highhigh.text);\n                if (item.high.text && this.existtexts.indexOf(item.high.text) === -1) this.existtexts.push(item.high.text);\n                if (item.low.text && this.existtexts.indexOf(item.low.text) === -1) this.existtexts.push(item.low.text);\n                if (item.info.text && this.existtexts.indexOf(item.info.text) === -1) this.existtexts.push(item.info.text);\n\n                if (item.highhigh.group && this.existgroups.indexOf(item.highhigh.group) === -1) this.existgroups.push(item.highhigh.group);\n                if (item.high.group && this.existgroups.indexOf(item.high.group) === -1) this.existgroups.push(item.high.group);\n                if (item.low.group && this.existgroups.indexOf(item.low.group) === -1) this.existgroups.push(item.low.group);\n                if (item.info.group && this.existgroups.indexOf(item.info.group) === -1) this.existgroups.push(item.info.group);\n            });\n        }\n    }\n\n    ngOnInit() {\n    }\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n\n    onOkClick(): void {\n        if (this.data.editmode < 0) {\n            this.dialogRef.close(this.data.alarm);\n        } else if (this.checkValid()) {\n            this.data.alarm.property = this.property;\n            this.data.alarm.property.permission = this.flexAuth.permission;\n            this.data.alarm.name = this.flexAuth.name;\n            this.dialogRef.close(this.data.alarm);\n        }\n    }\n\n    checkValid() {\n        this.errorMissingValue = !this.flexAuth.name;\n        this.errorExist = (this.existnames.find((a) => a.name === this.flexAuth.name)) ? true : false;\n        return !(this.errorMissingValue || this.errorExist);\n    }\n}\n","module.exports = \".header-panel {\\n    /* z-index: 9999 !important; */\\n    position: fixed;\\n    top: 0px;\\n    left: 0px;\\n    background-color: var(--headerBackground);\\n    color: var(--headerColor);\\n    height: 36px;\\n    width: 100%;\\n    text-align: center;\\n    line-height: 36px;\\n    border-bottom: 1px solid var(--headerBorder);\\n}\\n\\n.work-panel {\\n    position: absolute;\\n    top: 37px;\\n    left: 0px;\\n    right: 0px;\\n    bottom: 0px;\\n    background-color: var(--workPanelBackground);\\n}\\n\\n.filter {\\n    display: inline-block;\\n    min-height: 60px;\\n    padding: 8px 24px 0;\\n}\\n\\n.filter .mat-form-field {\\n    font-size: 14px;\\n    width: 100%;\\n}\\n\\n.table {\\n    height: 705px;\\n}\\n\\n.mat-table {\\n    overflow: auto;\\n    min-width: 1560px;\\n    /* margin: 5px; */\\n    /* max-height: 500px; */\\n}\\n\\n.mat-header-cell.mat-sort-header-sorted {\\n    /* color: black; */\\n}\\n\\n.mat-header-row {\\n    top: 0;\\n    position: relative;\\n    z-index: 1;\\n    /* background-color: rgba(76,76,76,1); */\\n    /* color: white; */\\n    min-height: 35px;\\n}\\n\\n.mat-header-cell {\\n    font-size: 14px;\\n}\\n\\n.mat-row {\\n    min-height: 34px;\\n}\\n\\n.mat-column-ontime {\\n    flex: 0 0 160px;\\n}\\n\\n.mat-column-text {\\n    flex: 0 0 400px;\\n}\\n\\n.mat-column-type {\\n    flex: 0 0 120px;\\n}\\n\\n.mat-column-group {\\n    flex: 0 0 250px;\\n}\\n\\n.mat-column-status {\\n    flex: 0 0 200px;\\n}\\n\\n.mat-column-ack {\\n    flex: 0 0 60px;\\n}\\n\\n.header-tools {\\n    position: fixed;\\n    right: 30px;\\n}\\n\\n.header-tools div {\\n    display: inline-block;\\n    padding-left: 10px;\\n}\"","module.exports = \"<div class=\\\"header-panel\\\" *ngIf=\\\"fullview\\\">\\n    {{'alarms.view-title' | translate}}\\n</div>\\n<div class=\\\"work-panel\\\" [ngStyle]=\\\"{'top': fullview ? '37px' : '0px'}\\\">\\n    <mat-table #table [dataSource]=\\\"dataSource\\\" matSort>\\n        <ng-container matColumnDef=\\\"ontime\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header> {{'alarms.view-ontime' | translate}} </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\" [style.color]=\\\"element.color\\\"> {{element.ontime | date: 'yyyy.MM.dd HH:mm:ss'}} </mat-cell>\\n        </ng-container>\\n        <ng-container matColumnDef=\\\"text\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header> {{'alarms.view-text' | translate}} </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\" [style.color]=\\\"element.color\\\"> {{element.text}} </mat-cell>\\n        </ng-container>\\n        <ng-container matColumnDef=\\\"type\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header> {{'alarms.view-type' | translate}} </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\" [style.color]=\\\"element.color\\\"> {{element.type}}</mat-cell>\\n        </ng-container>\\n        <ng-container matColumnDef=\\\"group\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header> {{'alarms.view-group' | translate}} </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\" [style.color]=\\\"element.color\\\"> {{element.group}}</mat-cell>\\n        </ng-container>\\n        <ng-container matColumnDef=\\\"status\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header> {{'alarms.view-status' | translate}} </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\" [style.color]=\\\"element.color\\\"> {{element.status}} </mat-cell>\\n        </ng-container>\\n        <ng-container matColumnDef=\\\"ack\\\">\\n            <mat-header-cell *matHeaderCellDef>\\n                <div class=\\\"header-tools\\\" *ngIf=\\\"!fullview\\\">\\n                    <div (click)=\\\"$event.stopPropagation();onShowMode('expand')\\\" *ngIf=\\\"currentShowMode === 'collapse'\\\" style=\\\"cursor: pointer;\\\">\\n                        <mat-icon>vertical_align_top</mat-icon>\\n                    </div>\\n                    <div (click)=\\\"$event.stopPropagation();onShowMode('collapse')\\\" *ngIf=\\\"currentShowMode === 'expand'\\\" style=\\\"cursor: pointer;\\\">\\n                        <mat-icon>vertical_align_bottom</mat-icon>\\n                    </div>\\n                    <div (click)=\\\"onClose();$event.stopPropagation()\\\" style=\\\"cursor: pointer;\\\">\\n                        <mat-icon>clear</mat-icon>\\n                    </div>\\n                </div>\\n            </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\" [style.color]=\\\"element.color\\\">\\n                <button mat-icon-button (click)=\\\"onAckAlarm(element)\\\" *ngIf=\\\"element.toack >= 0\\\" [disabled]=\\\"element.toack == 0\\\" class=\\\"remove\\\">\\n                    <mat-icon>check_circle_outline</mat-icon>\\n                </button>\\n            </mat-cell>\\n        </ng-container>\\n        <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n        <mat-row *matRowDef=\\\"let element; columns: displayedColumns;\\\" class=\\\"my-mat-row\\\" \\n                        [style.background-color]=\\\"element.bkcolor\\\"></mat-row>\\n    </mat-table>\\n</div>\"","import { Component, OnInit, AfterViewInit, OnDestroy, Input, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { MatDialog, MatDialogRef, MatTable, MatTableDataSource, MAT_DIALOG_DATA, MatSort, MatMenuTrigger } from '@angular/material';\nimport { Subscription, Subject, timer, Observable, empty } from 'rxjs';\nimport { takeUntil, switchMap, catchError } from 'rxjs/operators';\n\nimport { HmiService } from '../../_services/hmi.service';\nimport { ProjectService } from '../../_services/project.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Alarm, AlarmSubProperty } from '../../_models/alarm';\n\n@Component({\n    selector: 'app-alarm-view',\n    templateUrl: './alarm-view.component.html',\n    styleUrls: ['./alarm-view.component.css']\n})\nexport class AlarmViewComponent implements OnInit, AfterViewInit, OnDestroy {\n\n    displayedColumns = ['ontime', 'text', 'type', 'group', 'status', 'ack'];\n    dataSource = new MatTableDataSource([]);\n    showheader = false;\n    currentShowMode = 'collapse';\n    alarmsPolling: any;\n    statusText = AlarmStatus;\n    priorityText = AlarmPriority;\n\n    @Input() fullview = true;\n    @Output() showMode:EventEmitter<string> = new EventEmitter();\n\n    @ViewChild(MatTable) table: MatTable<any>;\n    @ViewChild(MatSort) sort: MatSort;\n\n    private rxjsPollingTimer = timer(0, 2000);\n    private destroy = new Subject();\n\n    constructor(private translateService: TranslateService,\n        private hmiService: HmiService) { }\n\n    ngOnInit() {\n        Object.keys(this.statusText).forEach(key => {\n            this.translateService.get(this.statusText[key]).subscribe((txt: string) => { this.statusText[key] = txt });\n        });\n        Object.keys(this.priorityText).forEach(key => {\n            this.translateService.get(this.priorityText[key]).subscribe((txt: string) => { this.priorityText[key] = txt });\n        });\n    }\n\n    ngAfterViewInit() {\n        this.dataSource.sort = this.sort;\n    }\n\n    ngOnDestroy() {\n        this.stopAskAlarmsValues();\n    }\n\n    startAskAlarmsValues() {\n        this.startPolling();\n    }\n\n    stopAskAlarmsValues() {\n        this.stopPolling();\n    }\n\n    private stopPolling() {\n        this.alarmsPolling = 0;\n        this.destroy.next();\n        this.destroy.complete();\n    }\n\n    private startPolling() {\n        try {\n            if (!this.alarmsPolling) {\n                this.alarmsPolling = 1;\n                this.destroy = new Subject();\n                this.rxjsPollingTimer.pipe(takeUntil(this.destroy),\n                    switchMap(() =>\n                        this.hmiService.getAlarmsValues().pipe(\n                            catchError((er) => this.handleError(er)))\n                    )).subscribe(result => {\n                        this.updateAlarmsList(result);\n                    });\n            }\n        } catch (error) {\n        }\n    }\n\n    private handleError(error: any) {\n        return empty();\n    }\n\n    updateAlarmsList(alr: any[]) {\n        alr.forEach(alr => {\n            alr.status = this.getStatus(alr.status);\n            alr.type = this.getPriority(alr.type);\n        })\n        this.dataSource.data = alr;\n    }\n\n    getStatus(status: string) {\n        return this.statusText[status];\n    }\n\n    getPriority(type: string) {\n        return this.priorityText[type];\n    }\n\n    onAckAlarm(alarm: any) {\n        this.hmiService.setAlarmAck(alarm.name).subscribe(result => {\n        }, error => {\n            console.error('Error setAlarmAck');\n        });\n    }\n\n    onShowMode(mode: string) {\n        this.currentShowMode = mode;\n        this.showMode.emit(this.currentShowMode);\n    }\n\n    onClose() {\n        this.currentShowMode = 'collapse';\n        this.showMode.emit('close');\n        this.stopAskAlarmsValues();\n    }\n}\n\nexport enum AlarmStatus {\n    N = 'alarm.status-active',\n    NF = 'alarm.status-passive',\n    NA = 'alarm.status-active-ack',\n}\n\nexport enum AlarmPriority {\n    highhigh = 'alarm.property-highhigh',\n    high = 'alarm.property-high',\n    low = 'alarm.property-low',\n    info = 'alarm.property-info'\n}","module.exports = \"\\n.container {\\n    width: 100%;\\n    height: 100% !important;\\n    background-color:#FFFFFF\\n}\\n\\n.work-void {\\n    height: 100%;\\n    width: 100%;\\n}\\n\\n.work-editor {\\n    background-color:#FFFFFF;\\n    height: calc(100% - (46px));\\n    min-width: 800px;\\n}\\n\\n.work-home {\\n    background-color:#FFFFFF;\\n    height: 100%;\\n    min-width: 800px;\\n}\\n\\n.header {\\n    /* height: 40px !important;     */\\n}\\n\\n.footer {\\n    height: 20px;\\n    position:absolute;\\n    bottom:0px;\\n}\\n\\n.fab-button {\\n    position: absolute;\\n    bottom: 20px;\\n    left: 10px;\\n    color: rgba(255,255,255,1);\\n    background-color: rgba(68,138,255, 0);\\n    /* background-color: rgba(0,0,0,0.9); */\\n}\"","module.exports = \"<div id=\\\"main-container\\\" class=\\\"container\\\">\\n    <app-header class=\\\"header\\\" [hidden]=\\\"isHidden()\\\"></app-header>\\n    <div [ngClass]=\\\"getClass()\\\">\\n        <router-outlet></router-outlet>\\n        <ngx-fab-button *ngIf=\\\"showDevNavigation()\\\" #fabmenu icon=\\\"menu\\\" iconOpen=\\\"menu\\\" class=\\\"fab-button\\\" color=\\\"rgba(68,138,255, 1)\\\">\\n            <ngx-fab-item-button color=\\\"rgba(68,138,255, 1)\\\" content=\\\"{{'app.editor' | translate}}\\\" (click)=\\\"onGoTo('editor')\\\" (touchend)=\\\"onGoTo('editor')\\\"></ngx-fab-item-button>\\n            <ngx-fab-item-button color=\\\"rgba(68,138,255, 1)\\\" content=\\\"{{'app.lab' | translate}}\\\" (click)=\\\"onGoTo('lab')\\\" (touchend)=\\\"onGoTo('lab')\\\"></ngx-fab-item-button>\\n            <ngx-fab-item-button color=\\\"rgba(68,138,255, 1)\\\" content=\\\"{{'app.home' | translate}}\\\" (click)=\\\"onGoTo('home')\\\" (touchend)=\\\"onGoTo('home')\\\"></ngx-fab-item-button>\\n        </ngx-fab-button>\\n    </div>\\n</div>\"","import { Component, OnInit, AfterViewInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Subscription } from \"rxjs\";\n\nimport { environment } from '../environments/environment';\n\nimport { ProjectService } from './_services/project.service';\nimport { SettingsService } from './_services/settings.service';\nimport { UserGroups } from './_models/user';\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit, AfterViewInit, OnDestroy {\n\ttitle = 'app';\n\tlocation: Location;\n\tshowdev = false;\n\n\t@ViewChild('fabmenu') fabmenu: any;\n\tprivate subscriptionLoad: Subscription;\n\n\tconstructor(private router: Router,\n\t\tprivate projectService: ProjectService,\n\t\tprivate settingsService: SettingsService,\n\t\tprivate translateService: TranslateService,\n\t\tlocation: Location) {\n\t\tthis.location = location;\n\t}\n\n\tngOnInit() {\n\t\tconsole.log(`FUXA v${environment.version}`);\n\t}\n\t\n\tngAfterViewInit() {\n\t\ttry {\n\t\t\tthis.settingsService.init();\n\t\t\tlet hmi = this.projectService.getHmi();\n\t\t\tif (hmi) {\n\t\t\t\tthis.checkSettings();\n\t\t\t}\n\t\t\tthis.subscriptionLoad = this.projectService.onLoadHmi.subscribe(load => {\n\t\t\t\tthis.checkSettings();\n\t\t\t}, error => {\n\t\t\t\tconsole.error('Error loadHMI');\n\t\t\t});\n\t\t\t// define user groups text\n\t\t\tthis.translateService.get('general.usergroups').subscribe((txt: string) => {\n\t\t\t\tlet grpLabels = txt.split(',');\n\t\t\t\tif (grpLabels && grpLabels.length > 0) {\n\t\t\t\t\tfor (let i = 0; i < grpLabels.length && i < UserGroups.Groups.length; i++) {\n\t\t\t\t\t\tUserGroups.Groups[i].label = grpLabels[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tcatch (err) {\n\t\t\tconsole.error(err);\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\ttry {\n\t\t\tif (this.subscriptionLoad) {\n\t\t\t\tthis.subscriptionLoad.unsubscribe();\n\t\t\t}\n\t\t} catch (e) {\n\t\t}\n\t}\n\n\tcheckSettings() {\n\t\tlet hmi = this.projectService.getHmi();\n\t\tif (hmi && hmi.layout && hmi.layout.showdev === false) {\n\t\t\tthis.showdev = false;\n\t\t} else {\n\t\t\tthis.showdev = true;\n\t\t}\n\t}\n\n\tisHidden() {\n\t\tlet list = ['', '/lab', '/home'],\n\t\t\troute = this.location.path();\n\t\treturn (list.indexOf(route) > -1);\n\t}\n\n\tgetClass() {\n\t\tlet route = this.location.path();\n\t\tif (route.startsWith('/view')) {\n            return 'work-void';\n        }\n\t\treturn (this.isHidden()) ? 'work-home' : 'work-editor';\n\t}\n\n    showDevNavigation() {\n        let route = this.location.path();\n        if (route.startsWith('/view')) {\n            return false;\n        }\n        return this.showdev;\n    }\n\n\tonGoTo(goto) {\n\t\tthis.router.navigate([goto]);\n\t\tthis.fabmenu.toggle();\n\t}\n}","export const appConfig = {\n    apiUrl: 'http://localhost:3000'\n};","// the start/root module that tells Angular how to assemble the application.\n\nimport { NgModule, Provider } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { MaterialModule } from './material.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ColorPickerModule } from 'ngx-color-picker';\n\nimport { Ng5SliderModule } from 'ng5-slider';\nimport { ToastrModule } from 'ngx-toastr';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\nimport { GestureConfig } from '@angular/material';\nimport { AngularDraggableModule } from 'angular2-draggable';\n\nimport { AppComponent } from './app.component';\nimport { routing } from './app.routing';\nimport { AuthGuard } from './auth.guard';\n\nimport { HomeComponent } from './home/home.component';\nimport { HeaderComponent, DialogInfo } from './header/header.component';\nimport { IframeComponent } from './iframe/iframe.component';\nimport { ViewComponent } from './view/view.component';\nimport { SidenavComponent } from './sidenav/sidenav.component';\nimport { EditorComponent, DialogDocProperty, DialogDocName, DialogNewDoc, DialogLinkProperty } from './editor/editor.component';\nimport { LayoutPropertyComponent, DialogMenuItem } from './editor/layout-property/layout-property.component';\nimport { PluginsComponent } from './editor/plugins/plugins.component';\nimport { AppSettingsComponent } from './editor/app-settings/app-settings.component';\nimport { SetupComponent } from './editor/setup/setup.component';\nimport { ChartConfigComponent, DialogListItem, DialogChartLine } from './editor/chart-config/chart-config.component';\nimport { CardConfigComponent } from './editor/card-config/card-config.component';\nimport { AlarmViewComponent } from './alarms/alarm-view/alarm-view.component';\nimport { AlarmListComponent } from './alarms/alarm-list/alarm-list.component';\nimport { AlarmPropertyComponent } from './alarms/alarm-property/alarm-property.component';\nimport { TextListComponent, DialogItemText } from './text-list/text-list.component';\nimport { LabComponent } from './lab/lab.component';\nimport { DeviceComponent, DeviceTagDialog } from './device/device.component';\nimport { DevicePropertyComponent } from './device/device-property/device-property.component';\nimport { TagPropertyComponent } from './device/tag-property/tag-property.component';\nimport { TopicPropertyComponent } from './device/topic-property/topic-property.component';\nimport { DeviceListComponent } from './device/device-list/device-list.component';\nimport { DeviceMapComponent } from './device/device-map/device-map.component';\nimport { FuxaViewComponent } from './fuxa-view/fuxa-view.component';\nimport { CardsViewComponent } from './cards-view/cards-view.component';\nimport { TesterComponent } from './tester/tester.component';\nimport { customHttpProvider } from './_helpers/custom-http';\nimport { TesterService } from './tester/tester.service';\nimport { UserService } from './_services/user.service';\nimport { SettingsService } from './_services/settings.service';\nimport { PluginService } from './_services/plugin.service';\nimport { AuthService } from './_services/auth.service';\nimport { ResWebApiService } from './_services/rcgi/reswebapi.service';\nimport { ResDemoService } from './_services/rcgi/resdemo.service';\nimport { ResClientService } from './_services/rcgi/resclient.service';\nimport { ResourceStorageService } from './_services/rcgi/resource-storage.service';\nimport { ProjectService } from './_services/project.service';\nimport { HmiService } from './_services/hmi.service';\nimport { AppService } from './_services/app.service';\nimport { TutorialComponent } from './help/tutorial/tutorial.component';\nimport { WindowRef } from './_helpers/windowref';\nimport { Utils, EnumToArrayPipe, EscapeHtmlPipe } from './_helpers/utils';\nimport { Define } from './_helpers/define';\nimport { Dictionary } from './_helpers/dictionary';\nimport { NgxFabButtonComponent } from './gui-helpers/fab-button/ngx-fab-button.component';\nimport { NgxFabItemButtonComponent } from './gui-helpers/fab-button/ngx-fab-item-button.component';\nimport { TreetableComponent } from './gui-helpers/treetable/treetable.component';\nimport { ConfirmDialogComponent } from './gui-helpers/confirm-dialog/confirm-dialog.component';\nimport { SelOptionsComponent } from './gui-helpers/sel-options/sel-options.component';\nimport { NgxSwitchComponent } from './gui-helpers/ngx-switch/ngx-switch.component';\n\nimport { DialogDraggableDirective } from './_directives/dialog-draggable.directive';\nimport { ModalPositionCache } from './_directives/modal-position.cache';\nimport { DraggableDirective } from './_directives/ngx-draggable.directive';\nimport { NumberOnlyDirective } from './_directives/number.directive';\nimport { LazyForDirective } from './_directives/lazyFor.directive';\n\nimport { GaugesManager } from './gauges/gauges.component';\nimport { GaugeBaseComponent } from './gauges/gauge-base/gauge-base.component';\nimport { ValueComponent } from './gauges/controls/value/value.component';\n\nimport { FlexVariablesMappingComponent } from './gauges/gauge-property/flex-variables-mapping/flex-variables-mapping.component';\nimport { FlexVariableMapComponent } from './gauges/gauge-property/flex-variable-map/flex-variable-map.component';\nimport { GaugePropertyComponent, DialogGaugePermission } from './gauges/gauge-property/gauge-property.component';\nimport { ChartPropertyComponent } from './gauges/controls/html-chart/chart-property/chart-property.component';\nimport { FlexInputComponent } from './gauges/gauge-property/flex-input/flex-input.component';\nimport { FlexAuthComponent } from './gauges/gauge-property/flex-auth/flex-auth.component';\nimport { FlexHeadComponent } from './gauges/gauge-property/flex-head/flex-head.component';\nimport { FlexEventComponent } from './gauges/gauge-property/flex-event/flex-event.component';\nimport { FlexActionComponent } from './gauges/gauge-property/flex-action/flex-action.component';\nimport { FlexVariableComponent } from './gauges/gauge-property/flex-variable/flex-variable.component';\nimport { MatSelectSearchModule } from './gui-helpers/mat-select-search/mat-select-search.module';\nimport { HtmlInputComponent } from './gauges/controls/html-input/html-input.component';\nimport { HtmlButtonComponent } from './gauges/controls/html-button/html-button.component';\nimport { HtmlSelectComponent } from './gauges/controls/html-select/html-select.component';\nimport { HtmlChartComponent } from './gauges/controls/html-chart/html-chart.component';\nimport { HtmlBagComponent } from './gauges/controls/html-bag/html-bag.component';\nimport { HtmlSwitchComponent } from './gauges/controls/html-switch/html-switch.component';\nimport { GaugeProgressComponent } from './gauges/controls/gauge-progress/gauge-progress.component';\nimport { GaugeSemaphoreComponent } from './gauges/controls/gauge-semaphore/gauge-semaphore.component';\nimport { UsersComponent, DialogUser } from './users/users.component';\nimport { LoginComponent } from './login/login.component';\nimport { DialogUserInfo } from './home/home.component';\nimport { ShapesComponent } from './gauges/shapes/shapes.component';\nimport { ProcEngComponent } from './gauges/shapes/proc-eng/proc-eng.component';\nimport { ApeShapesComponent } from './gauges/shapes/ape-shapes/ape-shapes.component';\n\nimport { NgxGaugeComponent } from './gui-helpers/ngx-gauge/ngx-gauge.component';\nimport { NgxNouisliderComponent } from './gui-helpers/ngx-nouislider/ngx-nouislider.component';\nimport { BagPropertyComponent } from './gauges/controls/html-bag/bag-property/bag-property.component';\nimport { PipePropertyComponent } from './gauges/controls/pipe/pipe-property/pipe-property.component';\nimport { PipeComponent } from './gauges/controls/pipe/pipe.component';\nimport { SliderComponent } from './gauges/controls/slider/slider.component';\nimport { SliderPropertyComponent } from './gauges/controls/slider/slider-property/slider-property.component';\nimport { HtmlSwitchPropertyComponent } from './gauges/controls/html-switch/html-switch-property/html-switch-property.component';\n\nimport { NgxUplotComponent } from './gui-helpers/ngx-uplot/ngx-uplot.component';\nimport { ChartUplotComponent } from './gauges/controls/html-chart/chart-uplot/chart-uplot.component';\n\nimport { GridsterModule } from 'angular-gridster2';\n\nimport { httpInterceptorProviders } from './_helpers/auth-interceptor';\nimport { environment } from '../environments/environment';\n\nexport function createTranslateLoader(http: HttpClient) {\n    return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n@NgModule({\n    declarations: [\t\n        HomeComponent,\n        EditorComponent,\n        HeaderComponent,\n        SidenavComponent,\n        IframeComponent,\n        AppComponent,\n        LabComponent,\n        DeviceComponent,\n        DeviceTagDialog,\n        TagPropertyComponent,\n        TopicPropertyComponent,\n        DevicePropertyComponent,\n        LayoutPropertyComponent,\n        PluginsComponent,\n        AppSettingsComponent,\n        SetupComponent,\n        DialogMenuItem,\n        DeviceListComponent,\n        DeviceMapComponent,\n        FuxaViewComponent,\n        DialogDocProperty,\n        DialogDocName,\n        DialogNewDoc,\n        DialogLinkProperty,\n        ConfirmDialogComponent,\n        DialogInfo,\n        GaugeBaseComponent,\n        HtmlInputComponent,\n        HtmlButtonComponent,\n        HtmlSelectComponent,\n        HtmlChartComponent,\n        HtmlBagComponent,\n        GaugeProgressComponent,\n        GaugeSemaphoreComponent,\n        GaugePropertyComponent,\n        DialogGaugePermission,\n        ChartPropertyComponent,\n        BagPropertyComponent,\n        PipePropertyComponent,\n        SliderPropertyComponent,\n        HtmlSwitchPropertyComponent,\n        ShapesComponent,\n        ProcEngComponent,\n        ApeShapesComponent,\n        TesterComponent,\n        TutorialComponent,\n        FlexInputComponent,\n        FlexAuthComponent,\n        FlexHeadComponent,\n        FlexEventComponent,\n        FlexActionComponent,\n        FlexVariableComponent,\n        FlexVariablesMappingComponent,\n        FlexVariableMapComponent,\n        ValueComponent,\n        DialogDraggableDirective,\n        EnumToArrayPipe,\n        EscapeHtmlPipe,\n        DraggableDirective,\n        NumberOnlyDirective,\n        NgxFabButtonComponent,\n        NgxFabItemButtonComponent,\n        TreetableComponent,\n        SelOptionsComponent,\n        LazyForDirective,\n        NgxSwitchComponent,\n        ChartConfigComponent,\n        CardConfigComponent,\n        AlarmListComponent,\n        AlarmViewComponent,\n        AlarmPropertyComponent,\n        TextListComponent,\n        NgxGaugeComponent,\n        NgxNouisliderComponent,\n        DialogListItem,\n        DialogChartLine,\n        UsersComponent,\n        DialogUser,\n        LoginComponent,\n        DialogUserInfo,\n        ViewComponent,\n        DialogItemText,\n        NgxUplotComponent,\n        ChartUplotComponent,\n        CardsViewComponent\n   ],\n    imports: [\n        BrowserModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        routing,\n        MaterialModule,\n        BrowserAnimationsModule,\n        ColorPickerModule,\n        Ng5SliderModule,\n        AngularDraggableModule,\n        MatSelectSearchModule,\n        ToastrModule.forRoot({\n            timeOut: 3000,\n            positionClass: \"toast-bottom-right\",\n            preventDuplicates: false\n        }),\n        TranslateModule.forRoot({\n            loader: {\n                provide: TranslateLoader,\n                useFactory: createTranslateLoader,\n                deps: [HttpClient]\n            }\n        }),\n        GridsterModule\n    ],\n    providers: [\n        // providersResourceService,\n        ResClientService,\n        ResWebApiService,\n        ResDemoService,\n        HmiService,\n        AppService,\n        ProjectService,\n        UserService,\n        PluginService,\n        SettingsService,\n        TesterService,\n        customHttpProvider,\n        httpInterceptorProviders,\n        AuthService,\n        GaugesManager,\n        WindowRef,\n        Utils,\n        HtmlSwitchComponent,\n        PipeComponent,\n        SliderComponent,\n        Dictionary,\n        ModalPositionCache,\n        Define,\n        AuthGuard,\n        { provide: HAMMER_GESTURE_CONFIG, useClass: GestureConfig }\n    ],\n    entryComponents: [\n        DialogDocProperty,\n        DialogDocName,\n        DialogNewDoc,\n        DialogLinkProperty,\n        DialogInfo,\n        DeviceTagDialog,\n        GaugePropertyComponent,\n        DialogGaugePermission,\n        ChartPropertyComponent,\n        NgxGaugeComponent,\n        NgxNouisliderComponent,\n        BagPropertyComponent,\n        PipePropertyComponent,\n        SliderPropertyComponent,\n        HtmlSwitchPropertyComponent,\n        DevicePropertyComponent,\n        TagPropertyComponent,\n        TopicPropertyComponent,\n        ConfirmDialogComponent,\n        LayoutPropertyComponent,\n        PluginsComponent,\n        AppSettingsComponent,\n        SetupComponent,\n        DialogMenuItem,\n        NgxSwitchComponent,\n        ChartConfigComponent,\n        CardConfigComponent,\n        AlarmListComponent,\n        AlarmViewComponent,\n        AlarmPropertyComponent,\n        TextListComponent,\n        DialogListItem,\n        DialogChartLine,\n        DialogUser,\n        LoginComponent,\n        DialogUserInfo,\n        DialogItemText,\n        ChartUplotComponent,\n        NgxUplotComponent\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","﻿import { Routes, RouterModule } from '@angular/router';\n\nimport { AuthGuard } from './auth.guard';\n\nimport { HomeComponent } from './home/home.component';\nimport { EditorComponent } from './editor/editor.component';\nimport { DeviceComponent } from './device/device.component';\nimport { LabComponent } from './lab/lab.component';\nimport { UsersComponent } from './users/users.component';\nimport { ViewComponent } from './view/view.component';\nimport { AlarmViewComponent } from './alarms/alarm-view/alarm-view.component';\nimport { AlarmListComponent } from './alarms/alarm-list/alarm-list.component';\nimport { TextListComponent } from './text-list/text-list.component';\n\nconst appRoutes: Routes = [\n    { path: '', component: HomeComponent},//, canActivate: [AuthGuard] },\n    { path: 'home', component: HomeComponent},//, canActivate: [AuthGuard] },\n    { path: 'editor', component: EditorComponent, canActivate: [AuthGuard]},\n    { path: 'lab', component: LabComponent, canActivate: [AuthGuard] },\n    { path: 'device', component: DeviceComponent, canActivate: [AuthGuard] },\n    { path: 'users', component: UsersComponent, canActivate: [AuthGuard] },\n    { path: 'alarms', component: AlarmViewComponent, canActivate: [AuthGuard] },\n    { path: 'messages', component: AlarmListComponent, canActivate: [AuthGuard] },\n    { path: 'text', component: TextListComponent, canActivate: [AuthGuard] },\n    { path: 'view', component: ViewComponent },\n\n    // otherwise redirect to home\n    { path: '**', redirectTo: '' }\n];\n\nexport const routing = RouterModule.forRoot(appRoutes);","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from './_services/auth.service';\nimport { ProjectService } from './_services/project.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { of } from 'rxjs/observable/of';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n    constructor(private authService: AuthService,\n        private translateService: TranslateService,\n        private toastr: ToastrService,\n        private projectService: ProjectService, \n        private router: Router) { \n        }\n\n    canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n        if (!this.projectService.isSecurityEnabled()) {\n            return of(true);\n        }\n        if (this.authService.isAdmin()) {\n            return of(true);\n        }\n        return this.projectService.checkServer().pipe(map((response: any) => {\n            if (response && !response.secureEnabled) {\n                return true;\n            }\n            return false;\n        }));\n    }\n\n    private notifySaveError() {\n        let msg = '';\n        this.translateService.get('msg.signin-failed').subscribe((txt: string) => { msg = txt });\n        this.toastr.error(msg, '', {\n            timeOut: 3000,\n            closeButton: true,\n            disableTimeOut: true\n        });\n    }\n}","module.exports = \".card-content {\\n    margin: 0 auto;\\n    position: absolute;\\n    top: 50%;\\n    left: 50%;\\n    -webkit-transform: translate(-50%, -50%);\\n            transform: translate(-50%, -50%);\\n    width: -webkit-fit-content;\\n    width: -moz-fit-content;\\n    width: fit-content;\\n}\\n\\n.card-tool {\\n    background-color: rgba(0,0,0,0.6);\\n    color:white;\\n    position:absolute;\\n    bottom: -15px;\\n    padding-left: 10px;\\n    font-size: 11px;\\n    left: 50%;\\n    -webkit-transform: translate(-50%, -50%);\\n            transform: translate(-50%, -50%); \\n    width: 194px;\\n    border-radius: 2px;\\n}\"","module.exports = \"<gridster [options]=\\\"gridOptions\\\">\\n    <gridster-item [item]=\\\"item\\\" *ngFor=\\\"let item of dashboard\\\">\\n        <div *ngIf=\\\"item.content\\\" class=\\\"card-content\\\">\\n            <div [ngSwitch]=\\\"item.card.type\\\"  [style.transform]=\\\"'scale(' + item.card.zoom + ')'\\\">\\n                <div *ngSwitchCase=\\\"widgetView\\\">\\n                    <app-fuxa-view class=\\\"lab-body\\\" id=\\\"lab\\\" [view]=\\\"item.content\\\" [hmi]=\\\"hmi\\\" [gaugesManager]=\\\"gaugesManager\\\"></app-fuxa-view>\\n                </div>\\n                <div *ngSwitchCase=\\\"widgetAlarms\\\">\\n                    <app-alarm-view #alarmsview [fullview]=\\\"true\\\" (showMode)=\\\"onAlarmsShowMode($event)\\\"></app-alarm-view>\\n                </div>\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"edit\\\" class=\\\"card-tool\\\">\\n            {{'card.style-zoom' | translate}} \\n            <mat-slider max=\\\"2\\\" min=\\\"0.1\\\" [step]=\\\"0.02\\\" [(ngModel)]=\\\"item.card.zoom\\\" (input)=\\\"onZoomChanged(item, $event)\\\"\\n                style=\\\"min-width: 80px\\\" thumbLabel=\\\"true\\\" (mousedown)=\\\"$event.stopPropagation()\\\">\\n            </mat-slider>\\n            <button mat-icon-button (click)=\\\"onEditCard(item)\\\" (mousedown)=\\\"$event.stopPropagation()\\\">\\n                <mat-icon>edit</mat-icon>\\n            </button>\\n            <button mat-icon-button (click)=\\\"onRemoveCard(item)\\\" (mousedown)=\\\"$event.stopPropagation()\\\">\\n                <mat-icon>close</mat-icon>\\n            </button>\\n        </div>\\n    </gridster-item>\\n</gridster>\"","import { Component, OnInit, AfterViewInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ChangeDetectorRef } from '@angular/core';\n\nimport { GaugesManager } from '../gauges/gauges.component';\nimport { Hmi, View, GaugeSettings, SelElement, LayoutSettings, ViewType, CardWidget, CardWidgetType } from '../_models/hmi';\nimport { GridsterConfig, GridsterItem, GridType, CompactType } from 'angular-gridster2';\nimport { Utils } from '../_helpers/utils';\n\n@Component({\n    selector: 'app-cards-view',\n    templateUrl: './cards-view.component.html',\n    styleUrls: ['./cards-view.component.css']\n})\nexport class CardsViewComponent implements OnInit, AfterViewInit {\n\n    @Input() options: GridsterConfig;\n    @Input() edit: boolean = true;\n    @Input() view: View;\n    @Input() hmi: Hmi;\n    @Input() gaugesManager: GaugesManager;        // gauges.component\n    @Output() editCard: EventEmitter<CardWidget> = new EventEmitter()\n\n    gridOptions: GridsterConfig;\n    dashboard: Array<GridsterItem> = [];\n\n    widgetView = Utils.getEnumKey(CardWidgetType, CardWidgetType.view);\n    widgetAlarms = Utils.getEnumKey(CardWidgetType, CardWidgetType.alarms);\n    widgetTable = Utils.getEnumKey(CardWidgetType, CardWidgetType.table);\n\n    constructor(private changeDetector: ChangeDetectorRef) { \n        this.gridOptions = <GridsterConfig> new GridOptions();\n        this.gridOptions.itemChangeCallback = this.itemChange;\n        this.gridOptions.itemResizeCallback = this.itemChange;\n    }\n\n    ngOnInit() {\n        this.gridOptions = { ...this.gridOptions, ...this.options };\n    }\n\n    ngAfterViewInit() {\n        setTimeout(() => {\n            this.reload();\n        }, 200);\n    }\n\n    reload() {\n        let element: HTMLElement = document.querySelector('gridster');\n        if (element && this.view.profile.bkcolor) {\n            element.style.backgroundColor = this.view.profile.bkcolor;\n        }\n        if (this.view.profile.margin >= 0) {\n            this.gridOptions.margin = this.view.profile.margin;\n            this.gridOptions.api.optionsChanged();\n        }\n        this.initCardsEditor(this.view.svgcontent);\n    }\n\n    initCardsEditor(dashboardContent: string) {\n        this.dashboard = [];\n        if (dashboardContent) {\n            let dashboard = JSON.parse(dashboardContent);\n            for (let i = 0; i < dashboard.length; i++) {\n                this.addCardsWidget(dashboard[i].x, dashboard[i].y, dashboard[i].cols, dashboard[i].rows, dashboard[i].card);\n            }\n        } else {\n            this.addCardsWidget(0, 0, 10, 8, <CardWidget>{ type: Utils.getEnumKey(CardWidgetType, CardWidgetType.view) });\n        }\n    }\n\n    onEditCard(item) {\n        this.editCard.emit(item);\n    }\n\n    onRemoveCard(item) {\n        this.dashboard.splice(this.dashboard.indexOf(item), 1);\n        this.view.svgcontent = JSON.stringify(this.dashboard);\n    }\n\n    addCardsWidget(x: number = 0, y: number = 0, cols: number = 10, rows: number = 8, card: CardWidget = <CardWidget>{ type: Utils.getEnumKey(CardWidgetType, CardWidgetType.view), zoom: 1 }) {\n        let content: any = null;\n        let background = '';\n        let item: GridsterItem = { x: x, y: y, cols: cols, rows: rows, card: card, content: content, background: background };\n        item.initCallback = () => {\n            if (card) {\n                if (card.type === this.widgetView) {\n                    let views = this.hmi.views.filter((v) => v.name === card.data);\n                    if (views && views.length) {\n                        if (views[0].svgcontent) {\n                            item.content = views[0];//.svgcontent.replace('<title>Layer 1</title>', '');\n                        }\n                        if (views[0].profile.bkcolor) {\n                            item.background = views[0].profile.bkcolor;\n                        }\n                    }\n                } else if (card.type === this.widgetAlarms) {\n                    item.background = '#CCCCCC';\n                }\n            }\n        }\n        this.dashboard.push(item);\n    }\n\n    render() {\n        this.initCardsEditor(this.view.svgcontent);\n    }\n\n    getContent() {\n        return JSON.stringify(this.dashboard);\n    }\n\n    getWindgetViewName() {\n        let widgetType = Utils.getEnumKey(CardWidgetType, CardWidgetType.view);\n        let viewsName = this.dashboard.filter((c) => c.card.type === widgetType && c.card.data).map((c) => { return c.card.data })\n        return viewsName;\n    }\n\n    onZoomChanged(item: GridsterItem, $event) {\n        item.card.zoom = $event.value;\n    }\n\n    private itemChange(item, itemComponent) {\n        // console.info('itemResized', item, itemComponent);\n        if (item.background && itemComponent.el) {\n            itemComponent.el.style.backgroundColor = item.background;\n        }\n    }\n}\n\nexport class NgxNouisliderOptions {\n    orientation = 'vertical';//'horizontal';\n    direction = 'ltr';\n    fontFamily = 'Sans-serif';\n    shape = { baseColor: '#dcdcdc', connectColor: '#49b2ff', handleColor: '#018ef5' };\n    marker = { color: '#000', subWidth: 5, subHeight: 1, fontSize: 18, divHeight: 2, divWidth: 12 };\n    range = { min: 0, max: 100 };\n    step = 1;\n    pips = { mode: 'values', values: [0, 50, 100], density: 4 };\n    tooltip = { type: 'none', decimals: 0, background: '#FFF', color: '#000', fontSize: 12 }\n}\n\nexport class GridOptions {\n    gridType = GridType.Fixed;\n    compactType = CompactType.None;\n    maxCols = 100;\n    maxRows = 100;\n    fixedColWidth = 35;\n    fixedRowHeight = 35;\n    margin = 10;\n    disableWarnings = true;\n    draggable = { enabled: true };\n    resizable = { enabled: true };\n};","module.exports = \".container {\\n    display: flex;\\n    flex-direction: column;\\n    min-width: 300px;\\n    position: absolute;\\n    bottom: 0px;\\n    top: 1px;\\n    left:0px;\\n    right:0px;\\n}\\n\\n.filter {\\n    display: inline-block;\\n    min-height: 50px;\\n    padding: 8px 24px 0;\\n}\\n\\n.filter .mat-form-field {\\n    font-size: 14px;\\n    width: 100%;\\n}\\n\\n.mat-table {\\n    overflow: auto;\\n    /* min-width: 1500px; */\\n    height: 100%;\\n}\\n\\n.mat-row {\\n    min-height: 40px;\\n    height: 43px;\\n}\\n\\n.mat-cell {\\n    font-size: 13px;\\n}\\n\\n.mat-header-row {\\n    top: 0;\\n    position: sticky;\\n    z-index: 1;\\n}\\n\\n.mat-header-cell {\\n    font-size: 15px;\\n}\\n\\n.mat-column-select {\\n    overflow: visible;\\n    flex: 0 0 100px;\\n}\\n\\n.mat-column-name {\\n    flex: 0 0 180px;\\n}\\n\\n.mat-column-address {\\n    flex: 0 0 360px;\\n}\\n\\n.mat-column-device {\\n    flex: 0 0 180px;\\n}\\n\\n.mat-column-type {\\n    flex: 0 0 160px;\\n}\\n\\n.mat-column-value {\\n    flex: 0 0 180px;\\n}\\n\\n.mat-column-warning {\\n    flex: 0 0 60px;\\n}\\n\\n.mat-column-min {\\n    flex: 0 0 100px;\\n}\\n\\n.mat-column-max {\\n    flex: 0 0 100px;\\n}\\n\\n.mat-column-remove {\\n    flex: 0 0 60px;\\n}\\n\\n.selectidthClass{\\n    flex: 0 0 50px;\\n }\\n\\n.warning {\\n     color: red;\\n }\\n\\n.my-header-filter /deep/ .mat-sort-header-button {\\n    display: block;\\n    text-align: left;\\n    margin-top: 5px;\\n}\\n\\n.my-header-filter /deep/ .mat-sort-header-arrow {\\n    top: -12px;\\n    right: 20px;\\n}\\n\\n.my-header-filter-input {\\n    display: block; \\n    margin-top: 4px;\\n    margin-bottom: 6px;\\n    padding: 3px 1px 3px 2px;\\n    border-radius: 2px;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"filter\\\" *ngIf=\\\"deviceSelected\\\" style=\\\"color:var(--formInputColor)\\\">\\n        <button mat-icon-button title=\\\"Device Map\\\" (click)=\\\"onGoBack()\\\" style=\\\"margin-right:10px;margin-left:-10px;\\\">\\n            <mat-icon aria-label=\\\"Show devices map\\\">arrow_back</mat-icon>\\n        </button>\\n        <div class=\\\"my-form-field\\\" style=\\\"padding-right: 10px;\\\">\\n            <span>{{'device.list-device' | translate}}</span>\\n            <mat-select [(value)]=\\\"deviceSelected\\\" style=\\\"width: 300px\\\"\\n                (selectionChange)=\\\"onDeviceChange($event.source)\\\">\\n                <mat-option *ngFor=\\\"let device of devicesValue()\\\" [value]=\\\"device\\\">\\n                    {{ device.name }}\\n                </mat-option>\\n            </mat-select>\\n        </div>\\n        <div class=\\\"my-form-field\\\" style=\\\"padding-right: 10px;\\\">\\n            <span>{{'device.list-filter' | translate}}</span>\\n            <input (keyup)=\\\"applyFilter($event.target.value)\\\" style=\\\"width: 450px\\\" type=\\\"text\\\">\\n        </div>\\n    </div>\\n    <mat-table #table [dataSource]=\\\"dataSource\\\" matSort>\\n        <!-- Checkbox Column -->\\n        <ng-container matColumnDef=\\\"select\\\">\\n            <mat-header-cell *matHeaderCellDef [ngClass]=\\\"'selectidthClass'\\\">\\n                <button mat-icon-button (click)=\\\"onAddTag()\\\" class=\\\"remove\\\">\\n                    <mat-icon>add</mat-icon>\\n                </button>\\n            </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\" [ngClass]=\\\"'selectidthClass'\\\">\\n                <button mat-icon-button (click)=\\\"onEditRow(element)\\\" class=\\\"remove\\\"\\n                    *ngIf=\\\"isToEdit(deviceSelected.type, element)\\\">\\n                    <mat-icon>edit</mat-icon>\\n                </button>\\n            </mat-cell>\\n        </ng-container>\\n\\n        <!-- Name Column -->\\n        <ng-container matColumnDef=\\\"name\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header> {{'device.list-name' | translate}} </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{getTagLabel(element)}} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Address Column -->\\n        <ng-container matColumnDef=\\\"address\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header> {{'device.list-address' | translate}} </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{getAddress(element)}} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Device Column -->\\n        <ng-container matColumnDef=\\\"device\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header> {{'device.list-device' | translate}} </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{deviceSelected.name}} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Device Column -->\\n        <ng-container matColumnDef=\\\"type\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header> {{'device.list-type' | translate}} </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.type}} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Min Column -->\\n        <ng-container matColumnDef=\\\"min\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header> {{'device.list-min' | translate}} </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.min}} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Max Column -->\\n        <ng-container matColumnDef=\\\"max\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header> {{'device.list-max' | translate}} </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.max}} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Value Column -->\\n        <ng-container matColumnDef=\\\"value\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header> {{'device.list-value' | translate}} </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.value}} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Warning Column -->\\n        <ng-container matColumnDef=\\\"warning\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header></mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\" [matTooltip]=\\\"element.error ? element.error : null\\\" matTooltipPosition=\\\"left\\\">\\n                <button mat-icon-button *ngIf=\\\"element.error\\\" class=\\\"warning\\\">\\n                    <mat-icon>warning_amber</mat-icon>\\n                </button>\\n            </mat-cell>\\n        </ng-container>\\n\\n        <!-- Button remove Column -->\\n        <ng-container matColumnDef=\\\"remove\\\">\\n            <mat-header-cell *matHeaderCellDef [ngClass]=\\\"'selectidthClass'\\\">\\n                <button mat-icon-button (click)=\\\"onRemoveAll()\\\" class=\\\"remove\\\">\\n                    <mat-icon>clear</mat-icon>\\n                </button>\\n            </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\">\\n                <button mat-icon-button (click)=\\\"$event.stopPropagation();onRemoveRow(element)\\\" class=\\\"remove\\\">\\n                    <mat-icon>clear</mat-icon>\\n                </button>\\n            </mat-cell>\\n        </ng-container>\\n\\n        <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\" [ngStyle]=\\\"{'min-width.px': tableWidth}\\\"></mat-header-row>\\n        <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" class=\\\"my-mat-row\\\" [ngStyle]=\\\"{'min-width.px': tableWidth}\\\"></mat-row>\\n    </mat-table>\\n    <mat-paginator [pageSizeOptions]=\\\"[25, 100]\\\" style=\\\"position: relative; right: 100px;\\\"></mat-paginator>\\n</div>\"","import { Component, OnInit, ViewChild, Input, Output, EventEmitter } from '@angular/core';\nimport { ChangeDetectorRef } from '@angular/core';\nimport { MatTable, MatTableDataSource, MatPaginator, MatSort, MatMenuTrigger } from '@angular/material';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatDialog } from '@angular/material';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { TagPropertyComponent } from './../tag-property/tag-property.component';\nimport { TopicPropertyComponent } from './../topic-property/topic-property.component';\nimport { Tag, Device, DeviceType, TAG_PREFIX } from '../../_models/device';\nimport { ProjectService } from '../../_services/project.service';\nimport { HmiService } from '../../_services/hmi.service';\nimport { Node, NodeType } from '../../gui-helpers/treetable/treetable.component';\nimport { ConfirmDialogComponent } from '../../gui-helpers/confirm-dialog/confirm-dialog.component';\nimport { Utils } from '../../_helpers/utils';\n\n@Component({\n    selector: 'app-device-list',\n    templateUrl: './device-list.component.html',\n    styleUrls: ['./device-list.component.css']\n})\n\nexport class DeviceListComponent implements OnInit {\n\n    readonly defAllColumns = ['select', 'name', 'address', 'device', 'type', 'value', 'warning', 'remove'];\n    readonly defClientColumns = ['select', 'name', 'address', 'device', 'type', 'value', 'warning', 'remove'];\n    readonly defInternalColumns = ['select', 'name', 'device', 'type', 'value', 'remove'];\n    readonly defAllRowWidth = 1400;\n    readonly defClientRowWidth = 1400;\n    readonly defInternalRowWidth = 1200;\n\n    displayedColumns = this.defAllColumns;\n\n    dataSource = new MatTableDataSource([]);\n    selection = new SelectionModel<Element>(true, []);\n    devices: Device[];\n    dirty: boolean = false;\n    deviceType = DeviceType;\n    tableWidth = this.defAllRowWidth;\n    tagsMap = {};\n\n    @Input() deviceSelected: Device;\n    @Output() save = new EventEmitter();\n    @Output() goto = new EventEmitter();\n\n    @ViewChild(MatTable) table: MatTable<any>;\n    @ViewChild(MatSort) sort: MatSort;\n    @ViewChild(MatMenuTrigger) trigger: MatMenuTrigger;\n\t@ViewChild(MatPaginator) paginator: MatPaginator;\n\n    constructor(private dialog: MatDialog,\n        private hmiService: HmiService,\n        private translateService: TranslateService,\n        private changeDetector: ChangeDetectorRef,\n        private projectService: ProjectService) { }\n\n    ngOnInit() {\n    }\n\n    ngAfterViewInit() {\n        this.devices = this.projectService.getDevices();\n        if (!this.deviceSelected && this.devices) {\n            this.deviceSelected = this.devices[0];\n        }\n        Object.values(this.devices).forEach(d => {\n            Object.values(d.tags).forEach((t: Tag) => {\n                this.tagsMap[t.id] = t;\n            })\n        });\n\n        if (this.deviceSelected) {\n            this.bindToTable(this.deviceSelected.tags);\n        }\n\t\tthis.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        this.table.renderRows();\n    }\n\n    private bindToTable(tags) {\n        this.dataSource.data = Object.values(tags);\n    }\n\n    onDeviceChange(source) {\n        this.dataSource.data = [];\n        this.deviceSelected = source.value;\n        this.setSelectedDevice(this.deviceSelected);\n    }\n\n    setSelectedDevice(device: Device) {\n        this.devices = this.projectService.getDevices();\n        this.updateDeviceValue();\n        // this.devices = JSON.parse(JSON.stringify(this.projectService.getDevices()));\n        Object.values(this.devices).forEach(d => {\n            if (d.name === device.name) {\n                this.deviceSelected = d;\n                this.bindToTable(this.deviceSelected.tags);\n            }\n        });\n        if (this.deviceSelected.type === DeviceType.WebStudio) {\n            this.displayedColumns = this.defClientColumns;\n            this.tableWidth = this.defClientRowWidth;\n        } else if (this.deviceSelected.type === DeviceType.internal) {\n            this.displayedColumns = this.defInternalColumns;\n            this.tableWidth = this.defInternalRowWidth;\n        } else {\n            this.displayedColumns = this.defAllColumns;\n            this.tableWidth = this.defAllRowWidth;\n        }\n\n    }\n\n    onGoBack() {\n        this.goto.emit();\n    }\n\n    onRemoveRow(row) {\n        const index = this.dataSource.data.indexOf(row, 0);\n        // if (index > -1) {\n        //   this.dataSource.data.splice(index, 1);\n        //   this.dirty = true;\n        // }\n        if (this.dataSource.data[index]) {\n            delete this.deviceSelected.tags[this.dataSource.data[index].id];\n        }\n        this.bindToTable(this.deviceSelected.tags);\n        this.projectService.setDeviceTags(this.deviceSelected);\n    }\n\n    onRemoveAll() {\n        let msg = '';\n        this.translateService.get('msg.tags-remove-all').subscribe((txt: string) => { msg = txt });\n        let dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: { msg: msg },\n            position: { top: '60px' }\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.clearTags();\n            }\n        });\n    }\n\n    private clearTags() {\n        this.deviceSelected.tags = {};\n        this.bindToTable(this.deviceSelected.tags);\n    }\n\n    /** Whether the number of selected elements matches the total number of rows. */\n    isAllSelected() {\n        const numSelected = this.selection.selected.length;\n        const numRows = this.dataSource.data.length;\n        return numSelected === numRows;\n    }\n\n    /** Selects all rows if they are not all selected; otherwise clear selection. */\n    masterToggle() {\n        this.isAllSelected() ?\n            this.selection.clear() :\n            this.dataSource.data.forEach(row => this.selection.select(row));\n    }\n\n    applyFilter(filterValue: string) {\n        filterValue = filterValue.trim(); // Remove whitespace\n        filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n        this.dataSource.filter = filterValue;\n    }\n\n    onEditRow(row) {\n        if (this.deviceSelected.type === DeviceType.MQTTclient) {\n            this.editTopics(row);\n        } else {\n            this.editTag(row, false);\n        }\n    }\n\n    onAddTag() {\n        if (this.deviceSelected.type === DeviceType.OPCUA || this.deviceSelected.type === DeviceType.BACnet || this.deviceSelected.type === DeviceType.WebAPI) {\n            this.addOpcTags(null);\n        } else if (this.deviceSelected.type === DeviceType.MQTTclient) {\n            this.editTopics();\n        } else {\n            let tag = new Tag(Utils.getGUID(TAG_PREFIX));\n            this.editTag(tag, true);\n        }\n    }\n\n    addOpcTags(tag: Tag) {\n        let dialogRef = this.dialog.open(TagPropertyComponent, {\n            panelClass: 'dialog-property',\n            data: { device: this.deviceSelected, tag: tag, devices: this.devices },\n            position: { top: '60px' }\n        });\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.dirty = true;\n                if (this.deviceSelected.type === DeviceType.WebAPI) {\n                    // this.clearTags();\n                }\n                result.nodes.forEach((n: Node) => {\n                    let tag = new Tag(Utils.getGUID(TAG_PREFIX));\n                    tag.name = n.text;\n                    tag.label = n.text;\n                    tag.type = n.type;\n                    if (this.deviceSelected.type === DeviceType.BACnet) {\n                        tag.label = n.text;\n                    } else if (this.deviceSelected.type === DeviceType.WebAPI) {\n                        tag.label = n.text;\n                        if (n.class === NodeType.Reference) {\n                            tag.memaddress = n.property;    // in memaddress save the address of the value\n                            tag.options = n.todefine;         // save the id and value in text to set by select list\n                            tag.type = n.type;\n                        }\n                    }\n                    tag.address = n.id;\n                    this.checkToAdd(tag, result.device);\n                });\n                this.projectService.setDeviceTags(this.deviceSelected);\n            }\n        });\n    }\n\n    getTagLabel(tag: Tag) {\n        if (this.deviceSelected.type === DeviceType.BACnet || this.deviceSelected.type === DeviceType.WebAPI) {\n            return tag.label;\n        } else if (this.deviceSelected.type === DeviceType.OPCUA) {\n            return tag.label;\n        } else {\n            return tag.name;\n        }\n    }\n\n    getAddress(tag: Tag) {\n        if (this.deviceSelected.type === DeviceType.ModbusRTU || this.deviceSelected.type === DeviceType.ModbusTCP) {\n            return  parseInt(tag.address) + parseInt(tag.memaddress);\n        } else if (this.deviceSelected.type === DeviceType.WebAPI) {\n            if (tag.options) {\n                return tag.address + ' / ' + tag.options.selval;\n            }\n            return tag.address;\n        } else if (this.deviceSelected.type === DeviceType.MQTTclient) {\n            if (tag.options.subs && tag.type === 'json') {\n                return tag.address + '[' + tag.memaddress + ']';\n            }\n            return tag.address;\n        }\n        return tag.address;\n    }\n\n    isToEdit(type, tag: Tag) {\n        if (type === DeviceType.SiemensS7 || type === DeviceType.ModbusTCP || type === DeviceType.ModbusRTU || \n            type === DeviceType.WebStudio || type === DeviceType.internal) {\n                return true;\n        } else if (type === DeviceType.MQTTclient) {\n            if (tag && tag.options && (tag.options.pubs || tag.options.subs && tag.type !== 'json')) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    editTag(tag: Tag, checkToAdd: boolean) {\n        let oldtag = tag.id;\n        let temptag: Tag = JSON.parse(JSON.stringify(tag));\n        let dialogRef = this.dialog.open(TagPropertyComponent, {\n            panelClass: 'dialog-property',\n            data: { device: this.deviceSelected, tag: temptag, devices: this.devices },\n            position: { top: '60px' }\n        });\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                if (this.deviceSelected.type === DeviceType.MQTTclient) {\n                    result.nodes.forEach((ta: Tag) => {\n                        this.checkToAdd(tag, result.device);\n                    });\n                    this.projectService.setDeviceTags(this.deviceSelected);\n                } else {\n                    this.dirty = true;\n                    tag.name = temptag.name;\n                    tag.type = temptag.type;\n                    tag.address = temptag.address;\n                    tag.memaddress = temptag.memaddress;\n                    tag.divisor = temptag.divisor;\n                    if (this.deviceSelected.type === DeviceType.internal) {\n                        tag.value = '0';\n                    }\n                    if (checkToAdd) {\n                        this.checkToAdd(tag, result.device);\n                    } else if (tag.id !== oldtag) {\n                        //remove old tag device reference\n                        delete result.device.tags[oldtag];\n                        this.checkToAdd(tag, result.device);\n                    }\n                    this.projectService.setDeviceTags(this.deviceSelected);\n                }\n            }\n        });\n    }\n\n    checkToAdd(tag: Tag, device: Device, overwrite: boolean = false) {\n        let exist = false;\n        Object.keys(device.tags).forEach((key) => {\n            if (device.tags[key].id) {\n                if (device.tags[key].id === tag.id) {\n                    exist = true;\n                }\n            } else if (device.tags[key].name === tag.name) {\n                exist = true;\n            }\n        })\n        if (!exist || overwrite) {\n            device.tags[tag.id] = tag;\n        }\n        this.tagsMap[tag.id] = tag;\n        this.bindToTable(this.deviceSelected.tags);\n    }\n\n    checkToAddAddress(tag: Tag, device: Device) {\n        let exist = false;\n        Object.keys(device.tags).forEach((key) => {\n            if (device.tags[key].address === tag.address && device.tags[key].memaddress === tag.memaddress && device.tags[key].id != tag.id) {\n                exist = true;\n            }\n        })\n        if (!exist) {\n            device.tags[tag.id] = tag;\n            this.tagsMap[tag.id] = tag;\n        }\n        this.bindToTable(this.deviceSelected.tags);\n    }\n\n    updateDeviceValue() {\n        let sigs = this.hmiService.getAllSignals();\n        for (let id in sigs) {\n            if (this.tagsMap[id]) {\n                this.tagsMap[id].value = sigs[id].value;\n                this.tagsMap[id].error = sigs[id].error;\n            }\n        }\n        this.changeDetector.detectChanges();\n    }\n\n    devicesValue(): Array<Device> {\n        return Object.values(this.devices);\n    }\n\n        \n    /**\n     * to add MQTT topic for subscription or publish\n     */\n     editTopics(topic: Tag = null) {\n        let dialogRef = this.dialog.open(TopicPropertyComponent, {\n            panelClass: 'dialog-property',\n            data: { device: this.deviceSelected, devices: Object.values(this.devices), topic: topic },\n            position: { top: '60px' }\n        });\n        dialogRef.componentInstance.invokeSubscribe = (topics) => this.addTopicSubscription(topics);\n        dialogRef.componentInstance.invokePuplish = (newtopic) => this.addTopicToPublish(newtopic);\n        dialogRef.afterClosed().subscribe(result => {\n        });\n    }\n\n    private addTopicSubscription(topics: Tag[]) {\n        if (topics) {\n            topics.forEach((topic: Tag) => {\n                this.checkToAddAddress(topic, this.deviceSelected);\n            });\n            this.projectService.setDeviceTags(this.deviceSelected);\n        }\n    }\n\n    private addTopicToPublish(topic: Tag) {\n        if (topic) {\n            this.checkToAddAddress(topic, this.deviceSelected);\n            this.projectService.setDeviceTags(this.deviceSelected);\n        }\n    }\n\n}\n\nexport interface Element extends Tag {\n    position: number;\n}\n","module.exports = \"<div *ngIf=\\\"server && server.property\\\">\\n    <div class=\\\"main-line-flow\\\" [style.left.px]=\\\"getMainLineLeftPosition()\\\" [style.top.px]=\\\"getMainLineTopPosition('flow')\\\" [style.width.px]=\\\"lineFlowSize\\\"\\n        [style.height.px]=\\\"getMainLineHeight('flow')\\\"></div>\\n    <div *ngFor=\\\"let flow of devicesValue('flow'); index as i\\\" class=\\\"flow-line\\\" [style.left.px]=\\\"getDeviceLineLeftPosition(i, 'flow')\\\"\\n        [style.top.px]=\\\"getDeviceLineTopPosition('flow')\\\" [style.width.px]=\\\"lineFlowSize\\\" [style.height.px]=\\\"flowLineHeight\\\"></div>\\n    <div class=\\\"connection-line\\\" [style.left.px]=\\\"getDeviceConnectionLeftPosition('flow')\\\" [style.top.px]=\\\"getDeviceConnectionTopPosition('flow')\\\"\\n        [style.width.px]=\\\"getDeviceConnectionWidth('flow')\\\" [style.height.px]=\\\"lineFlowSize\\\"></div>\\n\\n    <div class=\\\"main-line\\\" [style.left.px]=\\\"getMainLineLeftPosition()\\\" [style.top.px]=\\\"getMainLineTopPosition()\\\" [style.width.px]=\\\"lineDeviceSize\\\" [style.height.px]=\\\"getMainLineHeight()\\\">\\n    </div>\\n    <div *ngFor=\\\"let device of devicesValue(); index as i\\\" class=\\\"device-line\\\" [style.left.px]=\\\"getDeviceLineLeftPosition(i)\\\" [style.top.px]=\\\"getDeviceLineTopPosition()\\\"\\n        [style.width.px]=\\\"lineDeviceSize\\\" [style.height.px]=\\\"deviceLineHeight\\\"></div>\\n    <div class=\\\"connection-line\\\" [style.left.px]=\\\"getDeviceConnectionLeftPosition()\\\" [style.top.px]=\\\"getDeviceConnectionTopPosition()\\\"\\n        [style.width.px]=\\\"getDeviceConnectionWidth()\\\" [style.height.px]=\\\"lineDeviceSize\\\"></div>\\n</div>\\n<div class=\\\"container\\\">\\n    <div class=\\\"main-device\\\" *ngIf=\\\"server && server.property\\\" [style.left.px]=\\\"getMainLeftPosition()\\\" [style.top.px]=\\\"getMainTopPosition()\\\" [style.width.px]=\\\"mainWidth\\\"\\n        [style.height.px]=\\\"mainHeight\\\" [style.borderWidth.px]=\\\"mainBorder\\\">\\n        <span class=\\\"device-header\\\" style=\\\"padding-top: 10px;\\\">{{ server.name }}</span>\\n        <span class=\\\"device-pro\\\">{{ server.property.address }}</span>\\n        <!-- <mat-icon (click)=\\\"onListDevice(server)\\\" class=\\\"device-icon device-list\\\">list_alt</mat-icon> -->\\n        <!-- <mat-icon (click)=\\\"onEditDevice(server)\\\" class=\\\"device-icon device-edit\\\" >edit</mat-icon> -->\\n    </div>\\n\\n    <div *ngFor=\\\"let flow of devicesValue('flow'); index as i\\\" class=\\\"node-flow\\\" [style.color]=\\\"(flow.enabled) ? '#000000' : '#828282'\\\" [style.left.px]=\\\"getDeviceLeftPosition(i, 'flow')\\\"\\n        [style.top.px]=\\\"getDeviceTopPosition('flow')\\\" [style.width.px]=\\\"flowWidth\\\" [style.height.px]=\\\"flowHeight\\\" [style.borderWidth.px]=\\\"flowBorder\\\">\\n        <span class=\\\"device-header\\\">{{ flow.name }}</span>\\n        <span class=\\\"device-pro\\\" *ngIf=\\\"flow.property\\\">{{ flow.property.address }}</span>\\n        <span class=\\\"device-pro\\\" style=\\\"padding-bottom: 10px;\\\">{{ getDevicePropertyToShow(flow) }}</span>\\n        <div class=\\\"device-status\\\" *ngIf=\\\"flow.enabled\\\" [style.background-color]=\\\"getDeviceStatusColor(flow)\\\"></div>\\n        <mat-icon (click)=\\\"onListDevice(flow)\\\" class=\\\"device-icon device-list\\\">list_alt</mat-icon>\\n        <mat-icon (click)=\\\"onEditDevice(flow)\\\" class=\\\"device-icon device-edit\\\">edit</mat-icon>\\n        <mat-icon (click)=\\\"onRemoveDevice(flow)\\\" class=\\\"device-icon device-delete\\\">clear</mat-icon>\\n    </div>\\n\\n    <div *ngFor=\\\"let device of devicesValue(); index as i\\\" [ngClass]=\\\"getNodeClass(device)\\\" [style.color]=\\\"(device.enabled) ? '#FFFFFF' : '#C5C5C5'\\\" [style.left.px]=\\\"getDeviceLeftPosition(i)\\\"\\n        [style.top.px]=\\\"getDeviceTopPosition()\\\" [style.width.px]=\\\"deviceWidth\\\" [style.height.px]=\\\"deviceHeight\\\" [style.borderWidth.px]=\\\"deviceBorder\\\">\\n        <span class=\\\"device-header\\\">{{ device.name }}</span>\\n        <span class=\\\"device-pro\\\" *ngIf=\\\"device.property\\\">{{ device.property.address }}</span>\\n        <span class=\\\"device-pro\\\" style=\\\"padding-bottom: 10px;\\\">{{ getDevicePropertyToShow(device) }}</span>\\n        <div class=\\\"device-status\\\" *ngIf=\\\"device.enabled\\\" [style.background-color]=\\\"getDeviceStatusColor(device)\\\"></div>\\n        <mat-icon (click)=\\\"onListDevice(device)\\\" class=\\\"device-icon device-list\\\">list_alt</mat-icon>\\n        <mat-icon (click)=\\\"onEditDevice(device)\\\" class=\\\"device-icon device-edit\\\">edit</mat-icon>\\n        <mat-icon (click)=\\\"onRemoveDevice(device)\\\" class=\\\"device-icon device-delete\\\">clear</mat-icon>\\n    </div>\\n</div>\"","module.exports = \".main-device{position:absolute;text-align:center;background-color:#0c65bd;color:white;border-style:solid;border-color:var(--mapBorderColor)}.node-device{position:absolute;background-color:#4f565d;text-align:center;padding-top:17px;border-style:solid;border-color:var(--mapBorderColor)}.node-device mat-icon{color:white}.node-internal{position:absolute;background-color:#72787d;text-align:center;padding-top:17px;border-style:solid;border-color:var(--mapBorderColor)}.node-internal mat-icon{color:white}.node-flow{position:absolute;background-color:#dadada;text-align:center;padding-top:17px;border-style:solid;border-color:var(--mapBorderColor)}.node-flow mat-icon{color:black}.main-line{position:absolute;background-color:var(--mapBorderColor)}.main-line-flow{position:absolute;background-color:var(--mapBorderColor)}.device-line{position:absolute;background-color:var(--mapBorderColor)}.flow-line{position:absolute;background-color:var(--mapBorderColor)}.connection-line{position:absolute;background-color:var(--mapBorderColor)}.device-header{display:block;font-size:17px;padding-bottom:7px;padding-top:0px;min-height:20px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.device-pro{display:block;font-size:12px;padding-top:0px;min-height:14px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.device-pro-line{display:inline-block;font-size:12px;padding-top:5px}.device-icon{position:absolute;font-size:17px;cursor:pointer}.device-edit{bottom:0px;right:2px}.device-edit-disabled{color:#888 !important;cursor:default}.device-delete{top:2px;right:2px;font-size:17px}.device-list{right:28px;font-size:24px;bottom:2px}.device-status{position:absolute;bottom:10px;left:10px;width:10px;height:10px;border-radius:4px}\\n\"","import { Component, OnInit, OnDestroy, AfterViewInit, Output, EventEmitter, ElementRef } from '@angular/core';\nimport { Subscription } from \"rxjs\";\nimport { MatDialog } from '@angular/material';\n\nimport { DevicePropertyComponent } from './../device-property/device-property.component';\nimport { ProjectService } from '../../_services/project.service';\nimport { PluginService } from '../../_services/plugin.service';\nimport { Device, DeviceType, DeviceNetProperty, DEVICE_PREFIX } from './../../_models/device';\nimport { Utils } from '../../_helpers/utils';\nimport { Plugin } from '../../_models/plugin';\nimport { AppService } from '../../_services/app.service';\n\n@Component({\n\tselector: 'app-device-map',\n\ttemplateUrl: './device-map.component.html',\n\tstyleUrls: ['./device-map.component.scss']\n})\nexport class DeviceMapComponent implements OnInit, OnDestroy, AfterViewInit {\n\n\t@Output() goto: EventEmitter<Device> = new EventEmitter();\n\tprivate subscriptionPluginsChange: Subscription;\n\n\n\tflowBorder = 5;\n\tflowWidth = 160;\n\tflowHeight = 70;\n\tflowLineHeight = 60;\n\n\tdeviceBorder = 5;\n\tdeviceWidth = 160;\n\tdeviceHeight = 90;\n\tdeviceLineHeight = 60;\n\n\tlineFlowSize = 6;\n\tlineFlowHeight = 60;\n\tlineDeviceSize = 6;\n\tmainDeviceLineHeight = 60;\n\tmainWidth = 160;\n\tmainHeight = 90;\n\tmainBorder = 5;\n\n\tserver: Device;\n\tdevices = {};\n    plugins = [];\n\n\tdevicesStatus = {};\n\tdirty: boolean = false;\n\tdomArea: any;\n\n\tconstructor(private dialog: MatDialog,\n\t\tprivate elementRef: ElementRef,\n        private appService: AppService,\n        private pluginService: PluginService,\n\t\tprivate projectService: ProjectService) { \n\t\t\tthis.domArea = this.elementRef.nativeElement.parent;\n\t\t}\n\n\tngOnInit() {\n\t\tthis.loadCurrentProject();\n\t\tthis.loadAvailableType();\n\t\tthis.subscriptionPluginsChange = this.pluginService.onPluginsChanged.subscribe(event => {\n\t\t\tthis.loadAvailableType();\n\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tif (this.appService.isClientApp) {\n\t\t\tthis.mainDeviceLineHeight = 0;\n\t\t\tthis.mainHeight = 0;\n\t\t\tthis.flowLineHeight = 0;\n\t\t\tthis.flowHeight = 0;\n\t\t\tthis.lineFlowHeight = 0;\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\ttry {\n\t\t\tif (this.subscriptionPluginsChange) {\n\t\t\t\tthis.subscriptionPluginsChange.unsubscribe();\n\t\t\t}\n\t\t} catch (e) {\n\t\t}\n\t}\n\n\tonEditDevice(device: Device) {\n\t\tthis.editDevice(device, false);\n\t}\n\n\tloadCurrentProject() {\n\t\t// take the copy of devices to save by leave\n\t\tlet prj = this.projectService.getProject();\n\t\tif (prj && prj.server) {\n\t\t\tthis.server = prj.server;\n\t\t}\n\t\tif (prj && prj.devices) {\n\t\t\tthis.devices = prj.devices;\n\t\t}\n\t}\n\n\tcheckLayout() {\n\t\tif (this.devices)\n\t\t{\n\t\t\tif (this.plcs().length && this.flows().length) {\n\n\t\t\t}\n\t\t}\n\t}\n\n\tloadAvailableType() {\n\t\t// define available device type (plugins)\n\t\tthis.plugins = [];\n\t\tif (!this.appService.isClientApp && !this.appService.isDemoApp) {\n\t\t\tthis.pluginService.getPlugins().subscribe(plugins => {\n\t\t\t\tObject.values(plugins).forEach((pg) => {\n\t\t\t\t\tif (pg.current.length) {\n\t\t\t\t\t\tthis.plugins.push(pg.type);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}, error => {\n\t\t\t});\n\t\t\tthis.plugins.push(DeviceType.WebAPI);\n\t\t\tthis.plugins.push(DeviceType.MQTTclient);\n            this.plugins.push(DeviceType.internal);\n\t\t} else {\n            this.plugins.push(DeviceType.WebStudio);\n            this.plugins.push(DeviceType.internal);\n\t\t}\n\t}\n\n\taddDevice() {\n\t\tlet device = new Device(Utils.getGUID(DEVICE_PREFIX));\n\t\tdevice.property = new DeviceNetProperty();\n\t\tdevice.enabled = false;\n\t\tdevice.tags = {};\n\t\tthis.editDevice(device, false);\n\t}\n\n\tonRemoveDevice(device: Device) {\n\t\tthis.editDevice(device, true);\n\t}\n\n\tremoveDevice(device: Device) {\n\t\tdelete this.devices[device.id];\n\t}\n\n\tprivate getWindowWidth() {\n\t\tlet result = window.innerWidth;\n\t\tif (this.appService.isClientApp && this.elementRef.nativeElement && this.elementRef.nativeElement.parentElement) {\n\t\t\tresult = this.elementRef.nativeElement.parentElement.clientWidth;\n\t\t}\n\t\tif (this.devices) {\n\t\t\tif (result < (this.plcs().length + 2) * this.deviceWidth) {\n\t\t\t\tresult = (this.plcs().length + 2) * this.deviceWidth;\n\t\t\t}\n\t\t\tif (result < (this.flows().length + 2) * this.deviceWidth) {\n\t\t\t\tresult = (this.flows().length + 2) * this.deviceWidth;\n\t\t\t}\n\t\t}\n\t\treturn  result;\n\t}\n\n\tprivate getHorizontalCenter() {\n\t\treturn this.getWindowWidth() / 2;\n\t}\n\n\tprivate getVerticalCenter() {\n\t\tif (this.devices && this.plcs().length && this.flows().length) {\n\t\t\treturn window.innerHeight / 5 * 2;\n\t\t} else if (this.flows().length) {\n\t\t\treturn window.innerHeight / 2;\n\t\t} else {\n\t\t\treturn window.innerHeight / 3;\n\t\t}\n\t}\n\n\tgetMainLeftPosition() {\n\t\treturn this.getHorizontalCenter() - this.mainWidth / 2;\n\t}\n\n\tgetMainTopPosition() {\n\t\treturn this.getVerticalCenter() - this.mainHeight / 2;\n\t}\n\n\tgetMainLineLeftPosition() {\n\t\treturn this.getHorizontalCenter() - 1 + this.lineDeviceSize / 2;\n\t}\n\n\tgetMainLineTopPosition(type = null) {\n\t\tif (type === 'flow') {\n\t\t\treturn this.getVerticalCenter() + this.mainBorder - (this.lineFlowHeight + this.mainHeight / 2);\n\t\t}\n\t\treturn this.getVerticalCenter() + this.mainBorder + this.mainHeight / 2;\n\t}\n\n\tgetMainLineHeight(type = null) {\n\t\tif (this.devices) {\n\t\t\tif (type === 'flow') {\n\t\t\t\tif (this.flows().length) {\n\t\t\t\t\treturn this.lineFlowHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this.plcs().length) {\n\t\t\t\t\treturn this.mainDeviceLineHeight;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tgetDeviceLeftPosition(index: number, type = null) {\n\t\tif (this.devices) {\n\t\t\tif (type === 'flow') {\n\t\t\t\tif (this.flows().length) {\n\t\t\t\t\tlet pos = index + 1;\n\t\t\t\t\tlet centerd = this.flows().length + 1;\n\t\t\t\t\tlet result = ((this.getWindowWidth() - this.flowWidth) / centerd) * pos;\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this.plcs().length) {\n\t\t\t\t\tlet pos = index + 1;\n\t\t\t\t\tlet centerd = this.plcs().length + 1;\n\t\t\t\t\tlet result = ((this.getWindowWidth() - this.deviceWidth) / centerd) * pos;\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tgetDeviceTopPosition(type = null) {\n\t\tif (!this.server) {\n\t\t\tlet pos = this.elementRef.nativeElement.parentElement.clientHeight / 2;\n            if (pos < 200) {\n                pos = 200;\n            }\n\t\t\tif (type === 'flow') {\n\t\t\t\tpos -= (this.mainHeight * 2);\n\t\t\t} else {\n\t\t\t\tpos += (this.mainHeight / 2);\n\t\t\t}\n            return pos;\n\t\t} else if (type === 'flow') {\n\t\t\treturn this.getDeviceLineTopPosition(type) - (this.flowHeight + this.flowBorder * 2);\n\t\t} else {\n\t\t\treturn this.getVerticalCenter() + (this.mainHeight / 2 + this.deviceLineHeight + this.mainDeviceLineHeight);\n\t\t}\n\t}\n\n\tgetDeviceLineLeftPosition(index: number, type = null) {\n\t\tif (this.devices) {\n\t\t\tif (type === 'flow') {\n\t\t\t\tif (this.flows().length) {\n\t\t\t\t\tlet pos = index + 1;\n\t\t\t\t\tlet centerd = this.flows().length + 1;\n\t\t\t\t\tlet result = ((this.getWindowWidth() - this.flowWidth) / centerd) * pos;\n\t\t\t\t\tresult += this.flowBorder + this.flowWidth / 2 - this.lineDeviceSize / 2;\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this.plcs().length) {\n\t\t\t\t\tlet pos = index + 1;\n\t\t\t\t\tlet centerd = this.plcs().length + 1;\n\t\t\t\t\tlet result = ((this.getWindowWidth() - this.deviceWidth) / centerd) * pos;\n\t\t\t\t\tresult += this.deviceBorder + this.deviceWidth / 2 - this.lineDeviceSize / 2;\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tgetDeviceLineTopPosition(type = null) {\n\t\tif (type === 'flow') {\n\t\t\treturn this.getDeviceConnectionTopPosition(type) + this.lineFlowSize - this.flowLineHeight;\n\t\t} else {\n\t\t\treturn this.getDeviceTopPosition(type) - this.deviceLineHeight;\n\t\t}\n\t}\n\n\tgetDeviceConnectionLeftPosition(type = null) {\n\t\tif (type === 'flow') {\n\t\t\tlet centerd = this.flows().length + 1;\n\t\t\tlet result = ((this.getWindowWidth() - this.flowWidth) / centerd) * 1;\n\t\t\tresult += this.deviceBorder + (this.flowWidth - this.lineFlowSize) / 2;\n\t\t\treturn result;\n\t\t} else {\n\t\t\tlet centerd = this.plcs().length + 1;\n\t\t\tlet result = ((this.getWindowWidth() - this.deviceWidth) / centerd) * 1;\n\t\t\tresult += this.deviceBorder + (this.deviceWidth - this.lineDeviceSize) / 2;\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tgetDeviceConnectionTopPosition(type = null) {\n\t\tif (type === 'flow') {\n\t\t\treturn this.getMainLineTopPosition(type) - this.lineFlowSize;\n\t\t} else {\t\t\t\n\t\t\treturn this.getDeviceLineTopPosition();\n\t\t}\n\t}\n\n\tgetDeviceConnectionWidth(type = null) {\n\t\tif (this.devices) {\n\t\t\tif (type === 'flow') {\n\t\t\t\tlet count = this.flows().length;\n\t\t\t\tif (count) {\n\t\t\t\t\tlet centerd = this.flows().length + 1;\n\t\t\t\t\tlet result = (((this.getWindowWidth() - this.flowWidth) / centerd) * count) - (((this.getWindowWidth() - this.flowWidth) / centerd) * 1);\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet count = this.plcs().length;\n\t\t\t\tif (count) {\n\t\t\t\t\tlet centerd = this.plcs().length + 1;\n\t\t\t\t\tlet result = (((this.getWindowWidth() - this.deviceWidth) / centerd) * count) - (((this.getWindowWidth() - this.deviceWidth) / centerd) * 1);\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tdevicesValue(type = null): Array<Device> {\n\t\tif (this.devices) {\n\t\t\tif (type === 'flow') {\n\t\t\t\tif (this.flows().length) {\n\t\t\t\t\tlet result: Device[] = this.flows();\n\t\t\t\t\treturn result.sort((a, b) => (a.name > b.name) ? 1 : -1);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this.plcs().length) {\n\t\t\t\t\tlet result: Device[] = this.plcs();\n\t\t\t\t\treturn result.sort((a, b) => (a.name > b.name) ? 1 : -1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n\n\tonListDevice(device) {\n\t\tthis.goto.emit(device);\n\t}\n\n\tisDevicePropertyToShow(device) {\n\t\tif (device.property && device.type !== 'OPCUA') {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tisClientDevice(device) {\n        return (device.type === DeviceType.WebStudio && this.appService.isClientApp);\n\t}\n\n\tgetDevicePropertyToShow(device) {\n\t\tlet result = '';\n\t\tif (device.property) {\n\t\t\tif (device.type === DeviceType.OPCUA) {\n\t\t\t\tresult = 'OPC-UA'\n\t\t\t} else if (device.type === DeviceType.SiemensS7) {\n\t\t\t\tresult = 'Port: ';\n\t\t\t\tif (device.property.port) {\n\t\t\t\t\tresult += device.property.port;\n\t\t\t\t}\n\t\t\t\tresult +=' / Rack: ';\n\t\t\t\tif (device.property.rack) {\n\t\t\t\t\tresult += device.property.rack;\n\t\t\t\t}\n\t\t\t\tresult += ' / Slot: ';\n\t\t\t\tif (device.property.slot) {\n\t\t\t\t\tresult += device.property.slot;\n\t\t\t\t}\n\t\t\t} else if (device.type === DeviceType.ModbusTCP) {\n\t\t\t\tresult = 'Modbus-TCP  ' + 'Slave ID: ';\n\t\t\t\tif (device.property.slaveid) {\n\t\t\t\t\tresult += device.property.slaveid;\n\t\t\t\t}\n\t\t\t} else if (device.type === DeviceType.ModbusRTU) {\n\t\t\t\tresult = 'Modbus-RTU  ' + 'Slave ID: ';\n\t\t\t\tif (device.property.slaveid) {\n\t\t\t\t\tresult += device.property.slaveid;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tgetDeviceStatusColor(device) {\n\t\tif (this.devicesStatus[device.id]) {\n\t\t\tlet milli = new Date().getTime();\n\t\t\tif (this.devicesStatus[device.id].last + 15000 < milli) {\n\t\t\t\tthis.devicesStatus[device.id].status = 'connect-error';\n\t\t\t\tthis.devicesStatus[device.id].last = new Date().getTime();\n\t\t\t}\n\t\t\tlet st = this.devicesStatus[device.id].status;\n\t\t\tif (st === 'connect-ok') {\n\t\t\t\treturn '#00b050';\n\t\t\t} else if (st === 'connect-error' || st === 'connect-failed') {\n\t\t\t\treturn '#ff2d2d';\n\t\t\t} else if (st === 'connect-off' || st === 'connect-busy') {\n\t\t\t\treturn '#ffc000';\n\t\t\t}\n\t\t}\n\t}\n\n    getNodeClass(device: Device) {\n        if (device.type === DeviceType.internal) {\n            return 'node-internal';\n        }\n        return 'node-device';\n    }\n\n\tsetDeviceStatus(event) {\n\t\tthis.devicesStatus[event.id] = { status: event.status, last: new Date().getTime() };\n\t}\n\n\teditDevice(device: Device, toremove: boolean) {\n\t\tlet exist = Object.values(this.devices).filter((d: Device) => d.id !== device.id).map((d: Device) => { return d.name });\n\t\texist.push('server');\n\t\tlet tempdevice = JSON.parse(JSON.stringify(device));\n\t\tlet dialogRef = this.dialog.open(DevicePropertyComponent, {\n\t\t\tpanelClass: 'dialog-property',\n\t\t\tdata: { device: tempdevice, remove: toremove, exist: exist, availableType: this.plugins,\n                projectService: this.projectService },\n\t\t\tposition: { top: '60px' }\n\t\t});\n\n\t\tdialogRef.afterClosed().subscribe(result => {\n\t\t\tif (result) {\n\t\t\t\tthis.dirty = true;\n\t\t\t\tif (toremove) {\n\t\t\t\t\tthis.removeDevice(device);\n\t\t\t\t\tthis.projectService.removeDevice(device);\n\t\t\t\t} else {\n\t\t\t\t\tlet olddevice = JSON.parse(JSON.stringify(device));\n\t\t\t\t\tdevice.name = tempdevice.name;\n\t\t\t\t\tdevice.type = tempdevice.type;\n\t\t\t\t\tdevice.enabled = tempdevice.enabled;\n\t\t\t\t\tdevice.polling = tempdevice.polling;\n                    if (this.appService.isClientApp || this.appService.isDemoApp) {\n                        delete device.property;\n                    }\n\t\t\t\t\tif (device.property && tempdevice.property) {\n\t\t\t\t\t\tdevice.property.address = tempdevice.property.address;\n\t\t\t\t\t\tdevice.property.port = parseInt(tempdevice.property.port);\n\t\t\t\t\t\tdevice.property.slot = parseInt(tempdevice.property.slot);\n\t\t\t\t\t\tdevice.property.rack = parseInt(tempdevice.property.rack);\n\t\t\t\t\t\tdevice.property.slaveid = tempdevice.property.slaveid;\n\t\t\t\t\t\tdevice.property.baudrate = tempdevice.property.baudrate;\n\t\t\t\t\t\tdevice.property.databits = tempdevice.property.databits;\n\t\t\t\t\t\tdevice.property.stopbits = tempdevice.property.stopbits;\n\t\t\t\t\t\tdevice.property.parity = tempdevice.property.parity;\n\t\t\t\t\t\tdevice.property.options = tempdevice.property.options;\n\t\t\t\t\t\tdevice.property.method = tempdevice.property.method;\n\t\t\t\t\t\tdevice.property.format = tempdevice.property.format;\n\t\t\t\t\t}\n\t\t\t\t\tthis.projectService.setDevice(device, olddevice, result.security);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.checkLayout();\n\t\t});\n\t}\n\n\tplcs(): Device[] {\n\t\treturn <Device[]>Object.values(this.devices).filter((d: Device) => d.type !== DeviceType.WebAPI);\n\t}\n\n\tflows(): Device[] {\n\t\treturn <Device[]>Object.values(this.devices).filter((d: Device) => d.type === DeviceType.WebAPI);\n\t}\n}\n","module.exports = \"::ng-deep .mat-expansion-panel-body {\\n    padding-left: 5px !important;\\n    padding-right: 5px !important;\\n}\\n\\n.multiline {\\n    overflow: auto;\\n    max-height: 300px;\\n}\\n\"","module.exports = \"<div style=\\\"width: 100%;position: relative;\\\">\\n    <div *ngIf=\\\"isToRemove\\\" style=\\\"margin-top: 20px;margin-bottom: 20px;\\\">\\n        {{'msg.device-remove' | translate}} '{{data.device.name}}' ?\\n    </div>\\n    <div *ngIf=\\\"!isToRemove\\\">\\n        <h1 mat-dialog-title style=\\\"display:inline-block; cursor:move; padding-top: 15px\\\" mat-dialog-draggable *ngIf=\\\"!isFuxaServer\\\">\\n            {{'device.property-client' | translate}}</h1>\\n        <h1 mat-dialog-title style=\\\"display:inline-block; cursor:move; padding-top: 15px\\\" mat-dialog-draggable *ngIf=\\\"isFuxaServer\\\">\\n            {{'device.property-server' | translate}}</h1>\\n        <mat-icon (click)=\\\"onNoClick()\\\" style=\\\"float:right;cursor:pointer;color:gray;position: relative; top: 10px; right: 0px\\\">clear</mat-icon>\\n    </div>\\n    <div style=\\\"overflow-y: hidden; overflow-x: hidden; padding-top: 5px;\\\" *ngIf=\\\"!isToRemove\\\">\\n        <div style=\\\"display: block;\\\">\\n            <div class=\\\"my-form-field\\\" style=\\\"display: block;margin-bottom: 10px;\\\">\\n                <span>{{'device.property-name' | translate}}</span>\\n                <input [(ngModel)]=\\\"data.device.name\\\" style=\\\"width: 350px\\\" type=\\\"text\\\">\\n            </div>\\n            <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;\\\" *ngIf=\\\"!isFuxaServer\\\">\\n                <span>{{'device.property-type' | translate}}</span>\\n                <mat-select [(value)]=\\\"data.device.type\\\" (selectionChange)=\\\"onDeviceTypeChanged($event)\\\" #devicetype style=\\\"width: 160px\\\" [disabled]=\\\"isFuxaServer\\\">\\n                    <mat-option *ngFor=\\\"let type of deviceType | enumToArray\\\" [value]=\\\"type.key\\\">\\n                        {{ type.value }}\\n                    </mat-option>\\n                </mat-select>\\n            </div>\\n            <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-left: 15px;\\\" *ngIf=\\\"isWithPolling && !isFuxaServer\\\">\\n                <span>{{'device.property-polling' | translate}}</span>\\n                <mat-select [(value)]=\\\"data.device.polling\\\" style=\\\"width: 80px\\\" [disabled]=\\\"isFuxaServer\\\">\\n                    <mat-option *ngFor=\\\"let polling of pollingType\\\" [value]=\\\"polling.value\\\">\\n                        {{ polling.text }}\\n                    </mat-option>\\n                </mat-select>\\n            </div>\\n            <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;text-align: center;width: 80px;\\\" *ngIf=\\\"!isFuxaServer\\\">\\n                <span *ngIf=\\\"data.device.type === deviceType.WebStudio\\\">{{'device.property-subscribe' | translate}}</span>\\n                <span *ngIf=\\\"data.device.type !== deviceType.WebStudio\\\">{{'device.property-enable' | translate}}</span>\\n                <mat-slide-toggle color=\\\"primary\\\" [(ngModel)]=\\\"data.device.enabled\\\"></mat-slide-toggle>\\n            </div>\\n            <div *ngIf=\\\"data.device.property && data.device.type\\\" [ngSwitch]=\\\"data.device.type\\\">\\n                <div *ngSwitchCase=\\\"deviceType.OPCUA\\\">\\n                    <div class=\\\"my-form-field\\\" style=\\\"display: block;margin-bottom: 10px;\\\">\\n                        <span>{{'device.property-address-opc' | translate}}</span>\\n                        <input [(ngModel)]=\\\"data.device.property.address\\\" style=\\\"width: 350px\\\" type=\\\"ip\\\" (click)=\\\"onAddressChanged()\\\">\\n                    </div>\\n                    <div class=\\\"my-form-field\\\" style=\\\"width: 356px\\\">\\n                        <mat-expansion-panel #panelProperty class=\\\"my-expansion-panel\\\" style=\\\"box-shadow:none !important; background-color:var(--formExtBackground);border-radius: 2px;\\\"\\n                            (closed)=\\\"onPropertyExpand(false)\\\" (opened)=\\\"onPropertyExpand(true);onCheckOpcUaServer()\\\">\\n                            <mat-expansion-panel-header class=\\\"header\\\" [collapsedHeight]=\\\"'32px'\\\" [expandedHeight]=\\\"'32px'\\\"\\n                                style=\\\"padding-left:5px !important;padding-right:17px !important; font-size: 13px;\\\">\\n                                <mat-panel-title>\\n                                    <span *ngIf=\\\"propertyExpanded\\\">{{'device.property-security' | translate}}</span>\\n                                    <span *ngIf=\\\"!propertyExpanded\\\">{{'device.not-property-security' | translate}}</span>\\n                                </mat-panel-title>\\n                            </mat-expansion-panel-header>\\n                            <div *ngIf=\\\"propertyLoading\\\">\\n                                <mat-spinner style=\\\"margin: auto\\\" diameter=\\\"20\\\"></mat-spinner>\\n                            </div>\\n                            <div *ngIf=\\\"!propertyLoading\\\">\\n                                <mat-radio-group [(ngModel)]=\\\"securityRadio\\\">\\n                                    <mat-radio-button style=\\\"display:block;padding-left:10px;padding-bottom:2px;font-size: 13px;\\\" *ngFor=\\\"let sec of securityMode;\\\"\\n                                        [value]=\\\"sec.value\\\">{{sec.text}}</mat-radio-button>\\n                                </mat-radio-group>\\n                                <div *ngIf=\\\"!propertyError\\\" style=\\\"display: block;margin: 5px 10px 0px 10px;\\\">\\n                                    <div class=\\\"my-form-field\\\">\\n                                        <span>{{'general.username' | translate}}</span>\\n                                        <input [(ngModel)]=\\\"security.username\\\" style=\\\"width: 315px;background-color:var(--formInputExtBackground)\\\" type=\\\"text\\\">\\n                                    </div>\\n                                    <div class=\\\"my-form-field\\\" style=\\\"margin-top: 5px;\\\">\\n                                        <span>{{'general.password' | translate}}</span>\\n                                        <input autocomplete=\\\"off\\\" [type]=\\\"showPassword ? 'text' : 'password'\\\" [(ngModel)]=\\\"security.password\\\" style=\\\"width: 315px;background-color:var(--formInputExtBackground)\\\">\\n                                        <mat-icon matSuffix (click)=\\\"showPassword = !showPassword\\\" class=\\\"show-password\\\">{{showPassword ? 'visibility' : 'visibility_off'}}</mat-icon>\\n                                    </div>\\n                                </div>\\n                                <div *ngIf=\\\"propertyError\\\" style=\\\"display: block;margin: 5px 10px 0px 10px;width: 315px; color: red;\\\">\\n                                    <span>{{propertyError}}</span>\\n                                </div>\\n                            </div>\\n                        </mat-expansion-panel>\\n                    </div>\\n                </div>\\n                <div *ngSwitchCase=\\\"deviceType.BACnet\\\">\\n                    <div class=\\\"my-form-field\\\" style=\\\"display: block;margin-bottom: 10px;\\\">\\n                        <span>{{'device.property-device-port' | translate}}</span>\\n                        <input [(ngModel)]=\\\"data.device.property.address\\\" style=\\\"width: 350px\\\" type=\\\"ip\\\" (click)=\\\"onAddressChanged()\\\">\\n                    </div>\\n                </div>\\n                <div *ngSwitchCase=\\\"deviceType.SiemensS7\\\">\\n                    <div class=\\\"my-form-field\\\" style=\\\"display: block;margin-bottom: 10px;\\\">\\n                        <span>{{'device.property-address-s7' | translate}}</span>\\n                        <input [(ngModel)]=\\\"data.device.property.address\\\" style=\\\"width: 350px\\\" type=\\\"ip\\\" (click)=\\\"onAddressChanged()\\\">\\n                    </div>\\n                    <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;padding-right: 10px;\\\">\\n                        <span>{{'device.property-port' | translate}}</span>\\n                        <input numberOnly [(ngModel)]=\\\"data.device.property.port\\\" style=\\\"width: 80px\\\" type=\\\"text\\\">\\n                    </div>\\n                    <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;padding-right: 10px;\\\">\\n                        <span>{{'device.property-rack' | translate}}</span>\\n                        <input numberOnly [(ngModel)]=\\\"data.device.property.rack\\\" style=\\\"width: 80px\\\" type=\\\"text\\\">\\n                    </div>\\n                    <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;\\\">\\n                        <span>{{'device.property-slot' | translate}}</span>\\n                        <input numberOnly [(ngModel)]=\\\"data.device.property.slot\\\" style=\\\"width: 80px\\\" type=\\\"text\\\">\\n                    </div>\\n                </div>\\n                <div *ngSwitchCase=\\\"deviceType.ModbusRTU\\\">\\n                    <div style=\\\"display: block;margin-bottom: 10px;\\\">\\n                        <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;\\\">\\n                            <span>{{'device.property-serialport' | translate}}</span>\\n                            <input [(ngModel)]=\\\"data.device.property.address\\\" style=\\\"width: 262px\\\" type=\\\"ip\\\" (click)=\\\"onAddressChanged()\\\">\\n                        </div>\\n                        <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-left: 15px;\\\">\\n                            <span>{{'device.property-slave-id' | translate}}</span>\\n                            <input numberOnly [(ngModel)]=\\\"data.device.property.slaveid\\\" style=\\\"width: 65px\\\" type=\\\"text\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;padding-right: 10px;\\\">\\n                        <span>{{'device.property-baudrate' | translate}}</span>\\n                        <mat-select [(value)]=\\\"data.device.property.baudrate\\\" style=\\\"width: 75px\\\">\\n                            <mat-option *ngFor=\\\"let value of baudrateType\\\" [value]=\\\"value\\\">\\n                                {{ value }}\\n                            </mat-option>\\n                        </mat-select>\\n                    </div>\\n                    <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;padding-right: 10px;\\\">\\n                        <span>{{'device.property-databits' | translate}}</span>\\n                        <mat-select [(value)]=\\\"data.device.property.databits\\\" style=\\\"width: 50px\\\">\\n                            <mat-option *ngFor=\\\"let value of databitsType\\\" [value]=\\\"value\\\">\\n                                {{ value }}\\n                            </mat-option>\\n                        </mat-select>\\n                    </div>\\n                    <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;padding-right: 10px;\\\">\\n                        <span>{{'device.property-stopbits' | translate}}</span>\\n                        <mat-select [(value)]=\\\"data.device.property.stopbits\\\" style=\\\"width: 50px\\\">\\n                            <mat-option *ngFor=\\\"let value of stopbitsType\\\" [value]=\\\"value\\\">\\n                                {{ value }}\\n                            </mat-option>\\n                        </mat-select>\\n                    </div>\\n                    <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;\\\">\\n                        <span>{{'device.property-parity' | translate}}</span>\\n                        <mat-select [(value)]=\\\"data.device.property.parity\\\" style=\\\"width: 74px\\\">\\n                            <mat-option *ngFor=\\\"let value of parityType\\\" [value]=\\\"value\\\">\\n                                {{ value }}\\n                            </mat-option>\\n                        </mat-select>\\n                    </div>\\n                    <div class=\\\"my-form-field\\\" style=\\\"display: block;margin-bottom: 10px; width: 100px; text-align: center;\\\">\\n                        <span>{{'device.property-tockenized' | translate}}</span>\\n                        <mat-slide-toggle color=\\\"primary\\\" [(ngModel)]=\\\"data.device.property.options\\\"></mat-slide-toggle>\\n                    </div>\\n                </div>\\n                <div *ngSwitchCase=\\\"deviceType.ModbusTCP\\\">\\n                    <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;\\\">\\n                        <span>{{'device.property-address-port' | translate}}</span>\\n                        <input [(ngModel)]=\\\"data.device.property.address\\\" style=\\\"width: 262px\\\" type=\\\"ip\\\" (click)=\\\"onAddressChanged()\\\">\\n                    </div>\\n                    <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-left: 15px;\\\">\\n                        <span>{{'device.property-slave-id' | translate}}</span>\\n                        <input numberOnly [(ngModel)]=\\\"data.device.property.slaveid\\\" style=\\\"width: 65px\\\" type=\\\"text\\\">\\n                    </div>\\n                    <div class=\\\"my-form-field\\\" style=\\\"display: block;margin-bottom: 10px; width: 100px; text-align: center;\\\">\\n                        <span>{{'device.property-tockenized' | translate}}</span>\\n                        <mat-slide-toggle color=\\\"primary\\\" [(ngModel)]=\\\"data.device.property.options\\\"></mat-slide-toggle>\\n                    </div>\\n                </div>\\n                <div *ngSwitchCase=\\\"deviceType.WebAPI\\\">\\n                    <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;\\\">\\n                        <span>{{'device.property-method' | translate}}</span>\\n                        <mat-select [(value)]=\\\"data.device.property.method\\\" style=\\\"width: 160px\\\">\\n                            <mat-option *ngFor=\\\"let value of methodType\\\" [value]=\\\"value\\\">\\n                                {{ value }}\\n                            </mat-option>\\n                        </mat-select>\\n                    </div>\\n                    <div class=\\\"my-form-field\\\" style=\\\"margin-bottom: 10px; float: right;\\\">\\n                        <span>{{'device.property-format' | translate}}</span>\\n                        <mat-select [(value)]=\\\"data.device.property.format\\\" style=\\\"width: 168px\\\">\\n                            <mat-option *ngFor=\\\"let value of parserType\\\" [value]=\\\"value\\\">\\n                                {{ value }}\\n                            </mat-option>\\n                        </mat-select>\\n                    </div>\\n                    <div class=\\\"my-form-field\\\" style=\\\"display: block;margin-bottom: 10px;\\\">\\n                        <span>{{'device.property-url' | translate}}</span>\\n                        <input [(ngModel)]=\\\"data.device.property.address\\\" style=\\\"width: 350px\\\" type=\\\"ip\\\" (click)=\\\"onAddressChanged()\\\">\\n                    </div>\\n                    <div class=\\\"my-form-field\\\" style=\\\"width: 356px\\\">\\n                        <mat-expansion-panel [disabled]=\\\"!data.device.property.method || !data.device.property.address\\\" #panelProperty class=\\\"my-expansion-panel\\\"\\n                            style=\\\"box-shadow:none !important; background-color:var(--formExtBackground);border-radius: 2px;\\\" (closed)=\\\"onPropertyExpand(false)\\\"\\n                            (opened)=\\\"onPropertyExpand(true);onCheckWebApi()\\\">\\n                            <mat-expansion-panel-header class=\\\"header\\\" [collapsedHeight]=\\\"'32px'\\\" [expandedHeight]=\\\"'32px'\\\"\\n                                style=\\\"padding-left:5px !important;padding-right:17px !important;font-size: 13px;\\\">\\n                                <mat-panel-title>\\n                                    <span *ngIf=\\\"propertyExpanded\\\">{{'device.property-webapi-result' | translate}}</span>\\n                                    <span *ngIf=\\\"!propertyExpanded\\\">{{'device.not-webapi-result' | translate}}</span>\\n                                </mat-panel-title>\\n                            </mat-expansion-panel-header>\\n                            <div *ngIf=\\\"propertyLoading\\\">\\n                                <mat-spinner style=\\\"margin: auto\\\" diameter=\\\"20\\\"></mat-spinner>\\n                            </div>\\n                            <div *ngIf=\\\"!propertyLoading\\\">\\n                                <div class=\\\"my-form-field multiline\\\" style=\\\"display: block;margin: 5px 5px 0px 5px;font-size: 13px;\\\">\\n                                    {{result}}\\n                                </div>\\n                            </div>\\n                        </mat-expansion-panel>\\n                    </div>\\n                </div>\\n                <div *ngSwitchCase=\\\"deviceType.MQTTclient\\\">\\n                    <div class=\\\"my-form-field\\\" style=\\\"display: block;margin-bottom: 10px;\\\">\\n                        <span>{{'device.property-mqtt-address' | translate}}</span>\\n                        <input [(ngModel)]=\\\"data.device.property.address\\\" style=\\\"width: 350px\\\" type=\\\"ip\\\" (click)=\\\"onAddressChanged()\\\">\\n                    </div>\\n                    <div class=\\\"my-form-field\\\" style=\\\"width: 356px\\\">\\n                        <mat-expansion-panel #panelProperty class=\\\"my-expansion-panel\\\" style=\\\"box-shadow:none !important; background-color:var(--formExtBackground);border-radius: 2px;\\\"\\n                            (closed)=\\\"onPropertyExpand(false)\\\" (opened)=\\\"onPropertyExpand(true);\\\">\\n                            <mat-expansion-panel-header class=\\\"header\\\" [collapsedHeight]=\\\"'32px'\\\" [expandedHeight]=\\\"'32px'\\\"\\n                                style=\\\"padding-left:5px !important;padding-right:17px !important;font-size: 13px;\\\">\\n                                <mat-panel-title>\\n                                    <span *ngIf=\\\"propertyExpanded\\\">{{'device.property-security' | translate}}</span>\\n                                    <span *ngIf=\\\"!propertyExpanded\\\">{{'device.not-property-security' | translate}}</span>\\n                                </mat-panel-title>\\n                            </mat-expansion-panel-header>\\n                            <div *ngIf=\\\"propertyLoading\\\">\\n                                <mat-spinner style=\\\"margin: auto\\\" diameter=\\\"20\\\"></mat-spinner>\\n                            </div>\\n                            <div *ngIf=\\\"!propertyLoading\\\">\\n                                <div style=\\\"display: block;margin: 5px 10px 0px 10px;\\\">\\n                                    <div class=\\\"my-form-field\\\" style=\\\"display: block;\\\">\\n                                        <span>{{'general.clientId' | translate}}</span>\\n                                        <input [(ngModel)]=\\\"security.clientId\\\" style=\\\"width: 315px;background-color:var(--formInputExtBackground)\\\" type=\\\"text\\\">\\n                                    </div>\\n                                    <div class=\\\"my-form-field\\\" style=\\\"display: block;margin-top: 5px;\\\">\\n                                        <span>{{'general.username' | translate}}</span>\\n                                        <input [(ngModel)]=\\\"security.username\\\" style=\\\"width: 315px;background-color:var(--formInputExtBackground)\\\" type=\\\"text\\\">\\n                                    </div>\\n                                    <div class=\\\"my-form-field\\\" style=\\\"display: block;margin-top: 5px;\\\">\\n                                        <span>{{'general.password' | translate}}</span>\\n                                        <input autocomplete=\\\"off\\\" [type]=\\\"showPassword ? 'text' : 'password'\\\" [(ngModel)]=\\\"security.password\\\" style=\\\"width: 315px;background-color:var(--formInputExtBackground)\\\">\\n                                        <mat-icon matSuffix (click)=\\\"showPassword = !showPassword\\\" class=\\\"show-password\\\">{{showPassword ? 'visibility' : 'visibility_off'}}</mat-icon>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </mat-expansion-panel>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div mat-dialog-actions class=\\\"dialog-action\\\">\\n        <button mat-raised-button (click)=\\\"onNoClick()\\\">{{'dlg.cancel' | translate}}</button>\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!isValid(data.device)\\\" (click)=\\\"onOkClick()\\\" [mat-dialog-close]=\\\"data\\\" cdkFocusInitial>{{'dlg.ok' |\\n            translate}}</button>\\n    </div>\\n</div>\"","import { Component, OnInit, Inject, OnDestroy, ViewChild } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatExpansionPanel } from '@angular/material';\nimport { Subscription } from \"rxjs\";\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { HmiService } from '../../_services/hmi.service';\nimport { AppService } from '../../_services/app.service';\nimport { ProjectService } from '../../_services/project.service';\nimport { DeviceType, DeviceSecurity, MessageSecurityMode, SecurityPolicy } from './../../_models/device';\nimport { Utils } from '../../_helpers/utils';\n\n@Component({\n\tselector: 'app-device-property',\n\ttemplateUrl: './device-property.component.html',\n\tstyleUrls: ['./device-property.component.css']\n})\nexport class DevicePropertyComponent implements OnInit, OnDestroy {\n\n\t// @Input() name: any;\n\t@ViewChild(MatExpansionPanel) panelProperty: MatExpansionPanel;\n\tsecurityRadio: any;\n\tmode: any;\n\tdeviceType: any = {};\n\n\tpollingPlcType = [{text: '200 ms', value: 200}, {text: '500 ms', value: 500}, {text: '700 ms', value: 700}, {text: '1 sec', value: 1000}, \n\t\t\t\t\t{text: '1.5 sec', value: 1500}, {text: '2 sec', value: 2000}, { text: '3 sec', value: 3000}, \n\t\t\t\t\t{text: '4 sec', value: 4000}, {text: '5 sec', value: 5000}];\n\tpollingWebApiType = [{text: '1 sec', value: 1000}, {text: '2 sec', value: 2000}, {text: '3 sec', value: 3000}, { text: '5 sec', value: 5000}, \n\t\t\t\t\t\t{text: '10 sec', value: 10000}, {text: '30 sec', value: 30000}, {text: '1 min', value: 60000}, {text: '2 min', value: 60000 * 2},\n\t\t\t\t\t\t{text: '5 min', value: 60000 * 5}, {text: '10 min', value: 60000 * 10}, {text: '30 min', value: 60000 * 30}, {text: '60 min', value: 60000 * 60}];\n\n\tpollingType = this.pollingPlcType;\n\n\tisFuxaServer = false;\n\tisWithPolling = true;\n\tisToRemove = false;\n\tpropertyError = '';\n\tpropertyExpanded: boolean;\n\tpropertyLoading: boolean;\n\tsecurityMode: any = [];\n\tsecurity = new DeviceSecurity();\n\tbaudrateType = [110, 300, 600, 1200, 2400, 4800, 9600, 14400, 19200, 28800, 38400, 57600, 115200, 128000, 256000, 921600 ];\n\tdatabitsType = [7, 8];\n\tstopbitsType = [1, 1.5, 2];\n\tparityType = ['None', 'Odd', 'Even'];\n\tmethodType = ['GET'];//, 'POST'];\n\tparserType = ['JSON'];//, 'CSV'];\n\thostInterfaces = [];\n\tresult = '';\n\tprivate subscriptionDeviceProperty: Subscription;\n\tprivate subscriptionHostInterfaces: Subscription;\n\tprivate subscriptionDeviceWebApiRequest: Subscription;\n\n    private projectService: ProjectService;\n\n\tconstructor(\n\t\tprivate hmiService: HmiService,\n        private translateService: TranslateService,\n        private appService: AppService,\n\t\tpublic dialogRef: MatDialogRef<DevicePropertyComponent>,\n\t\t@Inject(MAT_DIALOG_DATA) public data: any) { \n            this.projectService = data.projectService;\n        }\n\n\tngOnInit() {\n\t\tthis.isToRemove = this.data.remove;\n\t\tthis.isFuxaServer = (this.data.device.type && this.data.device.type === DeviceType.FuxaServer) ? true : false;\n\t\tif (this.appService.isClientApp || this.appService.isDemoApp) {\n\t\t\tthis.isWithPolling = false;\n\t\t}\n\t\tfor (let key in DeviceType) {\n\t\t\tif (!this.isFuxaServer && key !== DeviceType.FuxaServer) {\n\t\t\t\tfor (let idx = 0; idx < this.data.availableType.length; idx++) {\n\t\t\t\t\tif (key.startsWith(this.data.availableType[idx])) {\n\t\t\t\t\t\tthis.deviceType[key] = DeviceType[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// set default is only one type\n\t\tif (this.data.availableType.length === 1) {\n\t\t\tthis.data.device.type = this.data.availableType[0];\n\t\t}\n\n\t\tthis.subscriptionDeviceProperty = this.hmiService.onDeviceProperty.subscribe(res => {\n\t\t\tif (res.type === DeviceType.OPCUA) {\n\t\t\t\tthis.securityMode = [];\n\t\t\t\tif (res.result) {\n\t\t\t\t\tlet secPol = SecurityPolicy;\n\t\t\t\t\tfor (let idx = 0; idx < res.result.length; idx++) {\n\t\t\t\t\t\tlet sec = res.result[idx];\n\t\t\t\t\t\tlet mode = this.securityModeToString(sec.securityMode);\n\t\t\t\t\t\tif (sec.securityPolicy.indexOf(secPol.None) !== -1) {\n\t\t\t\t\t\t\tthis.securityMode.push({value: sec, text: SecurityPolicy.None.toString() + ' - ' + mode});\n\t\t\t\t\t\t} else if (sec.securityPolicy.indexOf(secPol.Basic128Rsa15) !== -1) {\n\t\t\t\t\t\t\tthis.securityMode.push({value: sec, text: SecurityPolicy.Basic128Rsa15.toString() + ' - ' + mode});\n\t\t\t\t\t\t} else if (sec.securityPolicy.indexOf(secPol.Basic128) !== -1) {\n\t\t\t\t\t\t\tthis.securityMode.push({value: sec, text: SecurityPolicy.Basic128.toString() + ' - ' + mode});\n\t\t\t\t\t\t} else if (sec.securityPolicy.indexOf(secPol.Basic192Rsa15) !== -1) {\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tthis.securityMode.push({value: sec, text: SecurityPolicy.Basic192Rsa15.toString() + ' - ' + mode});\n\t\t\t\t\t\t} else if (sec.securityPolicy.indexOf(secPol.Basic192) !== -1) {\n\t\t\t\t\t\t\tthis.securityMode.push({value: sec, text: SecurityPolicy.Basic192.toString() + ' - ' + mode});\n\t\t\t\t\t\t} else if (sec.securityPolicy.indexOf(secPol.Basic256Rsa15) !== -1) {\n\t\t\t\t\t\t\tthis.securityMode.push({value: sec, text: SecurityPolicy.Basic256Rsa15.toString() + ' - ' + mode});\n\t\t\t\t\t\t} else if (sec.securityPolicy.indexOf(secPol.Basic256Sha256) !== -1) {\n\t\t\t\t\t\t\tthis.securityMode.push({value: sec, text: SecurityPolicy.Basic256Sha256.toString() + ' - ' + mode});\n\t\t\t\t\t\t} else if (sec.securityPolicy.indexOf(secPol.Basic256) !== -1) {\n\t\t\t\t\t\t\tthis.securityMode.push({value: sec, text: SecurityPolicy.Basic256.toString() + ' - ' + mode});\n\t\t\t\t\t\t} else if (sec.securityPolicy.indexOf(secPol.Aes128_Sha256_RsaOaep) !== -1) {\n\t\t\t\t\t\t\tthis.securityMode.push({value: sec, text: SecurityPolicy.Aes128_Sha256_RsaOaep.toString() + ' - ' + mode});\n\t\t\t\t\t\t} else if (sec.securityPolicy.indexOf(secPol.Aes256_Sha256_RsaPss) !== -1) {\n\t\t\t\t\t\t\tthis.securityMode.push({value: sec, text: SecurityPolicy.Aes256_Sha256_RsaPss.toString() + ' - ' + mode});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this.isSecurityMode(sec)) {\n\t\t\t\t\t\t\tthis.securityRadio = sec;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.propertyError = '';\n\t\t\t\t} else if (res.error) {\n\t\t\t\t\tthis.propertyError = res.error;\n\t\t\t\t}\n\t\t\t} else if (res.type === DeviceType.BACnet) {\n\t\t\t}\n\t\t\t \n\t\t\tthis.propertyLoading = false;\n\t\t});\t\t\n\t\t// check security\n\t\tif (this.data.device.id && (this.data.device.type === DeviceType.OPCUA || this.data.device.type === DeviceType.MQTTclient)) {\n\t\t\tthis.projectService.getDeviceSecurity(this.data.device.id).subscribe(result => {\n\t\t\t\tif (result) {\n\t\t\t\t\tthis.setSecurity(result.value);\n\t\t\t\t}\n\t\t\t}, err => {\n\t\t\t\tconsole.error('get Device Security err: ' + err);\n\t\t\t});\n\t\t}\n\n        if (this.data.device.property) {\n            if (!this.data.device.property.baudrate) {\n                this.data.device.property.baudrate = 9600;\n            }\n            if (!this.data.device.property.databits) {\n                this.data.device.property.databits = 8;\n            }\n            if (!this.data.device.property.stopbits) {\n                this.data.device.property.stopbits = 1;\n            }\n            if (!this.data.device.property.parity) {\n                this.data.device.property.parity = 'None';\n            }\n        }\n\t\tthis.subscriptionHostInterfaces = this.hmiService.onHostInterfaces.subscribe(res => {\n\t\t\tif (res.result) {\n\t\t\t\tthis.hostInterfaces = res;\n\t\t\t}\n\t\t});\n\t\tthis.subscriptionDeviceWebApiRequest = this.hmiService.onDeviceWebApiRequest.subscribe(res => {\n\t\t\tif (res.result) {\n\t\t\t\tthis.result = JSON.stringify(res.result);\n\t\t\t}\n\t\t\tthis.propertyLoading = false;\n\t\t});\n\n\t\tthis.onDeviceTypeChanged();\n\t\t// this.hmiService.askHostInterface();\n\t}\n\n\tngOnDestroy() {\n\t\ttry {\n\t\t\tif (this.subscriptionDeviceProperty) {\n\t\t\t\tthis.subscriptionDeviceProperty.unsubscribe();\n\t\t\t}\n\t\t\tif (this.subscriptionHostInterfaces) {\n\t\t\t\tthis.subscriptionHostInterfaces.unsubscribe();\n\t\t\t}\n\t\t\tif (this.subscriptionDeviceWebApiRequest) {\n\t\t\t\tthis.subscriptionDeviceWebApiRequest.unsubscribe();\n\t\t\t}\n\t\t} catch (e) {\n\t\t}\n\t}\n\n\tonNoClick(): void {\n\t\tthis.dialogRef.close();\n\t}\n\n\tonOkClick(): void {\n\t\tthis.data.security = this.getSecurity();\n\t}\n\n\tonCheckOpcUaServer() {\n\t\tthis.propertyLoading = true;\n        this.propertyError = '';\n\t\tthis.hmiService.askDeviceProperty(this.data.device.property.address, this.data.device.type);\n\t}\n\n\tonCheckWebApi() {\n\t\tthis.propertyLoading = true;\n\t\tthis.result = '';\n\t\tthis.hmiService.askWebApiProperty(this.data.device.property);\n\t}\n\n\t// onCheckBACnetDevice() {\n\t// \tthis.propertyLoading = true;\n\t// \tthis.hmiService.askDeviceProperty(this.data.device.property.address, this.data.device.type);\n\t// }\n\n\tonPropertyExpand(status) {\n\t\tthis.propertyExpanded = status;\n\t}\n\n\tonAddressChanged() {\n\t\tthis.propertyLoading = false;\n\t}\n\n\tonDeviceTypeChanged() {\n\t\tif (this.data.device.type === DeviceType.WebAPI) {\n\t\t\tthis.pollingType = this.pollingWebApiType;\n\t\t} else {\n\t\t\tthis.pollingType = this.pollingPlcType;\n\t\t}\n\t}\n\n\tisValid(device): boolean {\n        if (!device.name || !device.type) {\n            return false;\n        }\n\t\treturn (this.data.exist.find((n) => n === device.name)) ? false : true;\n\t}\n\n\tisSecurityMode(sec) {\n\t\tif (JSON.stringify(this.mode) === JSON.stringify(sec)) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetSecurity(): any {\n\t\tif (!this.propertyExpanded || (this.data.device.type !== DeviceType.OPCUA && this.data.device.type !== DeviceType.MQTTclient)) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\tif (this.data.device.type === DeviceType.OPCUA) {\n\t\t\t\tif (this.securityRadio || this.security.username || this.security.password) {\n\t\t\t\t\tlet result = { mode: this.securityRadio, uid: this.security.username, pwd: this.security.password };\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t} else if (this.data.device.type === DeviceType.MQTTclient) {\n\t\t\t\tif (this.security.clientId || this.security.username || this.security.password) {\n\t\t\t\t\tlet result = { clientId: this.security.clientId, uid: this.security.username, pwd: this.security.password };\n\t\t\t\t\treturn result;\n\t\t\t\t}\n            }\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tsetSecurity(security: string) {\n\t\tif (security && security !== 'null') {\n\t\t\tlet value = JSON.parse(security);\n\t\t\tthis.mode = value.mode;\n\t\t\tthis.security.username = value.uid;\n\t\t\tthis.security.password = value.pwd;\n\t\t\tthis.security.clientId = value.clientId;\n\t\t\tthis.security.grant_type = value.gt;\n\t\t\tif (this.panelProperty) {\n\t\t\t\tthis.panelProperty.open();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate securityModeToString(mode): string {\n\t\tlet secMode = MessageSecurityMode;\n\t\tlet result = '';\n\t\tif (mode === secMode.NONE) {\n\t\t\tthis.translateService.get('device.security-none').subscribe((txt: string) => { result = txt });\n\t\t} else if (mode === secMode.SIGN) {\n\t\t\tthis.translateService.get('device.security-sign').subscribe((txt: string) => { result = txt });\n\t\t} else if (mode === secMode.SIGNANDENCRYPT) {\n\t\t\tthis.translateService.get('device.security-signandencrypt').subscribe((txt: string) => { result = txt });\n\t\t} \n\t\treturn result;\n\t}\n}\n","module.exports = \"<div style=\\\"min-width:930px; position: relative;\\\">\\n    <h1 mat-dialog-title style=\\\"display:inline-block;cursor: move;\\\" mat-dialog-draggable>{{'device-tag-dialog-title' | translate}}</h1>\\n    <mat-icon (click)=\\\"onNoClick()\\\" style=\\\"float:right;margin-right:-10px;margin-top:-10px;cursor:pointer;color:gray;\\\">\\n        clear\\n    </mat-icon>\\n    <mat-table #table [dataSource]=\\\"dataSource\\\" matSort style=\\\"height:620px\\\">\\n        <!-- Checkbox Column -->\\n        <ng-container matColumnDef=\\\"toogle\\\">\\n            <mat-header-cell *matHeaderCellDef style=\\\"padding-left: 5px;padding-right: 10px;\\\">\\n                <button mat-icon-button (click)=\\\"onClearSelection()\\\" class=\\\"remove\\\">\\n                    <mat-icon>clear</mat-icon>\\n                </button>\\n            </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\" style=\\\"padding-left: 15px;\\\">\\n                <mat-checkbox (click)=\\\"$event.stopPropagation()\\\" (change)=\\\"onToogle(element)\\\" [(ngModel)]=\\\"element.checked\\\">\\n                </mat-checkbox>\\n            </mat-cell>\\n        </ng-container>        \\n        <!-- Name Column -->\\n        <ng-container matColumnDef=\\\"name\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"my-header-filter\\\"> \\n                {{'device.list-name' | translate}}\\n                <input (click)=\\\"$event.stopPropagation()\\\" [formControl]=\\\"nameFilter\\\" style=\\\"width: 200px\\\" class=\\\"my-header-filter-input\\\" type=\\\"text\\\">\\n            </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </mat-cell>\\n        </ng-container>\\n        <!-- Address Column -->\\n        <ng-container matColumnDef=\\\"address\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"my-header-filter\\\"> \\n                {{'device.list-address' | translate}} \\n                <input (click)=\\\"$event.stopPropagation()\\\" [formControl]=\\\"addressFilter\\\" style=\\\"width: 360px\\\" class=\\\"my-header-filter-input\\\" type=\\\"text\\\">\\n            </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.address}} </mat-cell>\\n        </ng-container>\\n        <!-- Device Column -->\\n        <ng-container matColumnDef=\\\"device\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"my-header-filter\\\"> \\n                {{'device.list-device' | translate}} \\n                <input (click)=\\\"$event.stopPropagation()\\\" [formControl]=\\\"deviceFilter\\\" style=\\\"width: 200px\\\" class=\\\"my-header-filter-input\\\" type=\\\"text\\\">\\n            </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.device}} </mat-cell>\\n        </ng-container>\\n        <!-- Select Column -->\\n        <ng-container matColumnDef=\\\"select\\\">\\n            <mat-header-cell *matHeaderCellDef style=\\\"padding-right: 0px;\\\">\\n            </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\" style=\\\"padding-right: 0px;\\\">\\n                <button mat-icon-button (click)=\\\"onSelect(element)\\\">\\n                    <mat-icon>check</mat-icon>\\n                </button>\\n            </mat-cell>\\n        </ng-container>\\n\\n        <mat-header-row *matHeaderRowDef=\\\"defColumns\\\" style=\\\"min-height: 30px;\\\"></mat-header-row>\\n        <mat-row *matRowDef=\\\"let row; columns: defColumns;\\\"></mat-row>\\n    </mat-table>\\n    <mat-paginator [pageSizeOptions]=\\\"[25, 100]\\\" style=\\\"float: left;\\\"></mat-paginator>\\n\\n    <div mat-dialog-actions class=\\\"dialog-action\\\" style=\\\"padding-top: 30px;\\\">\\n        <button mat-raised-button (click)=\\\"onNoClick()\\\" cdkFocusInitial>{{'dlg.cancel' | translate}}</button>\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onOkClick()\\\">{{'dlg.ok' | translate}}</button>\\n    </div>\\n</div>\"","module.exports = \".header-panel {\\n    /* z-index: 9999 !important; */\\n    top: 0px;\\n    left: 0px;\\n    background-color: var(--headerBackground);\\n    color: var(--headerColor);\\n    height: 36px;\\n    width: 100%;\\n    text-align: center;\\n    line-height: 36px;\\n    border-bottom: 1px solid var(--headerBorder);\\n}\\n\\n.device-btn {\\n    height: 34px;\\n    width: 34px;\\n    min-width: unset !important;\\n    padding:unset !important;\\n    line-height: 34px;\\n    margin-left: 5px;\\n    margin-right: 5px;\\n    float: right;\\n}\\n\\n.device-btn mat-icon {\\n    font-size: 24px;\\n    height: unset;\\n    width: unset;\\n}\\n\\n.work-panel {\\n    position: absolute;\\n    top: 37px;\\n    left: 0px;\\n    right: 0px;\\n    bottom: 0px;\\n    overflow: auto;\\n    background-color: var(--workPanelBackground);\\n}\\n\\n.mat-table {\\n    overflow: auto;\\n    /* min-width: 1500px; */\\n    height: 100%;\\n}\\n\\n.mat-header-cell.mat-sort-header-sorted {\\n    /* color: black; */\\n}\\n\\n.mat-row {\\n    min-height: 34px;\\n    height: 34px;\\n    border-bottom-color: rgba(0,0,0,0.06);\\n}\\n\\n.mat-cell {\\n    font-size: 13px;\\n}\\n\\n.mat-cell /deep/ .mat-checkbox-inner-container {\\n    height: 16px;\\n    width: 16px;\\n    margin-left: 2px;\\n}\\n\\n.mat-header-row {\\n    top: 0;\\n    position: sticky;\\n    z-index: 1;\\n    /* background-color: rgba(0,0,0,0.7); */\\n    /* background-color: rgb(30, 30, 30); */\\n    /* color: white; */\\n}\\n\\n.mat-header-cell {\\n    /* color: white; */\\n    font-size: 13px;\\n}\\n\\n.mat-column-toogle {\\n    overflow: visible;\\n    flex: 0 0 40px;\\n}\\n\\n.mat-column-name {\\n    flex: 0 0 220px;\\n}\\n\\n.mat-column-address {\\n    flex: 0 0 380px;\\n}\\n\\n.mat-column-device {\\n    flex: 0 0 220px;\\n}\\n\\n.mat-column-select {\\n    flex: 0 0 40px;\\n}\\n\\n.my-header-filter /deep/ .mat-sort-header-button {\\n    display: block;\\n    text-align: left;\\n    margin-top: 5px;\\n}\\n\\n.my-header-filter /deep/ .mat-sort-header-arrow {\\n    /* color: white; */\\n    top: -12px;\\n    right: 20px;\\n}\\n\\n.my-header-filter-input {\\n    display: block; \\n    margin-top: 4px;\\n    margin-bottom: 6px;\\n    /* color: white; */\\n    padding: 3px 1px 3px 2px;\\n    border-radius: 2px;\\n    border: 1px solid var(--formInputBackground);\\n    background-color: var(--formInputBackground);\\n    color: var(--formInputColor);\\n}\\n\\n.my-header-filter-input:focus {\\n    padding: 3px 1px 3px 2px;\\n    border: 1px solid var(--formInputBorderFocus);\\n    background-color: var(--formInputBackgroundFocus);\\n}\"","module.exports = \"<div style=\\\"width: 100%;height: 100% !important;position: absolute;\\\">\\n    <div class=\\\"header-panel\\\">\\n        {{'device.list-title' | translate}}\\n    </div>\\n    <diV class=\\\"work-panel\\\">\\n        <app-device-list [hidden]=\\\"showMode === 'map'\\\" #devicelist (goto)=\\\"gotoMap()\\\"></app-device-list>\\n        <app-device-map [hidden]=\\\"showMode === 'tags'\\\" #devicemap (goto)=\\\"gotoList($event)\\\"></app-device-map>\\n    </diV>\\n</div>\\n\\n<button mat-fab color=\\\"primary\\\" (click)=\\\"addItem()\\\" class=\\\"fab-add\\\">\\n    <mat-icon class=\\\"\\\">add</mat-icon>\\n</button>\"","import { Component, OnInit, OnDestroy, ViewChild, AfterViewInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material';\nimport { Subscription } from \"rxjs\";\nimport { MatTable, MatTableDataSource, MatPaginator, MatSort, MatMenuTrigger } from '@angular/material';\nimport { FormControl } from '@angular/forms';\n\nimport { DeviceListComponent } from './device-list/device-list.component';\nimport { DeviceMapComponent } from './device-map/device-map.component';\nimport { Device, Tag } from './../_models/device';\nimport { ProjectService, SaveMode } from '../_services/project.service';\nimport { HmiService } from '../_services/hmi.service';\n\n@Component({\n\tselector: 'app-device',\n\ttemplateUrl: './device.component.html',\n\tstyleUrls: ['./device.component.css']\n})\nexport class DeviceComponent implements OnInit, OnDestroy, AfterViewInit {\n\n\t@ViewChild('devicelist') deviceList: DeviceListComponent;\n\t@ViewChild('devicemap') deviceMap: DeviceMapComponent;\n\n\tprivate subscriptionLoad: Subscription;\n\tprivate subscriptionDeviceChange: Subscription;\n\tprivate subscriptionVariableChange: Subscription;\n\tprivate subscriptionSave: Subscription;\n\tprivate askStatusTimer;\n\tshowMode: string = 'map';\n\n\tconstructor(private projectService: ProjectService,\n\t\tprivate hmiService: HmiService) { }\n\n\tngOnInit() {\n\t\tthis.subscriptionLoad = this.projectService.onLoadHmi.subscribe(res => {\n\t\t\tthis.deviceMap.loadCurrentProject();\n\t\t\t// this.deviceList.loadCurrentProject();\n\t\t});\n\t\tthis.subscriptionDeviceChange = this.hmiService.onDeviceChanged.subscribe(event => {\n\t\t\tthis.deviceMap.setDeviceStatus(event);\n\t\t});\n\t\tthis.subscriptionVariableChange = this.hmiService.onVariableChanged.subscribe(event => {\n\t\t\tthis.deviceList.updateDeviceValue();\n\t\t});\n\t\tthis.subscriptionSave = this.projectService.onSaveCurrent.subscribe((mode: SaveMode) => {\n\t\t\tif (mode === SaveMode.SaveAs) {\n\t\t\t\tthis.projectService.saveAs();\n\t\t\t} else if (mode === SaveMode.Save) {\n\t\t\t\tthis.projectService.save();\n\t\t\t}\n\t\t});\n\t\tthis.askStatusTimer = setInterval(() => {\n\t\t\tthis.hmiService.askDeviceStatus();\n\t\t}, 10000);\n\t\tthis.hmiService.askDeviceStatus();\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.showMode = 'map';\n\t}\n\n\tngOnDestroy() {\n\t\t// this.checkToSave();\n\t\ttry {\n\t\t\tif (this.subscriptionLoad) {\n\t\t\t\tthis.subscriptionLoad.unsubscribe();\n\t\t\t}\n\t\t\tif (this.subscriptionDeviceChange) {\n\t\t\t\tthis.subscriptionDeviceChange.unsubscribe();\n\t\t\t}\n\t\t\tif (this.subscriptionVariableChange) {\n\t\t\t\tthis.subscriptionVariableChange.unsubscribe();\n\t\t\t}\n\t\t\tif (this.subscriptionSave) {\n\t\t\t\tthis.subscriptionSave.unsubscribe();\n\t\t\t}\n\t\t} catch (e) {\n\t\t}\n\t\ttry {\n\t\t\tclearInterval(this.askStatusTimer);\n\t\t\tthis.askStatusTimer = null;\n\t\t} catch { }\n\t}\n\n\tshow(mode: string) {\n\t\t// this.checkToSave();\n\t\tthis.showMode = mode;\n\t\tif (this.showMode === 'tags') {\n\t\t\tthis.deviceList.updateDeviceValue();\n\t\t\ttry {\n\t\t\t\tif (Object.values(this.deviceMap.devicesValue()).length > 0) {\n\t\t\t\t\tthis.deviceList.setSelectedDevice(this.deviceMap.devicesValue()[0]);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t}\n\t\t}\n\t}\n\n\tgotoMap() {\n\t\tthis.show('map');\n\t}\n\n\tgotoList(device: Device) {\n\t\tthis.show('tags');\n\t\tthis.deviceList.setSelectedDevice(device);\n\t}\n\n\taddItem() {\n\t\tif (this.showMode === 'tags') {\n\t\t\tthis.deviceList.onAddTag();\n\t\t} else if (this.showMode === 'map') {\n\t\t\tthis.deviceMap.addDevice();\n\t\t}\n\t}\n}\n\n@Component({\n\tselector: 'device-tag-dialog',\n\ttemplateUrl: './device-tag.dialog.html',\n\tstyleUrls: ['./device.component.css']\n})\nexport class DeviceTagDialog implements OnInit {\n\n\t@ViewChild(MatTable) table: MatTable<any>;\n\t@ViewChild(MatSort) sort: MatSort;\n\t@ViewChild(MatPaginator) paginator: MatPaginator;\n\n\tdataSource = new MatTableDataSource([]);\n\tnameFilter = new FormControl();\n\taddressFilter = new FormControl();\n\tdeviceFilter = new FormControl();\n\ttags: TagElement[] = [];\n\n\tfilteredValues = {\n\t\tname: '', address: '', device: ''\n\t};\n\n\treadonly defColumns = ['toogle', 'name', 'address', 'device', 'select'];\n\n\tconstructor(public dialogRef: MatDialogRef<DeviceTagDialog>,\n\t\t@Inject(MAT_DIALOG_DATA) public data: any) {\n\t\tif (this.data.devices) {\n\t\t\tthis.data.devices.forEach((device: Device) => {\n\t\t\t\tif (device.tags) {\n\t\t\t\t\tObject.values(device.tags).forEach((t: Tag) => this.tags.push(<TagElement>{ id: t.id, name: t.name, address: t.address, \n\t\t\t\t\t\tdevice: device.name, checked: (t.id === this.data.variableId), error: null }));\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t\tthis.dataSource = new MatTableDataSource(this.tags);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.nameFilter.valueChanges.subscribe((nameFilterValue) => {\n\t\t\tthis.filteredValues['name'] = nameFilterValue;\n\t\t\tthis.dataSource.filter = JSON.stringify(this.filteredValues);\n\t\t});\n\n\t\tthis.addressFilter.valueChanges.subscribe((addressFilterValue) => {\n\t\t\tthis.filteredValues['address'] = addressFilterValue;\n\t\t\tthis.dataSource.filter = JSON.stringify(this.filteredValues);\n\t\t});\n\n\t\tthis.deviceFilter.valueChanges.subscribe((deviceFilterValue) => {\n\t\t\tthis.filteredValues['device'] = deviceFilterValue;\n\t\t\tthis.dataSource.filter = JSON.stringify(this.filteredValues);\n\t\t});\n\t\tthis.dataSource.filterPredicate = this.customFilterPredicate();\n\t}\n\n\tcustomFilterPredicate() {\n\t\tconst myFilterPredicate = (data: TagElement, filter: string): boolean => {\n\t\t\tlet searchString = JSON.parse(filter);\n\t\t\treturn (!data.name || data.name.toString().trim().toLowerCase().indexOf(searchString.name.toLowerCase()) !== -1) &&\n\t\t\t\t(!data.address || data.address.toString().trim().toLowerCase().indexOf(searchString.address.toLowerCase()) !== -1) &&\n\t\t\t\tdata.device.toString().trim().toLowerCase().indexOf(searchString.device.toLowerCase()) !== -1;\n\t\t}\n\t\treturn myFilterPredicate;\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.dataSource.paginator = this.paginator;\n\t\tthis.dataSource.sort = this.sort;\n\t\t// this.dataSource.data = this.data.tags;\n\t}\n\n\tonToogle(element: TagElement) {\n\t\tif (element.checked) {\n\t\t\tthis.dataSource.data.forEach(e => {\n\t\t\t\tif (e.id !== element.id) {\n\t\t\t\t\te.checked = false;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tonClearSelection() {\n\t\tthis.dataSource.data.forEach(e => {\n\t\t\te.checked = false;\n\t\t});\n\t}\n\n\tonNoClick(): void {\n\t\tthis.dialogRef.close();\n\t}\n\n\tonOkClick(): void {\n        this.data.variableId = null;\n\t\tthis.dataSource.data.forEach(e => {\n\t\t\tif (e.checked) {\n\t\t\t\tthis.data.variableId = e.id;\n\t\t\t}\n\t\t});\n\t\tthis.dialogRef.close(this.data);\n\t}\n\n\tonSelect(element: TagElement) {\n\t\tthis.data.variableId = element.id;\n\t\tthis.dialogRef.close(this.data);\n\t}\n}\n\nexport interface TagElement {\n\tid: string;\n\tname: string;\n\taddress: string;\n\tdevice: string;\n\tchecked: boolean;\n\terror: string;\n}","module.exports = \"\"","module.exports = \"<div style=\\\"width: 100%;position: relative;\\\">\\n    <div [ngSwitch]=\\\"dialogType\\\">\\n        <div *ngSwitchCase=\\\"TypeOfDialog.Standard\\\">\\n            <h1 mat-dialog-title style=\\\"display:inline-block; cursor:move; padding-top: 15px\\\" mat-dialog-draggable>\\n                {{'device.tag-property-title' | translate}}\\n            </h1>\\n            <mat-icon (click)=\\\"onNoClick()\\\" style=\\\"float:right;cursor:pointer;color:gray;position: relative; top: 10px; right: 0px\\\">clear</mat-icon>\\n            <div style=\\\"max-height: 540px; overflow-y: auto; overflow-x: hidden;\\\">\\n                <div style=\\\"display: block;\\\">\\n                    <div class=\\\"my-form-field\\\" style=\\\"display: block;margin-bottom: 10px;\\\">\\n                        <span>{{'device.tag-property-device' | translate}}</span>\\n                        <mat-select [(value)]=\\\"data.device.name\\\" style=\\\"width: 350px\\\" [disabled]=\\\"true\\\">\\n                            <mat-option *ngFor=\\\"let device of devicesValue()\\\" [value]=\\\"device.name\\\">\\n                                {{ device.name }}\\n                            </mat-option>\\n                        </mat-select>\\n                    </div>\\n                    <div class=\\\"my-form-field\\\" style=\\\"display: block;margin-bottom: 10px;\\\">\\n                        <span>{{'device.tag-property-name' | translate}}</span>\\n                        <input [(ngModel)]=\\\"data.tag.name\\\" style=\\\"width: 350px\\\" type=\\\"text\\\" (input)=\\\"onCheckValue($event)\\\">\\n                    </div>\\n                    <div *ngIf=\\\"isSiemensS7()\\\">\\n                        <div class=\\\"my-form-field\\\" style=\\\"display: block;margin-bottom: 10px;\\\">\\n                            <span>{{'device.tag-property-type' | translate}}</span>\\n                            <mat-select [(value)]=\\\"data.tag.type\\\" style=\\\"width: 350px\\\">\\n                                <mat-option *ngFor=\\\"let type of tagType | enumToArray\\\" [value]=\\\"type.key\\\">\\n                                    {{ type.value }}\\n                                </mat-option>\\n                            </mat-select>\\n                        </div>\\n                        <div class=\\\"my-form-field\\\" style=\\\"display: block;margin-bottom: 10px;\\\">\\n                            <span>{{'device.tag-property-address' | translate}}</span>\\n                            <input [(ngModel)]=\\\"data.tag.address\\\" style=\\\"width: 350px\\\" type=\\\"text\\\">\\n                        </div>\\n                        <!-- <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;padding-right: 10px;\\\">\\n                            <span>{{'device.tag-property-min' | translate}}</span>\\n                            <input numberOnly [(ngModel)]=\\\"data.tag.min\\\" style=\\\"width: 80px\\\" type=\\\"text\\\">\\n                        </div>\\n                        <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;padding-right: 10px;\\\">\\n                            <span>{{'device.tag-property-max' | translate}}</span>\\n                            <input numberOnly [(ngModel)]=\\\"data.tag.max\\\" style=\\\"width: 80px\\\" type=\\\"text\\\">\\n                        </div> -->\\n                    </div>\\n                    <div *ngIf=\\\"isModbus()\\\">\\n                        <div class=\\\"my-form-field\\\" style=\\\"display: block;margin-bottom: 10px;\\\">\\n                            <span>{{'device.tag-property-register' | translate}}</span>\\n                            <mat-select [(value)]=\\\"data.tag.memaddress\\\" style=\\\"width: 350px\\\" #memaddress (selectionChange)=\\\"checkMemAddress(data.tag.memaddress)\\\">\\n                                <mat-option *ngFor=\\\"let type of memAddress | enumToArray\\\" [value]=\\\"type.value\\\">\\n                                    {{ type.key }}\\n                                </mat-option>\\n                            </mat-select>\\n                        </div>                \\n                        <div class=\\\"my-form-field\\\" style=\\\"display: block;margin-bottom: 10px;\\\">\\n                            <span>{{'device.tag-property-type' | translate}}</span>\\n                            <mat-select [(value)]=\\\"data.tag.type\\\" style=\\\"width: 350px\\\" [disabled]=\\\"!memaddress.value || memaddress.value == '000000' || memaddress.value == '100000'\\\">\\n                                <mat-option *ngFor=\\\"let type of tagType | enumToArray\\\" [value]=\\\"type.key\\\">\\n                                    {{ type.value }}\\n                                </mat-option>\\n                            </mat-select>\\n                        </div>\\n                        <div class=\\\"my-form-field\\\" style=\\\"display: block;margin-bottom: 10px;\\\">\\n                            <span>{{'device.tag-property-address-offset' | translate}}</span>\\n                            <input numberOnly [(ngModel)]=\\\"data.tag.address\\\" style=\\\"width: 350px\\\" type=\\\"text\\\" [disabled]=\\\"!memaddress.value\\\">\\n                        </div>\\n                        <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;padding-right: 10px;\\\">\\n                            <span>{{'device.tag-property-divisor' | translate}}</span>\\n                            <input numberOnly [(ngModel)]=\\\"data.tag.divisor\\\" style=\\\"width: 80px\\\" type=\\\"text\\\">\\n                        </div>                        \\n                        <!-- <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;padding-right: 10px;\\\">\\n                            <span>{{'device.tag-property-min' | translate}}</span>\\n                            <input numberOnly [(ngModel)]=\\\"data.tag.min\\\" style=\\\"width: 80px\\\" type=\\\"text\\\">\\n                        </div>\\n                        <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;padding-right: 10px;\\\">\\n                            <span>{{'device.tag-property-max' | translate}}</span>\\n                            <input numberOnly [(ngModel)]=\\\"data.tag.max\\\" style=\\\"width: 80px\\\" type=\\\"text\\\">\\n                        </div> -->\\n                    </div>\\n                    <div class=\\\"error\\\" *ngIf=\\\"error\\\">\\n                        <span>{{error}}</span>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div *ngSwitchCase=\\\"TypeOfDialog.Simple\\\">\\n            <h1 mat-dialog-title style=\\\"display:inline-block; cursor:move; padding-top: 15px\\\" mat-dialog-draggable>\\n                {{'device.tag-property-title' | translate}}\\n            </h1>\\n            <mat-icon (click)=\\\"onNoClick()\\\" style=\\\"float:right;cursor:pointer;color:gray;position: relative; top: 10px; right: 0px\\\">clear</mat-icon>\\n            <div style=\\\"max-height: 540px; overflow: hidden;\\\">\\n                <div style=\\\"display: block;\\\">\\n                    <div class=\\\"my-form-field\\\" style=\\\"display: block;margin-bottom: 10px;\\\">\\n                        <span>{{'device.tag-property-device' | translate}}</span>\\n                        <mat-select [(value)]=\\\"data.device.name\\\" style=\\\"width: 550px\\\" [disabled]=\\\"true\\\">\\n                            <mat-option *ngFor=\\\"let device of devicesValue()\\\" [value]=\\\"device.name\\\">\\n                                {{ device.name }}\\n                            </mat-option>\\n                        </mat-select>\\n                    </div>\\n                    <div class=\\\"my-form-field\\\" style=\\\"display: block;margin-bottom: 10px;\\\">\\n                        <span>{{'device.tag-property-obj-name' | translate}}</span>\\n                        <input [(ngModel)]=\\\"data.tag.name\\\" style=\\\"width: 550px\\\" type=\\\"text\\\" (input)=\\\"onCheckValue($event)\\\">\\n                    </div>\\n                    <div class=\\\"my-form-field\\\" style=\\\"display: block;margin-bottom: 10px;\\\" *ngIf=\\\"!isInternal()\\\">\\n                        <span>{{'device.tag-property-path' | translate}}</span>\\n                        <input [(ngModel)]=\\\"data.tag.address\\\" autocomplete=\\\"off\\\" style=\\\"width: 550px\\\" type=\\\"text\\\" (input)=\\\"onCheckValue($event)\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"error\\\" *ngIf=\\\"error\\\" style=\\\"display: block; color: red;\\\">\\n                    <span>{{error}}</span>\\n                </div>\\n            </div>\\n        </div>\\n        <div *ngSwitchCase=\\\"TypeOfDialog.Tree\\\">\\n            <h1 mat-dialog-title style=\\\"display:inline-block; cursor:move; padding-top: 15px\\\" mat-dialog-draggable>\\n                {{'device.browsetag-property-title' | translate}}\\n            </h1>\\n            <mat-icon (click)=\\\"onNoClick()\\\" style=\\\"float:right;cursor:pointer;color:gray;position: relative; top: 10px; right: 0px\\\">clear</mat-icon>\\n            <div style=\\\"overflow-y: auto; overflow-x: hidden;\\\">\\n                <ngx-treetable #treetable [config]=\\\"config\\\" (expand)=\\\"queryNext($event)\\\"></ngx-treetable>\\n            </div>\\n        </div>\\n    </div>\\n    <div mat-dialog-actions class=\\\"dialog-action\\\">\\n        <button mat-raised-button (click)=\\\"onNoClick()\\\">{{'dlg.cancel' | translate}}</button>\\n        <button mat-raised-button [disabled]=\\\"!isValidate()\\\" color=\\\"primary\\\" (click)=\\\"onOkClick()\\\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\\n    </div>\\n</div>\"","import { Component, OnInit, OnDestroy, Inject, ViewChild } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Subscription } from \"rxjs\";\n\nimport { Device, TagType, Tag, DeviceType, ModbusTagType, BACnetObjectType, TAG_PREFIX } from './../../_models/device';\nimport { TreetableComponent, Node, NodeType } from '../../gui-helpers/treetable/treetable.component';\nimport { HmiService } from '../../_services/hmi.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Utils } from '../../_helpers/utils';\n\n@Component({\n    selector: 'app-tag-property',\n    templateUrl: './tag-property.component.html',\n    styleUrls: ['./tag-property.component.css']\n})\nexport class TagPropertyComponent implements OnInit, OnDestroy {\n\n    tagType: any;\n    error: string;\n    existing: string[] = [];\n    TypeOfDialog = EditTagDialogType;\n\tdialogType = EditTagDialogType.Standard;\n    config = { width: '100%', height: '600px', type: '' };\n    memAddress = {'Coil Status (Read/Write 000001-065536)': '000000', 'Digital Inputs (Read 100001-165536)': '100000', 'Input Registers (Read  300001-365536)': '300000', 'Holding Registers (Read/Write  400001-465535)': '400000'};\n\n    private subscriptionBrowse: Subscription;\n    private subscriptionNodeAttribute: Subscription;\n\tprivate subscriptionDeviceWebApiRequest: Subscription;\n\n    @ViewChild(TreetableComponent) treetable: TreetableComponent;\n\n    constructor(\n        private hmiService: HmiService,\n        private translateService: TranslateService,\n        public dialogRef: MatDialogRef<TagPropertyComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: any) {\n\n        this.tagType = TagType;\n        if (this.isOpcua() || this.isBACnet() || this.isWebApi()) {\n            this.dialogType = EditTagDialogType.Tree;\n            this.config.height = '640px';\n            this.config.width = '1000px';\n            this.config.type = (this.isWebApi()) ? 'todefine' : '';\n        } else if (this.isExternal()) {\n            this.dialogType = EditTagDialogType.Simple;\n        } else if (this.isInternal()) {\n            this.dialogType = EditTagDialogType.Simple;\n        } else {\n            if (this.isModbus()) {\n                this.tagType = ModbusTagType;\n            }\n            this.config.height = '0px';\n            Object.keys(this.data.device.tags).forEach((key) => {\n                let tag = this.data.device.tags[key];\n                if (tag.id) {\n                    if (tag.id !== this.data.tag.id) {\n                        this.existing.push(tag.name);\n                    }\n                } else if (tag.name !== this.data.tag.name) {\n                    this.existing.push(tag.name);\n                }\n            });\n        }\n    }\n\n    ngOnInit() {\n        if (this.dialogType === EditTagDialogType.Tree) {\n            if (this.isOpcua() || this.isBACnet()) {\n                this.subscriptionBrowse = this.hmiService.onDeviceBrowse.subscribe(values => {\n                    if (this.data.device.id === values.device) {\n                        if (values.error) {\n                            this.addError(values.node, values.error);\n                        } else {\n                            this.addNodes(values.node, values.result);\n                        }\n                    }\n                });\n                this.subscriptionNodeAttribute = this.hmiService.onDeviceNodeAttribute.subscribe(values => {\n                    if (this.data.device.id === values.device) {\n                        if (values.error) {\n                            //   this.addError(values.node, values.error);\n                        } else if (values.node) {\n                            if (values.node.attribute[14]) {    // datatype\n                                values.node.type = values.node.attribute[14];\n                            }\n                            this.treetable.setNodeProperty(values.node, this.attributeToString(values.node.attribute));\n                        }\n                    }\n                });\n            } else if (this.isWebApi()) {\n                this.hmiService.onDeviceWebApiRequest.subscribe(res => {\n                    if (res.result) {\n                        this.addTreeNodes(res.result);\n                        this.treetable.update(false);\n                    }\n                });\n        \t\tthis.hmiService.askWebApiProperty(this.data.device.property);\n            }\n            this.queryNext(null);\n        }\n    }\n\n    ngOnDestroy() {\n        // this.checkToSave();\n        try {\n            if (this.subscriptionBrowse) {\n                this.subscriptionBrowse.unsubscribe();\n            }\n            if (this.subscriptionNodeAttribute) {\n                this.subscriptionNodeAttribute.unsubscribe();\n            }\n            if (this.subscriptionDeviceWebApiRequest) {\n\t\t\t\tthis.subscriptionDeviceWebApiRequest.unsubscribe();\n\t\t\t}\n        } catch (e) {\n        }\n    }\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n\n    onOkClick(): void {\n        this.data.nodes = [];\n        if (this.isWebApi()) {\n            let result = this.getSelectedTreeNodes(Object.values(this.treetable.nodes), null);\n            result.forEach((n: Node) => {\n                if (n.checked && n.enabled) {\n                    this.data.nodes.push(n);\n                }\n            });\n            // this.data.nodes = result;\n        } else if (this.isModbus() || this.isSiemensS7()) {\n        } else if (this.isInternal()) {\n            let tags = <Tag[]>Object.values(this.data.device.tags);\n            this.error = '';\n            for (let i = 0; i < tags.length; i++) {\n                if (tags[i].id !== this.data.tag.id && tags[i].name === this.data.tag.name) {\n                    this.error = '';\n                    this.translateService.get('msg.device-tag-exist').subscribe((txt: string) => { this.error = txt });\n                    return;\n                }\n            }\n        } else if (this.isExternal()) {\n            let tags =  <Tag[]>Object.values(this.data.device.tags);\n            this.error = '';\n            for (let i = 0; i < tags.length; i++) {\n                if (tags[i].id !== this.data.tag.id && tags[i].address === this.data.tag.address) {\n                    this.error = '';\n                    this.translateService.get('msg.device-tag-exist').subscribe((txt: string) => { this.error = txt });                    \n                    return;\n                }\n            }\n        } else {\n            Object.keys(this.treetable.nodes).forEach((key) => {\n                let n: Node = this.treetable.nodes[key];\n                if (n.checked && n.enabled) {\n                    this.data.nodes.push(this.treetable.nodes[key]);\n                }\n            });\n        }\n        this.dialogRef.close(this.data);\n    }\n\n    onCheckValue(tag) {\n        if (this.existing.indexOf(tag.target.value) !== -1) {\n            this.error = '';\n            this.translateService.get('msg.device-tag-exist').subscribe((txt: string) => { this.error = txt });\n        } else {\n            this.error = '';\n        }\n    }\n\n    addNodes(parent: Node, nodes: any) {\n        if (nodes) {\n            let tempTags = Object.values(this.data.device.tags);\n            nodes.forEach((n) => {\n                let node = new Node(n.id, n.name);\n                node.class = n.class;\n                node.property = this.getProperty(n);\n                if (this.isBACnet()) {\n                    node.class = Node.strToType(n.class);\n                    node.type = n.type;\n                    var typetext = Object.values(BACnetObjectType)[n.type];\n                    if (typetext) {\n                        node.property = typetext;\n                    }\n                    // node.property = Object.keys(BACnetObjectType)[Object.values(BACnetObjectType).indexOf(n.type)] + '   ' + node.property;\n                    // Object.keys(AlarmAckMode)[Object.values(AlarmAckMode).indexOf(AlarmAckMode.float)]\n                }\n                let enabled = true;\n                if (node.class === NodeType.Variable) {\n                    const selected = tempTags.find((t: Tag) => t.address === n.id);\n                    if (selected) {\n                        enabled = false;\n                    }\n                }\n                this.treetable.addNode(node, parent, enabled);\n                if (node.class === NodeType.Variable && this.data.device.type !== DeviceType.BACnet) {\n                    this.hmiService.askNodeAttributes(this.data.device.id, n);\n                }\n            });\n            this.treetable.update();\n        }\n    }\n\n    addTreeNodes(nodes: any, id = '', parent: Node = null) {\n        let nodeId = id;\n        let nodeName = id;\n        if (parent && parent.id) {\n            nodeId = parent.id + ':' + nodeId;\n        }\n        let node = new Node(nodeId, nodeName);\n        node.parent = parent;\n        if (Array.isArray(nodes)) {\n            // nodeId = nodeId + '[]';\n            node.class = NodeType.Array;\n            node.setToDefine();\n            node.expanded = true;\n            this.treetable.addNode(node, parent, true);\n            let idx = 0;\n            for(var n in nodes) {\n                this.addTreeNodes(nodes[n], '[' + idx++ + ']', node);\n            }\n        } else if (nodes && typeof nodes === 'object') {\n            // for(var n in nodes) {\n            //     this.addTreeNodes(nodes[n], n, nodes);\n            // }\n            // let node = new Node(nodeId, nodeName);\n            node.expanded = true;\n            node.class = NodeType.Object;\n            this.treetable.addNode(node, parent, true);\n            for(var n in nodes) {\n                this.addTreeNodes(nodes[n], n, node);\n                if (parent) {\n                    parent.addToDefine(n);\n                }\n            }\n        } else {\n            // let node = new Node(nodeId, nodeName);\n            node.expandable = false;\n            node.class = NodeType.Variable;\n            node.childs = [];\n            node.property = nodes;\n            let enabled = true;\n            const selected = Object.values(this.data.device.tags).find((t: Tag) => t.address === nodeId);\n            if (node.parent && node.parent.parent && node.parent.parent.class === NodeType.Array) {\n                node.class = NodeType.Item;\n                if (!node.parent.parent.todefine.id && this.data.device.tags[nodeId] && this.data.device.tags[nodeId].options) {\n                    node.parent.parent.todefine.id = this.data.device.tags[nodeId].options.selid;\n                    node.parent.parent.todefine.value = this.data.device.tags[nodeId].options.selval;\n                }  \n            } else if (selected) {\n                enabled = false;\n            }\n            this.treetable.addNode(node, parent, enabled);\n        }\n    }\n\n    getSelectedTreeNodes(nodes: Array<Node>, defined: any): Array<Node> {\n        let result = [];\n        for (let key in nodes) {\n            let n: Node = nodes[key];\n            if (n.class === NodeType.Array && n.todefine && n.todefine.id && n.todefine.value) {\n                let arrayResult = this.getSelectedTreeNodes(n.childs, n.todefine);\n                for (let ak in arrayResult) {\n                    result.push(arrayResult[ak]);\n                }\n            } else if (n.class === NodeType.Object && defined && defined.id && defined.value) {\n                // search defined attributes\n                let childId = null, childValue = null;\n                for (let childKey in n.childs)\n                {\n                    let child = n.childs[childKey];\n                    if (child.text === defined.id) {\n                        childId = child;\n                    } else if (child.text === defined.value) {\n                        childValue = child;\n                    }\n                }\n                if (childId && childValue) {\n                    let objNode = new Node(childId.id, childId.property);  // node array element (id: id:id, text: current id value)\n                    objNode.class = NodeType.Reference;                     // to check\n                    objNode.property = childValue.id                        // value:id\n                    objNode.todefine = { selid: childId.text, selval: childValue.text };\n                    objNode.type = Utils.getType(childValue.property);\n                    objNode.checked = true;\n                    objNode.enabled = n.enabled;\n                    result.push(objNode);\n                }\n            } else if (n.class === NodeType.Variable && n.checked) {\n                // let objNode = new Node(n.id.split('>').join(''), n.text);\n                let objNode = new Node(n.id, n.text);\n                objNode.type = Utils.getType(n.property);\n                objNode.checked = n.checked;\n                objNode.enabled = n.enabled;\n                result.push(objNode);\n            }\n        }\n        return result;\n    }\n\n    getProperty(n: any) {\n        if (n.class === 'Object') { // Object\n            return '';\n        } else if (n.class === 'Variable') {\n            return 'Variable';\n        } else if (n.class === 'Method') {\n            return 'Method';\n        }\n        return '';\n    }\n\n    addError(parent: string, error: any) {\n\n    }\n\n    devicesValue(): Array<Device> {\n        return Object.values(this.data.devices);\n    }\n\n    queryNext(node: Node) {\n        let n = (node) ? { id: node.id } : null;\n        if (this.isBACnet() && node) {\n            n['parent'] = (node.parent) ? node.parent.id : null;\n        }\n        this.hmiService.askDeviceBrowse(this.data.device.id, n);\n    }\n\n    attributeToString(attribute) {\n        let result = '';\n        if (attribute) {\n            Object.values(attribute).forEach((x) => {\n                if (result.length) {\n                    result += ', ';\n                }\n                result += x;\n            });\n        }\n        return result;\n    }\n\n    isSiemensS7() {\n\t\treturn (this.data.device.type === DeviceType.SiemensS7) ? true : false;\n\t}\n\n\tisModbus() {\n\t\treturn (this.data.device.type === DeviceType.ModbusRTU || this.data.device.type === DeviceType.ModbusTCP) ? true : false;\n    }\n\n    isOpcua() {\n\t\treturn (this.data.device.type === DeviceType.OPCUA) ? true : false;\n    }\n    \n    isWebApi() {\n\t\treturn (this.data.device.type === DeviceType.WebAPI) ? true : false;\n    }\n\n    isBACnet() {\n        return (this.data.device.type === DeviceType.BACnet) ? true : false;\n    }\n    \n    isExternal() {\n        return (this.data.device.type === DeviceType.WebStudio) ? true : false;\n    }\n\n    isInternal() {\n\t\treturn (this.data.device.type === DeviceType.internal) ? true : false;\n    }\n\n    checkMemAddress(memaddress) {\n        if (memaddress === '000000' || memaddress === '100000') {\n            this.data.tag.type = ModbusTagType.Bool;\n        }\n    }\n\n    isValidate() {\n        if (this.error) {\n            return false;\n        } else if (this.isOpcua() || this.isWebApi()) {\n            return true;\n        } else if (this.isExternal()) {\n            return (this.data.tag.address) ? true : false;\n        } else if (this.isInternal()) {\n            return (this.data.tag.name) ? true : false;\n        } else if (this.data.tag && !this.data.tag.name) {\n            return false;\n        } else if (this.isModbus() && (!this.data.tag.address || parseInt(this.data.tag.address) <= 0)) {\n            return false;\n        }\n        return true;\n    }\n}\n\nexport enum EditTagDialogType {\n    Standard = 'standard',  // without browser\n    Simple = 'simple',        // name and path\n    Tree = 'tree'\n}","module.exports = \".topic {\\n    font-size: 12px;\\n    width: 100%;\\n    height: 22px;\\n    cursor: pointer;\\n}\\n\\n.topic-active {\\n    width: 100%;\\n    height: 26px;\\n    background-color: violet;\\n}\\n\\n.topic-text {\\n    width: 450px;\\n    display: inline-block;\\n    overflow: hidden; \\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n    line-height: 26px;\\n}\\n\\n.topic-value {\\n    font-size: 12px;\\n    color: gray;\\n    width: 340px;\\n    display: inline-block;\\n    overflow-wrap: break-word;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n    overflow: hidden;\\n    line-height: 26px;\\n}\\n\\n.topic-check {\\n    float: right;\\n    margin-right: 4px;\\n}\\n\\n.topic-publish-result {\\n    height: 160px;\\n    width: 100%;\\n    background-color: var(--formInputBackground);\\n    padding: 5px 5px 3px 8px;\\n    overflow: auto;\\n    white-space: pre;\\n    font-family: monospace;\\n    font-size: 12px;\\n}\\n\\n.topic-subscription-result {\\n    height: 160px;\\n    background-color: var(--formInputBackground);\\n    padding: 5px 5px 3px 8px;\\n    overflow: auto;\\n    white-space: pre;\\n    font-family: monospace;\\n    font-size: 12px;\\n}\\n\\n.separator-line {\\n    border-bottom: 1px solid rgba(0, 0, 0, 0.1);\\n    height: 1px;\\n    width: 100%;\\n}\\n\\n::ng-deep .mytoogle .mat-button-toggle-label-content {\\n    line-height: 28px;\\n}\"","module.exports = \"<div style=\\\"width: 100%;position: relative;\\\">\\n    <div style=\\\"width: 840px;\\\">\\n        <h1 mat-dialog-title style=\\\"display:inline-block; cursor:move; padding-top: 15px\\\" mat-dialog-draggable>\\n            {{'device.browsetopics-property-title' | translate}}\\n        </h1>\\n        <mat-icon (click)=\\\"onNoClick()\\\" style=\\\"float:right;cursor:pointer;color:gray;position: relative; top: 10px; right: 0px\\\">clear</mat-icon>\\n        <mat-tab-group style=\\\"width: 100%; height: 100%\\\" #grptabs>\\n            <mat-tab label=\\\"{{'device.browsetopics-property-sub' | translate}}\\\" #tabsub>\\n                <div style=\\\"display: block; margin-bottom: 5px;margin-top: 10px\\\">\\n                    <div class=\\\"my-form-field\\\" style=\\\"display:inline-block; margin-right: 10px;\\\">\\n                        <span>{{'device.discovery-topics' | translate}}</span>\\n                        <input [(ngModel)]=\\\"topicSource\\\" style=\\\"width: 400px\\\" type=\\\"text\\\" [disabled]=\\\"isSubscriptionEdit()\\\">\\n                    </div>\\n                    <button mat-icon-button (click)=\\\"onDiscoveryTopics(topicSource)\\\" style=\\\"display:inline-block;\\\" *ngIf=\\\"!discoveryWait\\\" [disabled]=\\\"isSubscriptionEdit()\\\">\\n                        <mat-icon>search</mat-icon>\\n                    </button>\\n                    <div style=\\\"display:inline-block; margin-left: 10px;width: 30px; vertical-align: middle;\\\" *ngIf=\\\"discoveryWait\\\">\\n                        <mat-spinner diameter=\\\"20\\\"></mat-spinner>\\n                    </div>\\n                    <button mat-icon-button (click)=\\\"onClearDiscovery()\\\" style=\\\"display:inline-block;\\\" [disabled]=\\\"isSubscriptionEdit()\\\">\\n                        <mat-icon>delete_outline</mat-icon>\\n                    </button>\\n                    <div *ngIf=\\\"discoveryError\\\" style=\\\"display: block; color: red;\\\">\\n                        {{discoveryError}}\\n                    </div>\\n                </div>\\n                <div style=\\\"height: 240px; border: 1px solid var(--formBorder); padding: 5px 5px 3px 8px; overflow: auto;\\\">\\n                    <div *ngFor=\\\"let topic of topicsList | keyvalue\\\">\\n                        <div class=\\\"topic\\\" (click)=\\\"selectTopic(topic);\\\" [ngClass]=\\\"{'topic-active': isTopicSelected(topic)}\\\">\\n                            <div class=\\\"topic-text\\\">\\n                                {{topic.key}}\\n                            </div>\\n                            <div class=\\\"topic-value\\\">\\n                                {{topic.value.content}}\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div style=\\\"margin-top: 10px; display: block;\\\">\\n                    <div class=\\\"my-form-field\\\" style=\\\"display:inline-block; margin-right: 10px;\\\">\\n                        <span>{{'device.topic-selected' | translate}}</span>\\n                        <input [(ngModel)]=\\\"selectedTopic.key\\\" class=\\\"my-form-readonly-input\\\" style=\\\"width: 400px;\\\" type=\\\"text\\\" [readonly]=\\\"true\\\">\\n                    </div>\\n                    <mat-button-toggle-group [(ngModel)]=\\\"topicSelectedSubType\\\" (change)=\\\"onSubTopicValChange($event.value)\\\">\\n                        <mat-button-toggle class=\\\"mytoogle\\\" value=\\\"raw\\\">{{'device.topic-raw' | translate}}</mat-button-toggle>\\n                        <mat-button-toggle class=\\\"mytoogle\\\" value=\\\"json\\\">{{'device.topic-json' | translate}}</mat-button-toggle>\\n                    </mat-button-toggle-group>\\n                    <button style=\\\"margin-left: 20px\\\" mat-raised-button (click)=\\\"onAddToSubscribe()\\\" [disabled]=\\\"!isSubscriptionValid()\\\" color=\\\"primary\\\">\\n                        {{'device.topic-subscribe' | translate}}\\n                    </button>\\n                </div>\\n                <div class=\\\"my-form-field\\\" style=\\\"margin-top:10px;width: 100%;overflow-x: hidden;\\\">\\n                    <span>{{'device.topic-subscription-content' | translate}}</span>\\n                    <div class=\\\"topic-subscription-result\\\">\\n                        <div *ngFor=\\\"let tcontent of topicContent\\\">\\n                            <div class=\\\"topic\\\">\\n                                <div class=\\\"topic-text\\\">\\n                                    {{tcontent.key}}\\n                                </div>\\n                                <div class=\\\"topic-value\\\">\\n                                    {{tcontent.value}}\\n                                </div>\\n                                <div class=\\\"topic-check\\\">\\n                                    <mat-checkbox [(ngModel)]=\\\"tcontent.checked\\\" (change)=\\\"isSubscriptionValid()\\\" value=\\\"true\\\"></mat-checkbox>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </mat-tab>\\n            <mat-tab label=\\\"{{'device.browsetopics-property-pub' | translate}}\\\" #tabpub>\\n                <div style=\\\"display: block;margin-top: 10px\\\">\\n                    <div class=\\\"my-form-field\\\" style=\\\"display:block; margin-right: 10px;margin-bottom: 10px;\\\">\\n                        <span>{{'device.topic-publish-name' | translate}}</span>\\n                        <input [(ngModel)]=\\\"publishTopicName\\\" style=\\\"width: 400px;\\\" type=\\\"text\\\">\\n                    </div>\\n                    <div class=\\\"my-form-field\\\" style=\\\"display:inline-block; margin-right: 10px;margin-bottom: 10px;\\\">\\n                        <span>{{'device.topic-publish-path' | translate}}</span>\\n                        <input [(ngModel)]=\\\"publishTopicPath\\\" (keyup)=\\\"stringifyPublishItem()\\\" style=\\\"width: 400px;\\\" type=\\\"text\\\">\\n                    </div>\\n                    <mat-button-toggle-group [(ngModel)]=\\\"topicSelectedPubType\\\" (change)=\\\"onPubTopicValChange($event.value)\\\">\\n                        <mat-button-toggle class=\\\"mytoogle\\\" value=\\\"raw\\\" [disabled]=\\\"!isPublishTypeToEnable('raw')\\\">{{'device.topic-raw' | translate}}</mat-button-toggle>\\n                        <mat-button-toggle class=\\\"mytoogle\\\" value=\\\"json\\\" [disabled]=\\\"!isPublishTypeToEnable('json')\\\">{{'device.topic-json' | translate}}</mat-button-toggle>\\n                    </mat-button-toggle-group>\\n                    <button style=\\\"margin-left: 20px\\\" mat-raised-button (click)=\\\"onAddToPuplish()\\\" [disabled]=\\\"!isPublishValid()\\\" color=\\\"primary\\\">{{'device.topic-publish' |\\n                        translate}}</button>\\n                    <div class=\\\"my-form-field\\\" style=\\\"display: block;\\\">\\n                        <button mat-icon-button (click)=\\\"onAddPublishItem()\\\">\\n                            <mat-icon>add_circle_outline</mat-icon>\\n                            {{'device.topic-publish-add-item' | translate}}\\n                        </button>\\n                        <div style=\\\"height: 200px; border: 1px solid var(--formBorder); padding: 5px 5px 3px 8px; overflow: auto;margin-bottom: 10px;\\\">\\n                            <div *ngFor=\\\"let item of pubPayload.items; index as i\\\" class=\\\"item\\\">\\n                                <div class=\\\"my-form-field\\\" style=\\\"margin-right: 10px;\\\">\\n                                    <span>{{'device.topic-publish-key' | translate}}</span>\\n                                    <input [(ngModel)]=\\\"item.key\\\" (keyup)=\\\"stringifyPublishItem()\\\" style=\\\"width: 140px;\\\" type=\\\"text\\\" [disabled]=\\\"topicSelectedPubType === 'raw'\\\">\\n                                </div>\\n                                <div class=\\\"my-form-field\\\" style=\\\"width: 120px;margin-right: 16px;\\\">\\n                                    <span>{{'device.topic-publish-type' | translate}}</span>\\n                                    <mat-select [(value)]=\\\"item.type\\\" (selectionChange)=\\\"stringifyPublishItem();onItemTypeChanged(item);\\\">\\n                                        <mat-option *ngFor=\\\"let type of itemType | enumToArray\\\" [value]=\\\"type.key\\\">\\n                                            {{ type.value }}\\n                                        </mat-option>\\n                                    </mat-select>\\n                                </div>\\n                                <div [ngSwitch]=\\\"item.type\\\" style=\\\"display: inline-block;\\\">\\n                                    <div *ngSwitchCase=\\\"itemTag\\\">\\n                                        <flex-variable style=\\\"display: block\\\" [data]=\\\"data\\\" (onchange)=\\\"onSetPublishItemTag(item, $event)\\\" [variableId]=\\\"item.value\\\"\\n                                                [withStaticValue]=\\\"false\\\"></flex-variable>\\n                                    </div>\\n                                    <div *ngSwitchCase=\\\"itemTimestamp\\\" class=\\\"my-form-field\\\" style=\\\"margin-bottom: 5px;\\\">\\n                                        <span>{{'device.topic-publish-timestamp' | translate}}</span>\\n                                        <input [(ngModel)]=\\\"item.value\\\" style=\\\"width: 478px;\\\" type=\\\"text\\\" [disabled]=\\\"true\\\">\\n                                    </div>\\n                                    <div *ngSwitchCase=\\\"itemValue\\\" class=\\\"my-form-field\\\" style=\\\"margin-bottom: 5px;\\\">\\n                                        <span>{{'device.topic-publish-value' | translate}}</span>\\n                                        <input [(ngModel)]=\\\"item.value\\\" style=\\\"width: 478px;\\\" type=\\\"text\\\" [disabled]=\\\"true\\\">\\n                                    </div>\\n                                    <div *ngSwitchCase=\\\"itemStatic\\\" class=\\\"my-form-field\\\" style=\\\"margin-bottom: 5px;\\\">\\n                                        <span>{{'device.topic-publish-static' | translate}}</span>\\n                                        <input [(ngModel)]=\\\"item.value\\\" (keyup)=\\\"stringifyPublishItem()\\\" style=\\\"width: 478px;\\\" type=\\\"text\\\">\\n                                    </div>                                    \\n                                </div>\\n                                <div style=\\\"float: right;padding-top: 5px;\\\">\\n                                    <button mat-icon-button (click)=\\\"onRemovePublishItem(i)\\\" class=\\\"remove\\\">\\n                                        <mat-icon>clear</mat-icon>\\n                                    </button>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"my-form-field\\\" style=\\\"display:inline-block; width: 826px\\\">\\n                            <span>{{'device.topic-publish-content' | translate}}</span>\\n                            <div class=\\\"topic-publish-result\\\" [innerHTML]=\\\"pubPayloadResult\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </mat-tab>\\n        </mat-tab-group>\\n    </div>\\n    <div mat-dialog-actions class=\\\"dialog-action\\\">\\n        <button mat-raised-button (click)=\\\"onNoClick()\\\">{{'dlg.close' | translate}}</button>\\n    </div>\\n</div>\"","import { Component, OnInit, OnDestroy, Inject, AfterViewInit, ViewChild } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatTabGroup, MatTab } from '@angular/material';\nimport { Subscription } from \"rxjs\";\n\nimport { HmiService } from '../../_services/hmi.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Utils } from '../../_helpers/utils';\nimport { Tag, TAG_PREFIX } from '../../_models/device';\n\n@Component({\n    selector: 'app-topic-property',\n    templateUrl: './topic-property.component.html',\n    styleUrls: ['./topic-property.component.css']\n})\nexport class TopicPropertyComponent implements OnInit, AfterViewInit, OnDestroy {\n\n    @ViewChild('grptabs') grptabs: MatTabGroup;\n    @ViewChild('tabsub') tabsub: MatTab;\n    @ViewChild('tabpub') tabpub: MatTab;\n\n    private subscriptionBrowse: Subscription;\n\n    editMode = false;\n    topicSource = '#';\n    topicsList = {};\n    topicContent = [];\n    topicSelectedSubType = 'raw';\n    discoveryError = '';\n    discoveryWait = false;\n    discoveryTimer = null;\n    selectedTopic = { key: '', value: null, subs: null };\n    topicToAdd = {};\n    invokeSubscribe = null;\n\n    invokePuplish = null;\n    topicSelectedPubType = 'raw';\n    publishTopicName: string;\n    publishTopicPath: string;\n    pubPayload = new MqttPayload();\n    pubPayloadResult = '';\n    itemType = MqttItemType;\n    itemTag = Utils.getEnumKey(MqttItemType, MqttItemType.tag);\n    itemTimestamp = Utils.getEnumKey(MqttItemType, MqttItemType.timestamp);\n    itemValue = Utils.getEnumKey(MqttItemType, MqttItemType.value);\n    itemStatic = Utils.getEnumKey(MqttItemType, MqttItemType.static);\n\n    constructor(\n        private hmiService: HmiService,\n        private translateService: TranslateService,\n        public dialogRef: MatDialogRef<TopicPropertyComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: any) {\n    }\n\n    ngOnInit() {\n        this.subscriptionBrowse = this.hmiService.onDeviceBrowse.subscribe(value => {\n            if (value.result === 'error') {\n                this.discoveryError = value.result;\n            } else if (value.topic) {\n                if (this.topicsList[value.topic]) {\n                    this.topicsList[value.topic].value = value.msg;\n                } else {\n                    let checked = false;\n                    let enabled = true;\n                    if (this.data.device.tags[value.topic]) {\n                        checked = true;\n                        enabled = false;\n                    }\n                    // key => value\n                    this.topicsList[value.topic] = { name: value.topic, content: value.msg, checked: checked, enabled: enabled };\n                }\n            }\n        });\n\n        Object.keys(this.itemType).forEach(key => {\n            this.translateService.get(this.itemType[key]).subscribe((txt: string) => { this.itemType[key] = txt });\n        });\n\n        // check if edit the topic\n        if (this.data.topic) {\n            let tag = <Tag>this.data.topic;\n            if (tag.options) {\n                if (tag.options.subs) {\n                    // sure a subscription\n                    this.grptabs.selectedIndex = 0;\n                    this.tabpub.disabled = true;\n                    this.topicSelectedSubType = tag.type;\n                    this.editMode = true;\n                    this.selectTopic({ key: tag.address, value: { content: tag.value }, subs: tag.options.subs });\n                } else {\n                    // publish topic \n                    this.grptabs.selectedIndex = 1;\n                    this.tabsub.disabled = true;\n                    this.publishTopicPath = tag.address;\n                    this.publishTopicName = tag.name;\n                    this.topicSelectedPubType = tag.type;\n                    if (tag.options.pubs) {\n                        // sure publish\n                        this.pubPayload.items = tag.options.pubs;\n                    }\n                }\n            }\n        }\n        this.loadSelectedSubTopic();\n        this.stringifyPublishItem();\n    }\n\n    ngAfterViewInit() {\n\n    }\n\n    ngOnDestroy() {\n        // this.checkToSave();\n        try {\n            if (this.subscriptionBrowse) {\n                this.subscriptionBrowse.unsubscribe();\n            }\n        } catch (e) {\n        }\n        if (this.discoveryTimer) {\n            clearInterval(this.discoveryTimer);\n        }\n\t\tthis.discoveryTimer = null;\n    }\n\n    //#region Subscription\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n\n    onDiscoveryTopics(source) {\n        this.discoveryError = '';\n        this.discoveryWait = true;\n\t\tthis.discoveryTimer = setTimeout(() => {\n            this.discoveryWait = false;\n\t\t}, 10000);        \n        this.hmiService.askDeviceBrowse(this.data.device.id, source);\n    }\n\n    onClearDiscovery() {\n        this.topicsList = {};\n        this.discoveryError = '';\n        this.discoveryWait = false;\n        try {\n            if (this.discoveryTimer) {\n\t\t\t    clearInterval(this.discoveryTimer);\n            }\n\t\t} catch { }\n    }\n\n    selectTopic(topic) {\n        this.selectedTopic = topic;\n        this.loadSelectedSubTopic();\n    }\n\n    private loadSelectedSubTopic() {\n        this.topicContent =  [];\n        if (this.topicSelectedSubType === 'json') {\n            let obj = JSON.parse(this.selectedTopic.value.content);\n            Object.keys(obj).forEach(key => {\n                let checked = (this.selectedTopic.subs) ? false : true;\n                if (this.selectedTopic.subs && this.selectedTopic.subs.indexOf(key) !== -1) {\n                    checked = true;\n                }\n                this.topicContent.push({ key: key, value: obj[key], checked: checked, type: this.topicSelectedSubType });\n            });\n        } else if (this.selectedTopic.value && this.selectedTopic.value.content) {\n            this.topicContent =  [{ key: this.selectedTopic.key, value: this.selectedTopic.value.content, checked: true, type: this.topicSelectedSubType }];\n        }\n    }\n\n    onSubTopicValChange(topicSelType) {\n        this.loadSelectedSubTopic();\n    }\n\n    isTopicSelected(topic) {\n        return (this.selectedTopic === topic.key) ? true : false;\n    }\n\n    isSubscriptionEdit() {\n        return this.editMode;\n    }\n\n    isSubscriptionValid() {\n        if (this.topicContent && this.topicContent.length) {\n            let onechecked = false;\n            for (let i = 0; i < this.topicContent.length; i++) {\n                if (this.topicContent[i].checked) {\n                    onechecked = true;\n                }\n            }\n            return onechecked;\n        }\n        return false;\n    }\n\n    onAddToSubscribe() {\n        if (this.topicContent && this.topicContent.length && this.invokeSubscribe) {\n            // let items = [];\n            for (let i = 0; i < this.topicContent.length; i++) {\n                if (this.topicContent[i].checked) {\n                    // items.push(this.topicContent[i].key);\n                    let tag = new Tag(Utils.getGUID(TAG_PREFIX));\n                    if (this.data.topic) {\n                        tag = new Tag(this.data.topic.id);\n                    }\n                    tag.type = this.topicSelectedSubType;\n                    tag.address = this.selectedTopic.key;\n                    tag.memaddress = this.topicContent[i].key;\n                    tag.options = { subs: this.topicContent.map((tcnt) => { return tcnt.key }) };\n                    tag.name = this.selectedTopic.key;\n                    if (tag.type === 'json') {\n                        tag.name += '[' + tag.memaddress + ']';\n                    }\n                    this.invokeSubscribe([tag]);\n                }\n            }\n        }\n    }\n    //#endregion\n\n    //#region  Publish\n    isPublishTypeToEnable(type: string) {\n        if (type === 'raw' || (this.pubPayload.items && this.pubPayload.items.length)) {\n            return true;\n        }\n        return false;\n    }\n\n    onAddToPuplish() {\n        if (this.publishTopicPath && this.invokePuplish) {\n            let tag = new Tag(Utils.getGUID(TAG_PREFIX));\n            if (this.data.topic) {\n                tag = new Tag(this.data.topic.id);\n            }\n            tag.name = this.publishTopicName;\n            tag.address = this.publishTopicPath;\n            tag.type = this.topicSelectedPubType;\n            tag.options = { pubs: this.pubPayload.items };\n            this.invokePuplish(tag);\n        }\n    }\n\n    onPubTopicValChange(topicSelType) {\n        this.stringifyPublishItem();\n    }\n\n    onAddPublishItem() {\n        this.pubPayload.items.push(new MqttPayloadItem());\n        this.stringifyPublishItem();\n    }\n\n    onRemovePublishItem(index: number) {\n        this.pubPayload.items.splice(index, 1);\n        this.stringifyPublishItem();\n    }\n\n    onSetPublishItemTag(item: MqttPayloadItem, event: any) {\n        item.value = event.variableId;\n        if (event.variableRaw) {\n            item.name = event.variableRaw.address;\n        }\n        this.stringifyPublishItem();\n    }\n\n    onItemTypeChanged(item: MqttPayloadItem) {\n        if (item.type === this.itemTimestamp) {\n            item.value = new Date().toISOString();\n        } else if (item.type === this.itemStatic) {\n            item.value = '';\n        } else if (item.type === this.itemValue) {\n            item.name = this.publishTopicPath;\n        }\n        this.stringifyPublishItem();\n    }\n\n    /**\n     * Render the payload content\n     */\n    stringifyPublishItem() {\n        let obj = {};\n        let row = '';\n        if (this.pubPayload.items.length) {\n            for (let i = 0; i < this.pubPayload.items.length; i++) {\n                let item: MqttPayloadItem = this.pubPayload.items[i];\n                let ivalue = item.value;\n                if (item.type === this.itemTimestamp) {\n                    ivalue = new Date().toISOString();\n                } else if (item.type === this.itemTag) {\n                    ivalue = `$(${item.name})`;\n                } else if (item.type === this.itemStatic) {\n                    ivalue = `${item.value}`;\n                } else if (item.type === this.itemValue) {\n                    item.value = this.publishTopicPath;\n                    ivalue = `$(${item.value})`;\n                } else{\n                    ivalue = `${item.value}`;\n                }\n                if (this.topicSelectedPubType === 'json') {\n                    let keys = item.key.split('.');\n                    let robj = obj;\n                    for (let y = 0; y < keys.length; y++) {\n                        if (!robj[keys[y]]) { \n                            robj[keys[y]] = {};\n                        } \n                        if (y >= keys.length - 1) {\n                            robj[keys[y]] = ivalue;\n                        }\n                        robj = robj[keys[y]];\n                    }\n                } else {\n                    // payload items in row format\n                    if (row) {\n                        ivalue = ';' + ivalue;\n                    }\n                }\n                row += ivalue;\n            }\n        } else {\n            row = `$(${this.publishTopicPath})`;\n            obj = { '': row };\n        }\n        if (this.topicSelectedPubType === 'json') {\n            this.pubPayloadResult = JSON.stringify(obj, undefined, 2);\n        } else {\n            this.pubPayloadResult = row;\n        }\n    }\n\n    isPublishValid() {\n        return (this.publishTopicPath && this.publishTopicPath.length) ? true : false;\n    }\n    //#endregion\n}\n\nexport enum MqttItemType {\n    tag = 'device.topic-type-tag',\n    timestamp = 'device.topic-type-timestamp',\n    value = 'device.topic-type-value',\n    static = 'device.topic-type-static',\n}\n\nexport class MqttPayload {\n    items: MqttPayloadItem[] = [];\n}\n\nexport class MqttPayloadItem {\n    type = Utils.getEnumKey(MqttItemType, MqttItemType.tag);\n    key = '';\n    value = '';\n    name;\n}","module.exports = \"\\n::ng-deep .mat-tab-label {\\n    height: 34px !important;\\n}\"","module.exports = \"<div>\\n    <h1 mat-dialog-title style=\\\"display:inline-block;cursor:move;\\\" mat-dialog-draggable>{{'dlg.app-settings-title' | translate}}</h1>\\n    <mat-icon (click)=\\\"onNoClick()\\\" style=\\\"float:right;margin-right:-10px;margin-top:-10px;color:gray;cursor:pointer;\\\">clear</mat-icon>\\n    <div mat-dialog-content>\\n        <mat-tab-group style=\\\"height: 500px; width: 620px;\\\">\\n            <mat-tab label=\\\"{{'dlg.app-settings-system' | translate}}\\\">\\n                <div style=\\\"width: 420px; margin-top: 20px;\\\">\\n                    <div style=\\\"display: block; margin-top: 10px\\\">\\n                        <div class=\\\"my-form-field\\\">\\n                            <span>{{'dlg.app-settings-language' | translate}}</span>\\n                            <mat-select [(value)]=\\\"settings.language\\\" style=\\\"width: 320px\\\" (selectionChange)=\\\"onLanguageChange($event.value)\\\">\\n                                <mat-option *ngFor=\\\"let language of languageType\\\" [value]=\\\"language.value\\\">\\n                                    {{ language.text }}\\n                                </mat-option>\\n                            </mat-select>\\n                        </div>\\n                    </div>\\n                    <div style=\\\"display: block; margin-top: 20px\\\">\\n                        <div class=\\\"my-form-field\\\">\\n                            <span>{{'dlg.app-settings-server-port' | translate}}</span>\\n                            <input numberOnly [(ngModel)]=\\\"settings.uiPort\\\" style=\\\"width: 320px\\\" type=\\\"text\\\" disabled=\\\"true\\\">\\n                        </div>\\n                    </div>\\n                    <div style=\\\"display: block; margin-top: 20px\\\">\\n                        <div class=\\\"my-form-field\\\">\\n                            <span style=\\\"display: inline-block;\\\">{{'dlg.app-settings-auth-token' | translate}}</span>\\n                            <mat-icon class=\\\"my-form-field-info\\\" style=\\\"display: block;\\\" matTooltip=\\\"{{authenticationTooltip}}\\\">info</mat-icon>\\n                            <mat-select [(value)]=\\\"authentication\\\" style=\\\"width: 320px\\\">\\n                                <mat-option *ngFor=\\\"let auth of authType\\\" [value]=\\\"auth.value\\\">\\n                                    {{ auth.text }}\\n                                </mat-option>\\n                            </mat-select>\\n                        </div>\\n                    </div>\\n                </div>\\n            </mat-tab>\\n        </mat-tab-group>\\n    </div>\\n    <div mat-dialog-actions class=\\\"dialog-action\\\">\\n        <button mat-raised-button (click)=\\\"onNoClick()\\\">{{'dlg.cancel' | translate}}</button>\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onOkClick()\\\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\\n    </div>\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\nimport { SettingsService } from '../../_services/settings.service';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { AppSettings } from '../../_models/settings';\n\n@Component({\n    selector: 'app-app-settings',\n    templateUrl: './app-settings.component.html',\n    styleUrls: ['./app-settings.component.css']\n})\nexport class AppSettingsComponent implements OnInit {\n\n    languageType = [ { text: 'dlg.app-language-en', value: 'en' }, { text: 'dlg.app-language-ru', value: 'ru' },\n                     { text: 'dlg.app-language-ua', value: 'ua' }, { text: 'dlg.app-language-zh-cn', value: 'zh-cn' },\n                     { text: 'dlg.app-language-pt', value: 'pt' }, { text: 'dlg.app-language-tr', value: 'tr' }];\n    authType = [ { text: 'dlg.app-auth-disabled', value: '' }, { text: 'dlg.app-auth-expiration-15m', value: '15m' }, \n                        { text: 'dlg.app-auth-expiration-1h', value: '1h' }, { text: 'dlg.app-auth-expiration-3h', value: '3h' },\n                        { text: 'dlg.app-auth-expiration-1d', value: '1d' }];\n    settings = new AppSettings();\n    authentication = '';\n    authenticationTooltip = '';\n\n    constructor(private settingsService: SettingsService,\n        private translateService: TranslateService,\n        public dialogRef: MatDialogRef<AppSettingsComponent>) { }\n\n    ngOnInit() {\n        this.settings = JSON.parse(JSON.stringify(this.settingsService.getSettings()));\n        for (let i = 0; i < this.languageType.length; i++) {\n            this.translateService.get(this.languageType[i].text).subscribe((txt: string) => { this.languageType[i].text = txt });\n        }\n        for (let i = 0; i < this.authType.length; i++) {\n            this.translateService.get(this.authType[i].text).subscribe((txt: string) => { this.authType[i].text = txt });\n        }\n        this.translateService.get('dlg.app-auth-tooltip').subscribe((txt: string) => { this.authenticationTooltip = txt });\n\n        if (this.settings.secureEnabled) {\n            this.authentication = this.settings.tokenExpiresIn;\n        }\n    }\n\n    onNoClick() {\n        this.dialogRef.close();\n    }\n\n    onOkClick() {\n        this.settings.secureEnabled = (this.authentication) ? true : false;\n        this.settings.tokenExpiresIn = this.authentication;\n        if (this.settingsService.setSettings(this.settings)) {\n            this.settingsService.saveSettings();\n        }\n        this.dialogRef.close();\n    }\n\n    onLanguageChange(language) {\n        this.settings.language = language;\n    }\n}\n","module.exports = \"\"","module.exports = \"<div>\\n    <h1 mat-dialog-title style=\\\"display:inline-block;cursor:move;\\\" mat-dialog-draggable>{{'card.config-title' | translate}}</h1>\\n    <mat-icon (click)=\\\"onNoClick()\\\" class=\\\"dialog-close-btn\\\" cdkFocusInitial>clear</mat-icon>\\n    <div mat-dialog-content  style=\\\"width: 700px; height: 500px\\\">\\n        <div class=\\\"my-form-field\\\" style=\\\"margin-bottom: 10px;\\\">\\n            <span>{{'card.config-content-type' | translate}}</span>\\n            <mat-select [(value)]=\\\"card.type\\\" style=\\\"width: 320px;\\\">\\n                <mat-option *ngFor=\\\"let type of cardType | enumToArray\\\" [value]=\\\"type.key\\\" [disabled]=\\\"type.key !== widgetView\\\">\\n                    {{ type.value }}\\n                </mat-option>\\n            </mat-select>\\n        </div>\\n        <div class=\\\"my-form-field\\\" *ngIf=\\\"card.type === widgetView\\\" style=\\\"float: right; margin-bottom: 10px;\\\">\\n            <span>{{'card.config-content-view' | translate}}</span>\\n            <mat-select [(value)]=\\\"card.data\\\" style=\\\"width: 320px;\\\">\\n                <mat-option *ngFor=\\\"let view of data.views\\\" [value]=\\\"view\\\">\\n                    {{ view }}\\n                </mat-option>\\n            </mat-select>\\n        </div>\\n        <div [ngSwitch]=\\\"card.type\\\">\\n            <div *ngSwitchCase=\\\"widgetView\\\">\\n            </div>\\n            <div *ngSwitchCase=\\\"widgetAlarms\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div mat-dialog-actions class=\\\"dialog-action\\\">\\n        <button mat-raised-button (click)=\\\"onNoClick()\\\">{{'dlg.cancel' | translate}}</button>\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onOkClick()\\\" [mat-dialog-close]=\\\"data\\\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\\n    </div>\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { CardWidgetType } from '../../_models/hmi';\nimport { Utils } from '../../_helpers/utils';\n\n@Component({\n    selector: 'app-card-config',\n    templateUrl: './card-config.component.html',\n    styleUrls: ['./card-config.component.css']\n})\nexport class CardConfigComponent implements OnInit {\n\n    cardType: any;\n    card: any;\n\n    widgetView = Utils.getEnumKey(CardWidgetType, CardWidgetType.view);\n    widgetAlarms = Utils.getEnumKey(CardWidgetType, CardWidgetType.alarms);\n    widgetTable = Utils.getEnumKey(CardWidgetType, CardWidgetType.table);\n\n    constructor(private translateService: TranslateService,\n        public dialogRef: MatDialogRef<CardConfigComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: any) { \n            this.card = this.data.item.card;\n        }\n\n    ngOnInit() {\n        this.cardType = CardWidgetType;\n        Object.keys(this.cardType).forEach(key => {\n            this.translateService.get(this.cardType[key]).subscribe((txt: string) => { this.cardType[key] = txt });\n        });\n    }\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n\n    onOkClick(): void {\n        this.dialogRef.close(this.card);\n    }\n}\n","module.exports = \"\\n.panelTop {\\n    display: block;\\n    width: 100%;\\n    height: 480px;\\n}\\n\\n.panelTop .chart-list, .device-list, .tag-list {\\n    height: 480px;\\n}\\n\\n.panelBottom {\\n    display: block;\\n    width: 100%;\\n    height: 160px;\\n}\\n\\n.list {\\n    width: 100% !important; \\n    height: 100% !important; \\n    font-size: 16px !important; \\n    padding-top: 0px !important;\\n}\\n\\n.list > span  {\\n    padding-left: 10px;\\n}\\n\\n.list mat-list-option  {\\n    padding-left: 10px;\\n}\\n\\n.chart-list {\\n    overflow-y: auto;\\n}\\n\\n.list-item {\\n    display: block;\\n    font-size: 14px;\\n    height: 26px !important;\\n    cursor: pointer;\\n    overflow: hidden;\\n    padding-left: 10px;\\n}\\n\\n.list-item mat-icon {\\n    font-size: 20px;\\n}\\n\\n.list-item span {\\n    width: calc(100% - 26px);\\n    text-overflow: ellipsis;\\n    overflow: hidden;\\n}\\n\\n.list-item-text {\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n    overflow: hidden;\\n}\\n\\n.list-item-hover:hover {\\n    background-color: rgba(0, 0, 0, 0.1);\\n}\\n\\n.list-item-selected {\\n  background-color: rgba(0, 0, 0, 0.1);\\n}\\n\\n.list-header {\\n    background-color: rgba(0, 0, 0, 0.8);\\n    color: #ffffff;\\n    line-height: 26px;\\n}\\n\\n.device-list {\\n    margin-right: 2px;\\n    overflow-y: auto;\\n}\\n\\n.tag-list {\\n    margin-right: 2px;\\n    overflow-y: auto;\\n}\\n\\n.color-line {\\n    width: 30px;\\n    border: unset;\\n    border: 1px solid rgba(0,0,0,0.1);\\n    border-radius: 2px;\\n    opacity: 1;\\n    background-color: #f1f3f4;\\n}\\n\"","module.exports = \"<div style=\\\"width: 1150px;\\\" class=\\\"dialog-mdsd-vh\\\">\\n    <h1 mat-dialog-title style=\\\"display:inline-block;cursor: move\\\" mat-dialog-draggable>{{'chart.config-title' | translate}}</h1>\\n    <mat-icon (click)=\\\"onNoClick()\\\" style=\\\"float:right;margin-right:-10px;margin-top:-10px;cursor:pointer;color:gray;\\\">clear</mat-icon>\\n    <div style=\\\"display: inline-block; width: 100%\\\">\\n        <div class=\\\"panelTop\\\">\\n            <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"100%\\\">\\n                <mat-grid-tile class=\\\"chart-list\\\">\\n                    <mat-list class=\\\"list\\\" >\\n                        <mat-list-item class=\\\"list-item list-header\\\">\\n                            <span>{{'chart.config-charts' | translate}}</span>\\n                            <mat-icon style=\\\"position: absolute; right: 10px;cursor:pointer;color:rgba(255, 255, 255, 0.9);\\\" (click)=\\\"editChart(null)\\\">add</mat-icon>\\n                        </mat-list-item>\\n                        <mat-list-item *ngFor=\\\"let chart of data.charts\\\" matTooltip=\\\"{{chart.name}}\\\" class=\\\"list-item list-item-text\\\" [ngClass]=\\\"isChartSelected(chart)\\\" (click)=\\\"selectedChart = chart;loadChartConfig();\\\">\\n                            <span>{{chart.name}}</span>\\n                            <mat-icon [matMenuTriggerFor]=\\\"configMenu\\\" style=\\\"position: absolute; right: 10px;cursor:pointer;color:gray;\\\">more_vert</mat-icon>\\n                            <mat-menu #configMenu [overlapTrigger]=\\\"false\\\" style=\\\"color:#000000\\\">\\n                                <button mat-menu-item (click)=\\\"editChart(chart)\\\" style=\\\"color:#000000;font-size: 14px;\\\">{{'chart.config-rename' | translate}}</button>\\n                                <button mat-menu-item (click)=\\\"deleteChart(chart)\\\" style=\\\"color:#000000;font-size: 14px;\\\">{{'chart.config-delete' | translate}}</button>\\n                            </mat-menu>\\n                        </mat-list-item>\\n                    </mat-list>\\n                </mat-grid-tile>\\n                <mat-grid-tile class=\\\"device-list\\\">\\n                    <mat-list class=\\\"list\\\">\\n                        <mat-list-item class=\\\"list-item list-header\\\">\\n                            <span>{{'chart.config-devices' | translate}}</span>\\n                        </mat-list-item>\\n                        <mat-list-item *ngFor=\\\"let device of data.devices;\\\" matTooltip=\\\"{{device.name}}\\\" class=\\\"list-item list-item-text\\\" [ngClass]=\\\"isDeviceSelected(device)\\\" (click)=\\\"selectDevice(device);\\\">\\n                            <span>{{device.name}}</span>\\n                        </mat-list-item>\\n                    </mat-list>\\n                </mat-grid-tile>\\n                <mat-grid-tile class=\\\"tag-list\\\">\\n                    <mat-list class=\\\"list\\\">\\n                        <mat-list-item class=\\\"list-item list-header\\\">\\n                            <span>{{'chart.config-tags' | translate}}</span>\\n                        </mat-list-item>\\n                        <mat-selection-list #selTags [(ngModel)]=\\\"selectedTags\\\" [disabled]=\\\"(selectedChart.id)?false:true\\\" (selectionChange)=\\\"tagSelectionChanged($event)\\\" style=\\\"padding-top: 0px;\\\">\\n                            <mat-list-option *ngFor=\\\"let tag of selectedDevice.tags\\\" matTooltip=\\\"{{getTagLabel(tag)}}\\\" [selected]=\\\"tag.selected\\\" [value]=\\\"tag\\\" class=\\\"list-item list-item-text\\\" checkboxPosition=\\\"before\\\">\\n                                {{getTagLabel(tag)}}\\n                            </mat-list-option>\\n                        </mat-selection-list>\\n                    </mat-list>\\n                </mat-grid-tile>\\n            </mat-grid-list>\\n        </div>\\n        <div class=\\\"panelBottom\\\">\\n            <mat-list class=\\\"list\\\">\\n                <mat-list-item class=\\\"list-item list-header\\\">\\n                    <span style=\\\"width: 30%;max-width: 30%;\\\">{{'chart.config-line-name' | translate}}</span>\\n                    <span style=\\\"width: 25%;max-width: 25%;\\\">{{'chart.config-line-label' | translate}}</span>\\n                    <span style=\\\"width: 25%;max-width: 25%;\\\">{{'chart.config-devices' | translate}}</span>\\n                    <span style=\\\"width: 10%;max-width: 10%;\\\">{{'chart.config-line-yaxis' | translate}}</span>\\n                </mat-list-item>\\n                <div style=\\\"height: calc(100% - 36px); overflow-y: auto\\\">\\n                    <mat-list-item *ngFor=\\\"let line of selectedChart.lines\\\" class=\\\"list-item list-item-hover\\\" (click)=\\\"editChartLine(line)\\\">\\n                        <mat-icon (click)=\\\"$event.stopPropagation();removeChartLine(line)\\\" style=\\\"color:gray;font-size: 20px\\\">delete</mat-icon>\\n                        <div class=\\\"list-item-text\\\" style=\\\"width: 30%;max-width: 30%;\\\">\\n                            <span>{{getDeviceTagName(line)}}</span>\\n                        </div>\\n                        <div class=\\\"list-item-text\\\" style=\\\"width: 25%;max-width: 25%;\\\">\\n                            <span>{{line.label}}</span>\\n                        </div>                        \\n                        <div class=\\\"list-item-text\\\" style=\\\"width: 25%;max-width: 25%;\\\">\\n                            <span>{{line.device}}</span>\\n                        </div>\\n                        <div class=\\\"list-item-text\\\" style=\\\"width: 10%;max-width: 10%;\\\">\\n                            <span>{{line.yaxis}}</span>\\n                        </div>                        \\n                        <div [style.background-color]=\\\"line.color\\\" style=\\\"height:20px; width:30px\\\"></div>\\n                    </mat-list-item>\\n                </div>\\n            </mat-list>\\n        </div>\\n    </div>\\n\\n    <div mat-dialog-actions class=\\\"dialog-action\\\">\\n        <button mat-raised-button (click)=\\\"onNoClick()\\\">{{'dlg.cancel' | translate}}</button>\\n        <button mat-raised-button color=\\\"primary\\\" [mat-dialog-close]=\\\"data\\\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\\n    </div>\\n</div>\\n\"","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatSelectionList } from '@angular/material';\n\nimport { Utils } from '../../_helpers/utils';\nimport { Device } from '../../_models/device';\nimport { Chart, ChartLine } from '../../_models/chart';\n\n@Component({\n  selector: 'app-chart-config',\n  templateUrl: './chart-config.component.html',\n  styleUrls: ['./chart-config.component.css']\n})\nexport class ChartConfigComponent implements OnInit {\n\n    @ViewChild(MatSelectionList) selTags: MatSelectionList;\n\n    selectedChart = <Chart>{ id: null, name: null, lines: [] };\n    selectedDevice = { id: null, name: null, tags: []};\n    selectedTags = [];\n    data = { charts: [], devices: [] };\n    defaultColor = Utils.defaultColor;\n    lineColor = Utils.lineColor;\n\n    constructor(\n        public dialog: MatDialog,\n        public dialogRef: MatDialogRef<ChartConfigComponent>,\n        @Inject(MAT_DIALOG_DATA) public param: any) {\n            this.data.charts = param.charts;\n            Object.values(param.devices).forEach(device => {\n                let devicobj = Object.assign({}, <Device>device);\n                devicobj.tags = Object.values((<Device>device).tags);\n                this.data.devices.push(devicobj);\n            });\n        }\n\n    ngOnInit() {\n    }\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n\n    onOkClick(): void {\n        this.dialogRef.close({ charts: this.data.charts });\n    }\n\n    editChart(chart) {\n        let dialogRef = this.dialog.open(DialogListItem, {\n            position: { top: '60px' },\n            data: { name: (chart) ? chart.name : '' }\n        });\n        dialogRef.afterClosed().subscribe(result => {\n            if (result && result.name && result.name.length > 0) {\n                // this.dirty = true;\n                if (chart) {\n                    chart.name = result.name;\n                } else {\n                    this.data.charts.push({ id: Utils.getShortGUID(), name: result.name, lines: [] });\n                }\n            }\n        });\n    }\n\n    deleteChart(chart) {\n        let found = -1;\n        for (let i = 0; i < this.data.charts.length; i++) {\n            if (chart.id === this.data.charts[i].id) {\n                found = i;\n            }\n        }\n        if (found >= 0) {\n            this.data.charts.splice(found, 1);\n            this.selectedChart = { id: null, name: null, lines: [] };\n        }\n    }\n\n    selectDevice(device) {\n        this.selectedDevice = JSON.parse(JSON.stringify(device));\n        this.loadDeviceConfig();\n    }\n\n    loadChartConfig() {\n        this.selectedDevice = { id: null, name: null, tags: [] };\n        this.loadDeviceConfig();\n    }\n\n    loadDeviceConfig() {\n        if (this.selectedChart && this.selectedChart.lines && this.selectedDevice && this.selectedDevice.name) {\n            this.selectedDevice.tags.forEach(tag => {\n                tag.selected = false;\n                this.selectedChart.lines.forEach(line => {\n                    if (line.device === this.selectedDevice.name && line.id === tag.id) {\n                        tag.selected = true;\n                    }\n                });\n            });\n        }\n    }\n\n    /**\n     * add or remove the selected device tags to the selected chart in char-line list\n     * @param chart\n     * @param device\n     * @param tags\n     */\n    checkChartTags(chart:Chart, device, tags) {\n        if (chart && chart.id) {\n            let toremove = [];\n            // check to remove\n            if (chart.lines) {\n                for (let i = 0; i < chart.lines.length; i++) {\n                    if (chart.lines[i].device === device.name) {\n                        let found = -1;\n                        for (let x = 0; x < tags.length; x++) {\n                            if (chart.lines[i].id === tags[x].id) {\n                                found = i;\n                                break;\n                            }\n                        }\n                        if (found < 0) {\n                            toremove.push(i);\n                        }\n                        // if (tags.map(x => x.id).indexOf(chart.lines[i].id) === -1) {\n                        //     toremove.push(i);\n                        // }\n                    }\n                }\n            }\n            // remove\n            for (let i = 0; i < toremove.length; i++) {\n                chart.lines.splice(toremove[i], 1);\n            }\n            // add if not exist\n            for (let x = 0; x < tags.length; x++) {\n                let found = false;\n                if (chart.lines) {\n                    for (let i = 0; i < chart.lines.length; i++) {\n                        if (chart.lines[i].device === device.name && chart.lines[i].id === tags[x].id) {\n                            found = true;\n                        }\n                    }\n                }\n                if (!found) {\n                    const myCopiedObject: ChartLine = {id: tags[x].id, name: this.getTagLabel(tags[x]), device: device.name, color: this.getNextColor(), \n                        label: this.getTagLabel(tags[x]), yaxis: 1 };\n                    chart.lines.push(myCopiedObject);\n                }\n            }\n        }\n    }\n\n    tagSelectionChanged(event) {\n        this.checkChartTags(this.selectedChart, this.selectedDevice, this.selectedTags);\n    }\n\n    editChartLine(line: ChartLine) {\n        let dialogRef = this.dialog.open(DialogChartLine, {\n            position: { top: '60px' },\n            data: <ChartLine>{ id: line.id, device: line.device, name: line.name, label: line.label, color: line.color, yaxis: line.yaxis }\n        });\n        dialogRef.afterClosed().subscribe((result: ChartLine) => {\n            if (result) {\n                line.label = result.label;\n                line.color = result.color;\n                line.yaxis = result.yaxis;\n            }\n        });\n    }\n\n    removeChartLine(tag) {\n        for (let i = 0; i < this.selectedTags.length; i++) {\n            if (tag.id === this.selectedTags[i].id) {\n                this.selectedTags.splice(i, 1)\n                break;\n            }\n        }\n        for (let i = 0; i < this.selectedChart.lines.length; i++) {\n            if (this.selectedChart.lines[i].id === tag.id) {\n                this.selectedChart.lines.splice(i, 1);\n                break;\n            }\n        }\n        this.loadDeviceConfig();\n    }\n\n    isChartSelected(chart) {\n        if (chart === this.selectedChart) {\n            return 'list-item-selected';\n        }\n    }\n\n    isDeviceSelected(device) {\n        if (device && device.name === this.selectedDevice.name) {\n            return 'list-item-selected';\n        }\n    }\n\n    getTagLabel(tag) {\n        if (tag.label) {\n            return tag.label;\n        } else {\n            return tag.name;\n        }\n    }\n\n    getDeviceTagName(line: ChartLine) {\n        let devices = this.data.devices.filter(x => x.name === line.device);\n        if (devices && devices.length > 0) {\n            let tags = devices[0].tags;\n            for (let i = 0; i < tags.length; i++) {\n                if (line.id === tags[i].id) {\n                    return this.getTagLabel(tags[i]);\n                }\n            }\n        }\n        return '';\n    }\n\n    getNextColor() {\n        for (let x = 0; x < this.lineColor.length; x++) {\n            let found = false;\n            if (this.selectedChart.lines) {\n                for (let i = 0; i < this.selectedChart.lines.length; i++) {\n                    if (this.selectedChart.lines[i].color === this.lineColor[x]) {\n                        found = true;\n                    }\n                }\n            }\n            if (!found) {\n                return this.lineColor[x];\n            }\n        }\n        return Utils.lineColor[0];\n    }\n}\n\n@Component({\n    selector: 'dialog-list-item',\n    templateUrl: './list-item.dialog.html',\n})\nexport class DialogListItem {\n    // defaultColor = Utils.defaultColor;\n    constructor(\n        public dialogRef: MatDialogRef<DialogListItem>,\n        @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n\n    onOkClick(): void {\n        this.dialogRef.close(true);\n    }\n}\n\n@Component({\n    selector: 'dialog-chart-line',\n    templateUrl: './chart-line.dialog.html',\n    styleUrls: ['./chart-config.component.css']\n})\nexport class DialogChartLine {\n    defaultColor = Utils.defaultColor;\n    chartAxesType = [1, 2, 3, 4];\n    constructor(\n        public dialogRef: MatDialogRef<DialogChartLine>,\n        @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n\n    onOkClick(): void {\n        this.dialogRef.close(this.data);\n    }\n}","module.exports = \"<div>\\n    <h1 mat-dialog-title style=\\\"display:inline-block; cursor:move;\\\" mat-dialog-draggable>{{'chart.config-name-title' | translate}}</h1>\\n    <mat-icon (click)=\\\"onNoClick()\\\" style=\\\"float:right;margin-right:-10px;margin-top:-10px;cursor:pointer;color:gray;\\\">clear</mat-icon>\\n    <div mat-dialog-content>\\n        <div class=\\\"my-form-field\\\" style=\\\"display: block;margin-bottom: 10px;\\\">\\n            <span>{{'chart.config-line-name' | translate}}</span>\\n            <input [(ngModel)]=\\\"data.name\\\" type=\\\"text\\\" style=\\\"width:300px\\\" [disabled]=\\\"true\\\">\\n        </div>\\n        <div class=\\\"my-form-field\\\" style=\\\"display: block;margin-bottom: 10px;\\\">\\n            <span>{{'chart.config-line-label' | translate}}</span>\\n            <input [(ngModel)]=\\\"data.label\\\" type=\\\"text\\\" style=\\\"width:300px\\\">\\n        </div>\\n        <div class=\\\"my-form-field\\\" style=\\\"width: 140px;\\\">\\n            <span>{{'chart.config-line-yaxis' | translate}}</span>\\n            <mat-select [(value)]=\\\"data.yaxis\\\">\\n                <mat-option *ngFor=\\\"let yaxis of chartAxesType\\\" [value]=\\\"yaxis\\\">\\n                    {{ yaxis }}\\n                </mat-option>\\n            </mat-select>\\n        </div>\\n        <div class=\\\"my-form-field slider-field color-field\\\" style=\\\"padding-left: 30px;\\\">\\n            <span>{{'chart.property-color.background' | translate}}</span>\\n            <input [(colorPicker)]=\\\"data.color\\\" [cpAlphaChannel]=\\\"'always'\\\" class=\\\"input-color\\\" [style.background]=\\\"data.color\\\"\\n                [cpPresetColors]=\\\"defaultColor\\\" [cpOKButton]=\\\"true\\\" [cpCancelButton]=\\\"true\\\" [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\"\\n                [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\" style=\\\"padding: 8px 0 0 0; width: 88px\\\"\\n                [cpPosition]=\\\"'right'\\\" />\\n        </div>\\n        <div class=\\\"my-form-field\\\" style=\\\"display: block;height: 10px;\\\">\\n        </div>\\n    </div>\\n    <div mat-dialog-actions class=\\\"dialog-action\\\">\\n        <button mat-raised-button (click)=\\\"onNoClick()\\\">{{'dlg.cancel' | translate}}</button>\\n        <button mat-raised-button color=\\\"primary\\\" [mat-dialog-close]=\\\"data\\\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\\n    </div>\\n</div>\"","module.exports = \"<div>\\n    <h1 mat-dialog-title style=\\\"display:inline-block; cursor:move;\\\" mat-dialog-draggable>{{'chart.config-name-title' | translate}}</h1>\\n    <mat-icon (click)=\\\"onNoClick()\\\" style=\\\"float:right;margin-right:-10px;margin-top:-10px;cursor:pointer;color:gray;\\\">clear</mat-icon>\\n    <div mat-dialog-content>\\n        <div class=\\\"my-form-field\\\" style=\\\"display: block;margin-bottom: 10px;\\\">\\n            <span>{{'chart.config-name' | translate}}</span>\\n            <input [(ngModel)]=\\\"data.name\\\" type=\\\"text\\\" style=\\\"width:300px\\\">\\n        </div>\\n    </div>\\n    <div mat-dialog-actions class=\\\"dialog-action\\\">\\n        <button mat-raised-button (click)=\\\"onNoClick()\\\">{{'dlg.cancel' | translate}}</button>\\n        <button mat-raised-button color=\\\"primary\\\" [mat-dialog-close]=\\\"data\\\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\\n    </div>\\n</div>\"","module.exports = \"<div>\\n    <h1 mat-dialog-title style=\\\"display:inline-block;cursor:move;\\\" mat-dialog-draggable>{{'dlg.docname-title' | translate}}</h1>\\n    <mat-icon (click)=\\\"onNoClick()\\\" class=\\\"dialog-close-btn\\\" cdkFocusInitial>clear</mat-icon>\\n    <div mat-dialog-content>\\n        <div class=\\\"my-form-field\\\" style=\\\"display: block;margin-bottom: 10px;\\\">\\n            <span>{{'dlg.docname-name' | translate}}</span>\\n            <input [(ngModel)]=\\\"data.name\\\" type=\\\"text\\\" style=\\\"width:300px\\\" [readonly]=\\\"data.readonly\\\">\\n        </div>\\n        <!-- <div style=\\\"display: grid; margin-bottom: 20px;\\\">\\n      <input [(ngModel)]=\\\"data.name\\\" type=\\\"text\\\" width=\\\"100%\\\" [readonly]=\\\"data.readonly\\\">\\n    </div> -->\\n    </div>\\n    <div mat-dialog-actions class=\\\"dialog-action\\\">\\n        <button mat-raised-button (click)=\\\"onNoClick()\\\">{{'dlg.cancel' | translate}}</button>\\n        <button mat-raised-button [disabled]=\\\"!isValid(data.name)\\\" color=\\\"primary\\\" [mat-dialog-close]=\\\"data\\\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\\n    </div>\\n</div>\"","module.exports = \".slider-field span {\\n    padding-left: 2px;\\n    text-overflow: clip;\\n    max-width: 125px;\\n    white-space: nowrap;\\n    overflow: hidden;\\n}\\n\\n.slider-field mat-slider {\\n    background-color: var(--formSliderBackground);\\n    height: 30px;\\n}\"","module.exports = \"<div>\\n    <h1 mat-dialog-title style=\\\"display:inline-block; cursor:move;\\\" mat-dialog-draggable>{{'dlg.docproperty-title' | translate}}</h1>\\n    <mat-icon (click)=\\\"onNoClick()\\\" class=\\\"dialog-close-btn\\\" cdkFocusInitial>clear</mat-icon>\\n    <div mat-dialog-content style=\\\"width: 300px;\\\">\\n        <div *ngIf=\\\"data.type !== cardViewType\\\">\\n            <div style=\\\"display: block; width: 100%; margin-top: 10px;\\\">\\n                <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;\\\">\\n                    <span>{{'dlg.docproperty-width' | translate}}</span>\\n                    <input numberOnly [(ngModel)]=\\\"data.profile.width\\\" style=\\\"width: 120px\\\" type=\\\"text\\\">\\n                </div>\\n                <div class=\\\"my-form-field\\\" style=\\\"float: right\\\">\\n                    <span>{{'dlg.docproperty-height' | translate}}</span>\\n                    <input numberOnly [(ngModel)]=\\\"data.profile.height\\\" style=\\\"width: 120px\\\" type=\\\"text\\\">\\n                </div>\\n            </div>\\n            <div style=\\\"display: block; margin-top: 20px; width: 100%\\\">\\n                <div class=\\\"my-form-field\\\">\\n                    <span>{{'dlg.docproperty-size' | translate}}</span>\\n                    <mat-select placeholder=\\\"{{'dlg.docproperty-select' | translate}}\\\" (selectionChange)=\\\"onSizeChange($event.value)\\\" style=\\\"width: 293px;\\\">\\n                        <mat-option *ngFor=\\\"let prop of propSizeType\\\" [value]=\\\"prop.value\\\">\\n                            {{ prop.text }}\\n                        </mat-option>\\n                    </mat-select>\\n                </div>\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"data.type === cardViewType\\\">\\n            <div class=\\\"my-form-field slider-field\\\" style=\\\"margin-top: 10px\\\">\\n                <span>{{'dlg.docproperty-margin' | translate}}</span>\\n                <mat-slider style=\\\"display:inline-block;width: 100px;\\\" [max]=\\\"20\\\" [min]=\\\"0\\\" [step]=\\\"1\\\" [thumbLabel]=\\\"true\\\" [(ngModel)]=\\\"data.profile.margin\\\">\\n                </mat-slider>\\n            </div>\\n        </div>\\n        <div style=\\\"display: block; margin-top: 20px; margin-bottom: 20px; width: 100%\\\">\\n            <div class=\\\"my-form-field\\\" style=\\\"width: 300px;\\\">\\n                <span style=\\\"font-size:12px;\\\">{{'dlg.docproperty-background' | translate}}</span>\\n                <input style=\\\"width: 292px; border: 1px solid rgba(0,0,0,0.2); height:15px !important\\\" readonly [(colorPicker)]=\\\"data.profile.bkcolor\\\" class=\\\"input-color\\\"\\n                    title=\\\"Change stroke color\\\" [style.background]=\\\"data.profile.bkcolor\\\" [cpPresetColors]=\\\"defaultColor\\\" [cpAlphaChannel]=\\\"'always'\\\" [cpPosition]=\\\"'bottom'\\\"\\n                    [value]=\\\"data.profile.bkcolor\\\" [cpCancelButton]=\\\"true\\\" [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\" [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButton]=\\\"true\\\"\\n                    [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\" />\\n            </div>\\n        </div>\\n    </div>\\n    <div mat-dialog-actions class=\\\"dialog-action\\\">\\n        <button mat-raised-button (click)=\\\"onNoClick()\\\">{{'dlg.cancel' | translate}}</button>\\n        <button mat-raised-button color=\\\"primary\\\" [mat-dialog-close]=\\\"data\\\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\\n    </div>\\n</div>\"","module.exports = \"#svg_editor_container {\\n    background: #aaa;\\n    height: 100%;\\n    width: 100%;\\n    display: flex;\\n    flex-direction: column;\\n    position: absolute;\\n    top: 0px;\\n    left: 0px;\\n}\\n\\n.svg-workarea-toolbar {\\n    min-height: 46px;\\n    height: 46px;\\n}\\n\\n.svg-workarea-leftbar-p {\\n    box-shadow: none !important;\\n    background-color: var(--toolboxBackground);\\n    color: var(--toolboxColor);\\n}\\n\\n.svg-workarea-leftbar-h {\\n    max-height: 23px;\\n    text-align: center;\\n    vertical-align: middle;\\n    padding-left: 0px;\\n    padding-right: 0px;\\n    border-top: 1px solid var(--toolboxBorder);\\n    margin-bottom: 0px;\\n    box-shadow: 0px 1px 3px 0px #000;\\n}\\n\\n.svg-workarea-leftbar-h span {\\n    padding-top: 5px !important;\\n    padding-left: 3px;\\n    font-size: 11px;\\n}\\n\\n.svg-workarea-leftbar-h:active {\\n    /* margin-bottom: 4px; */\\n}\\n\\n/* .mat-expansion-panel-content {\\n  background-color: rgb(53, 3, 3);\\n} */\\n\\n.svg-workarea-flybar-h {\\n    max-height: 23px;\\n    text-align: center;\\n    vertical-align: middle;\\n    padding-left: 0px;\\n    padding-right: 0px;\\n    border-top: 1px solid var(--toolboxBorder);\\n    box-shadow: 0px 1px 3px 0px #000;\\n }\\n\\n.svg-workarea-flybar-h span {\\n     padding-top: 5px !important;\\n     padding-left: 3px;\\n     font-size: 11px;\\n }\\n\\n/* .svg-workarea-flybar-h:hover {\\n } */\\n\\n.svg-workarea-flybar-h:enabled .svg-workarea-flybar-h::-moz-selection{\\n     color: rgba(255,255,255,1);\\n }\\n\\n.svg-workarea-flybar-h:enabled .svg-workarea-flybar-h::selection{\\n     color: rgba(255,255,255,1);\\n }\\n\\n.svg-workarea-fly-p {\\n    box-shadow: none !important;\\n    background-color: var(--toolboxBackground);\\n    color: var(--toolboxColor);\\n    width: 200px;\\n    padding-left: 0px;\\n    padding-right: 0px;\\n}\\n\\n.svg-property-split3:after {\\n    display: table;\\n    clear: both;\\n}\\n\\n.svg-property-split3 div {\\n    /* float: left; */\\n    /* width: 49%; */\\n    display: inline-block;\\n}\\n\\n.svg-property-split2:after {\\n    display: table;\\n    clear: both;\\n}\\n\\n.svg-property-split2 div {\\n    /* float: left; */\\n    /* width: 49%; */\\n    display: inline-block;\\n}\\n\\n.svg-property {\\n    color: var(--toolboxFlyColor);\\n}\\n\\n.svg-property span {\\n    /* float: left; */\\n    display: block;\\n    font-size: 10px;\\n    margin: 0px 5px 0px 10px;\\n}\\n\\n.svg-property input {\\n    /* float: right; */\\n    /* position: relative; */\\n    /* left: 0px; */\\n    /* right: 0px; */\\n    display: block;\\n    margin: 0px 10px 12px 10px;\\n    border: unset;\\n    background-color: inherit;\\n    color: inherit;\\n    border-bottom: 1px solid var(--toolboxFlyColor);\\n}\\n\\n.svg-workarea-container {\\n    display: block;\\n    height: 100%;\\n}\\n\\n#rulers > div {\\n    background-color: var(--svgEditRulersBackground) !important;\\n    color: var(--svgEditRulersColor) !important;\\n}\\n\\n#svgcanvas {\\n    background-color: var(--svgEditWorkareaBackground) !important;\\n}\\n\\n.contextMenu {\\n    background-color: var(--svgEditWorkareaContextMenu) !important;\\n}\\n\\n.contextMenu A {\\n    color: var(--svgEditWorkareaContextColor) !important;\\n}\\n\\n.contextMenu LI:not(.disabled) A:hover {\\n    color: var(--toolboxItemActiveColor) !important;\\n}\\n\\n.contextMenu LI.separator {\\n    margin-top: 0px !important;\\n    border-color: var(--svgEditWorkareaContextBorder) !important;\\n}\\n\\n.svg-tools-fly {\\n    z-index: 9999;\\n    position: absolute;\\n    right: 25px;\\n    top: 55px;\\n    /* overflow-y: auto; */\\n    max-height: calc(100% - 75px);\\n    box-shadow: 0px 0px 5px rgb(0 0 0);\\n}\\n\\n.svg-tool-button {\\n    vertical-align: middle;\\n    display: inline-table;\\n    /* display: inline-block; */\\n    cursor: pointer;\\n    height: 30px;\\n    width: 30px;\\n    border-radius: 50%;\\n    margin: 2px 2px 2px 2px;\\n    background-color: var(--toolboxButton);\\n    /* padding-top: 5px; */\\n}\\n\\n.svg-tool-button span {\\n    display: block;\\n    margin: auto;\\n}\\n\\n.svg-tool-button:hover {\\n    background: rgba(0, 0, 0, 0.1);\\n}\\n\\n.svg-tool-active, .svg-tool-active:active, .svg-tool-active:hover {\\n    background-color: rgba(48,89,175,1);\\n}\\n\\n.leave-header-area {\\n    margin-top: 36px;\\n}\\n\\n.svg-sidenav {\\n    min-width: 160px;\\n    max-width: 200px;\\n    width: 200px;\\n    background: var(--sidenavBackgroung);\\n}\\n\\n/* tool bar top */\\n\\n.tools_panel {\\n    background-color: var(--headerBackground);\\n    color: var(--headerColor);\\n}\\n\\n.main-btn {\\n    height: 34px;\\n    width: 34px;\\n    min-width: unset !important;\\n    padding: unset !important;\\n    line-height: 34px;\\n    margin-left: 5px;\\n    margin-right: 5px;\\n}\\n\\n.main-btn mat-icon {\\n    font-size: 24px;\\n    height: unset;\\n    width: unset;\\n}\\n\\n.main-btn .to-top {\\n    display: inline-block;    ;\\n    height: 34px;\\n    width: 34px;    \\n}\\n\\n.main-btn .to-bottom  {\\n    display: inline-block;\\n    height: 34px;\\n    width: 34px;\\n}\\n\\n.main-btn .to-path {\\n    display: inline-block;\\n    height: 34px;\\n    width: 34px;\\n}\\n\\n.main-btn .group {\\n    background: url(\\\"/assets/images/group.svg\\\") no-repeat center center;\\n    background-size: contain;\\n    display: inline-block;\\n    height: 34px;\\n    width: 34px;\\n}\\n\\n.main-btn .ungroup {\\n    background: url(\\\"/assets/images/ungroup.svg\\\") no-repeat center center;\\n    background-size: contain;\\n    display: inline-block;\\n    height: 34px;\\n    width: 34px;\\n}\\n\\n.main-btn-sep {\\n    width: 1px;\\n    background: #888;\\n    border-left: 1px outset #888;\\n    margin: 5px 3px;\\n    padding: 0;\\n    height: 24px;\\n}\\n\\n/* --------------- */\\n\\n/* left panel */\\n\\n/* --------------- */\\n\\n.view-panel {\\n    max-height: 400px;\\n    overflow: auto;\\n}\\n\\n.leftbar-edit-btn {\\n    margin-top: 2px;\\n    font-size: 18px;\\n    height: 18px;\\n    width: 18px;\\n    padding-right: 15px;\\n}\\n\\n.leftbar-panel {\\n    margin-top: 4px;\\n    padding: 0px 0px 0px 0px;\\n    font-size: 11px;\\n    background-color: var(--toolboxPanelBackgroung);\\n    color: var(--toolboxColor);\\n    overflow: auto;\\n    max-height: 200px;\\n}\\n\\n.leftbar-item {\\n    padding: 3px 0px 1px 0px;\\n    display: flow-root;\\n}\\n\\n.leftbar-item-active {\\n    background-color: var(--toolboxItemActiveBackgroung);\\n    color: var(--toolboxItemActiveColor);\\n}\\n\\n.leftbar-item span {\\n    padding-left: 15px;\\n    float: left;\\n}\\n\\n.leftbar-item mat-icon {\\n    float: right;\\n    font-size: 18px;\\n}\\n\\n::ng-deep .svg-workarea-leftbar-p .mat-expansion-panel-body {\\n    margin: 0px 0px 0px 0px !important;\\n    padding: 0px 0px 0px 0px !important;\\n    /* padding-left: 10px !important; */\\n    flex-wrap: wrap !important;\\n}\\n\\n::ng-deep .svg-workarea-fly-p .mat-expansion-panel-body {\\n    margin: 0px 0px 0px 0px !important;\\n    padding: 0px 0px 0px 0px !important;\\n    /* padding-left: 10px !important; */\\n    flex-wrap: wrap !important;\\n}\\n\\n::ng-deep .mat-menu-item {\\n    font-size: 11px;\\n    height: 30px !important;\\n    line-height: unset !important;\\n}\\n\\n.rightbar-panel {\\n    margin-top: 4px;\\n    background-color: var(--toolboxPanelBackgroung);\\n    color: var(--toolboxColor);\\n}\\n\\n.mat-expansion-panel-header-title span {\\n    padding-top: 3px;\\n}\\n\\n.mat-expansion-panel-spacing {\\n    margin: 0px 0px 0px 0px !important;\\n}\\n\\n.bottom-bar {\\n    position: absolute;\\n    left: 0px;\\n    right: 0;\\n    bottom: 0;\\n    height: 30px;\\n    overflow: visible;\\n}\\n\\n.zoom-menu {\\n    float: left;\\n    padding-left: 5px;\\n    width: 90px;\\n}\\n\\n.zoom-value {\\n    border: unset;\\n    display: inline-block;\\n}\\n\\n.zoom-label {\\n    display: inline-block;\\n    height: 25px;\\n}\\n\\n.zoom-value span {\\n    display: inline-block;\\n}\\n\\n.zoom-value .selection,\\nbutton {\\n    display: inline-block;\\n}\\n\\n.zoom-value button {\\n    /* width: unset; */\\n    z-index: 9999;\\n    background-color: var(--footZoomBackground);\\n    color: var(--footZoomColor);\\n    border: unset;\\n}\\n\\n.zoom-value ul,\\nli {\\n    /* width: unset; */\\n    background-color: var(--footZoomBackground);\\n    color: var(--footZoomColor);\\n    border: unset;\\n}\\n\\n.zoom-value ul {\\n    left: 0px;\\n}\\n\\n.zoom-value li:hover {\\n    background-color: var(--footZoomBackgroundHover);\\n}\\n\\n.colors {\\n    position: absolute;\\n    left: 25px;\\n    top: 0px;\\n}\\n\\n.colors-palette {\\n    position: absolute;\\n    left: 165px;\\n    top: 0px;\\n    right: 0px;\\n    bottom: 0px;\\n}\\n\\n.color-fill {\\n    position: relative;\\n    top: 3px;\\n    left: 10px;\\n    cursor: pointer;\\n    width: 14px;\\n    height: 14px;\\n    border: 1px solid rgba(255, 255, 255, 0.75);\\n}\\n\\n.color-stroke {\\n    position: absolute;\\n    top: 3px;\\n    left: 30px;\\n    cursor: pointer;\\n    width: 14px;\\n    height: 14px;\\n    border: 1px solid rgba(255, 255, 255, 0.75);\\n}\\n\\n.style-stroke {\\n    display: block !important;\\n    margin: 0px 10px 12px 10px;\\n    background-color: inherit;\\n    color: inherit;\\n}\\n\\n.style-stroke option {\\n    background-color: rgba(33, 33, 33, 1);\\n    color: rgba(255, 255, 255, 1);\\n}\\n\\n.font-family {\\n    display: block;\\n    margin: 0px 10px 12px 10px;\\n    background-color: inherit;\\n    color: inherit;\\n}\\n\\n.font-family option {\\n    background-color: rgba(33, 33, 33, 1);\\n    color: rgba(255, 255, 255, 1);\\n}\\n\\n.text-align {\\n    display: block;\\n    margin: 0px 10px 12px 10px;\\n    background-color: inherit;\\n    color: inherit;\\n}\\n\\n.text-align option {\\n    background-color: rgba(33, 33, 33, 1);\\n    color: rgba(255, 255, 255, 1);\\n}\\n\\nselect#start_marker option[value=\\\"A\\\"] {\\n    background: url(\\\"/assets/images/select-pointer.svg\\\");\\n}\\n\\nselect#start_marker option[value=\\\"B\\\"] {\\n    background: url(\\\"/assets/images/select-pointer.svg\\\");\\n}\\n\\nselect#start_marker option[value=\\\"C\\\"] {\\n    background: url(\\\"/assets/images/select-pointer.svg\\\");\\n}\\n\\nselect#start_marker option[value=\\\"D\\\"] {\\n    background: url(\\\"/assets/images/select-pointer.svg\\\");\\n}\\n\\n.icon-select {\\n    background: url(\\\"/assets/images/select-pointer.svg\\\") no-repeat center center;\\n    background-size: contain;\\n    height: 30px;\\n    width: 30px;\\n}\\n\\n.icon-pencil {\\n    background: url(\\\"/assets/images/pencil.svg\\\") no-repeat center center;\\n    background-size: contain;\\n    height: 30px;\\n    width: 30px;\\n}\\n\\n.icon-line {\\n    background: url(\\\"/assets/images/line.svg\\\") no-repeat center center;\\n    background-size: contain;\\n    height: 30px;\\n    width: 30px;\\n}\\n\\n.icon-rect {\\n    background: url(\\\"/assets/images/rect.svg\\\") no-repeat center center;\\n    background-size: contain;\\n    height: 30px;\\n    width: 30px;\\n}\\n\\n.icon-circle {\\n    background: url(\\\"/assets/images/circle.svg\\\") no-repeat center center;\\n    background-size: contain;\\n    height: 30px;\\n    width: 30px;\\n}\\n\\n.icon-ellipse {\\n    background: url(\\\"/assets/images/ellipse.svg\\\") no-repeat center center;\\n    background-size: contain;\\n    height: 30px;\\n    width: 30px;\\n}\\n\\n.icon-path {\\n    background: url(\\\"/assets/images/path.svg\\\") no-repeat center center;\\n    background-size: contain;\\n    height: 30px;\\n    width: 30px;\\n}\\n\\n.icon-text {\\n    background: url(\\\"/assets/images/text.svg\\\") no-repeat center center;\\n    background-size: contain;\\n    height: 30px;\\n    width: 30px;\\n}\\n\\n.icon-image {\\n    background: url(\\\"/assets/images/image.svg\\\") no-repeat center center;\\n    background-size: contain;\\n    height: 30px;\\n    width: 30px;\\n}\\n\\n.icon-align-left {\\n    background: url(\\\"/assets/images/align-left.svg\\\") no-repeat center center;\\n    background-size: contain;\\n    height: 30px;\\n    width: 30px;\\n}\\n\\n.icon-align-center {\\n    background: url(\\\"/assets/images/align-center.svg\\\") no-repeat center center;\\n    background-size: contain;\\n    height: 30px;\\n    width: 30px;\\n}\\n\\n.icon-align-right {\\n    background: url(\\\"/assets/images/align-right.svg\\\") no-repeat center center;\\n    background-size: contain;\\n    height: 30px;\\n    width: 30px;\\n}\\n\\n.icon-align-top {\\n    background: url(\\\"/assets/images/align-top.svg\\\") no-repeat center center;\\n    background-size: contain;\\n    height: 30px;\\n    width: 30px;\\n}\\n\\n.icon-align-middle {\\n    background: url(\\\"/assets/images/align-middle.svg\\\") no-repeat center center;\\n    background-size: contain;\\n    height: 30px;\\n    width: 30px;\\n}\\n\\n.icon-align-bottom {\\n    background: url(\\\"/assets/images/align-bottom.svg\\\") no-repeat center center;\\n    background-size: contain;\\n    height: 30px;\\n    width: 30px;\\n}\\n\\n.icon-flip-orizontal {\\n    background: url(\\\"/assets/images/flip-orizontal.svg\\\") no-repeat center center;\\n    background-size: contain;\\n    height: 30px;\\n    width: 30px;\\n}\\n\\n.icon-flip-vertical {\\n    background: url(\\\"/assets/images/flip-vertical.svg\\\") no-repeat center center;\\n    background-size: contain;\\n    height: 30px;\\n    width: 30px;\\n}\\n\\n.icon-linejoin-miter {\\n    background: url(\\\"/assets/images/linejoin-miter.svg\\\") no-repeat center center;\\n    background-size: contain;\\n    height: 30px;\\n    width: 30px;\\n}\\n\\n.icon-linejoin-round {\\n    background: url(\\\"/assets/images/linejoin-round.svg\\\") no-repeat center center;\\n    background-size: contain;\\n    height: 30px;\\n    width: 30px;\\n}\\n\\n.icon-linejoin-bevel {\\n    background: url(\\\"/assets/images/linejoin-bevel.svg\\\") no-repeat center center;\\n    background-size: contain;\\n    height: 30px;\\n    width: 30px;\\n}\\n\\n.icon-linecap-butt {\\n    background: url(\\\"/assets/images/linecap-butt.svg\\\") no-repeat center center;\\n    background-size: contain;\\n    height: 30px;\\n    width: 30px;\\n}\\n\\n.icon-linecap-square {\\n    background: url(\\\"/assets/images/linecap-square.svg\\\") no-repeat center center;\\n    background-size: contain;\\n    height: 30px;\\n    width: 30px;\\n}\\n\\n.icon-linecap-round {\\n    background: url(\\\"/assets/images/linecap-round.svg\\\") no-repeat center center;\\n    background-size: contain;\\n    height: 30px;\\n    width: 30px;\\n}\\n\\n.icon-tool {\\n    background-size: auto;\\n    height: 30px;\\n    width: 30px;\\n    color: rgba(255, 255, 255, 1);\\n    background-position: center; /* Center the image */\\n    background-repeat: no-repeat; /* Do not repeat the image */\\n}\\n\\n.icon-switch {\\n    background: url(\\\"/assets/images/switch.svg\\\") no-repeat center center;\\n}\\n\\n.icon-value {\\n    background: url(\\\"/assets/images/value.svg\\\") no-repeat center center;\\n}\\n\\n.icon-editvalue {\\n    background: url(\\\"/assets/images/editvalue.svg\\\") no-repeat center center;\\n}\\n\\n.icon-selectvalue {\\n    background: url(\\\"/assets/images/selectvalue.svg\\\") no-repeat center center;\\n}\\n\\n.icon-progress-v {\\n    background: url(\\\"/assets/images/progress-v.svg\\\") no-repeat center center;\\n}\\n\\n.icon-semaphore {\\n    background: url(\\\"/assets/images/semaphore.svg\\\") no-repeat center center;\\n}\\n\\n.icon-button {\\n    background: url(\\\"/assets/images/button.svg\\\") no-repeat center center;\\n}\\n\\n.icon-chart {\\n    background: url(\\\"/assets/images/chart.svg\\\") no-repeat center center;\\n}\\n\\n.icon-bag {\\n    background: url(\\\"/assets/images/bag.svg\\\") no-repeat center center;\\n}\\n\\n.icon-pipe {\\n    background: url(\\\"/assets/images/pipe.svg\\\") no-repeat center center;\\n}\\n\\n.icon-slider {\\n    background: url(\\\"/assets/images/slider.svg\\\") no-repeat center center;\\n}\\n\"","module.exports = \"<div *ngIf=\\\"isLoading\\\" style=\\\"position:absolute;top:0px;left:0px;right:0px;bottom:0px;background-color:rgba(0,0,0,0.2); z-index: 99999;\\\">\\n    <mat-progress-bar mode=\\\"indeterminate\\\" color=\\\"warn\\\" style=\\\"position: absolute; top: 0px; left: 0px; right: 0px; z-index: 99999;\\\">\\n    </mat-progress-bar>\\n</div>\\n<div id=\\\"svg_editor_container\\\">\\n    <mat-drawer-container class=\\\"svg-workarea-container\\\">\\n        <!-- LEFT BAR -->\\n        <mat-drawer mode=\\\"side\\\" opened=\\\"true\\\" class=\\\"svg-sidenav leave-header-area\\\" disableClose>\\n            <mat-accordion multi=\\\"true\\\">\\n                <mat-expansion-panel class=\\\"svg-workarea-leftbar-p\\\" (opened)=\\\"panelsState.panelView=true;savePanelState()\\\" (closed)=\\\"panelsState.panelView=false;savePanelState()\\\"\\n                    hideToggle=\\\"true\\\" [expanded]=\\\"panelsState.panelView\\\">\\n                    <mat-expansion-panel-header class=\\\"svg-workarea-leftbar-h\\\">\\n                        <mat-panel-title>\\n                            <mat-icon aria-label=\\\"Select\\\" *ngIf=\\\"panelsState.panelView\\\">expand_less</mat-icon>\\n                            <mat-icon aria-label=\\\"Select\\\" *ngIf=\\\"!panelsState.panelView\\\">expand_more</mat-icon>\\n                            <span>{{'editor.views' | translate}}</span> <!-- PROJECT VIEWS -->\\n                        </mat-panel-title>\\n                        <mat-icon aria-label=\\\"Add\\\" title=\\\"Add View\\\" *ngIf=\\\"panelsState.panelView\\\" class=\\\"leftbar-edit-btn\\\" (click)=\\\"onAddDoc();$event.stopPropagation()\\\">add\\n                        </mat-icon>\\n                        <mat-icon aria-label=\\\"Import\\\" title=\\\"{{'editor.view-import' | translate}}\\\" *ngIf=\\\"panelsState.panelView\\\" class=\\\"leftbar-edit-btn\\\"\\n                            (click)=\\\"onImportView($event);$event.stopPropagation()\\\">system_update_alt</mat-icon>\\n                        <input type=\\\"file\\\" #viewFileImportInput style=\\\"display: none\\\" id=\\\"viewFileUpload\\\" (click)=\\\"$event.stopPropagation()\\\"\\n                            (change)=\\\"onViewFileChangeListener($event)\\\" accept=\\\".fuxav\\\" />\\n                    </mat-expansion-panel-header>\\n                    <div class=\\\"leftbar-panel view-panel\\\">\\n                        <div *ngIf=\\\"hmi.views && hmi.views.length <= 0\\\">\\n                            <br>\\n                        </div>\\n                        <div *ngFor=\\\"let item of getViewsSorted()\\\" (click)=\\\"onSelectView(item)\\\" [ngClass]=\\\"{'leftbar-item-active': isViewActive(item)}\\\"\\n                            class=\\\"leftbar-item mycursor-pointer\\\">\\n                            <span>{{item.name}}</span>\\n                            <mat-icon aria-label=\\\"More\\\" [matMenuTriggerFor]=\\\"menuview\\\" class=\\\"\\\">more_vert</mat-icon>\\n                            <mat-menu #menuview=\\\"matMenu\\\" class=\\\"leftbar-item-menu\\\">\\n                                <button mat-menu-item (click)=\\\"onDeleteView(item)\\\">{{'editor.view-delete' | translate}}</button>\\n                                <button mat-menu-item (click)=\\\"onRenameView(item)\\\">{{'editor.view-rename' | translate}}</button>\\n                                <button mat-menu-item (click)=\\\"onPropertyView(item)\\\">{{'editor.view-property' | translate}}</button>\\n                                <button mat-menu-item (click)=\\\"onCloneView(item)\\\" *ngIf=\\\"item.type !== cardViewType\\\">{{'editor.view-clone' | translate}}</button>\\n                                <button mat-menu-item (click)=\\\"onExportView(item)\\\" *ngIf=\\\"item.type !== cardViewType\\\">{{'editor.view-export' | translate}}</button>\\n                            </mat-menu>\\n                        </div>\\n                    </div>\\n                </mat-expansion-panel>\\n                <div *ngIf=\\\"editorMode === editorModeType.SVG\\\">\\n                    <mat-expansion-panel class=\\\"svg-workarea-leftbar-p\\\" (opened)=\\\"panelsState.panelGeneral=true;savePanelState()\\\"\\n                        (closed)=\\\"panelsState.panelGeneral=false;savePanelState()\\\" hideToggle=\\\"true\\\" [expanded]=\\\"panelsState.panelGeneral\\\">\\n                        <mat-expansion-panel-header class=\\\"svg-workarea-leftbar-h\\\">\\n                            <mat-panel-title>\\n                                <mat-icon aria-label=\\\"Select\\\" *ngIf=\\\"panelsState.panelGeneral\\\">expand_less</mat-icon>\\n                                <mat-icon aria-label=\\\"Select\\\" *ngIf=\\\"!panelsState.panelGeneral\\\">expand_more</mat-icon>\\n                                <span>{{'editor.general' | translate}}</span> <!-- GENERAL -->\\n                            </mat-panel-title>\\n                        </mat-expansion-panel-header>\\n\\n                        <div id=\\\"__tools_left\\\" class=\\\"leftbar-panel\\\">\\n                            <div class=\\\"svg-tool-button\\\" [ngClass]=\\\"{'svg-tool-active': isModeActive('select')}\\\" (click)=\\\"setMode('select')\\\">\\n                                <span class=\\\"icon-select\\\"></span>\\n                            </div>\\n                            <div class=\\\"svg-tool-button\\\" [ngClass]=\\\"{'svg-tool-active': isModeActive('fhpath')}\\\" (click)=\\\"setMode('fhpath')\\\">\\n                                <span class=\\\"icon-pencil\\\"></span>\\n                            </div>\\n                            <div class=\\\"svg-tool-button\\\" [ngClass]=\\\"{'svg-tool-active': isModeActive('line')}\\\" (click)=\\\"setMode('line')\\\">\\n                                <span class=\\\"icon-line\\\"></span>\\n                            </div>\\n                            <div class=\\\"svg-tool-button\\\" [ngClass]=\\\"{'svg-tool-active': isModeActive('rect')}\\\" (click)=\\\"setMode('rect')\\\">\\n                                <span class=\\\"icon-rect\\\"></span>\\n                            </div>\\n                            <div class=\\\"svg-tool-button\\\" [ngClass]=\\\"{'svg-tool-active': isModeActive('circle')}\\\" (click)=\\\"setMode('circle')\\\">\\n                                <span class=\\\"icon-circle\\\"></span>\\n                            </div>\\n                            <div class=\\\"svg-tool-button\\\" [ngClass]=\\\"{'svg-tool-active': isModeActive('ellipse')}\\\" (click)=\\\"setMode('ellipse')\\\">\\n                                <span class=\\\"icon-ellipse\\\"></span>\\n                            </div>\\n                            <div class=\\\"svg-tool-button\\\" [ngClass]=\\\"{'svg-tool-active': isModeActive('path')}\\\" (click)=\\\"setMode('path')\\\">\\n                                <span class=\\\"icon-path\\\"></span>\\n                            </div>\\n                            <div class=\\\"svg-tool-button\\\" [ngClass]=\\\"{'svg-tool-active': isModeActive('text')}\\\" (click)=\\\"setMode('text')\\\">\\n                                <span class=\\\"icon-text\\\"></span>\\n                            </div>\\n                            <div class=\\\"svg-tool-button\\\" [ngClass]=\\\"{'svg-tool-active': (isModeActive('image') || isModeActive('svg-image'))}\\\"\\n                                (click)=\\\"imagefile.value = '';imagefile.click();\\\">\\n                                <span class=\\\"icon-image\\\"></span>\\n                                <input #imagefile type=\\\"file\\\" style=\\\"display: none;\\\" (change)=\\\"onSetImage($event)\\\" accept=\\\"image/png|jpg|svg\\\" />\\n                            </div>\\n                            <div id=\\\"tool_line\\\" style=\\\"display: none;\\\">\\n                                <span class=\\\"icon-image\\\"></span>\\n                            </div>\\n                        </div>\\n                    </mat-expansion-panel>\\n                    <!-- CONTROLS  -->\\n                    <mat-expansion-panel class=\\\"svg-workarea-leftbar-p\\\" (opened)=\\\"panelsState.panelD=true;savePanelState()\\\" (closed)=\\\"panelsState.panelD=false;savePanelState()\\\"\\n                        hideToggle=\\\"true\\\" [expanded]=\\\"panelsState.panelD\\\">\\n                        <mat-expansion-panel-header class=\\\"svg-workarea-leftbar-h\\\">\\n                            <mat-panel-title>\\n                                <mat-icon aria-label=\\\"Select\\\" *ngIf=\\\"panelsState.panelD\\\">expand_less</mat-icon>\\n                                <mat-icon aria-label=\\\"Select\\\" *ngIf=\\\"!panelsState.panelD\\\">expand_more</mat-icon>\\n                                <span>{{'editor.controls' | translate}}</span>\\n                            </mat-panel-title>\\n                        </mat-expansion-panel-header>\\n                        <div id=\\\"__tools_left\\\" class=\\\"leftbar-panel\\\">\\n                            <div class=\\\"svg-tool-button\\\" title=\\\"{{'editor.controls-input' | translate}}\\\" [ngClass]=\\\"{'svg-tool-active': isModeActive('html_input')}\\\"\\n                                (click)=\\\"setMode('html_input')\\\">\\n                                <span class=\\\"icon-tool icon-editvalue\\\"></span>\\n                            </div>\\n                            <div class=\\\"svg-tool-button\\\" title=\\\"{{'editor.controls-output' | translate}}\\\" [ngClass]=\\\"{'svg-tool-active': isModeActive('value')}\\\"\\n                                (click)=\\\"setMode('value')\\\">\\n                                <span class=\\\"icon-tool icon-value\\\"></span>\\n                            </div>\\n                            <div class=\\\"svg-tool-button\\\" title=\\\"{{'editor.controls-button' | translate}}\\\" [ngClass]=\\\"{'svg-tool-active': isModeActive('html_button')}\\\"\\n                                (click)=\\\"setMode('html_button')\\\">\\n                                <span class=\\\"icon-tool icon-button\\\"></span>\\n                            </div>\\n                            <div class=\\\"svg-tool-button\\\" title=\\\"{{'editor.controls-select' | translate}}\\\" [ngClass]=\\\"{'svg-tool-active': isModeActive('html_select')}\\\"\\n                                (click)=\\\"setMode('html_select')\\\">\\n                                <span class=\\\"icon-tool icon-selectvalue\\\"></span>\\n                            </div>\\n                            <div class=\\\"svg-tool-button\\\" title=\\\"{{'editor.controls-progress' | translate}}\\\" [ngClass]=\\\"{'svg-tool-active': isModeActive('gauge_progress')}\\\"\\n                                (click)=\\\"setMode('gauge_progress')\\\">\\n                                <span class=\\\"icon-tool icon-progress-v\\\"></span>\\n                            </div>\\n                            <div class=\\\"svg-tool-button\\\" title=\\\"{{'editor.controls-semaphore' | translate}}\\\" [ngClass]=\\\"{'svg-tool-active': isModeActive('gauge_semaphore')}\\\"\\n                                (click)=\\\"setMode('gauge_semaphore')\\\">\\n                                <span class=\\\"icon-tool icon-semaphore\\\"></span>\\n                            </div>\\n                            <div class=\\\"svg-tool-button\\\" title=\\\"{{'editor.controls-chart' | translate}}\\\" [ngClass]=\\\"{'svg-tool-active': isModeActive('html_chart')}\\\"\\n                                (click)=\\\"setMode('html_chart')\\\">\\n                                <span class=\\\"icon-tool icon-chart\\\"></span>\\n                            </div>\\n                            <div class=\\\"svg-tool-button\\\" title=\\\"{{'editor.controls-bag' | translate}}\\\" [ngClass]=\\\"{'svg-tool-active': isModeActive('html_bag')}\\\"\\n                                (click)=\\\"setMode('html_bag')\\\">\\n                                <span class=\\\"icon-tool icon-bag\\\"></span>\\n                            </div>\\n                            <div class=\\\"svg-tool-button\\\" title=\\\"{{'editor.controls-pipe' | translate}}\\\" [ngClass]=\\\"{'svg-tool-active': isModeActive('pipe')}\\\"\\n                                (click)=\\\"setMode('pipe')\\\">\\n                                <span class=\\\"icon-tool icon-pipe\\\"></span>\\n                            </div>\\n                            <div class=\\\"svg-tool-button\\\" title=\\\"{{'editor.controls-slider' | translate}}\\\" [ngClass]=\\\"{'svg-tool-active': isModeActive('html_slider')}\\\"\\n                                (click)=\\\"setMode('html_slider')\\\">\\n                                <span class=\\\"icon-tool icon-slider\\\"></span>\\n                            </div>\\n                            <div class=\\\"svg-tool-button\\\" title=\\\"{{'editor.controls-switch' | translate}}\\\" [ngClass]=\\\"{'svg-tool-active': isModeActive('html_switch')}\\\"\\n                                (click)=\\\"setMode('html_switch')\\\">\\n                                <span class=\\\"icon-tool icon-switch\\\"></span>\\n                            </div>\\n                        </div>\\n                    </mat-expansion-panel>\\n                    <!-- SHAPES -->\\n                    <mat-expansion-panel *ngFor=\\\"let shGrp of shapesGrps\\\" class=\\\"svg-workarea-leftbar-p\\\" (opened)=\\\"panelsState[shGrp.name]=true;savePanelState()\\\"\\n                        (closed)=\\\"panelsState[shGrp.name]=false;savePanelState()\\\" hideToggle=\\\"true\\\" [expanded]=\\\"panelsState[shGrp.name]\\\">\\n                        <mat-expansion-panel-header class=\\\"svg-workarea-leftbar-h\\\">\\n                            <mat-panel-title>\\n                                <mat-icon aria-label=\\\"Select\\\" *ngIf=\\\"panelsState[shGrp.name]\\\">expand_less</mat-icon>\\n                                <mat-icon aria-label=\\\"Select\\\" *ngIf=\\\"!panelsState[shGrp.name]\\\">expand_more</mat-icon>\\n                                <span>{{shGrp.name | translate}}</span>\\n                            </mat-panel-title>\\n                        </mat-expansion-panel-header>\\n                        <div id=\\\"__tools_left\\\" class=\\\"leftbar-panel\\\">\\n                            <div *ngFor=\\\"let shape of shGrp.shapes\\\" style=\\\"margin-left: 3px;margin-right: 3px;\\\" class=\\\"svg-tool-button\\\"\\n                                [ngClass]=\\\"{'svg-tool-active': isModeActive(shape.name)}\\\" (click)=\\\"setMode(shape.name)\\\">\\n                                <span class=\\\"icon-tool\\\" [style.backgroundImage]=\\\"'url(' + shape.ico + ')'\\\"> </span>\\n                            </div>\\n                        </div>\\n                    </mat-expansion-panel>\\n                </div>\\n            </mat-accordion>\\n        </mat-drawer>\\n        <!-- END LEFT BAR -->\\n        <!-- WORK AREA -->\\n        <mat-drawer-content>\\n            <!-- SVG-EDITOR -->\\n            <div [style.display]=\\\"(editorMode === editorModeType.SVG)?'block':'none' \\\">\\n                <!-- RIGHT BAR -->\\n                <div class=\\\"svg-tools-fly\\\">\\n                    <mat-expansion-panel class=\\\"svg-workarea-fly-p\\\" (opened)=\\\"panelPropertyIdOpenState = true\\\" (closed)=\\\"panelPropertyIdOpenState = false\\\" hideToggle=\\\"true\\\"\\n                        expanded=\\\"true\\\" style=\\\"display:none\\\">\\n                        <mat-expansion-panel-header class=\\\"svg-workarea-flybar-h\\\">\\n                            <mat-panel-title>\\n                                <mat-icon aria-label=\\\"Select\\\" *ngIf=\\\"panelPropertyIdOpenState\\\">expand_less</mat-icon>\\n                                <mat-icon aria-label=\\\"Select\\\" *ngIf=\\\"!panelPropertyIdOpenState\\\">expand_more</mat-icon>\\n                                <span>{{'editor.interactivity' | translate}}</span> <!-- INTERACTIVITY -->\\n                            </mat-panel-title>\\n                        </mat-expansion-panel-header>\\n                        <div id=\\\"_selected_panel\\\">\\n                            <div class=\\\"_toolset\\\">\\n                                <label id=\\\"idLabel\\\" title=\\\"{{'editor.interactivity-id-title' | translate}}\\\" class=\\\"svg-property\\\">\\n                                    <span>{{'editor.interactivity-id' | translate}}</span>\\n                                    <input id=\\\"elem_id\\\" #selid class=\\\"attr_changer\\\" data-attr=\\\"id\\\" type=\\\"text\\\" />\\n                                </label>\\n                                <label id=\\\"classLabel\\\" title=\\\"{{'editor.interactivity-class-title' | translate}}\\\" class=\\\"svg-property\\\">\\n                                    <span>{{'editor.interactivity-class' | translate}}</span>\\n                                    <input id=\\\"elem_class\\\" class=\\\"attr_changer\\\" data-attr=\\\"class\\\" type=\\\"text\\\" />\\n                                </label>\\n                            </div>\\n                        </div>\\n                    </mat-expansion-panel>\\n                    <mat-expansion-panel class=\\\"svg-workarea-fly-p\\\" (opened)=\\\"panelPropertyTransformOpenState = true\\\" (closed)=\\\"panelPropertyTransformOpenState = false\\\"\\n                        hideToggle=\\\"true\\\" expanded=\\\"true\\\">\\n                        <mat-expansion-panel-header class=\\\"svg-workarea-leftbar-h\\\">\\n                            <mat-panel-title>\\n                                <mat-icon aria-label=\\\"Select\\\" *ngIf=\\\"panelPropertyTransformOpenState\\\">expand_less</mat-icon>\\n                                <mat-icon aria-label=\\\"Select\\\" *ngIf=\\\"!panelPropertyTransformOpenState\\\">expand_more</mat-icon>\\n                                <span>{{'editor.transform' | translate}}</span> <!-- TRANSFORM SIZE/POSITION-->\\n                            </mat-panel-title>\\n                        </mat-expansion-panel-header>\\n                        <div id=\\\"_selected_panel\\\" class=\\\"rightbar-panel\\\">\\n                            <div class=\\\"_toolset\\\">\\n                                <div id=\\\"xy_panel\\\" class=\\\"_toolset\\\">\\n                                    <div class=\\\"svg-property-split2\\\">\\n                                        <div class=\\\"svg-property\\\">\\n                                            <span>{{'editor.transform-x' | translate}}</span>\\n                                            <input id=\\\"selected_x\\\" class=\\\"attr_changer\\\" title=\\\"{{'editor.transform-x-title' | translate}}\\\" size=\\\"4\\\" data-attr=\\\"x\\\" />\\n                                        </div>\\n                                        <div class=\\\"svg-property\\\">\\n                                            <span>{{'editor.transform-y' | translate}}</span>\\n                                            <input id=\\\"selected_y\\\" class=\\\"attr_changer\\\" title=\\\"{{'editor.transform-y-title' | translate}}\\\" size=\\\"4\\\" data-attr=\\\"y\\\" />\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div id=\\\"line_panel\\\">\\n                                    <div class=\\\"svg-property-split2\\\">\\n                                        <div class=\\\"svg-property\\\">\\n                                            <span>{{'editor.transform-x1' | translate}}</span>\\n                                            <input id=\\\"line_x1\\\" class=\\\"attr_changer\\\" title=\\\"{{'editor.transform-x1-title' | translate}}\\\" size=\\\"4\\\" data-attr=\\\"x1\\\" />\\n                                        </div>\\n                                        <div class=\\\"svg-property\\\">\\n                                            <span>{{'editor.transform-y1' | translate}}</span>\\n                                            <input id=\\\"line_y1\\\" class=\\\"attr_changer\\\" title=\\\"{{'editor.transform-y1-title' | translate}}\\\" size=\\\"4\\\" data-attr=\\\"y1\\\" />\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"svg-property-split2\\\">\\n                                        <div class=\\\"svg-property\\\">\\n                                            <span>{{'editor.transform-x2' | translate}}</span>\\n                                            <input id=\\\"line_x2\\\" class=\\\"attr_changer\\\" title=\\\"{{'editor.transform-x2-title' | translate}}\\\" size=\\\"4\\\" data-attr=\\\"x2\\\" />\\n                                        </div>\\n                                        <div class=\\\"svg-property\\\">\\n                                            <span>{{'editor.transform-y2' | translate}}</span>\\n                                            <input id=\\\"line_y2\\\" class=\\\"attr_changer\\\" title=\\\"{{'editor.transform-y2-title' | translate}}\\\" size=\\\"4\\\" data-attr=\\\"y2\\\" />\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div id=\\\"rect_panel\\\">\\n                                    <div class=\\\"svg-property-split2\\\">\\n                                        <div class=\\\"svg-property\\\" title=\\\"{{'editor.transform-rect-width-title' | translate}}\\\">\\n                                            <span>{{'editor.transform-width' | translate}}</span>\\n                                            <input id=\\\"rect_width\\\" class=\\\"attr_changer\\\" size=\\\"4\\\" data-attr=\\\"width\\\" />\\n                                        </div>\\n                                        <div class=\\\"svg-property\\\" title=\\\"{{'editor.transform-rect-height-title' | translate}}\\\">\\n                                            <span>{{'editor.transform-height' | translate}}</span>\\n                                            <input id=\\\"rect_height\\\" class=\\\"attr_changer\\\" size=\\\"4\\\" data-attr=\\\"height\\\" />\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"svg-property-split2\\\">\\n                                        <div class=\\\"svg-property\\\" title=\\\"{{'editor.transform-rect-radius-title' | translate}}\\\">\\n                                            <span>{{'editor.transform-radiuscorner' | translate}}</span>\\n                                            <input id=\\\"rect_rx\\\" size=\\\"4\\\" value=\\\"0\\\" type=\\\"text\\\" data-attr=\\\"Corner Radius\\\" />\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div id=\\\"htmlctrl_panel\\\">\\n                                    <div class=\\\"svg-property-split2\\\">\\n                                        <div class=\\\"svg-property\\\" title=\\\"{{'editor.transform-rect-width-title' | translate}}\\\">\\n                                            <span>{{'editor.transform-width' | translate}}</span>\\n                                            <input id=\\\"htmlctrl_width\\\" class=\\\"attr_changer\\\" size=\\\"4\\\" data-attr=\\\"width\\\" />\\n                                        </div>\\n                                        <div class=\\\"svg-property\\\" title=\\\"{{'editor.transform-rect-height-title' | translate}}\\\">\\n                                            <span>{{'editor.transform-height' | translate}}</span>\\n                                            <input id=\\\"htmlctrl_height\\\" class=\\\"attr_changer\\\" size=\\\"4\\\" data-attr=\\\"height\\\" />\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div id=\\\"shape_panel\\\">\\n                                    <div class=\\\"svg-property-split2\\\">\\n                                        <div class=\\\"svg-property\\\" title=\\\"{{'editor.transform-rect-width-title' | translate}}\\\">\\n                                            <span>{{'editor.transform-width' | translate}}</span>\\n                                            <input id=\\\"shape_width\\\" class=\\\"attr_changer\\\" size=\\\"4\\\" data-attr=\\\"width\\\" />\\n                                        </div>\\n                                        <div class=\\\"svg-property\\\" title=\\\"{{'editor.transform-rect-height-title' | translate}}\\\">\\n                                            <span>{{'editor.transform-height' | translate}}</span>\\n                                            <input id=\\\"shape_height\\\" class=\\\"attr_changer\\\" size=\\\"4\\\" data-attr=\\\"height\\\" />\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div id=\\\"circle_panel\\\">\\n                                    <div class=\\\"svg-property-split2\\\">\\n                                        <div class=\\\"svg-property\\\">\\n                                            <span>{{'editor.transform-circlecx' | translate}}</span>\\n                                            <input id=\\\"circle_cx\\\" class=\\\"attr_changer\\\" title=\\\"{{'editor.transform-circlecx-title' | translate}}\\\" size=\\\"4\\\" data-attr=\\\"cx\\\" />\\n                                        </div>\\n                                        <div class=\\\"svg-property\\\">\\n                                            <span>{{'editor.transform-circlecy' | translate}}</span>\\n                                            <input id=\\\"circle_cy\\\" class=\\\"attr_changer\\\" title=\\\"{{'editor.transform-circlecy-title' | translate}}\\\" size=\\\"4\\\" data-attr=\\\"cy\\\" />\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"svg-property-split2\\\">\\n                                        <div class=\\\"svg-property\\\">\\n                                            <span>{{'editor.transform-circler' | translate}}</span>\\n                                            <input id=\\\"circle_r\\\" class=\\\"attr_changer\\\" title=\\\"{{'editor.transform-circler-title' | translate}}\\\" size=\\\"4\\\" data-attr=\\\"r\\\" />\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div id=\\\"ellipse_panel\\\">\\n                                    <div class=\\\"svg-property-split2\\\">\\n                                        <div class=\\\"svg-property\\\">\\n                                            <span>{{'editor.transform-ellipsecx' | translate}}</span>\\n                                            <input id=\\\"ellipse_cx\\\" class=\\\"attr_changer\\\" title=\\\"{{'editor.transform-ellipsecx-title' | translate}}\\\" size=\\\"4\\\" data-attr=\\\"cx\\\" />\\n                                        </div>\\n                                        <div class=\\\"svg-property\\\">\\n                                            <span>{{'editor.transform-ellipsecy' | translate}}</span>\\n                                            <input id=\\\"ellipse_cy\\\" class=\\\"attr_changer\\\" title=\\\"{{'editor.transform-ellipsecy-title' | translate}}\\\" size=\\\"4\\\" data-attr=\\\"cy\\\" />\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"svg-property-split2\\\">\\n                                        <div class=\\\"svg-property\\\">\\n                                            <span>{{'editor.transform-ellipserx' | translate}}</span>\\n                                            <input id=\\\"ellipse_rx\\\" class=\\\"attr_changer\\\" title=\\\"{{'editor.transform-ellipserx-title' | translate}}\\\" size=\\\"4\\\" data-attr=\\\"rx\\\" />\\n                                        </div>\\n                                        <div class=\\\"svg-property\\\">\\n                                            <span>{{'editor.transform-ellipsery' | translate}}</span>\\n                                            <input id=\\\"ellipse_ry\\\" class=\\\"attr_changer\\\" title=\\\"{{'editor.transform-ellipsery-title' | translate}}\\\" size=\\\"4\\\" data-attr=\\\"ry\\\" />\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div id=\\\"text_panel\\\">\\n                                    <div class=\\\"svg-property\\\">\\n                                        <span>{{'editor.transform-fontfamily' | translate}}</span>\\n                                        <select class=\\\"font-family\\\" id=\\\"font_family\\\" #fontfamily (change)=\\\"onFontFamilyChange(fontfamily.value)\\\">\\n                                            <option *ngFor=\\\"let font of fonts\\\" [style.fontFamily]=\\\"font\\\" [value]=\\\"font\\\">{{font}}</option>\\n                                        </select>\\n                                    </div>\\n\\n                                    <div class=\\\"svg-property-split2\\\">\\n                                        <div class=\\\"svg-property\\\">\\n                                            <span>{{'editor.transform-fontsize' | translate}}</span>\\n                                            <input id=\\\"font_size\\\" size=\\\"4\\\" value=\\\"0\\\" class=\\\"attr_changer\\\" title=\\\"{{'editor.transform-fontsize-title' | translate}}\\\" />\\n                                        </div>\\n                                        <div class=\\\"svg-property\\\">\\n                                            <span>{{'editor.transform-textalign' | translate}}</span>\\n                                            <select class=\\\"text-align\\\" id=\\\"text_anchor\\\" #textalign (change)=\\\"onTextAlignChange(textalign.value)\\\">\\n                                                <option value=\\\"start\\\">{{'editor.transform-left' | translate}}</option>\\n                                                <option value=\\\"middle\\\">{{'editor.transform-center' | translate}}</option>\\n                                                <option value=\\\"end\\\">{{'editor.transform-right' | translate}}</option>\\n                                            </select>\\n                                        </div>\\n                                    </div>\\n\\n                                    <!-- Not visible, but still used -->\\n                                    <input id=\\\"text\\\" type=\\\"text\\\" size=\\\"35\\\" />\\n                                </div>\\n                                <div id=\\\"image_panel\\\">\\n                                    <div class=\\\"svg-property-split2\\\">\\n                                        <div class=\\\"svg-property\\\">\\n                                            <span>{{'editor.transform-width' | translate}}</span>\\n                                            <input id=\\\"image_width\\\" class=\\\"attr_changer\\\" title=\\\"{{'editor.transform-image-width-title' | translate}}\\\" size=\\\"4\\\" data-attr=\\\"width\\\" />\\n                                        </div>\\n                                        <div class=\\\"svg-property\\\">\\n                                            <span>{{'editor.transform-height' | translate}}</span>\\n                                            <input id=\\\"image_height\\\" class=\\\"attr_changer\\\" title=\\\"{{'editor.transform-image-height-title' | translate}}\\\" size=\\\"4\\\"\\n                                                data-attr=\\\"height\\\" />\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"svg-property\\\" style=\\\"display: none;\\\">\\n                                        <div class=\\\"svg-property\\\">\\n                                            <span>{{'editor.transform-url' | translate}}</span>\\n                                            <input id=\\\"image_url\\\" class=\\\"attr_changer\\\" type=\\\"text\\\" title=\\\"{{'editor.transform-image-url-title' | translate}}\\\" />\\n                                        </div>\\n                                        <div class=\\\"svg-property\\\">\\n                                            <div class=\\\"svg-property\\\">\\n                                                <button id=\\\"change_image_url\\\" style=\\\"display:none;\\\">{{'editor.transform-change-image' | translate}}</button>\\n                                                <span id=\\\"url_notice\\\" title=\\\"{{'editor.transform-change-image-title' | translate}}\\\"></span>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div id=\\\"tool_angle\\\" title=\\\"{{'editor.transform-angle-title' | translate}}\\\" class=\\\"svg-property\\\">\\n                                    <div class=\\\"svg-property-split2\\\">\\n                                        <div class=\\\"svg-property\\\">\\n                                            <span>{{'editor.transform-angle' | translate}}</span>\\n                                            <input id=\\\"angle\\\" size=\\\"4\\\" value=\\\"0\\\" type=\\\"text\\\" />\\n                                        </div>\\n                                        <div class=\\\"svg-property\\\">\\n                                            <!-- <div class=\\\"svg-tool-button\\\" (click)=\\\"flipSelected('vertical')\\\" title=\\\"Flip vertically\\\">\\n                                        <span class=\\\"icon-flip-vertical\\\"></span>\\n                                        </div>\\n                                        <div class=\\\"svg-tool-button\\\" (click)=\\\"flipSelected('orizontal')\\\" title=\\\"Flip orizontally\\\">\\n                                        <span class=\\\"icon-flip-orizontal\\\"></span>\\n                                        </div> -->\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </mat-expansion-panel>\\n                    <mat-expansion-panel class=\\\"svg-workarea-fly-p\\\" (opened)=\\\"panelAlignOpenState = true\\\" (closed)=\\\"panelAlignOpenState = false\\\" hideToggle=\\\"true\\\" expanded=\\\"true\\\">\\n                        <mat-expansion-panel-header class=\\\"svg-workarea-leftbar-h\\\">\\n                            <mat-panel-title>\\n                                <mat-icon aria-label=\\\"Select\\\" *ngIf=\\\"panelAlignOpenState\\\">expand_less</mat-icon>\\n                                <mat-icon aria-label=\\\"Select\\\" *ngIf=\\\"!panelAlignOpenState\\\">expand_more</mat-icon>\\n                                <span>{{'editor.align' | translate}}</span> <!-- ALIGN-->\\n                            </mat-panel-title>\\n                        </mat-expansion-panel-header>\\n                        <div id=\\\"align_panel\\\" class=\\\"rightbar_panel\\\">\\n                            <div class=\\\"svg-tool-button\\\" (click)=\\\"onAlignSelected('left')\\\" title=\\\"{{'editor.align-left-title' | translate}}\\\">\\n                                <span class=\\\"icon-align-left\\\"></span>\\n                            </div>\\n                            <div class=\\\"svg-tool-button\\\" (click)=\\\"onAlignSelected('center')\\\" title=\\\"{{'editor.align-center-title' | translate}}Align Center\\\">\\n                                <span class=\\\"icon-align-center\\\"></span>\\n                            </div>\\n                            <div class=\\\"svg-tool-button\\\" (click)=\\\"onAlignSelected('right')\\\" title=\\\"{{'editor.align-right-title' | translate}}Align Right\\\">\\n                                <span class=\\\"icon-align-right\\\"></span>\\n                            </div>\\n                            <div class=\\\"svg-tool-button\\\" (click)=\\\"onAlignSelected('top')\\\" title=\\\"{{'editor.align-top-title' | translate}}Align Top\\\">\\n                                <span class=\\\"icon-align-top\\\"></span>\\n                            </div>\\n                            <div class=\\\"svg-tool-button\\\" (click)=\\\"onAlignSelected('middle')\\\" title=\\\"{{'editor.align-middle-title' | translate}}Align Middle\\\">\\n                                <span class=\\\"icon-align-middle\\\"></span>\\n                            </div>\\n                            <div class=\\\"svg-tool-button\\\" (click)=\\\"onAlignSelected('bottom')\\\" title=\\\"{{'editor.align-bottom-title' | translate}}Align Bottom\\\">\\n                                <span class=\\\"icon-align-bottom\\\"></span>\\n                            </div>\\n                        </div>\\n                    </mat-expansion-panel>\\n                    <mat-expansion-panel class=\\\"svg-workarea-fly-p\\\" (opened)=\\\"panelFillOpenState = true\\\" (closed)=\\\"panelFillOpenState = false\\\" hideToggle=\\\"true\\\" expanded=\\\"true\\\">\\n                        <mat-expansion-panel-header class=\\\"svg-workarea-leftbar-h\\\">\\n                            <mat-panel-title>\\n                                <mat-icon aria-label=\\\"Select\\\" *ngIf=\\\"panelFillOpenState\\\">expand_less</mat-icon>\\n                                <mat-icon aria-label=\\\"Select\\\" *ngIf=\\\"!panelFillOpenState\\\">expand_more</mat-icon>\\n                                <span>{{'editor.stroke' | translate}}</span> <!-- STROKE-->\\n                            </mat-panel-title>\\n                        </mat-expansion-panel-header>\\n                        <div class=\\\"rightbar_panel\\\">\\n                            <div class=\\\"_color_tool\\\" id=\\\"tool_stroke\\\">\\n                                <div class=\\\"svg-property-split2\\\">\\n                                    <div class=\\\"svg-property\\\">\\n                                        <span>{{'editor.stroke-width' | translate}}</span>\\n                                        <input id=\\\"stroke_width\\\" title=\\\"{{'editor.stroke-width-title' | translate}}\\\" size=\\\"4\\\" value=\\\"1\\\" type=\\\"text\\\" data-attr=\\\"Stroke Width\\\" />\\n                                    </div>\\n                                    <div class=\\\"svg-property\\\">\\n                                        <span>{{'editor.stroke-style' | translate}}</span>\\n                                        <select id=\\\"stroke_style\\\" class=\\\"style-stroke\\\" title=\\\"{{'editor.stroke-style-title' | translate}}\\\">\\n                                            <option selected=\\\"selected\\\" value=\\\"none\\\">&#8212;</option>\\n                                            <option value=\\\"2,2\\\">...</option>\\n                                            <option value=\\\"5,5\\\">- -</option>\\n                                            <option value=\\\"5,2,2,2\\\">- .</option>\\n                                            <option value=\\\"5,2,2,2,2,2\\\">- ..</option>\\n                                        </select>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"svg-property\\\">\\n                                    <div class=\\\"svg-tool-button\\\" id=\\\"linejoin_miter\\\" #linejoinmiter (click)=\\\"onSetStrokeOption(linejoinmiter)\\\"\\n                                        title=\\\"{{'editor.stroke-joinmiter-title' | translate}}\\\">\\n                                        <span class=\\\"icon-linejoin-miter\\\"></span>\\n                                    </div>\\n                                    <div class=\\\"svg-tool-button\\\" id=\\\"linejoin_round\\\" #linejoinround (click)=\\\"onSetStrokeOption(linejoinround)\\\"\\n                                        title=\\\"{{'editor.stroke-joinround-title' | translate}}\\\">\\n                                        <span class=\\\"icon-linejoin-round\\\"></span>\\n                                    </div>\\n                                    <div class=\\\"svg-tool-button\\\" id=\\\"linejoin_bevel\\\" #linejoinbevel (click)=\\\"onSetStrokeOption(linejoinbevel)\\\"\\n                                        title=\\\"{{'editor.stroke-joinbevel-title' | translate}}\\\">\\n                                        <span class=\\\"icon-linejoin-bevel\\\"></span>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"svg-property\\\">\\n                                    <div class=\\\"svg-tool-button\\\" id=\\\"linecap_butt\\\" #linecapbutt (click)=\\\"onSetStrokeOption(linecapbutt)\\\"\\n                                        title=\\\"{{'editor.stroke-capbutt-title' | translate}}\\\">\\n                                        <span class=\\\"icon-linecap-butt\\\"></span>\\n                                    </div>\\n                                    <div class=\\\"svg-tool-button\\\" id=\\\"linecap_square\\\" #linecapsquare (click)=\\\"onSetStrokeOption(linecapsquare)\\\"\\n                                        title=\\\"{{'editor.stroke-capsquare-title' | translate}}\\\">\\n                                        <span class=\\\"icon-linecap-square\\\"></span>\\n                                    </div>\\n                                    <div class=\\\"svg-tool-button\\\" id=\\\"linecap_round\\\" #linecapround (click)=\\\"onSetStrokeOption(linecapround)\\\"\\n                                        title=\\\"{{'editor.stroke-capround-title' | translate}}\\\">\\n                                        <span class=\\\"icon-linecap-round\\\"></span>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"svg-property-split2\\\" style=\\\"display: none\\\">\\n                                    <div class=\\\"svg-property\\\">\\n                                        <span for=\\\"class_shadow\\\">{{'editor.stroke-shadow' | translate}}</span>\\n                                        <input type=\\\"checkbox\\\" id=\\\"class_shadow\\\" name=\\\"class_shadow\\\" class=\\\"attr_changer\\\" title=\\\"{{'editor.stroke-shadow-title' | translate}}\\\"\\n                                            (change)=\\\"onSetShadowOption($event.target.checked)\\\" label=\\\"shadow\\\" />\\n                                    </div>\\n                                    <div class=\\\"svg-property\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </mat-expansion-panel>\\n                    <mat-expansion-panel class=\\\"svg-workarea-fly-p\\\" (opened)=\\\"panelMarkerOpenState = true\\\" (closed)=\\\"panelMarkerOpenState = false\\\" hideToggle=\\\"true\\\"\\n                        expanded=\\\"true\\\">\\n                        <mat-expansion-panel-header class=\\\"svg-workarea-leftbar-h\\\">\\n                            <mat-panel-title>\\n                                <mat-icon aria-label=\\\"Select\\\" *ngIf=\\\"panelMarkerOpenState\\\">expand_less</mat-icon>\\n                                <mat-icon aria-label=\\\"Select\\\" *ngIf=\\\"!panelMarkerOpenState\\\">expand_more</mat-icon>\\n                                <span>{{'editor.marker' | translate}}</span> <!-- MARKER-->\\n                            </mat-panel-title>\\n                        </mat-expansion-panel-header>\\n                        <div id=\\\"marker_panel\\\" class=\\\"rightbar_panel\\\">\\n                            <div class=\\\"svg-property-split3\\\">\\n                                <div class=\\\"svg-property\\\">\\n                                    <span>{{'editor.marker-start' | translate}}</span>\\n                                    <select id=\\\"start_marker\\\" #smarker class=\\\"style-stroke\\\" title=\\\"{{'editor.marker-start-title' | translate}}\\\"\\n                                        (click)=\\\"onSetMarker('start_marker', smarker.selectedIndex);\\\" onfocus=\\\"this.selectedIndex=-1;this.blur();\\\">\\n                                    </select>\\n                                </div>\\n                                <div class=\\\"svg-property\\\">\\n                                    <span>{{'editor.marker-middle' | translate}}</span>\\n                                    <select id=\\\"mid_marker\\\" #mmarker class=\\\"style-stroke\\\" title=\\\"{{'editor.marker-middle-title' | translate}}\\\"\\n                                        (click)=\\\"onSetMarker('mid_marker', mmarker.selectedIndex);\\\" onfocus=\\\"this.selectedIndex=-1;this.blur();\\\">\\n                                    </select>\\n                                </div>\\n                                <div class=\\\"svg-property\\\">\\n                                    <span>{{'editor.marker-end' | translate}}</span>\\n                                    <select id=\\\"end_marker\\\" #emarker class=\\\"style-stroke\\\" title=\\\"{{'editor.marker-end-title' | translate}}\\\"\\n                                        (click)=\\\"onSetMarker('end_marker', emarker.selectedIndex);\\\" onfocus=\\\"this.selectedIndex=-1;this.blur();\\\">\\n                                    </select>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </mat-expansion-panel>\\n                    <mat-expansion-panel class=\\\"svg-workarea-fly-p\\\" (opened)=\\\"panelHyperlinkOpenState = true\\\" (closed)=\\\"panelHyperlinkOpenState = false\\\" hideToggle=\\\"true\\\"\\n                        expanded=\\\"true\\\">\\n                        <mat-expansion-panel-header class=\\\"svg-workarea-leftbar-h\\\">\\n                            <mat-panel-title>\\n                                <mat-icon aria-label=\\\"Select\\\" *ngIf=\\\"panelHyperlinkOpenState\\\">expand_less</mat-icon>\\n                                <mat-icon aria-label=\\\"Select\\\" *ngIf=\\\"!panelHyperlinkOpenState\\\">expand_more</mat-icon>\\n                                <span>{{'editor.hyperlink' | translate}}</span> <!-- HYPELINK -->\\n                            </mat-panel-title>\\n                        </mat-expansion-panel-header>\\n                        <div id=\\\"a_panel\\\" class=\\\"rightbar_panel\\\">\\n                            <div class=\\\"svg-property\\\" style=\\\"display:table\\\">\\n                                <span>{{'editor.hyperlink-url' | translate}}</span>\\n                                <input id=\\\"link_url\\\" type=\\\"text\\\" />\\n                            </div>\\n                        </div>\\n                    </mat-expansion-panel>\\n                    <mat-expansion-panel class=\\\"svg-workarea-fly-p\\\" (opened)=\\\"panelEventOpenState = true\\\" (closed)=\\\"panelEventOpenState = false\\\" hideToggle=\\\"true\\\" expanded=\\\"true\\\">\\n                        <mat-expansion-panel-header class=\\\"svg-workarea-leftbar-h\\\">\\n                            <mat-panel-title>\\n                                <mat-icon aria-label=\\\"Select\\\" *ngIf=\\\"panelEventOpenState\\\">expand_less</mat-icon>\\n                                <mat-icon aria-label=\\\"Select\\\" *ngIf=\\\"!panelEventOpenState\\\">expand_more</mat-icon>\\n                                <span>{{'editor.interactivity' | translate}}</span> <!-- INTERACTIVITY -->\\n                            </mat-panel-title>\\n                        </mat-expansion-panel-header>\\n                        <div id=\\\"interaction_panel\\\" class=\\\"rightbar_panel\\\">\\n                            <gauge-base #gaugepanel *ngIf=\\\"selectedElement\\\" [settings]=getGaugeSettings(selectedElement) (edit)=\\\"onGaugeEdit($event)\\\"></gauge-base>\\n                        </div>\\n                    </mat-expansion-panel>\\n                </div>\\n                <!-- END RIGHT BAR -->\\n                <!-- Work Area -->\\n                <div id=\\\"svg_editor\\\" style=\\\"z-index:-1\\\">\\n                    <!-- Rules bar -->\\n                    <div id=\\\"rulers\\\">\\n                        <div id=\\\"ruler_corner\\\"></div>\\n                        <div id=\\\"ruler_x\\\">\\n                            <div>\\n                                <canvas height=\\\"15\\\"></canvas>\\n                            </div>\\n                        </div>\\n                        <div id=\\\"ruler_y\\\">\\n                            <div>\\n                                <canvas width=\\\"15\\\"></canvas>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <!-- END Rules bar -->\\n                    <!-- Draw Area -->\\n                    <div id=\\\"workarea\\\">\\n                        <style id=\\\"styleoverrides\\\" type=\\\"text/css\\\" media=\\\"screen\\\" scoped=\\\"scoped\\\"></style>\\n                        <div id=\\\"svgcanvas\\\" style=\\\"position:relative\\\">\\n                        </div>\\n                    </div>\\n                    <!-- END Draw Area -->\\n                    <!-- Draw top tool bar -->\\n                    <div id=\\\"tools_top\\\" class=\\\"tools_panel\\\">\\n                        <div id=\\\"editor_panel\\\">\\n                            <div class=\\\"main-btn-sep\\\"></div>\\n                            <button mat-button title=\\\"{{'editor.tools-launch-title' | translate}}\\\" class=\\\"main-btn\\\" (click)=\\\"onStartCurrent()\\\">\\n                                <mat-icon aria-label=\\\"Launch Current View\\\">play_arrow</mat-icon>\\n                            </button>\\n                            <div class=\\\"main-btn-sep\\\"></div>\\n                            <button mat-button title=\\\"{{'editor.tools-zoom-title' | translate}}\\\" class=\\\"main-btn\\\" (click)=\\\"onZoomSelect()\\\">\\n                                <mat-icon aria-label=\\\"Zoom Tool [Ctrl+Up/Down]\\\">zoom_in</mat-icon>\\n                            </button>\\n                            <button mat-button title=\\\"{{'editor.tools-grid-title' | translate}}\\\" class=\\\"main-btn\\\" (click)=\\\"onShowGrid()\\\">\\n                                <mat-icon aria-label=\\\"Show Hide Grid\\\" *ngIf=\\\"!gridOn\\\">grid_on</mat-icon>\\n                                <mat-icon aria-label=\\\"Show Hide Grid\\\" *ngIf=\\\"gridOn\\\">grid_off</mat-icon>\\n                            </button>\\n                            <div id=\\\"history_panel\\\">\\n                                <button mat-button id=\\\"tool_undo\\\" title=\\\"{{'editor.tools-undo-title' | translate}}\\\" class=\\\"main-btn\\\">\\n                                    <mat-icon aria-label=\\\"Undo [Z]\\\">undo</mat-icon>\\n                                </button>\\n                                <button mat-button id=\\\"tool_redo\\\" title=\\\"{{'editor.tools-redo-title' | translate}}\\\" class=\\\"main-btn\\\">\\n                                    <mat-icon aria-label=\\\"Redo [Y]\\\">redo</mat-icon>\\n                                </button>\\n                            </div>\\n                        </div>\\n                        <div id=\\\"selected_panel\\\">\\n                            <div class=\\\"main-btn-sep\\\"></div>\\n                            <button mat-button id=\\\"tool_clone\\\" title=\\\"{{'editor.tools-clone-title' | translate}}\\\" class=\\\"main-btn\\\">\\n                                <mat-icon aria-label=\\\"Duplicate Element [D]\\\">content_copy</mat-icon>\\n                            </button>\\n                            <button mat-button id=\\\"tool_delete\\\" title=\\\"{{'editor.tools-delete-title' | translate}}\\\" class=\\\"main-btn\\\">\\n                                <mat-icon aria-label=\\\"Delete Element [Delete/Backspace]\\\">content_cut</mat-icon>\\n                            </button>\\n                            <button mat-button id=\\\"tool_move_bottom\\\" title=\\\"{{'editor.tools-movebottom-title' | translate}}\\\" class=\\\"main-btn\\\">\\n                                <mat-icon style=\\\"font-size: 28px;\\\">low_priority</mat-icon>\\n                            </button>\\n                            <button mat-button id=\\\"tool_move_top\\\" title=\\\"{{'editor.tools-movetop-title' | translate}}\\\" class=\\\"main-btn\\\">\\n                                <mat-icon style=\\\"font-size: 28px;transform: scaleX(-1) scaleY(-1) translateX(-28px) translateY(-27px);\\\">low_priority</mat-icon>\\n                            </button>\\n                            <button mat-button id=\\\"tool_topath\\\" title=\\\"{{'editor.tools-topath-title' | translate}}\\\" class=\\\"main-btn\\\">\\n                                <mat-icon>linear_scale</mat-icon>\\n                            </button>\\n                            <button mat-button id=\\\"tool_make_link\\\" title=\\\"{{'editor.tools-hyperlink-title' | translate}}\\\" class=\\\"main-btn\\\" (click)=\\\"onMakeHyperlink()\\\">\\n                                <mat-icon style=\\\"font-size: 28px;\\\">link</mat-icon>\\n                            </button>\\n                        </div>\\n                        <div id=\\\"multiselected_panel\\\">\\n                            <div class=\\\"main-btn-sep\\\"></div>\\n                            <button mat-button id=\\\"tool_clone_multi\\\" title=\\\"{{'editor.tools-clonemulti-title' | translate}}\\\" class=\\\"main-btn\\\">\\n                                <mat-icon aria-label=\\\"Clone Elements [C]\\\">content_copy</mat-icon>\\n                            </button>\\n                            <button mat-button id=\\\"tool_delete_multi\\\" title=\\\"{{'editor.tools-deletemulti-title' | translate}}\\\" class=\\\"main-btn\\\">\\n                                <mat-icon aria-label=\\\"Delete Selected Elements [Delete/Backspace]\\\">content_cut</mat-icon>\\n                            </button>\\n                            <button mat-button id=\\\"tool_group_elements\\\" title=\\\"{{'editor.tools-group-title' | translate}}\\\" class=\\\"main-btn\\\">\\n                                <span class=\\\"group\\\"></span>\\n                            </button>\\n                            <button mat-button id=\\\"tool_alignleft\\\" title=\\\"{{'editor.tools-alignleft-title' | translate}}\\\" class=\\\"main-btn\\\">\\n                                <mat-icon>format_align_left</mat-icon>\\n                            </button>\\n                            <button mat-button id=\\\"tool_aligncenter\\\" title=\\\"{{'editor.tools-aligncenter-title' | translate}}\\\" class=\\\"main-btn\\\">\\n                                <mat-icon>format_align_center</mat-icon>\\n                            </button>\\n                            <button mat-button id=\\\"tool_alignright\\\" title=\\\"{{'editor.tools-alignright-title' | translate}}\\\" class=\\\"main-btn\\\">\\n                                <mat-icon>format_align_right</mat-icon>\\n                            </button>\\n                            <button mat-button id=\\\"tool_aligntop\\\" title=\\\"{{'editor.tools-aligntop-title' | translate}}\\\" class=\\\"main-btn\\\">\\n                                <mat-icon>vertical_align_top</mat-icon>\\n                            </button>\\n                            <button mat-button id=\\\"tool_alignmiddle\\\" title=\\\"{{'editor.tools-alignmiddle-title' | translate}}\\\" class=\\\"main-btn\\\">\\n                                <mat-icon>vertical_align_center</mat-icon>\\n                            </button>\\n                            <button mat-button id=\\\"tool_alignbottom\\\" title=\\\"{{'editor.tools-alignbottom-title' | translate}}\\\" class=\\\"main-btn\\\">\\n                                <mat-icon>vertical_align_bottom</mat-icon>\\n                            </button>\\n                        </div>\\n                        <div id=\\\"threemoreselected_panel\\\">\\n                            <button mat-button id=\\\"tool_dividevertical\\\" title=\\\"{{'editor.tools-dividevertical-title' | translate}}\\\" class=\\\"main-btn\\\">\\n                                <mat-icon>format_line_spacing</mat-icon>\\n                            </button>\\n                            <button mat-button id=\\\"tool_dividehorizontal\\\" title=\\\"{{'editor.tools-dividehorizontal-title' | translate}}\\\" class=\\\"main-btn\\\">\\n                                <mat-icon style=\\\"transform-origin: center center;transform: rotate(90deg);\\\">format_line_spacing</mat-icon>\\n                            </button>\\n                        </div>\\n                        <div id=\\\"g_panel\\\">\\n                            <button mat-button id=\\\"tool_ungroup\\\" title=\\\"{{'editor.tools-ungroup-title' | translate}}\\\" class=\\\"main-btn\\\">\\n                                <span class=\\\"ungroup\\\"></span>\\n                            </button>\\n                        </div>\\n                    </div>\\n                    <!-- tools_top -->\\n                    <div id=\\\"cur_context_panel\\\">\\n\\n                    </div>\\n\\n                    <!-- tool bottom -->\\n                    <div class=\\\"bottom-bar tools_panel\\\">\\n                        <!-- Zoom buttons -->\\n                        <div class=\\\"zoom-menu\\\" title=\\\"{{'editor.tools-zoomlevel-title' | translate}}\\\">\\n                            <div class=\\\"zoom-value\\\">\\n                                <input id=\\\"zoom\\\" size=\\\"3\\\" value=\\\"100\\\" type=\\\"text\\\" #zoomValue hidden />\\n                                <div id=\\\"zoom_dropdown\\\" class=\\\"dropdown selection\\\" style=\\\"margin-top: 0px; margin-bottom: 0px;margin-right: 0px;\\\">\\n                                    <button style=\\\"margin-top: 2px; width: 80px;cursor: pointer; font-size: 12px;\\\">\\n                                        {{zoomValue.value}} %\\n                                    </button>\\n                                    <ul>\\n                                        <li>1000%</li>\\n                                        <li>400%</li>\\n                                        <li>200%</li>\\n                                        <li>100%</li>\\n                                        <li>50%</li>\\n                                        <li>25%</li>\\n                                        <li id=\\\"fit_to_canvas\\\" data-val=\\\"canvas\\\">{{'editor.tools-zoomlevel-fitcanvas' | translate}}</li>\\n                                        <li id=\\\"fit_to_sel\\\" data-val=\\\"selection\\\">{{'editor.tools-zoomlevel-fitsection' | translate}}</li>\\n                                        <li id=\\\"fit_to_all\\\" data-val=\\\"content\\\">{{'editor.tools-zoomlevel-fitcontent' | translate}}</li>\\n                                        <li>100%</li>\\n                                    </ul>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div id=\\\"tools_bottom_2\\\" class=\\\"colors\\\">\\n                            <input readonly [(colorPicker)]=\\\"colorFill\\\" class=\\\"color-fill\\\" title=\\\"{{'editor.tools-fillcolor-title' | translate}}\\\" [style.background]=\\\"colorFill\\\"\\n                                [cpAlphaChannel]=\\\"'always'\\\" [cpPosition]=\\\"'top'\\\" (colorPickerChange)=\\\"onChangeFillColor($event)\\\" [cpPresetColors]=\\\"defaultColor\\\"\\n                                [cpCancelButton]=\\\"true\\\" [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\" [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButton]=\\\"true\\\" [cpOKButtonText]=\\\"'OK'\\\"\\n                                [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\" />\\n                            <input readonly [(colorPicker)]=\\\"colorStroke\\\" class=\\\"color-stroke\\\" title=\\\"{{'editor.tools-strokecolor-title' | translate}}\\\"\\n                                [style.background]=\\\"colorStroke\\\" [cpAlphaChannel]=\\\"'always'\\\" [cpPosition]=\\\"'top'\\\" (colorPickerChange)=\\\"onChangeStrokeColor($event)\\\"\\n                                [cpPresetColors]=\\\"defaultColor\\\" [cpCancelButton]=\\\"true\\\" [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\" [cpCancelButtonText]=\\\"'Cancel'\\\"\\n                                [cpOKButton]=\\\"true\\\" [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\" />\\n                            <div class=\\\"color_tool\\\" id=\\\"tool_fill\\\" hidden>\\n                                <label class=\\\"icon_label\\\" for=\\\"fill_color\\\" title=\\\"{{'editor.tools-fillcolor-title' | translate}}\\\"></label>\\n                                <div class=\\\"color_block\\\">\\n                                    <div id=\\\"fill_color\\\" class=\\\"color_block\\\" [style.border-color]=\\\"colorFill\\\"></div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"color_tool\\\" id=\\\"tool_stroke\\\" hidden>\\n                                <label class=\\\"icon_label\\\" title=\\\"Change stroke color\\\"></label>\\n                                <div class=\\\"color_block\\\">\\n                                    <div id=\\\"stroke_bg\\\"></div>\\n                                    <div id=\\\"stroke_color\\\" class=\\\"color_block\\\" title=\\\"{{'editor.tools-strokecolor-title' | translate}}\\\" [style.border-color]=\\\"colorStroke\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div id=\\\"tools_bottom_3\\\" class=\\\"colors-palette\\\">\\n                            <div id=\\\"palette_holder\\\">\\n                                <div id=\\\"palette\\\" title=\\\"{{'editor.tools-palettecolor-title' | translate}}\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div id=\\\"option_lists\\\" class=\\\"dropdown\\\">\\n                        <ul id=\\\"position_opts\\\" class=\\\"optcols3\\\">\\n                            <li class=\\\"push_button\\\" id=\\\"tool_posleft\\\" title=\\\"Align Left\\\"></li>\\n                            <li class=\\\"push_button\\\" id=\\\"tool_poscenter\\\" title=\\\"Align Center\\\"></li>\\n                            <li class=\\\"push_button\\\" id=\\\"tool_posright\\\" title=\\\"Align Right\\\"></li>\\n                            <li class=\\\"push_button\\\" id=\\\"tool_postop\\\" title=\\\"Align Top\\\"></li>\\n                            <li class=\\\"push_button\\\" id=\\\"tool_posmiddle\\\" title=\\\"Align Middle\\\"></li>\\n                            <li class=\\\"push_button\\\" id=\\\"tool_posbottom\\\" title=\\\"Align Bottom\\\"></li>\\n                        </ul>\\n                    </div>\\n                </div>\\n            </div>\\n            <div *ngIf=\\\"editorMode === editorModeType.CARDS\\\" style=\\\"width:100%; height:100%\\\">\\n                <div class=\\\"tools_panel\\\" style=\\\"display: inline-flex; width: 100%; height: 37px;\\\">\\n                    <div class=\\\"main-btn-sep\\\" style=\\\"display: inline-block;\\\"></div>\\n                    <button mat-button class=\\\"main-btn\\\" style=\\\"display: inline-block;\\\" title=\\\"{{'editor.tools-launch-title' | translate}}\\\" (click)=\\\"onStartCurrent()\\\">\\n                        <mat-icon aria-label=\\\"Launch Current View\\\">play_arrow</mat-icon>\\n                    </button>\\n                </div>\\n                <div style=\\\"position: absolute; top: 37px; left: 0px;right: 0px; bottom: 0px; background-color: rgba(247, 247, 247, 1);\\\">\\n                    <app-cards-view #cardsview [edit]=\\\"true\\\" [view]=\\\"currentView\\\" [hmi]=\\\"hmi\\\" [gaugesManager]=\\\"gaugesManager\\\" \\n                                (editCard)=\\\"editCardsWidget($event)\\\" (save)=\\\"onSaveProject()\\\"></app-cards-view>\\n                    <!-- <div class=\\\"grid-stack\\\"></div> -->\\n                    <button mat-fab color=\\\"primary\\\" (click)=\\\"addCard()\\\" class=\\\"fab-add\\\">\\n                        <mat-icon class=\\\"\\\">add</mat-icon>\\n                    </button>\\n                </div>\\n            </div>\\n        </mat-drawer-content>\\n        <!-- work area END -->\\n    </mat-drawer-container>\\n\\n    <!-- svg_editor -->\\n\\n    <!-- NOT USED -->\\n    <div id=\\\"svg_source_editor\\\">\\n        <div class=\\\"overlay\\\"></div>\\n        <div id=\\\"svg_source_container\\\">\\n            <div id=\\\"tool_source_back\\\" class=\\\"toolbar_button\\\">\\n                <button id=\\\"tool_source_save\\\">Apply Changes</button>\\n                <button id=\\\"tool_source_cancel\\\">Cancel</button>\\n            </div>\\n            <div id=\\\"save_output_btns\\\">\\n                <p id=\\\"copy_save_note\\\">Copy the contents of this box into a text editor, then save the file with a .svg\\n                    extension.</p>\\n                <button id=\\\"copy_save_done\\\">Done</button>\\n            </div>\\n            <form>\\n                <textarea id=\\\"svg_source_textarea\\\" spellcheck=\\\"false\\\"></textarea>\\n            </form>\\n        </div>\\n    </div>\\n\\n    <div id=\\\"svg_docprops\\\">\\n        <div class=\\\"overlay\\\"></div>\\n        <div id=\\\"svg_docprops_container\\\">\\n            <div id=\\\"tool_docprops_back\\\" class=\\\"toolbar_button\\\">\\n                <button id=\\\"tool_docprops_save\\\">OK</button>\\n                <button id=\\\"tool_docprops_cancel\\\">Cancel</button>\\n            </div>\\n\\n\\n            <fieldset id=\\\"svg_docprops_docprops\\\">\\n                <legend id=\\\"svginfo_image_props\\\">Image Properties</legend>\\n                <label>\\n                    <span id=\\\"svginfo_title\\\">Title:</span>\\n                    <input type=\\\"text\\\" id=\\\"canvas_title\\\" />\\n                </label>\\n\\n                <fieldset id=\\\"change_resolution\\\">\\n                    <legend id=\\\"svginfo_dim\\\">Canvas Dimensions</legend>\\n\\n                    <label>\\n                        <span id=\\\"svginfo_width\\\">width:</span>\\n                        <input type=\\\"text\\\" id=\\\"canvas_width\\\" size=\\\"6\\\" />\\n                    </label>\\n\\n                    <label>\\n                        <span id=\\\"svginfo_height\\\">height:</span>\\n                        <input type=\\\"text\\\" id=\\\"canvas_height\\\" size=\\\"6\\\" />\\n                    </label>\\n\\n                    <label>\\n                        <select id=\\\"resolution\\\">\\n                            <option id=\\\"selectedPredefined\\\" selected=\\\"selected\\\">Select predefined:</option>\\n                            <option>640x480</option>\\n                            <option>800x600</option>\\n                            <option>1024x768</option>\\n                            <option>1280x960</option>\\n                            <option>1600x1200</option>\\n                            <option id=\\\"fitToContent\\\" value=\\\"content\\\">Fit to Content</option>\\n                        </select>\\n                    </label>\\n                </fieldset>\\n\\n                <fieldset id=\\\"image_save_opts\\\">\\n                    <legend id=\\\"includedImages\\\">Included Images</legend>\\n                    <label>\\n                        <input type=\\\"radio\\\" name=\\\"image_opt\\\" value=\\\"embed\\\" checked=\\\"checked\\\" />\\n                        <span id=\\\"image_opt_embed\\\">Embed data (local files)</span>\\n                    </label>\\n                    <label>\\n                        <input type=\\\"radio\\\" name=\\\"image_opt\\\" value=\\\"ref\\\" />\\n                        <span id=\\\"image_opt_ref\\\">Use file reference</span>\\n                    </label>\\n                </fieldset>\\n            </fieldset>\\n\\n        </div>\\n    </div>\\n\\n    <div id=\\\"svg_prefs\\\">\\n        <div class=\\\"overlay\\\"></div>\\n        <div id=\\\"svg_prefs_container\\\">\\n            <div id=\\\"tool_prefs_back\\\" class=\\\"toolbar_button\\\">\\n                <button id=\\\"tool_prefs_save\\\">OK</button>\\n                <button id=\\\"tool_prefs_cancel\\\">Cancel</button>\\n            </div>\\n\\n            <fieldset>\\n                <legend id=\\\"svginfo_editor_prefs\\\">Editor Preferences</legend>\\n\\n                <label>\\n                    <span id=\\\"svginfo_lang\\\">Language:</span>\\n                    <select id=\\\"lang_select\\\">\\n                        <option id=\\\"lang_ar\\\" value=\\\"ar\\\">العربية</option>\\n                        <option id=\\\"lang_cs\\\" value=\\\"cs\\\">Čeština</option>\\n                        <option id=\\\"lang_de\\\" value=\\\"de\\\">Deutsch</option>\\n                        <option id=\\\"lang_en\\\" value=\\\"en\\\" selected=\\\"selected\\\">English</option>\\n                        <option id=\\\"lang_es\\\" value=\\\"es\\\">Español</option>\\n                        <option id=\\\"lang_fa\\\" value=\\\"fa\\\">فارسی</option>\\n                        <option id=\\\"lang_fr\\\" value=\\\"fr\\\">Français</option>\\n                        <option id=\\\"lang_fy\\\" value=\\\"fy\\\">Frysk</option>\\n                        <option id=\\\"lang_hi\\\" value=\\\"hi\\\">&#2361;&#2367;&#2344;&#2381;&#2342;&#2368;,\\n                            &#2361;&#2367;&#2306;&#2342;&#2368;</option>\\n                        <option id=\\\"lang_it\\\" value=\\\"it\\\">Italiano</option>\\n                        <option id=\\\"lang_ja\\\" value=\\\"ja\\\">日本語</option>\\n                        <option id=\\\"lang_nl\\\" value=\\\"nl\\\">Nederlands</option>\\n                        <option id=\\\"lang_pl\\\" value=\\\"pl\\\">Polski</option>\\n                        <option id=\\\"lang_pt-BR\\\" value=\\\"pt-BR\\\">Português (BR)</option>\\n                        <option id=\\\"lang_ro\\\" value=\\\"ro\\\">Română</option>\\n                        <option id=\\\"lang_ru\\\" value=\\\"ru\\\">Русский</option>\\n                        <option id=\\\"lang_sk\\\" value=\\\"sk\\\">Slovenčina</option>\\n                        <option id=\\\"lang_sl\\\" value=\\\"sl\\\">Slovenščina</option>\\n                        <option id=\\\"lang_zh-TW\\\" value=\\\"zh-TW\\\">繁體中文</option>\\n                    </select>\\n                </label>\\n\\n                <label>\\n                    <span id=\\\"svginfo_icons\\\">Icon size:</span>\\n                    <select id=\\\"iconsize\\\">\\n                        <option id=\\\"icon_small\\\" value=\\\"s\\\">Small</option>\\n                        <option id=\\\"icon_medium\\\" value=\\\"m\\\" selected=\\\"selected\\\">Medium</option>\\n                        <option id=\\\"icon_large\\\" value=\\\"l\\\">Large</option>\\n                        <option id=\\\"icon_xlarge\\\" value=\\\"xl\\\">Extra Large</option>\\n                    </select>\\n                </label>\\n\\n                <fieldset id=\\\"change_background\\\">\\n                    <legend id=\\\"svginfo_change_background\\\">Editor Background</legend>\\n                    <div id=\\\"bg_blocks\\\"></div>\\n                    <label>\\n                        <span id=\\\"svginfo_bg_url\\\">URL:</span>\\n                        <input type=\\\"text\\\" id=\\\"canvas_bg_url\\\" />\\n                    </label>\\n                    <p id=\\\"svginfo_bg_note\\\">Note: Background will not be saved with image.</p>\\n                </fieldset>\\n\\n                <fieldset id=\\\"change_grid\\\">\\n                    <legend id=\\\"svginfo_grid_settings\\\">Grid</legend>\\n                    <label>\\n                        <span id=\\\"svginfo_snap_onoff\\\">Snapping on/off</span>\\n                        <input type=\\\"checkbox\\\" value=\\\"snapping_on\\\" id=\\\"grid_snapping_on\\\" />\\n                    </label>\\n                    <label>\\n                        <span id=\\\"svginfo_snap_step\\\">Snapping Step-Size:</span>\\n                        <input type=\\\"text\\\" id=\\\"grid_snapping_step\\\" size=\\\"3\\\" value=\\\"10\\\" />\\n                    </label>\\n                    <label>\\n                        <span id=\\\"svginfo_grid_color\\\">Grid color:</span>\\n                        <input type=\\\"text\\\" id=\\\"grid_color\\\" size=\\\"3\\\" value=\\\"#000\\\" />\\n                    </label>\\n                </fieldset>\\n\\n                <fieldset id=\\\"units_rulers\\\">\\n                    <legend id=\\\"svginfo_units_rulers\\\">Units &amp; Rulers</legend>\\n                    <label>\\n                        <span id=\\\"svginfo_rulers_onoff\\\">Show rulers</span>\\n                        <input type=\\\"checkbox\\\" value=\\\"show_rulers\\\" id=\\\"show_rulers\\\" checked=\\\"checked\\\" />\\n                    </label>\\n                    <label>\\n                        <span id=\\\"svginfo_unit\\\">Base Unit:</span>\\n                        <select id=\\\"base_unit\\\">\\n                            <option value=\\\"px\\\">Pixels</option>\\n                            <option value=\\\"cm\\\">Centimeters</option>\\n                            <option value=\\\"mm\\\">Millimeters</option>\\n                            <option value=\\\"in\\\">Inches</option>\\n                            <option value=\\\"pt\\\">Points</option>\\n                            <option value=\\\"pc\\\">Picas</option>\\n                            <option value=\\\"em\\\">Ems</option>\\n                            <option value=\\\"ex\\\">Exs</option>\\n                        </select>\\n                    </label>\\n                </fieldset>\\n\\n            </fieldset>\\n\\n        </div>\\n    </div>\\n    <!-- NOT USED END -->\\n\\n    <div id=\\\"dialog_box\\\">\\n        <div class=\\\"overlay\\\"></div>\\n        <div id=\\\"dialog_container\\\">\\n            <div id=\\\"dialog_content\\\"></div>\\n            <div id=\\\"dialog_buttons\\\"></div>\\n        </div>\\n    </div>\\n\\n    <!-- canvas context menu -->\\n    <ul id=\\\"cmenu_canvas\\\" class=\\\"contextMenu svg-workarea-contextmenu\\\">\\n        <li>\\n            <a id=\\\"#interactivity\\\" (click)=\\\"isInteractivtyEnabled(selectedElement) && onGaugeEditEx()\\\">{{'editor.interactivity' | translate}}</a>\\n        </li>\\n        <li class=\\\"separator\\\">\\n            <a id=\\\"#cut\\\">{{'editor.cmenu-cut' | translate}}</a>\\n        </li>\\n        <li>\\n            <a id=\\\"#copy\\\">{{'editor.cmenu-copy' | translate}}</a>\\n        </li>\\n        <li>\\n            <a id=\\\"#paste\\\">{{'editor.cmenu-paste' | translate}}</a>\\n        </li>\\n        <li>\\n            <a id=\\\"#paste_in_place\\\">{{'editor.cmenu-paste-place' | translate}}</a>\\n        </li>\\n        <li class=\\\"separator\\\">\\n            <a id=\\\"#delete\\\">{{'editor.cmenu-delete' | translate}}</a>\\n        </li>\\n        <li class=\\\"separator\\\">\\n            <a id=\\\"#group\\\">{{'editor.cmenu-group' | translate}}\\n                <span class=\\\"shortcut\\\">G</span>\\n            </a>\\n        </li>\\n        <li>\\n            <a id=\\\"#ungroup\\\">{{'editor.cmenu-ungroup' | translate}}\\n                <span class=\\\"shortcut\\\">G</span>\\n            </a>\\n        </li>\\n        <li class=\\\"separator\\\">\\n            <a id=\\\"#move_front\\\">{{'editor.cmenu-bring-front' | translate}}\\n                <span class=\\\"shortcut\\\">SHFT+CTRL+]</span>\\n            </a>\\n        </li>\\n        <li>\\n            <a id=\\\"#move_up\\\">{{'editor.cmenu-bring-forward' | translate}}\\n                <span class=\\\"shortcut\\\">CTRL+]</span>\\n            </a>\\n        </li>\\n        <li>\\n            <a id=\\\"#move_down\\\">{{'editor.cmenu-send-backward' | translate}}\\n                <span class=\\\"shortcut\\\">CTRL+[</span>\\n            </a>\\n        </li>\\n        <li>\\n            <a id=\\\"#move_back\\\">{{'editor.cmenu-send-back' | translate}}\\n                <span class=\\\"shortcut\\\">SHFT+CTRL+[</span>\\n            </a>\\n        </li>\\n    </ul>\\n    <!-- canvas context menu END -->\\n\\n    <!-- layers context menu -->\\n    <ul id=\\\"cmenu_layers\\\" class=\\\"contextMenu\\\" style=\\\"display: none\\\">\\n        <li>\\n            <a href=\\\"#dupe\\\">{{'editor.cmenu-layer-duplicate' | translate}}</a>\\n        </li>\\n        <li>\\n            <a href=\\\"#delete\\\">{{'editor.cmenu-layer-delete' | translate}}</a>\\n        </li>\\n        <li>\\n            <a href=\\\"#merge_down\\\">{{'editor.cmenu-layer-marge-down' | translate}}</a>\\n        </li>\\n        <li>\\n            <a href=\\\"#merge_all\\\">{{'editor.cmenu-layer-marge-all' | translate}}</a>\\n        </li>\\n    </ul>\\n    <!-- layers context menu END -->\\n</div>\"","﻿import { Component, Inject, OnInit, OnDestroy, AfterViewInit, ViewChild, ViewContainerRef, ComponentFactoryResolver, ElementRef } from '@angular/core';\nimport { ChangeDetectorRef } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MatIconRegistry } from '@angular/material';\nimport { Subscription } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { ProjectService, SaveMode } from '../_services/project.service';\nimport { Hmi, View, GaugeSettings, SelElement, LayoutSettings, ViewType, CardWidget, CardWidgetType } from '../_models/hmi';\nimport { WindowRef } from '../_helpers/windowref';\nimport { Output } from '@angular/core/src/metadata/directives';\nimport { GaugePropertyComponent, GaugeDialogType } from '../gauges/gauge-property/gauge-property.component';\nimport { ChartPropertyComponent } from '../gauges/controls/html-chart/chart-property/chart-property.component';\n\nimport { GaugesManager } from '../gauges/gauges.component';\nimport { GaugeBaseComponent } from '../gauges/gauge-base/gauge-base.component'\nimport { Utils } from '../_helpers/utils';\nimport { ConfirmDialogComponent } from '../gui-helpers/confirm-dialog/confirm-dialog.component';\nimport { Define } from '../_helpers/define';\n\nimport * as FileSaver from 'file-saver';\nimport { BagPropertyComponent } from '../gauges/controls/html-bag/bag-property/bag-property.component';\nimport { PipePropertyComponent } from '../gauges/controls/pipe/pipe-property/pipe-property.component';\nimport { SliderPropertyComponent } from '../gauges/controls/slider/slider-property/slider-property.component';\nimport { HtmlInputComponent } from '../gauges/controls/html-input/html-input.component';\nimport { HtmlButtonComponent } from '../gauges/controls/html-button/html-button.component';\nimport { HtmlSelectComponent } from '../gauges/controls/html-select/html-select.component';\nimport { ValueComponent } from '../gauges/controls/value/value.component';\nimport { GaugeProgressComponent } from '../gauges/controls/gauge-progress/gauge-progress.component';\nimport { GaugeSemaphoreComponent } from '../gauges/controls/gauge-semaphore/gauge-semaphore.component';\nimport { HtmlSwitchPropertyComponent } from '../gauges/controls/html-switch/html-switch-property/html-switch-property.component';\n\nimport { GridsterItem } from 'angular-gridster2';\nimport { CardConfigComponent } from './card-config/card-config.component';\nimport { CardsViewComponent } from '../cards-view/cards-view.component';\n\ndeclare var Gauge: any;\n\ndeclare var $: any;\ndeclare var svgEditor: any;\ndeclare var mypathseg: any;         ///< svg-editor component\ndeclare var initPathSeg: any;\ndeclare var mybrowser: any;\ndeclare var initBrowser: any;\ndeclare var mysvgutils: any;\ndeclare var initSvgutils: any;\ndeclare var myselect: any;\ndeclare var initSelect: any;\ndeclare var mydraw: any;\ndeclare var initDraw: any;\ndeclare var mylocal: any;\ndeclare var initLocale: any;\ndeclare var mycontextmenu: any;\ndeclare var initContextmenu: any;\ndeclare var mysvgcanvas: any;\ndeclare var initSvgCanvas: any;\ndeclare var mysvgeditor: any;\ndeclare var initSvgEditor: any;\n\n@Component({\n    moduleId: module.id,\n    templateUrl: 'editor.component.html',\n    styleUrls: ['editor.component.css']\n})\n\nexport class EditorComponent implements OnInit, AfterViewInit, OnDestroy {\n    // currentUser: User;\n    // users: User[] = [];\n    // @ViewChild('fillcolor') fillcolor: ElementRef;\n    @ViewChild('gaugepanel') gaugePanelComponent: GaugeBaseComponent;\n    @ViewChild('viewFileImportInput') viewFileImportInput: any;\n    @ViewChild('cardsview') cardsview: CardsViewComponent;\n    \n    readonly colorDefault = { fill: '#FFFFFF', stroke: '#000000' };\n\n    fonts = Define.fonts;\n    isLoading = true;\n    editorModeType = EditorModeType;\n    editorMode: EditorModeType = EditorModeType.SVG;\n    defaultColor = Utils.defaultColor;\n    colorFill = this.colorDefault.fill;\n    colorStroke = this.colorDefault.stroke;\n    currentView: View = null;\n    hmi: Hmi = new Hmi();// = {_id: '', name: '', networktype: '', ipaddress: '', maskaddress: '' };\n    currentMode = '';\n    imagefile: string;\n    gridOn: boolean = false;\n    selectedElement: SelElement = new SelElement();\n    panelsState = {\n        enabled: false,\n        panelView: true,\n        panelGeneral: true,\n        panelC: true,\n        panelD: true,\n        panelS: true\n    };\n    panelPropertyIdOpenState: boolean;\n    panelPropertyTransformOpenState: boolean;\n    panelAlignOpenState: boolean;\n    panelFillOpenState: boolean;\n    panelEventOpenState: boolean;\n    panelMarkerOpenState: boolean;\n    panelHyperlinkOpenState: boolean;\n\n    dashboard: Array<GridsterItem>;\n    cardViewType = Utils.getEnumKey(ViewType, ViewType.cards);\n\n    shapesGrps = [];\n    private gaugesRef = [];\n\n    private subscriptionSave: Subscription;\n    private subscriptionLoad: Subscription;\n\n    constructor(private projectService: ProjectService,\n        private winRef: WindowRef,\n        public dialog: MatDialog,\n        private changeDetector: ChangeDetectorRef,\n        private translateService: TranslateService,\n        private gaugesManager: GaugesManager,\n        private viewContainerRef: ViewContainerRef,\n        private resolver: ComponentFactoryResolver,\n        private mdIconRegistry: MatIconRegistry, private sanitizer: DomSanitizer) {\n        mdIconRegistry.addSvgIcon('group', sanitizer.bypassSecurityTrustResourceUrl('/assets/images/group.svg'));\n        mdIconRegistry.addSvgIcon('to_bottom', sanitizer.bypassSecurityTrustResourceUrl('/assets/images/to-bottom.svg'));\n        mdIconRegistry.addSvgIcon('to_top', sanitizer.bypassSecurityTrustResourceUrl('/assets/images/to-top.svg'));\n\n        // this.gaugesManager.stopDemo();\n    }\n\n    //#region Implemented onInit / onAfterInit event\n    /**\n     * Init Save Project event and clear gauge memory (to manage event signal/gauge)\n     */\n    ngOnInit() {\n        try {\n            this.subscriptionSave = this.projectService.onSaveCurrent.subscribe((mode: SaveMode) => {\n                if (mode === SaveMode.Current) {\n                    this.onSaveProject();\n                } else if (mode === SaveMode.SaveAs) {\n                    this.projectService.saveAs();\n                } else if (mode === SaveMode.Save) {\n                    this.onSaveProject();\n                }\n            });\n            this.gaugesManager.clearMemory();\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n    /**\n     * after init event\n     */\n    ngAfterViewInit() {\n        this.myInit();\n        this.setMode('select');\n        let hmi = this.projectService.getHmi();\n        if (hmi) {\n            this.loadHmi();\n        }\n        this.subscriptionLoad = this.projectService.onLoadHmi.subscribe(load => {\n            this.loadHmi();\n        }, error => {\n            console.error('Error loadHMI');\n        });\n        this.changeDetector.detectChanges();\n    }\n\n    ngOnDestroy() {\n        try {\n            if (this.subscriptionSave) {\n                this.subscriptionSave.unsubscribe();\n            }\n            if (this.subscriptionLoad) {\n                this.subscriptionLoad.unsubscribe();\n            }\n        } catch (e) {\n        }\n        this.onSaveProject();\n    }\n    //#endregion\n\n    //#region General private function\n    /**\n     * Init, first init the svg-editor component\n     */\n    private myInit() {\n        try {\n            // first init svg-editor component\n            mypathseg.initPathSeg();\n            mybrowser.initBrowser();\n            mysvgutils.initSvgutils();\n            myselect.initSelect();\n            mydraw.initDraw();\n            mysvgcanvas.initSvgCanvas();\n            // init svg-editor\n            let toinit = mysvgeditor.initSvgEditor($,\n                (selected) => {\n                    this.onSelectedElement(selected);\n                    let ga: GaugeSettings = this.getGaugeSettings(selected);\n                },\n                (type, args) => {\n                    this.onExtensionLoaded(args);\n                    this.clearSelection();\n                    if (type === 'shapes') {\n                        this.setShapes();\n                    }\n                },\n                (type, color) => {\n                    if (type === 'fill') {\n                        this.colorFill = color;\n                        this.setFillColor(this.colorFill);\n                        this.checkMySelectedToSetColor(this.colorFill, null, this.winRef.nativeWindow.svgEditor.getSelectedElements());\n                    } else if (type === 'stroke') {\n                        this.colorStroke = color;\n                        this.checkMySelectedToSetColor(null, this.colorStroke, this.winRef.nativeWindow.svgEditor.getSelectedElements());\n                    }\n                },\n                (eleadded) => {\n                    let ga: GaugeSettings = this.getGaugeSettings(eleadded);\n                    this.checkGaugeAdded(ga);\n                    setTimeout(() => {\n                        this.setMode('select');\n                    }, 700);\n                    // this.hmiService.addGauge(this.hmi, eleadded);\n                },\n                (eleremoved) => {\n                    this.onRemoveElement(eleremoved);\n                },\n                (eleresized) => {\n                    if (eleresized && eleresized.id) {\n                        let ga: GaugeSettings = this.getGaugeSettings(eleresized);\n                        this.gaugesManager.checkElementToResize(ga, this.resolver, this.viewContainerRef);\n                    }\n                },\n                (copiedpasted) => {\n                    if (copiedpasted && copiedpasted.copy && copiedpasted.past) {\n                        copiedpasted.copy = copiedpasted.copy.filter(function (e) { return e });\n                        if (copiedpasted.copy.length == copiedpasted.past.length) {\n                            for (let i = 0; i < copiedpasted.copy.length; i++) {\n                                let srctype = copiedpasted.copy[i].getAttribute(\"type\");\n                                let srcid = copiedpasted.copy[i].getAttribute(\"id\");\n                                if (srcid && srctype) {\n                                    let gasrc: GaugeSettings = this.searchGaugeSettings({ id: srcid, type: srctype });\n                                    let gadest: GaugeSettings = this.gaugesManager.createSettings(copiedpasted.past[i].id, gasrc.type);\n                                    gadest.property = JSON.parse(JSON.stringify(gasrc.property));\n                                    this.setGaugeSettings(gadest);\n                                    this.checkGaugeAdded(gadest);\n                                }\n                            }\n                        }\n                    }\n                }\n            );\n\n            this.winRef.nativeWindow.svgEditor.init();\n            $(initContextmenu);\n\n        } catch (err) {\n            console.error(err);\n        }\n        this.setFillColor(this.colorFill);\n        this.setFillColor(this.colorStroke);\n    }\n\n    /**\n     * Load the hmi resource and bind it\n     */\n    private loadHmi() {\n        this.currentView = null;\n        this.hmi = this.projectService.getHmi();\n        // check new hmi\n        if (!this.hmi.views || this.hmi.views.length <= 0) {\n            this.hmi.views = [];\n            this.addView();\n            // this.selectView(this.hmi.views[0].name);\n        } else {\n            let oldsel = localStorage.getItem(\"@frango.webeditor.currentview\");\n            if (!oldsel && this.hmi.views.length) {\n                oldsel = this.hmi.views[0].name;\n            }\n            for (let i = 0; i < this.hmi.views.length; i++) {\n                if (this.hmi.views[i].name === oldsel) {\n                    this.onSelectView(this.hmi.views[i]);\n                    break;\n                }\n            }\n        }\n        this.loadPanelState();\n        this.isLoading = false;\n    }\n\n    /**\n     * Set or Add the View to Project\n     * Save the View to Server\n     */\n    private saveView(view: View) {\n        this.projectService.setView(view);\n    }\n\n    /**\n     * Remove the View from Project\n     * Remove the View from Server\n     * @param view\n     */\n    private removeView(view: View) {\n        this.projectService.removeView(view);\n    }\n\n    private getContent() {\n        if (this.currentView.type === Utils.getEnumKey(ViewType, ViewType.cards)) {\n            this.currentView.svgcontent = this.cardsview.getContent();\n            return this.currentView.svgcontent;\n            // let temp = JSON.parse(JSON.stringify(this.dashboard));\n            // for (let i = 0; i < temp.length; i++) {\n            //     delete temp[i]['content'];\n            //     delete temp[i]['background'];\n            // }\n            // return JSON.stringify(temp);\n        } else {\n            return this.winRef.nativeWindow.svgEditor.getSvgString();\n        }\n    }\n\n    /**\n     * Take shapes from svg-editor to show in panel\n     */\n    private setShapes() {\n        let temp = this.winRef.nativeWindow.svgEditor.getShapes();\n        let grps = [];\n        Object.keys(temp).forEach(grpk => {\n            grps.push({ name: grpk, shapes: temp[grpk] });\n        }),\n        this.shapesGrps = grps;\n    }\n\n    /**\n     * get gauge settings from current view items, if not exist create void settings from GaugesManager\n     * @param ele gauge id\n     */\n    private getGaugeSettings(ele) {\n        if (ele && this.currentView) {\n            if (this.currentView.items[ele.id]) {\n                return this.currentView.items[ele.id];\n            }\n            return this.gaugesManager.createSettings(ele.id, ele.type);\n        }\n        return null;\n    }\n\n    /**\n     * search gauge settings on all views items, if not exist create void settings from GaugesManager\n     * @param ele gauge element\n     */\n    private searchGaugeSettings(ele) {\n        if (ele) {\n            if (this.currentView) {\n                if (this.currentView.items[ele.id]) {\n                    return this.currentView.items[ele.id];\n                }\n            }\n            for (var i = 0; i < this.hmi.views.length; i++) {\n                if (this.hmi.views[i].items[ele.id]) {\n                    return this.hmi.views[i].items[ele.id];\n                }\n            }\n            return this.gaugesManager.createSettings(ele.id, ele.type);\n        }\n        return null;\n    }\n\n    /**\n     * add the gauge settings to the current view items list\n     * @param ga GaugeSettings\n     */\n    private setGaugeSettings(ga) {\n        this.currentView.items[ga.id] = ga;\n    }\n\n    /**\n     * check the gauge in current view of element\n     * @param ele element to check\n     */\n    private checkGaugeInView(ele) {\n        let g = this.getGaugeSettings(ele);\n        if (!g) {\n\n        }\n    }\n\n    /**\n     * check and set the color panel with selected element\n     * @param ele selected element\n     */\n    private checkColors(ele) {\n        let eles = this.winRef.nativeWindow.svgEditor.getSelectedElements();\n        let clrfill = null;\n        let clrstroke = null;\n        if (eles && (eles.length <= 1 || !eles[1]) && eles[0]) {\n            // check for gauge fill and stroke color\n            let colors = { fill: clrfill, stroke: clrstroke };\n            if (GaugesManager.checkGaugeColor(ele, eles, colors)) {\n                if (colors.fill) {\n                    this.colorFill = colors.fill;\n                }\n                if (colors.stroke) {\n                    this.colorStroke = colors.stroke;\n                }\n            } else {\n                if (eles[0].attributes['fill']) {\n                    clrfill = eles[0].attributes['fill'].value;\n                    this.colorFill = clrfill;\n                }\n                if (eles[0].attributes['stroke']) {\n                    clrstroke = eles[0].attributes['stroke'].value;\n                    this.colorStroke = clrstroke;\n                }\n                // this.setFillColor(this.colorFill);\n            }\n        }\n    }\n\n    /**\n     * return the fill color of svg element 'g'\n     * @param eleId\n     */\n    private getFillColor(eleId) {\n        if (eleId) {\n            let ele = document.getElementById(eleId);\n            if (ele) {\n                return ele.getAttribute('fill');\n            }\n        }\n    }\n\n    /**\n     * load the view to svg-editor and canvas\n     * @param view view to load\n     */\n    private loadView(view: View) {\n        if (view) {\n            this.clearEditor();\n            if (this.editorMode !== EditorModeType.CARDS) {\n                let svgcontent: string = '';\n                let v = this.getView(view.name)\n                if (v) {\n                    svgcontent = v.svgcontent;\n                }\n                if (svgcontent.length <= 0) {\n                    svgcontent = '<svg id=\"' + view.name + '\" width=\"' + view.profile.width + '\" height=\"' + view.profile.height +\n                        '\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:svg=\"http://www.w3.org/2000/svg\">' +\n                        '<filter id=\"blur-filter\" x=\"-3\" y=\"-3\" width=\"200\" height=\"200\"><feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"3\" /></filter>' +\n                        '<g><title>Layer 1</title></g></svg>';\n                }\n                if (this.winRef.nativeWindow.svgEditor) {\n                    this.winRef.nativeWindow.svgEditor.setDocProperty(view.name, view.profile.width, view.profile.height, view.profile.bkcolor);\n                    this.winRef.nativeWindow.svgEditor.setSvgString(svgcontent);\n                }\n\n                // check gauge to init\n                this.gaugesRef = [];\n                setTimeout(() => {\n                    for (let key in v.items) {\n                        let ga: GaugeSettings = this.getGaugeSettings(v.items[key]);\n                        this.checkGaugeAdded(ga);\n                    }\n                    this.winRef.nativeWindow.svgEditor.refreshCanvas();\n                }, 500);\n            } else if (this.cardsview) {\n                this.cardsview.view = view;\n                this.cardsview.reload();\n            }\n        }\n    }\n\n    /**\n     * get view from hmi views list\n     * @param name view name\n     */\n    private getView(name) {\n        for (var i = 0; i < this.hmi.views.length; i++) {\n            if (this.hmi.views[i].name === name) {\n                return this.hmi.views[i];\n            }\n        }\n        return null;\n    }\n\n    getViewsSorted() {\n        return this.hmi.views.sort((a, b) => {\n            if (a.name > b.name) { return 1; }\n            return -1;\n        });\n    }\n    //#endregion\n\n    //#region Cards Widget\n    editCardsWidget(item: any) {\n        let exist: string[] = this.cardsview.getWindgetViewName();\n        if (item.card.data && exist.indexOf(item.card.data) >= 0) {\n            exist = exist.filter((n) => n !== item.card.data);\n        }\n        let cardType = Utils.getEnumKey(ViewType, ViewType.cards);\n        let views = this.hmi.views.filter((v) => v.type !== cardType && exist.indexOf(v.name) < 0).map((v) => { return v.name })\n        let dialogRef = this.dialog.open(CardConfigComponent, {\n            position: { top: '60px' },\n            data: { item: item, views: views }\n        });\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                let view = this.hmi.views.filter((v) => v.name === item.card.data);\n                if (view && view.length) {\n                    item.content = view[0];\n                } else {\n                    item.content = null;\n                }\n                this.onSaveProject();\n                this.cardsview.render();\n            }\n        });\n    }\n\n    addCard() {\n        this.cardsview.addCardsWidget();\n    }\n\n    saveCards(dashboard) {\n        // this.dashboard.splice(this.dashboard.indexOf(item), 1);\n    }\n    // #region \n\n    //#region Svg-editor event and function interface\n    /**\n     * set the mode to svg-editor (line,text,...)\n     * @param mode mode to set\n     */\n    setMode(mode: string) {\n        this.currentMode = mode;\n        this.clearSelection();\n        this.checkFillAndStrokeColor();\n        this.winRef.nativeWindow.svgEditor.clickToSetMode(mode);\n    }\n\n    /**\n     * check with the current mode\n     * @param mode mode to check\n     */\n    isModeActive(mode) {\n        return (this.currentMode === mode)\n    }\n\n    /**\n     * clear svg-editor and the canvas\n     */\n    private clearEditor() {\n        if (this.winRef.nativeWindow.svgEditor) {\n            this.winRef.nativeWindow.svgEditor.clickClearAll();\n        }\n    }\n\n    /** \n     * check if fill and stroke not the same color is, text and label set all to black\n     */\n    private checkFillAndStrokeColor() {\n        if (this.colorFill && this.colorStroke && this.colorFill === this.colorStroke) {\n            this.setFillColor(this.colorDefault.fill);\n            this.setStrokeColor(this.colorDefault.stroke);\n        }\n    }\n\n    /**\n     * event from svg-editor by new selection svg element\n     * @param event svg element\n     */\n    private onSelectedElement(elems) {\n        this.selectedElement = null;\n        try {\n            // to remove some strange effects\n            if (document.activeElement !== document.body) (document.activeElement as HTMLElement).blur();\n        } catch (e) { }\n        if (elems) {\n            if (elems.length <= 1) {\n                this.selectedElement = elems[0];\n                this.selectedElement.type = elems[0].type || 'svg-ext-shapes-' + (this.currentMode || 'default');\n                this.checkColors(this.selectedElement);\n                this.checkGaugeInView(this.selectedElement);\n            }\n        }\n    }\n\n    /**\n     * event from svg-editor: for every loaded extension\n     * @param args\n     */\n    private onExtensionLoaded(args) {\n    }\n\n    /**\n     * event from svg-editor: change fill color\n     * @param event color code\n     */\n    onChangeFillColor(event) {\n        this.setFillColor(event);\n        this.checkMySelectedToSetColor(this.colorFill, null, this.winRef.nativeWindow.svgEditor.getSelectedElements());\n    }\n\n    /**\n     * event change stroke color (from bottom color panel)\n     * @param event color code\n     */\n    onChangeStrokeColor(event) {\n        this.setStrokeColor(event);\n        this.checkMySelectedToSetColor(null, this.colorStroke, this.winRef.nativeWindow.svgEditor.getSelectedElements());\n    }\n\n\n    /**\n     * event from svg-editor: svg element removed\n     * @param ele svg element\n     */\n    private onRemoveElement(ele: any) {\n        if (this.currentView && this.currentView.items && ele) {\n            for (let i = 0; i < ele.length; i++) {\n                if (this.currentView.items[ele[i].id]) {\n                    delete this.currentView.items[ele[i].id];\n                }\n            }\n        }\n    }\n\n    /**\n     * set the fill color (to svg-editor)\n     * @param event color code\n     */\n    private setFillColor(event) {\n        let color = event;\n        if (color.charAt(0) === '#')\n            color = color.slice(1);\n        let alfa = 100;\n        if (this.winRef.nativeWindow.svgEditor) {\n            this.winRef.nativeWindow.svgEditor.setColor(color, alfa, \"fill\");\n        }\n        // this.fillcolor;\n    }\n\n    /**\n     * set stroke color (to svg-editor)\n     * @param event color code\n     */\n    setStrokeColor(event) {\n        let color = event;\n        if (color.charAt(0) === '#')\n            color = color.slice(1);\n        let alfa = 100;\n        this.winRef.nativeWindow.svgEditor.setColor(color, alfa, \"stroke\");\n        // this.fillcolor;\n    }\n\n    /**\n     * set the marker to selected element (->, <->, <-)\n     * @param id marker id (start,mid,end)\n     * @param marker marker type\n     */\n    onSetMarker(id, marker) {\n        if (marker >= 0) {\n            this.winRef.nativeWindow.svgEditor.setMarker(id, marker);\n        }\n    }\n\n    /**\n     * align the selected element\n     * @param letter align type (left,center,right,top,middle,bottom)\n     */\n    onAlignSelected(letter: string) {\n        this.winRef.nativeWindow.svgEditor.alignSelectedElements(letter.charAt(0));\n    }\n\n    /**\n     * select the zoom area function\n     */\n    onZoomSelect() {\n        this.winRef.nativeWindow.svgEditor.clickZoom();\n    }\n\n    /**\n     * show grid in canvas\n     */\n    onShowGrid() {\n        this.gridOn = this.gridOn = !this.gridOn;\n        this.winRef.nativeWindow.svgEditor.clickExtension(\"view_grid\");\n        this.winRef.nativeWindow.svgEditor.enableGridSnapping(this.gridOn);\n    }\n\n    /**\n     * add image to view\n     * @param event selected file\n     */\n    onSetImage(event) {\n        if (event.target.files) {\n            this.imagefile = 'assets/images/' + event.target.files[0].name;\n            let self = this;\n            if (this.imagefile.split('.').pop().toLowerCase() === 'svg') {\n                let reader = new FileReader();\n                reader.onloadend = function (e: any) {\n                    self.winRef.nativeWindow.svgEditor.setSvgImageToAdd(e.target.result);\n                    self.setMode('svg-image');\n                };\n                reader.readAsText(event.target.files[0]);\n            } else {\n                this.getBase64Image(event.target.files[0], function (imgdata) {\n                    let data = imgdata;\n                    self.winRef.nativeWindow.svgEditor.promptImgURLcallback = data;\n                    self.setMode('image');\n                });\n            }\n        }\n    }\n\n    /**\n     * convert image file to code to attach in svg\n     * @param file image file\n     * @param callback event for end load image\n     */\n    private getBase64Image(file, callback) {\n        var fr = new FileReader();\n        fr.onload = function () {\n            callback(fr.result);\n        }\n        fr.readAsDataURL(file);\n    }\n\n    /**\n     * set stroke to svg selected (joinmieter, joinround, joinbevel, capbutt, capsquare, capround)\n     * @param option stroke type\n     */\n    onSetStrokeOption(option) {\n        this.winRef.nativeWindow.svgEditor.setStrokeOption(option);\n    }\n\n    /**\n     * set shadow to svg selected\n     * @param event shadow\n     */\n    onSetShadowOption(event) {\n        this.winRef.nativeWindow.svgEditor.onSetShadowOption(event);\n    }\n\n    /**\n     * set font to svg selected\n     * @param font font family\n     */\n    onFontFamilyChange(font) {\n        this.winRef.nativeWindow.svgEditor.setFontFamily(font);\n    }\n\n    /**\n     * align the svg text (left,middle,right)\n     * @param align type\n     */\n    onTextAlignChange(align) {\n        this.winRef.nativeWindow.svgEditor.setTextAlign(align);\n    }\n\n    checkMySelectedToSetColor(bkcolor, color, elems) {\n        GaugesManager.initElementColor(bkcolor, color, elems);\n    }\n\n    /**\n     * check and set the special gauge like ngx-uplot, ngx-gauge, ... if added\n     * if return true then the GaugeSettings is changed have to set again\n     * @param ga\n     */\n    checkGaugeAdded(ga: GaugeSettings) {\n        let gauge = this.gaugesManager.initElementAdded(ga, this.resolver, this.viewContainerRef, false);\n        if (gauge) {\n            if (gauge !== true) {\n                if (this.gaugesRef.indexOf(ga.id) === -1) {\n                    this.gaugesRef[ga.id] = { type: ga.type, ref: gauge };\n                }\n            }\n            this.setGaugeSettings(ga);\n        }\n    }\n\n    /**\n     * dialog to define hyperlink\n     */\n    onMakeHyperlink() {\n        let dialogRef = this.dialog.open(DialogLinkProperty, {\n            data: { url: 'https://' },\n            position: { top: '60px' }\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result && result.url) {\n                this.winRef.nativeWindow.svgEditor.makeHyperlink(result.url);\n            }\n        });\n    }\n    //#endregion\n\n    //#region Toolbar Top Events\n    /**\n     * save current project and launch the Test in new Windows 'lab'\n     */\n    onStartCurrent() {\n        this.onSaveProject();\n        this.winRef.nativeWindow.open('lab', 'MyTest', 'width=800,height=640,menubar=0');\n    }\n    //#endregion\n\n    //#region Project Events\n    /**\n     * Save Project\n     * Save the current View\n     */\n    onSaveProject() {\n        if (this.currentView) {\n            this.currentView.svgcontent = this.getContent();\n            this.saveView(this.currentView);\n        }\n    }\n\n    //#endregion\n\n    //#region View Events (Add/Rename/Delete/...)\n    onAddDoc() {\n        let exist = this.hmi.views.map((v) => { return v.name });\n        let dialogRef = this.dialog.open(DialogNewDoc, {\n            position: { top: '60px' },\n            data: { name: '', type: Utils.getEnumKey(ViewType, ViewType.svg), exist: exist }\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result && result.name && result.type) {\n                this.addView(result.name, result.type);\n            }\n        });\n    }\n\n    /**\n     * Add View to Project with a default name View_[x]\n     */\n    addView(name?: string, type?: ViewType) {\n        if (this.hmi.views) {\n            let nn = \"View_\";\n            let idx = 1;\n            for (idx = 1; idx < this.hmi.views.length + 2; idx++) {\n                let found = false;\n                for (var i = 0; i < this.hmi.views.length; i++) {\n                    if (this.hmi.views[i].name === nn + idx) {\n                        found = true;\n                        break;\n                    }\n                }\n                if (!found)\n                    break;\n            }\n            let v = new View();\n            v.type = type;\n            if (name) {\n                v.name = name;\n            } else if (this.hmi.views.length <= 0) {\n                v.name = 'MainView';\n            } else {\n                v.name = nn + idx;\n                v.profile.bkcolor = '#ffffffff';\n            }\n            if (type === Utils.getEnumKey(ViewType, ViewType.cards)) {\n                v.profile.bkcolor = 'rgba(67, 67, 67, 1)';\n            }\n            v.id = 'v_' + Utils.getShortGUID();\n            this.hmi.views.push(v);\n            this.onSelectView(v);\n            this.saveView(this.currentView);\n        }\n    }\n\n    /**\n     * Clone the View, copy and change all ids\n     * @param view\n     */\n    onCloneView(view: View) {\n        if (view) {\n            let nn = \"View_\";\n            let idx = 1;\n            for (idx = 1; idx < this.hmi.views.length + 2; idx++) {\n                let found = false;\n                for (var i = 0; i < this.hmi.views.length; i++) {\n                    if (this.hmi.views[i].name === nn + idx) {\n                        found = true;\n                        break;\n                    }\n                }\n                if (!found)\n                    break;\n            }\n            let torename = { content: JSON.stringify(view), id: '' };\n            // change all gauge ids\n            let idrenamed = [];\n            for (let key in view.items) {\n                torename.id = key;\n                let newid = this.winRef.nativeWindow.svgEditor.renameSvgExtensionId(torename);\n                idrenamed.push(newid);\n            }\n            let strv = this.winRef.nativeWindow.svgEditor.renameAllSvgExtensionId(torename.content, idrenamed);\n            let v: View = JSON.parse(strv);\n            v.id = 'v_' + Utils.getShortGUID();\n            v.name = nn + idx;\n            this.hmi.views.push(v);\n            this.onSelectView(v);\n            this.saveView(this.currentView);\n        }\n    }\n\n    /**\n     * Delete the View from hmi.views list\n     * @param view View to delete\n     */\n    onDeleteView(view) {\n        let msg = '';\n        this.translateService.get('msg.view-remove', { value: view.name }).subscribe((txt: string) => { msg = txt });\n        let dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: { msg: msg },\n            position: { top: '60px' }\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result && this.hmi.views) {\n                let toselect = null;\n                for (var i = 0; i < this.hmi.views.length; i++) {\n                    if (this.hmi.views[i].id === view.id) {\n                        this.hmi.views.splice(i, 1);\n                        if (i > 0 && i < this.hmi.views.length) {\n                            toselect = this.hmi.views[i];\n                        }\n                        break;\n                    }\n                }\n                this.currentView = null;\n                if (toselect) {\n                    this.onSelectView(toselect);\n                } else if (this.hmi.views.length > 0) {\n                    this.onSelectView(this.hmi.views[0]);\n                }\n                this.removeView(view);\n            }\n        });\n    }\n\n    /**\n     * Rename the View (only name)\n     * @param view View to rename\n     */\n    onRenameView(view) {\n        let exist = this.hmi.views.filter((v) => v.id !== view.id).map((v) => { return v.name });\n        let dialogRef = this.dialog.open(DialogDocName, {\n            position: { top: '60px' },\n            data: { name: view.name, exist: exist }\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result && result.name) {\n                view.name = result.name;\n                this.saveView(view);\n            }\n        });\n    }\n\n    /**\n     * Edit View property\n     * @param view View to change property (height, width, background)\n     */\n    onPropertyView(view) {\n        let dialogRef = this.dialog.open(DialogDocProperty, {\n            position: { top: '60px' },\n            data: { name: view.name, type: view.type, profile: view.profile }\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result && result.profile) {\n                if (result.profile.height) view.profile.height = parseInt(result.profile.height);\n                if (result.profile.width) view.profile.width = parseInt(result.profile.width);\n                if (result.profile.margin >= 0) view.profile.margin = parseInt(result.profile.margin);\n                view.profile.bkcolor = result.profile.bkcolor;\n                this.winRef.nativeWindow.svgEditor.setDocProperty(view.name, view.profile.width, view.profile.height, view.profile.bkcolor);\n                this.onSelectView(view);\n            }\n        });\n    }\n\n    /**\n     * select the view, save current vieww before\n     * @param view selected view to load resource\n     */\n    private onSelectView(view) {\n        if (this.currentView) {\n            this.currentView.svgcontent = this.getContent();\n            // this.hmi.views[this.currentView].svgcontent = this.winRef.nativeWindow.svgEditor.getSvgString();\n        } else {\n            this.setFillColor(this.colorFill);\n        }\n        if (this.currentView) {\n            this.saveView(this.currentView);\n        }\n        this.currentView = view;\n        if (this.currentView.type === Utils.getEnumKey(ViewType, ViewType.cards)) {\n            this.editorMode = EditorModeType.CARDS;\n        } else {\n            this.editorMode = EditorModeType.SVG;\n        }\n        localStorage.setItem(\"@frango.webeditor.currentview\", this.currentView.name);\n        this.loadView(this.currentView);\n    }\n\n    /**\n     * check with the current view\n     * @param view view to check\n     */\n    isViewActive(view) {\n        return (this.currentView && this.currentView.name === view.name);\n    }\n\n    /**\n     * Export view in a file json format MyView.fuxav\n     * @param view\n     */\n    onExportView(view: View) {\n        let filename = 'fuxa-view.json';\n        let date = new Date();\n        let content = JSON.stringify(view);\n        let blob = new Blob([content], { type: 'text/plain;charset=utf-8' });\n        FileSaver.saveAs(blob, filename);\n    }\n\n    /**\n     * Import view from file (exported in json format MyView.fuxav)\n     */\n    onImportView() {\n        let ele = document.getElementById('viewFileUpload') as HTMLElement;\n        ele.click();\n    }\n\n    /**\n     * open Project event file loaded\n     * @param event file resource\n     */\n    onViewFileChangeListener(event) {\n        let text = [];\n        let files = event.srcElement.files;\n        let input = event.target;\n        let reader = new FileReader();\n        reader.onload = (data) => {\n            let view = JSON.parse(reader.result.toString());\n            if (view) {\n                let idx = 1;\n                let startname = view.name;\n                let existView = null;\n                while (existView = this.hmi.views.find((v) => v.name === view.name)) {\n                    view.name = startname + '_' + idx++;\n                }\n                view.id = 'v_' + Utils.getShortGUID();\n                this.hmi.views.push(view);\n                this.onSelectView(view);\n                this.saveView(this.currentView);\n            }\n            // this.projectService.setProject(prj, true);\n        }\n\n        reader.onerror = function () {\n            let msg = 'Unable to read ' + input.files[0];\n            // this.translateService.get('msg.project-load-error', {value: input.files[0]}).subscribe((txt: string) => { msg = txt });\n            alert(msg);\n        };\n        reader.readAsText(input.files[0]);\n        this.viewFileImportInput.nativeElement.value = null;\n    }\n    //#endregion\n\n    //#region Panels State\n    /**\n     * Load the left panels state copied in localstorage\n     */\n    private loadPanelState() {\n        let ps = localStorage.getItem(\"@frango.webeditor.panelsState\");\n        this.panelsState.enabled = true;\n        if (ps) {\n            this.panelsState = JSON.parse(ps);\n        }\n    }\n\n    /**\n     * Save the panels state in localstorage (after every toggled)\n     */\n    savePanelState() {\n        if (this.panelsState.enabled) {\n            localStorage.setItem(\"@frango.webeditor.panelsState\", JSON.stringify(this.panelsState));\n        }\n    }\n    //#endregion\n\n    //#region Interactivity\n    /**\n     * to check from DOM and to control open close interaction panel\n     * @param ele selected gauge element\n     */\n    isInteractivtyEnabled(ele) {\n        if (ele && ele.type) {\n            return this.gaugesManager.isGauge(ele.type);\n        }\n        return false;\n    }\n\n    /**\n     * callback to open edit gauge property form (from GaugeBase)\n     * @param event\n     */\n    onGaugeEdit(event) {\n        let settings = this.gaugePanelComponent.settings;\n        this.openEditGauge(settings, data => {\n            this.setGaugeSettings(data);\n        });\n    }\n\n    /**\n     * callback to open edit gauge property form (from selected element context menu)\n     */\n    onGaugeEditEx() {\n        setTimeout(() => {\n            this.gaugePanelComponent.onEdit();\n        }, 500)\n    }\n\n    isWithEvents(type) {\n        return this.gaugesManager.isWithEvents(type);\n    }\n\n    isWithActions(type) {\n        return this.gaugesManager.isWithActions(type);\n    }\n\n    /**\n     * edit the gauges/chart settings property, the settings are composed from gauge id... and property\n     * in property will be the result values saved\n     *\n     * @param settings\n     * @param callback\n     */\n    openEditGauge(settings, callback) {\n        let tempsettings = JSON.parse(JSON.stringify(settings));\n        let hmi = this.projectService.getHmi();\n        let dlgType = GaugesManager.getEditDialogTypeToUse(settings.type);\n        let eventsSupported = this.isWithEvents(settings.type);\n        let actionsSupported = this.isWithActions(settings.type);\n        let defaultValue = GaugesManager.getDefaultValue(settings.type);\n        let names = Object.values(this.currentView.items).map(gs => gs.name);\n        // set default name\n        if (!tempsettings.name) {\n            tempsettings.name = Utils.getNextName(GaugesManager.getPrefixGaugeName(settings.type), names);\n        }\n        // settings.property = JSON.parse(settings.property);\n        let dialogRef: any;\n        if (dlgType === GaugeDialogType.Chart) {\n            dialogRef = this.dialog.open(ChartPropertyComponent, {\n                position: { top: '60px' },\n                data: {\n                    settings: tempsettings, devices: Object.values(this.projectService.getDevices()),\n                    views: hmi.views, dlgType: dlgType, charts: this.projectService.getCharts(),\n                    names: names\n                }\n            });\n        } else if (dlgType === GaugeDialogType.Gauge) {\n            dialogRef = this.dialog.open(BagPropertyComponent, {\n                position: { top: '30px' },\n                data: {\n                    settings: tempsettings, devices: Object.values(this.projectService.getDevices()), dlgType: dlgType,\n                    names: names\n                }\n            });\n        } else if (dlgType === GaugeDialogType.Pipe) {\n            dialogRef = this.dialog.open(PipePropertyComponent, {\n                position: { top: '60px' },\n                data: {\n                    settings: tempsettings, devices: Object.values(this.projectService.getDevices()),\n                    withEvents: eventsSupported, withActions: actionsSupported,\n                    names: names\n                }\n            });\n        } else if (dlgType === GaugeDialogType.Slider) {\n            dialogRef = this.dialog.open(SliderPropertyComponent, {\n                position: { top: '60px' },\n                data: {\n                    settings: tempsettings, devices: Object.values(this.projectService.getDevices()),\n                    withEvents: eventsSupported, withActions: actionsSupported,\n                    names: names\n                }\n            });\n        } else if (dlgType === GaugeDialogType.Switch) {\n            dialogRef = this.dialog.open(HtmlSwitchPropertyComponent, {\n                position: { top: '60px' },\n                data: {\n                    settings: tempsettings, devices: Object.values(this.projectService.getDevices()),\n                    withEvents: eventsSupported, withActions: actionsSupported,\n                    names: names\n                }\n            });\n        } else {\n            let title = this.getGaugeTitle(settings.type);\n            dialogRef = this.dialog.open(GaugePropertyComponent, {\n                position: { top: '60px' },\n                data: {\n                    settings: tempsettings, devices: Object.values(this.projectService.getDevices()), title: title,\n                    views: hmi.views, dlgType: dlgType, withEvents: eventsSupported, withActions: actionsSupported, default: defaultValue,\n                    inputs: Object.values(this.currentView.items).filter(gs => gs.name && (gs.id.startsWith('HXS_') || gs.id.startsWith('HXI_'))),\n                    names: names\n                }\n            });\n        }\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                callback(result.settings);\n                this.saveView(this.currentView);\n                let result_gauge = this.gaugesManager.initInEditor(result.settings, this.resolver, this.viewContainerRef);\n                if (dlgType === GaugeDialogType.Pipe && result_gauge && result_gauge.element && result_gauge.element.id !== result.settings.id) {\n                    // by init a path we need to change the id\n                    delete this.currentView.items[result.settings.id];\n                    result.settings.id = result_gauge.element.id;\n                    callback(result.settings);\n                    this.saveView(this.currentView);\n                }\n            }\n        });\n    }\n\n    private getGaugeTitle(type) {\n        let msg = '';\n        if (type.startsWith(HtmlInputComponent.TypeTag)) {\n            this.translateService.get('editor.controls-input-settings').subscribe((txt: string) => { msg = txt });\n        } else if (type.startsWith(ValueComponent.TypeTag)) {\n            this.translateService.get('editor.controls-output-settings').subscribe((txt: string) => { msg = txt });\n        } else if (type.startsWith(HtmlButtonComponent.TypeTag)) {\n            this.translateService.get('editor.controls-button-settings').subscribe((txt: string) => { msg = txt });\n        } else if (type.startsWith(HtmlSelectComponent.TypeTag)) {\n            this.translateService.get('editor.controls-select-settings').subscribe((txt: string) => { msg = txt });\n        } else if (type.startsWith(GaugeProgressComponent.TypeTag)) {\n            this.translateService.get('editor.controls-progress-settings').subscribe((txt: string) => { msg = txt });\n        } else if (type.startsWith(GaugeSemaphoreComponent.TypeTag)) {\n            this.translateService.get('editor.controls-semaphore-settings').subscribe((txt: string) => { msg = txt });\n        } else {\n            this.translateService.get('editor.controls-shape-settings').subscribe((txt: string) => { msg = txt });\n        }\n        return msg;\n    }\n\n    //#endregion\n\n    isWithShadow() {\n        if (this.selectedElement) {\n\n        }\n        return false;\n    }\n\n    private fileNew() {\n    }\n\n    private checkValid(hmi) {\n        if (!hmi.views) {\n            hmi.views = [];\n            return false;\n        }\n        return true;\n    }\n\n    private clearSelection() {\n        this.winRef.nativeWindow.svgEditor.clearSelection();\n    }\n\n    cloneElement() {\n        this.winRef.nativeWindow.svgEditor.clickExtension(\"view_grid\");\n    }\n\n    flipSelected(fliptype: string) {\n    }\n}\n\n@Component({\n    selector: 'dialog-new-doc',\n    templateUrl: 'newdoc.dialog.html',\n})\nexport class DialogNewDoc {\n    docType = ViewType;\n    constructor(public dialogRef: MatDialogRef<DialogNewDoc>,\n        private translateService: TranslateService,\n        @Inject(MAT_DIALOG_DATA) public data: any) { \n        Object.keys(this.docType).forEach(key => {\n            this.translateService.get(this.docType[key]).subscribe((txt: string) => {this.docType[key] = txt});\n        });\n    }\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n\n    isValid(name): boolean {\n        if (!this.data.type) return false;\n        if (!this.data.name) return false;\n        return (this.data.exist.find((n) => n === name)) ? false : true;\n    }\n}\n\n@Component({\n    selector: 'dialog-doc-property',\n    templateUrl: 'docproperty.dialog.html',\n    styleUrls: ['docproperty.dialog.css']\n})\nexport class DialogDocProperty {\n    defaultColor = Utils.defaultColor;\n    cardViewType = Utils.getEnumKey(ViewType, ViewType.cards);\n\n    propSizeType = [{ text: 'dlg.docproperty-size-320-240', value: { width: 320, height: 240 } }, { text: 'dlg.docproperty-size-460-360', value: { width: 460, height: 360 } },\n    { text: 'dlg.docproperty-size-640-480', value: { width: 640, height: 480 } }, { text: 'dlg.docproperty-size-800-600', value: { width: 800, height: 600 } },\n    { text: 'dlg.docproperty-size-1024-768', value: { width: 1024, height: 768 } }, { text: 'dlg.docproperty-size-1280-960', value: { width: 1280, height: 960 } },\n    { text: 'dlg.docproperty-size-1600-1200', value: { width: 1600, height: 1200 } }, { text: 'dlg.docproperty-size-1920-1080', value: { width: 1920, height: 1080 } }];\n    constructor(private translateService: TranslateService,\n        public dialogRef: MatDialogRef<DialogDocProperty>,\n        @Inject(MAT_DIALOG_DATA) public data: any) {\n        for (let i = 0; i < this.propSizeType.length; i++) {\n            this.translateService.get(this.propSizeType[i].text).subscribe((txt: string) => { this.propSizeType[i].text = txt });\n        }\n    }\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n\n    onSizeChange(size) {\n        if (size && size.width && size.height) {\n            this.data.profile.width = size.width;\n            this.data.profile.height = size.height;\n        }\n    }\n}\n\n@Component({\n    selector: 'dialog-doc-name',\n    templateUrl: 'docname.dialog.html',\n})\nexport class DialogDocName {\n    constructor(\n        public dialogRef: MatDialogRef<DialogDocName>,\n        @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n\n    isValid(name): boolean {\n        return (this.data.exist.find((n) => n === name)) ? false : true;\n    }\n}\n\n@Component({\n    selector: 'dialog-link-property',\n    templateUrl: 'linkproperty.dialog.html',\n})\nexport class DialogLinkProperty {\n    constructor(\n        public dialogRef: MatDialogRef<DialogLinkProperty>,\n        @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n}\n\nexport enum EditorModeType {\n    SVG,\n    CARDS\n}\n","module.exports = \"<div style=\\\"position: relative;\\\" class=\\\"dialog-mdsd-v\\\">\\n    <h1 mat-dialog-title style=\\\"display:inline-block; cursor:move\\\" mat-dialog-draggable>{{'dlg.layout-title' | translate}}</h1>\\n    <mat-icon (click)=\\\"onNoClick()\\\" style=\\\"float:right;margin-right:-10px;margin-top:-10px;cursor:pointer;color:gray;\\\">clear</mat-icon>\\n    <mat-tab-group style=\\\"width: 950px;height: 700px\\\">\\n        <mat-tab label=\\\"{{'dlg.layout-general' | translate}}\\\">\\n            <div style=\\\"display: block;\\\">\\n                <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-top: 25px;\\\">\\n                    <span>{{'dlg.layout-lbl-sview' | translate}}</span>\\n                    <mat-select [(value)]=\\\"data.layout.start\\\" style=\\\"width: 400px\\\">\\n                        <mat-option *ngFor=\\\"let view of data.views\\\" [value]=\\\"view.id\\\">\\n                            {{ view.name }}\\n                        </mat-option>\\n                    </mat-select>\\n                </div>\\n                <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 25px;margin-left: 180px;\\\">\\n                    <ngx-fab-button #fabmenu icon=\\\"menu\\\" iconOpen=\\\"menu\\\" color=\\\"rgba(68,138,255, 1)\\\" style=\\\"color: rgba(255,255,255,1);background-color: rgba(68,138,255, 0);\\\">\\n                    </ngx-fab-button>\\n                </div>\\n                <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 25px;margin-left: 60px;\\\">\\n                    <span>{{'dlg.layout-show-dev' | translate}}</span>\\n                    <mat-slide-toggle color=\\\"primary\\\" [(ngModel)]=\\\"data.layout.showdev\\\"></mat-slide-toggle>\\n                </div>\\n            </div>\\n            <div style=\\\"display: block;margin-bottom: 25px\\\">\\n                <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-top: 5px;\\\">\\n                    <span>{{'dlg.layout-lbl-zoom' | translate}}</span>\\n                    <mat-select [(value)]=\\\"data.layout.zoom\\\" style=\\\"width: 400px\\\">\\n                        <mat-option *ngFor=\\\"let type of zoomMode | enumToArray\\\" [value]=\\\"type.key\\\">\\n                            {{ type.value }}\\n                        </mat-option>\\n                    </mat-select>\\n                </div>\\n            </div>\\n            <div style=\\\"display: block;\\\">\\n                <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-top: 5px;\\\">\\n                    <span>{{'dlg.layout-input-dialog' | translate}}</span>\\n                    <mat-select [(value)]=\\\"data.layout.inputdialog\\\" style=\\\"width: 400px\\\">\\n                        <mat-option *ngFor=\\\"let type of inputMode | enumToArray\\\" [value]=\\\"type.key\\\">\\n                            {{ type.value }}\\n                        </mat-option>\\n                    </mat-select>\\n                </div>\\n            </div>            \\n        </mat-tab>\\n        <mat-tab label=\\\"{{'dlg.layout-navigation' | translate}}\\\">\\n            <div style=\\\"display: inline-block;margin-top: 10px;width:100%; min-height: 500px; overflow-y: auto; height: 620px\\\">\\n                <div [style.background-color]=\\\"data.layout.header.bkcolor\\\" [style.color]=\\\"data.layout.header.fgcolor\\\">\\n                    <button mat-icon-button>\\n                        <mat-icon aria-label=\\\"Menu\\\">menu</mat-icon>\\n                    </button>\\n                    <div style=\\\"display: inline-block;padding-left: 140px\\\">\\n                        <button mat-icon-button (click)=\\\"onAddMenuItem(null)\\\">\\n                            <mat-icon aria-label=\\\"Add\\\">control_point</mat-icon>\\n                        </button>\\n                    </div>\\n                </div>\\n                <div class=\\\"sidenav-menu\\\" [style.background-color]=\\\"data.layout.navigation.bkcolor\\\" [style.color]=\\\"data.layout.navigation.fgcolor\\\"\\n                    style=\\\"height: calc(100% - 50px);\\\" [ngClass]=\\\"'sidenav-menu-' + data.layout.navigation.type\\\">\\n                    <mat-list class=\\\"dndList\\\"\\n                        style=\\\"padding-top: 10px;\\\">\\n                        <mat-list-item *ngFor=\\\"let item of draggableListLeft; let i = index\\\"\\n                            [ngClass]=\\\"'menu-item-' + data.layout.navigation.type\\\">\\n                            <button type=\\\"button\\\" mat-button class=\\\"sidenav-btn\\\" [style.color]=\\\"data.layout.navigation.fgcolor\\\" [ngSwitch]=\\\"data.layout.navigation.type\\\">\\n                                <!-- <mat-icon *ngIf=\\\"mode.value === navMode.icon || mode.value === navMode.block\\\">{{item.icon}}</mat-icon> -->\\n                                <div *ngSwitchCase=\\\"'icon'\\\" class=\\\"menu-item-content-icon\\\">\\n                                    <mat-icon>{{item.icon}}</mat-icon>\\n                                </div>\\n                                <div *ngSwitchCase=\\\"'text'\\\" class=\\\"menu-item-content-text\\\">\\n                                    <span>{{item.text}}</span>\\n                                </div>\\n                                <div *ngSwitchCase=\\\"'block'\\\" class=\\\"menu-item-content-block\\\">\\n                                    <mat-icon style=\\\"display: block;\\\">{{item.icon}}</mat-icon>\\n                                    <span>{{item.text}}</span>\\n                                </div>\\n                                <div *ngSwitchCase=\\\"'inline'\\\" class=\\\"menu-item-content-inline\\\">\\n                                    <mat-icon style=\\\"display: inline-block\\\">{{item.icon}}</mat-icon>\\n                                    <span style=\\\"display: inline-block\\\">{{item.text}}</span>\\n                                </div>\\n                            </button>\\n                            <div style=\\\"padding-left:15px;padding-top: 3px;display: block;width: 50px;\\\">\\n                                <mat-icon (click)=\\\"onMoveMenuItem(i, 'top')\\\"  class=\\\"layout-menu-item-icon\\\" style=\\\"display: block;\\\">arrow_upward</mat-icon>\\n                                <mat-icon (click)=\\\"onMoveMenuItem(i, 'bottom')\\\" class=\\\"layout-menu-item-icon\\\" style=\\\"display: block;\\\">arrow_downward</mat-icon>\\n                            </div>\\n                            <div style=\\\"padding-left:15px;\\\">\\n                                <div style=\\\"display: block;width: 50px;\\\">\\n                                    <mat-icon (click)=\\\"onAddMenuItem(item)\\\" class=\\\"layout-menu-item-icon layout-menu-item-edit\\\">edit</mat-icon>\\n                                    <mat-icon (click)=\\\"onRemoveMenuItem(i, item)\\\" class=\\\"layout-menu-item-icon layout-menu-item-delete\\\">clear</mat-icon>\\n                                </div>\\n                                <div class=\\\"layout-menu-item-link\\\">{{getViewName(item)}}</div>\\n                            </div>\\n                        </mat-list-item>\\n                    </mat-list>\\n                </div>\\n                <div style=\\\"top: 70px; right: 10px;position: absolute;\\\">\\n                    <div class=\\\"my-form-field\\\" style=\\\"display: block;\\\">\\n                        <span>{{'dlg.layout-lbl-smode' | translate}}</span>\\n                        <mat-select [(value)]=\\\"data.layout.navigation.mode\\\" style=\\\"width: 300px\\\">\\n                            <mat-option *ngFor=\\\"let mode of navMode | enumToArray\\\" [value]=\\\"mode.key\\\">\\n                                {{ mode.value }}\\n                            </mat-option>\\n                        </mat-select>\\n                    </div>\\n                    <div class=\\\"my-form-field\\\" style=\\\"display: block; margin-top: 10px\\\">\\n                        <span>{{'dlg.layout-lbl-type' | translate}}</span>\\n                        <mat-select [(value)]=\\\"data.layout.navigation.type\\\" style=\\\"width: 300px\\\">\\n                            <mat-option *ngFor=\\\"let type of navType | enumToArray\\\" [value]=\\\"type.key\\\">\\n                                {{ type.value }}\\n                            </mat-option>\\n                        </mat-select>\\n                    </div>\\n                    <div style=\\\"display: block; margin-top: 10px\\\">\\n                        <div class=\\\"my-form-field\\\" style=\\\"display: inline-block\\\">\\n                            <span>{{'dlg.layout-nav-bkcolor' | translate}}</span>\\n                            <input [(colorPicker)]=\\\"data.layout.navigation.bkcolor\\\" [style.background]=\\\"data.layout.navigation.bkcolor\\\" [cpAlphaChannel]=\\\"'always'\\\" class=\\\"input-color\\\"\\n                                [cpPresetColors]=\\\"defaultColor\\\" [cpOKButton]=\\\"true\\\" [cpCancelButton]=\\\"true\\\" [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\"\\n                                [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\" style=\\\"width:126px;\\\"\\n                                [cpPosition]=\\\"'bottom'\\\"/>\\n                        </div>\\n                        <div class=\\\"my-form-field\\\" style=\\\"float:right\\\">\\n                            <span>{{'dlg.layout-nav-fgcolor' | translate}}</span>\\n                            <input [(colorPicker)]=\\\"data.layout.navigation.fgcolor\\\" [style.background]=\\\"data.layout.navigation.fgcolor\\\" [cpAlphaChannel]=\\\"'always'\\\" class=\\\"input-color\\\"\\n                                [cpPresetColors]=\\\"defaultColor\\\" [cpOKButton]=\\\"true\\\" [cpCancelButton]=\\\"true\\\" [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\"\\n                                [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\" style=\\\"width:126px;\\\"\\n                                [cpPosition]=\\\"'bottom'\\\"/>\\n                        </div>\\n                    </div>\\n                </div>                \\n            </div>\\n        </mat-tab>\\n        <mat-tab label=\\\"{{'dlg.layout-header' | translate}}\\\">\\n            <div style=\\\"overflow-y: hidden; overflow-x: hidden; margin-top: 10px; min-height: 500px;\\\">\\n                <div class=\\\"header-layout\\\" [style.background-color]=\\\"data.layout.header.bkcolor\\\" [style.color]=\\\"data.layout.header.fgcolor\\\">\\n                    <div class=\\\"header-menu\\\">\\n                        <button mat-icon-button>\\n                            <mat-icon aria-label=\\\"Menu\\\">menu</mat-icon>\\n                        </button>\\n                    </div>\\n                    <div class=\\\"header-title\\\">\\n                        {{data.layout.header.title}}\\n                    </div>\\n                    <div *ngIf=\\\"data.securityEnabled\\\" class=\\\"header-login\\\">\\n                        <button mat-icon-button>\\n                            <mat-icon aria-label=\\\"Login\\\">account_circle</mat-icon>\\n                        </button>\\n                    </div>\\n                    <div class=\\\"header-button\\\">\\n                        <button mat-icon-button class=\\\"alarm-layout\\\">\\n                            <mat-icon aria-label=\\\"Alarms\\\">notifications_none</mat-icon>\\n                        </button>\\n                        <button mat-icon-button class=\\\"info-layout\\\">\\n                            <mat-icon aria-label=\\\"Info\\\">error_outline</mat-icon>\\n                        </button>\\n                    </div>\\n                </div>\\n                <div class=\\\"header-config\\\">\\n                    <div class=\\\"config\\\">\\n                        <div class=\\\"my-form-field\\\" style=\\\"width: 300px\\\">\\n                            <span>{{'dlg.layout-lbl-title' | translate}}</span>\\n                            <input [(ngModel)]=\\\"data.layout.header.title\\\" type=\\\"text\\\" style=\\\"width:293px\\\">\\n                        </div>\\n                        <div style=\\\"display: block; margin-top: 20px;width: 300px\\\">\\n                            <div class=\\\"my-form-field\\\" style=\\\"display: inline-block\\\">\\n                                <span>{{'dlg.layout-header-bkcolor' | translate}}</span>\\n                                <input [(colorPicker)]=\\\"data.layout.header.bkcolor\\\" [style.background]=\\\"data.layout.header.bkcolor\\\" [cpAlphaChannel]=\\\"'always'\\\" class=\\\"input-color\\\"\\n                                    [cpPresetColors]=\\\"defaultColor\\\" [cpOKButton]=\\\"true\\\" [cpCancelButton]=\\\"true\\\" [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\"\\n                                    [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\" style=\\\"width:126px;\\\"\\n                                    [cpPosition]=\\\"'bottom'\\\"/>\\n                            </div>\\n                            <div class=\\\"my-form-field\\\" style=\\\"float: right;\\\">\\n                                <span>{{'dlg.layout-header-fgcolor' | translate}}</span>\\n                                <input [(colorPicker)]=\\\"data.layout.header.fgcolor\\\" [style.background]=\\\"data.layout.header.fgcolor\\\" [cpAlphaChannel]=\\\"'always'\\\" class=\\\"input-color\\\"\\n                                    [cpPresetColors]=\\\"defaultColor\\\" [cpOKButton]=\\\"true\\\" [cpCancelButton]=\\\"true\\\" [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\"\\n                                    [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\" style=\\\"width:126px;\\\"\\n                                    [cpPosition]=\\\"'bottom'\\\"/>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"config\\\">\\n                        <div class=\\\"my-form-field\\\">\\n                            <span>{{'dlg.layout-lbl-alarms' | translate}}</span>\\n                            <mat-select [(value)]=\\\"data.layout.header.alarms\\\" style=\\\"width: 260px\\\">\\n                                <mat-option *ngFor=\\\"let mode of notifyMode | enumToArray\\\" [value]=\\\"mode.key\\\">\\n                                    {{ mode.value }}\\n                                </mat-option>\\n                            </mat-select>\\n                            <mat-icon aria-label=\\\"Alarms\\\">notifications_none</mat-icon>\\n                        </div>\\n                        <div class=\\\"my-form-field\\\" style=\\\"margin-top: 20px;\\\">\\n                            <span>{{'dlg.layout-lbl-infos' | translate}}</span>\\n                            <mat-select [(value)]=\\\"data.layout.header.infos\\\" style=\\\"width: 260px\\\">\\n                                <mat-option *ngFor=\\\"let mode of notifyMode | enumToArray\\\" [value]=\\\"mode.key\\\">\\n                                    {{ mode.value }}\\n                                </mat-option>\\n                            </mat-select>\\n                            <mat-icon aria-label=\\\"Info\\\">error_outline</mat-icon>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </mat-tab>\\n    </mat-tab-group>\\n    <div mat-dialog-actions class=\\\"dialog-action\\\">\\n        <button mat-raised-button [mat-dialog-close]=\\\"\\\">{{'dlg.cancel' | translate}}</button>\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onOkClick\\\" [mat-dialog-close]=\\\"data\\\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\\n    </div>\\n</div>\"","module.exports = \".layout-menu-item-icon{font-size:17px;height:18px;width:18px;cursor:pointer}.layout-menu-item-link{display:block;font-size:12px;white-space:nowrap}.header-layout{display:block;box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2) !important;height:46px !important;padding-left:4px;padding-right:10px;background-color:#fff}.header-menu{display:inline-block}.header-title{display:inline-block;margin-left:20px;min-width:200px;text-align:right;line-height:46px}.header-login{float:right;line-height:46px;border-left-width:1px;border-left-style:solid;padding-left:10px}.header-button{float:right;width:240px;line-height:46px;text-align:right;margin-right:10px;padding-right:50px}.header-button mat-icon{font-size:28px;width:28px;height:28px}.alarm-layout{margin-right:20px}.header-config{display:flex;padding-top:30px;margin-left:80px}.config{display:inline-block;width:50%}.my-form-field mat-icon{padding-left:10px;vertical-align:middle}.dndList{transition:all 600ms ease}::ng-deep .mat-tab-label{height:34px !important}\\n\"","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { SelOptionsComponent } from '../../gui-helpers/sel-options/sel-options.component';\n\nimport { LayoutSettings, NaviModeType, NaviItem, NaviItemType, NotificationModeType, ZoomModeType, InputModeType } from '../../_models/hmi';\nimport { Define } from '../../_helpers/define';\nimport { UserGroups } from '../../_models/user';\nimport { Utils } from '../../_helpers/utils';\n\n@Component({\n    selector: 'app-layout-property',\n    templateUrl: './layout-property.component.html',\n    styleUrls: ['./layout-property.component.scss']\n})\nexport class LayoutPropertyComponent implements OnInit {\n\n    draggableListLeft = [];\n    layout: any;\n    defaultColor = Utils.defaultColor;\n\n    startView: string;\n    sideMode: string;\n    navMode: any;\n    navType: any;\n    notifyMode: any;\n    zoomMode: any;\n    inputMode: any;\n\n    constructor(@Inject(MAT_DIALOG_DATA) public data: any,\n        public dialog: MatDialog,\n        public dialogRef: MatDialogRef<LayoutPropertyComponent>,\n        private translateService: TranslateService) {\n        if (!data.layout) {\n            data.layout = new LayoutSettings();\n        }\n        this.startView = data.layout.start;\n        this.sideMode = data.layout.navigation.mode;\n        if (!data.layout.navigation.items) {\n            data.layout.navigation.items = [];\n        }\n        this.draggableListLeft = data.layout.navigation.items;\n    }\n\n    ngOnInit() {\n        this.navMode = NaviModeType;\n        this.navType = NaviItemType;\n        this.notifyMode = NotificationModeType;\n        this.zoomMode = ZoomModeType;\n        this.inputMode = InputModeType;\n\n        Object.keys(this.navMode).forEach(key => {\n            this.translateService.get(this.navMode[key]).subscribe((txt: string) => {this.navMode[key] = txt});\n        });\n        Object.keys(this.navType).forEach(key => {\n            this.translateService.get(this.navType[key]).subscribe((txt: string) => {this.navType[key] = txt});\n        });\n        Object.keys(this.notifyMode).forEach(key => {\n            this.translateService.get(this.notifyMode[key]).subscribe((txt: string) => {this.notifyMode[key] = txt});\n        });\n        Object.keys(this.zoomMode).forEach(key => {\n            this.translateService.get(this.zoomMode[key]).subscribe((txt: string) => {this.zoomMode[key] = txt});\n        });\n        Object.keys(this.inputMode).forEach(key => {\n            this.translateService.get(this.inputMode[key]).subscribe((txt: string) => {this.inputMode[key] = txt});\n        });\n    }\n\n    onAddMenuItem(item) {\n        let eitem = new NaviItem();\n        if (item) {\n            eitem = JSON.parse(JSON.stringify(item));\n        }\n        let views = JSON.parse(JSON.stringify(this.data.views));\n        views.unshift({id: '', name: ''});\n        let dialogRef = this.dialog.open(DialogMenuItem, {\n            position: { top: '60px' },\n            data: { item: eitem, views: views, permission: eitem.permission }\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                if (item) {\n                    item.icon = result.item.icon;\n                    item.text = result.item.text;\n                    item.view = result.item.view;\n                    item.link = result.item.link;\n                    item.permission = result.permission; \n                    if (item.view) {\n                        item.link = '';\n                    }\n                } else {\n                    let nitem = new NaviItem();\n                    nitem.icon = result.item.icon;\n                    nitem.text = result.item.text;\n                    nitem.view = result.item.view;\n                    nitem.link = result.item.link;\n                    nitem.permission = result.permission; \n                    if (nitem.view) {\n                        nitem.link = '';\n                    }\n                    this.draggableListLeft.push(nitem);\n                }\n            }\n        });\n        // this.winRef.nativeWindow.svgEditor.showDocProperties();\n    }\n\n    onRemoveMenuItem(index: number, item) {\n        this.draggableListLeft.splice(index, 1);\n    }\n\n    onMoveMenuItem(index, direction) {\n        if (direction === 'top' && index > 0) {\n            this.draggableListLeft.splice(index - 1, 0, this.draggableListLeft.splice(index, 1)[0]);\n        } else if (direction === 'bottom' && index < this.draggableListLeft.length) {\n            this.draggableListLeft.splice(index + 1, 0, this.draggableListLeft.splice(index, 1)[0]);\n        }\n    }\n\n    onOkClick() {\n        this.data.layout.navigation.items = [];\n        this.draggableListLeft.forEach(item => {\n            let nitem = new NaviItem();\n            nitem.icon = item.icon;\n            nitem.text = item.text;\n            nitem.view = item.view;\n            nitem.link = item.link;\n            this.data.layout.navigation.items.push(nitem);            \n        })\n    }\n\n    onNoClick(): void {\n\t\tthis.dialogRef.close();\n    }\n    \n    getViewName(vid: NaviItem) {\n        if (vid.view) {\n            const view = this.data.views.find(x=>x.id === vid.view);\n            if (view) {\n                return view.name;\n            }\n        } else if (vid.link) {\n            return vid.link;\n        } else {\n            return '';\n        }\n    }\n}\n\n@Component({\n    selector: 'dialog-menuitem',\n    templateUrl: './menuitem.dialog.html',\n})\nexport class DialogMenuItem {\n    // defaultColor = Utils.defaultColor;\n\tselectedGroups = [];\n    groups = UserGroups.Groups;    \n    icons = Define.materialIcons;\n\n    @ViewChild(SelOptionsComponent) seloptions: SelOptionsComponent;\n\n    constructor(\n        public dialogRef: MatDialogRef<DialogMenuItem>,\n        @Inject(MAT_DIALOG_DATA) public data: any) { \n            this.selectedGroups = UserGroups.ValueToGroups(this.data.permission);\n        }\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n\n    onOkClick(): void {\n\t\tthis.data.permission = UserGroups.GroupsToValue(this.seloptions.selected);\n        this.dialogRef.close(this.data);\n    }\n}","module.exports = \"<div>\\n    <h1 mat-dialog-title style=\\\"display:inline-block;cursor: move;\\\" mat-dialog-draggable>{{'dlg.menuitem-title' | translate}}</h1>\\n    <mat-icon (click)=\\\"onNoClick()\\\" style=\\\"float:right;margin-right:-10px;margin-top:-10px;cursor:pointer;color:gray;\\\">clear</mat-icon>\\n    <div mat-dialog-content>\\n        <div class=\\\"my-form-field\\\" style=\\\"display: block;margin-bottom: 10px;\\\">\\n            <span>{{'dlg.menuitem-icon' | translate}}</span>\\n            <mat-select [(value)]=\\\"data.item.icon\\\" style=\\\"width: 60px; height: 30px\\\" #iconsel>\\n                <mat-select-trigger>\\n                    <mat-icon>{{iconsel.value}}</mat-icon>\\n                </mat-select-trigger>\\n                <mat-option *ngFor=\\\"let icon of icons\\\" [value]=\\\"icon\\\" style=\\\"display: inline-block !important;\\\">\\n                    <mat-icon class=\\\"\\\">{{ icon }}</mat-icon>\\n                </mat-option>\\n            </mat-select>\\n        </div>\\n        <div class=\\\"my-form-field\\\" style=\\\"display: block;margin-bottom: 10px;\\\">\\n            <span>{{'dlg.menuitem-text' | translate}}</span>\\n            <input [(ngModel)]=\\\"data.item.text\\\" type=\\\"text\\\" style=\\\"width: 300px\\\">\\n        </div>\\n        <div class=\\\"my-form-field\\\" style=\\\"display: block;margin-bottom: 10px;\\\">\\n            <span>{{'dlg.menuitem-view' | translate}}</span>\\n            <mat-select [(value)]=\\\"data.item.view\\\" style=\\\"width: 300px\\\">\\n                <mat-option *ngFor=\\\"let view of data.views\\\" [value]=\\\"view.id\\\">\\n                    {{ view.name }}\\n                </mat-option>\\n            </mat-select>\\n        </div>\\n        <div class=\\\"my-form-field\\\" style=\\\"display: block;margin-bottom: 10px;\\\">\\n            <span>{{'dlg.menuitem-link' | translate}}</span>\\n            <input [(ngModel)]=\\\"data.item.link\\\" type=\\\"text\\\" style=\\\"width: 300px\\\" [readonly]=\\\"data.item.view\\\">\\n        </div>    \\n        <div class=\\\"my-form-field\\\" style=\\\"display: block;margin-bottom: 10px;\\\">\\n            <span>{{'dlg.useraccess-groups' | translate}}</span>\\n            <sel-options #seloptions [selected]=\\\"selectedGroups\\\" [options]=\\\"groups\\\"></sel-options>\\n        </div>   \\n    </div>\\n    <div mat-dialog-actions class=\\\"dialog-action\\\">\\n        <button mat-raised-button (click)=\\\"onNoClick()\\\">{{'dlg.cancel' | translate}}</button>\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onOkClick()\\\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\\n    </div>\\n</div>\"","module.exports = \"<div>\\n    <h1 mat-dialog-title style=\\\"display:inline-block;cursor:move;\\\" mat-dialog-draggable>{{'dlg.linkproperty-title' | translate}}</h1>\\n    <mat-icon (click)=\\\"onNoClick()\\\" style=\\\"float:right;margin-right:-10px;margin-top:-10px;cursor:pointer;color:gray;\\\">clear</mat-icon>\\n    <div mat-dialog-content>\\n        <div class=\\\"my-form-field\\\" style=\\\"display: block;margin-bottom: 10px\\\">\\n            <span>{{'dlg.linkproperty-url' | translate}}</span>\\n            <input [(ngModel)]=\\\"data.url\\\" type=\\\"text\\\" style=\\\"width: 300px\\\">\\n        </div>\\n    </div>\\n    <div mat-dialog-actions class=\\\"dialog-action\\\">\\n        <button mat-raised-button (click)=\\\"onNoClick()\\\">{{'dlg.cancel' | translate}}</button>\\n        <button mat-raised-button color=\\\"primary\\\" [mat-dialog-close]=\\\"data\\\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\\n    </div>\\n</div>\"","module.exports = \"<div>\\n    <h1 mat-dialog-title style=\\\"display:inline-block;cursor:move;\\\" mat-dialog-draggable>{{'dlg.docname-title' | translate}}</h1>\\n    <mat-icon (click)=\\\"onNoClick()\\\" class=\\\"dialog-close-btn\\\" cdkFocusInitial>clear</mat-icon>\\n    <div mat-dialog-content>\\n        <div class=\\\"my-form-field\\\" style=\\\"display: block;margin-bottom: 10px;\\\">\\n            <span>{{'dlg.docname-name' | translate}}</span>\\n            <input [(ngModel)]=\\\"data.name\\\" type=\\\"text\\\" style=\\\"width:300px\\\" [readonly]=\\\"data.readonly\\\">\\n        </div>\\n        <div class=\\\"my-form-field\\\" style=\\\"margin-bottom: 10px;;\\\">\\n            <span>{{'dlg.docproperty-type' | translate}}</span>\\n            <mat-select [(value)]=\\\"data.type\\\" placeholder=\\\"{{'dlg.doctype' | translate}}\\\" style=\\\"width: 300px;\\\">\\n                <mat-option *ngFor=\\\"let type of docType | enumToArray\\\" [value]=\\\"type.key\\\">\\n                    {{ type.value }}\\n                </mat-option>\\n            </mat-select>\\n        </div>\\n    </div>\\n    <div mat-dialog-actions class=\\\"dialog-action\\\">\\n        <button mat-raised-button (click)=\\\"onNoClick()\\\">{{'dlg.cancel' | translate}}</button>\\n        <button mat-raised-button [disabled]=\\\"!isValid(data.name)\\\" color=\\\"primary\\\" [mat-dialog-close]=\\\"data\\\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\\n    </div>\\n</div>\"","module.exports = \".list {\\n    min-width: 600px;\\n    height: 400px; \\n    font-size: 16px !important; \\n    padding-top: 0px !important;\\n}\\n\\n.list-header {\\n    display: block;\\n    height: 20px !important;\\n}\\n\\n.list-header span {\\n    text-overflow: ellipsis;\\n    overflow: hidden;\\n    color: gray;\\n    font-size: 12px;\\n}\\n\\n.list-item {\\n    display: block;\\n    font-size: 14px;\\n    height: 40px !important;\\n    /* cursor: pointer; */\\n    overflow: hidden;\\n}\\n\\n.list-item span {\\n    width: 160px;\\n    text-overflow: ellipsis;\\n    overflow: hidden;\\n}\\n\\n.list-item-text {\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n    overflow: hidden;\\n}\"","module.exports = \"<div style=\\\"position: relative;\\\">\\n    <h1 mat-dialog-title style=\\\"display:inline-block;cursor:move;\\\" mat-dialog-draggable>{{'dlg.plugins-title' | translate}}</h1>\\n    <mat-icon (click)=\\\"onNoClick()\\\" style=\\\"float:right;margin-right:-10px;margin-top:-10px;color:gray;cursor:pointer;\\\">clear</mat-icon>\\n    <div mat-dialog-content>\\n        <mat-list class=\\\"list\\\" >\\n            <mat-list-item class=\\\"list-header\\\">\\n                <span style=\\\"width:320px\\\">{{'dlg.plugins-name' | translate}}</span>\\n                <span style=\\\"width:160px\\\">{{'dlg.plugins-version' | translate}}</span>\\n                <span style=\\\"width:160px\\\">{{'dlg.plugins-current' | translate}}</span>\\n            </mat-list-item>\\n            <mat-list-item *ngFor=\\\"let plugin of plugins\\\" class=\\\"list-item list-item-text\\\">\\n                <span style=\\\"font-weight: 700;\\\">{{plugin.type}}</span>\\n                <span>{{plugin.name}}</span>\\n                <span>{{plugin.version}}</span>\\n                <span>{{plugin.current}}</span>\\n                <span style=\\\"width:200px\\\">{{plugin.status}}</span>\\n                <div style=\\\"width:40px\\\">\\n\\t\\t\\t\\t\\t<mat-spinner *ngIf=\\\"plugin.working\\\" diameter=\\\"20\\\"></mat-spinner>\\n                </div>\\n                <div *ngIf=\\\"plugin.dinamic\\\">\\n                    <button mat-icon-button [disabled]=\\\"plugin.current.length > 0\\\" (click)=\\\"install(plugin)\\\">\\n                        <mat-icon>add_circle_outline</mat-icon>\\n                    </button>\\n                    <button mat-icon-button [disabled]=\\\"!plugin.pkg || !plugin.current.length\\\" (click)=\\\"remove(plugin)\\\">\\n                        <mat-icon>remove_circle_outline</mat-icon>\\n                    </button>\\n                </div>\\n            </mat-list-item>\\n        </mat-list>\\n    </div>\\n    <div mat-dialog-actions class=\\\"dialog-action\\\">\\n        <button mat-raised-button [mat-dialog-close]=\\\"\\\">{{'dlg.ok' | translate}}</button>\\n    </div>\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\nimport { TranslateService } from '@ngx-translate/core';\nimport { ProjectService } from '../../_services/project.service';\nimport { PluginService } from '../../_services/plugin.service';\n\nimport { Plugin } from '../../_models/plugin';\n\n@Component({\n    selector: 'app-plugins',\n    templateUrl: './plugins.component.html',\n    styleUrls: ['./plugins.component.css']\n})\nexport class PluginsComponent implements OnInit {\n\n    plugins: Plugin[] = [];\n    installing: string;\n    removing: string;\n    installed: string;\n    removed: string;\n    error: string;\n\n    constructor(@Inject(MAT_DIALOG_DATA) public data: any,\n        public dialog: MatDialog,\n        public dialogRef: MatDialogRef<PluginsComponent>,\n        private translateService: TranslateService,\n        private pluginService: PluginService,\n        private projectService: ProjectService) { }\n\n    ngOnInit() {\n        this.translateService.get('dlg.plugins-status-installing').subscribe((txt: string) => { this.installing = txt });\n        this.translateService.get('dlg.plugins-status-removing').subscribe((txt: string) => { this.removing = txt });\n        this.translateService.get('dlg.plugins-status-installed').subscribe((txt: string) => { this.installed = txt });\n        this.translateService.get('dlg.plugins-status-removed').subscribe((txt: string) => { this.removed = txt });\n        this.translateService.get('dlg.plugins-status-error').subscribe((txt: string) => { this.error = txt });\n\n        this.pluginService.getPlugins().subscribe(plugins => {\n            this.plugins = plugins;\n        }, error => {\n            console.error('Error getPlugin');\n        });\n    }\n\n    onNoClick() {\n\t\tthis.dialogRef.close();\n    }\n\n    install(plugin: Plugin) {\n        plugin.status = this.installing;\n        plugin['working'] = true;\n        let pg: Plugin = JSON.parse(JSON.stringify(plugin));\n        pg.pkg = true;\n        this.pluginService.installPlugin(pg).subscribe(plugins => {\n            plugin.status = this.installed;\n            plugin.current = plugin.version;\n            plugin['working'] = false;\n        }, error => {\n            plugin.status = this.error + error;\n            plugin['working'] = false;\n        });\n    }\n\n    remove(plugin: Plugin) {\n        plugin.status = this.removing;\n            plugin['working'] = true;\n            this.pluginService.removePlugin(plugin).subscribe(plugins => {\n            plugin.status = this.removed;\n            plugin.current = '';\n            plugin['working'] = false;\n        }, error => {\n            plugin.status = this.error + error;\n            plugin['working'] = false;\n        });\n    }\n}\n","module.exports = \"<div class=\\\"dlg-container\\\">\\n    <h1 mat-dialog-title style=\\\"display:inline-block;cursor:move;\\\" mat-dialog-draggable>{{'dlg.setup-title' | translate}}</h1>\\n    <mat-icon (click)=\\\"onNoClick()\\\" class=\\\"dialog-close-btn\\\" cdkFocusInitial >clear</mat-icon>\\n    <div mat-dialog-content>\\n        <div class=\\\"separator\\\">\\n            <div class=\\\"separator-line\\\" style=\\\"position:absolute;left: 0px\\\"></div>\\n            <div class=\\\"separator-text\\\">\\n                {{'dlg.setup-gui' | translate}}\\n            </div>\\n            <div class=\\\"separator-line\\\" style=\\\"position:absolute;right: 0px\\\"></div>\\n        </div>\\n        <div class=\\\"btn-cards\\\">\\n            <div class=\\\"btn-card\\\">\\n                <button mat-button (click)=\\\"goTo('/editor')\\\" class=\\\"card-btn\\\">\\n                    <div class=\\\"card-btn-content\\\">\\n                        <mat-icon>dashboard</mat-icon>\\n                        <span>{{'dlg.setup-views' | translate}}</span>\\n                    </div>\\n                </button>\\n            </div>\\n            <div class=\\\"btn-card\\\">\\n                <button mat-button (click)=\\\"onChartConfig()\\\" class=\\\"card-btn\\\">\\n                    <div class=\\\"card-btn-content\\\">\\n                        <mat-icon>multiline_chart</mat-icon>\\n                        <span>{{'dlg.setup-line-charts' | translate}}</span>\\n                    </div>\\n                </button>\\n            </div>\\n            <div class=\\\"btn-card\\\">\\n                <button mat-button (click)=\\\"onLayoutConfig()\\\" class=\\\"card-btn\\\">\\n                    <div class=\\\"card-btn-content\\\">\\n                        <mat-icon>view_compact</mat-icon>\\n                        <span>{{'dlg.setup-layout' | translate}}</span>\\n                    </div>\\n                </button>\\n            </div>\\n            <div class=\\\"btn-card\\\">\\n                <button mat-button (click)=\\\"onChartConfig()\\\" class=\\\"card-btn\\\" [disabled]=\\\"true\\\">\\n                    <div class=\\\"card-btn-content\\\">\\n                        <mat-icon>insert_chart</mat-icon>\\n                        <span>{{'dlg.setup-bar-charts' | translate}}</span>\\n                    </div>\\n                </button>\\n            </div>            \\n        </div>\\n        <div class=\\\"separator\\\">\\n            <div class=\\\"separator-line\\\" style=\\\"position:absolute;left: 0px\\\"></div>\\n            <div class=\\\"separator-text\\\">\\n                {{'dlg.setup-diverse' | translate}}\\n            </div>\\n            <div class=\\\"separator-line\\\" style=\\\"position:absolute;right: 0px\\\"></div>\\n        </div>\\n        <div class=\\\"btn-cards\\\">\\n            <div class=\\\"btn-card\\\">\\n                <button mat-button (click)=\\\"goTo('/device')\\\" class=\\\"card-btn\\\">\\n                    <div class=\\\"card-btn-content\\\">\\n                        <mat-icon>device_hub</mat-icon>\\n                        <span>{{'dlg.setup-connections' | translate}}</span>\\n                    </div>\\n                </button>\\n            </div>\\n            <div class=\\\"btn-card\\\">\\n                <button mat-button (click)=\\\"goTo('/users')\\\" class=\\\"card-btn\\\" [disabled]=\\\"isToDisable('users')\\\">\\n                    <div class=\\\"card-btn-content\\\">\\n                        <mat-icon>people</mat-icon>\\n                        <span>{{'dlg.setup-users' | translate}}</span>\\n                    </div>\\n                </button>\\n            </div>\\n            <div class=\\\"btn-card\\\">\\n                <button mat-button (click)=\\\"onPlugins()\\\" class=\\\"card-btn\\\" [disabled]=\\\"isToDisable('plugins')\\\">\\n                    <div class=\\\"card-btn-content\\\">\\n                        <mat-icon>extension</mat-icon>\\n                        <span>{{'dlg.setup-plugins' | translate}}</span>\\n                    </div>\\n                </button>\\n            </div>\\n            <div class=\\\"btn-card\\\">\\n                <button mat-button (click)=\\\"onSettings()\\\" class=\\\"card-btn\\\">\\n                    <div class=\\\"card-btn-content\\\">\\n                        <mat-icon>settings</mat-icon>\\n                        <span>{{'dlg.setup-settings' | translate}}</span>\\n                    </div>\\n                </button>\\n            </div>            \\n        </div>        \\n        <div class=\\\"separator\\\">\\n            <div class=\\\"separator-line\\\" style=\\\"position:absolute;left: 0px\\\"></div>\\n            <div class=\\\"separator-text\\\">\\n                {{'dlg.setup-logic' | translate}}\\n            </div>\\n            <div class=\\\"separator-line\\\" style=\\\"position:absolute;right: 0px\\\"></div>\\n        </div>\\n        <div class=\\\"btn-cards\\\">\\n            <div class=\\\"btn-card\\\">\\n                <button mat-button (click)=\\\"goTo('/messages')\\\" class=\\\"card-btn\\\" [disabled]=\\\"isToDisable('messages')\\\">\\n                    <div class=\\\"card-btn-content\\\">\\n                        <mat-icon>warning</mat-icon>\\n                        <span>{{'dlg.setup-alarms' | translate}}</span>\\n                    </div>\\n                </button>\\n            </div>\\n            <div class=\\\"btn-card\\\">\\n                <button mat-button (click)=\\\"goTo('/scripts')\\\" class=\\\"card-btn\\\" [disabled]=\\\"true\\\">\\n                    <div class=\\\"card-btn-content\\\">\\n                        <mat-icon>code</mat-icon>\\n                        <span>{{'dlg.setup-scripts' | translate}}</span>\\n                    </div>\\n                </button>\\n            </div>                \\n        </div>\\n    </div>\\n</div>\"","module.exports = \".mat-button .mat-button-focus-overlay{background-color:transparent}.dlg-container{position:relative;height:500px}.separator{align-items:center;display:flex;position:relative;margin-top:10px;margin-bottom:10px}.separator-line{border-bottom:1px solid var(--setupSeparatorColor);height:1px;width:35%}.separator-text{left:50%;position:absolute;top:50%;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);font-size:13px}.btn-cards{display:flex;flex-wrap:wrap;margin-left:-8px;margin-right:-8px;margin-top:15px;margin-bottom:20px}.btn-card{margin-left:10px;margin-right:10px;padding-left:8px;padding-right:8px}.card-btn{min-width:100px;font-size:16px;text-align:center;align-content:center}.card-btn span{display:block;font-weight:normal !important;font-size:13px;text-align:center}.card-btn-content{display:block;padding:10px 0px 5px 0px;text-align:-webkit-center;text-align:-moz-center}.card-btn-content .mat-icon{display:block;font-size:32px;height:32px;width:32px}.card-btn-content span{display:block;font-size:14px}\\n\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material';\nimport { Router } from '@angular/router';\n\nimport { ProjectService } from '../../_services/project.service';\nimport { AppService } from '../../_services/app.service';\n\nimport { ChartConfigComponent } from '../../editor/chart-config/chart-config.component';\nimport { LayoutPropertyComponent } from '../../editor/layout-property/layout-property.component';\nimport { PluginsComponent } from '../../editor/plugins/plugins.component';\nimport { AppSettingsComponent } from '../../editor/app-settings/app-settings.component';\n\n@Component({\n    selector: 'app-setup',\n    templateUrl: './setup.component.html',\n    styleUrls: ['./setup.component.scss']\n})\nexport class SetupComponent implements OnInit, AfterViewInit {\n\n    constructor(private router: Router,\n        private appService: AppService,\n        public dialog: MatDialog,\n        private projectService: ProjectService,\n        public dialogRef: MatDialogRef<SetupComponent>) { }\n\n    ngOnInit() {\n    }\n\n    ngAfterViewInit() {\n    }\n\n    onNoClick() {\n        this.dialogRef.close();\n    }\n\n    goTo(destination:string) {\n        this.onNoClick();\n        this.router.navigate([destination]);\n    }\n\n    /**\n     * edit the chart configuration\n     */\n    onChartConfig() {\n        this.onNoClick();\n        let chartscopy = JSON.parse(JSON.stringify(this.projectService.getCharts()));\n        let devices = this.projectService.getDevices();\n        let dialogRef = this.dialog.open(ChartConfigComponent, {\n            position: { top: '60px' },\n            data: { charts: chartscopy, devices: devices }\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.projectService.setCharts(result.charts);\n            }\n        });\n    }\n\n    /**\n     * edit the layout property of views: menu, header\n     */\n    onLayoutConfig() {\n        this.onNoClick();\n        let templayout = null;\n        let hmi = this.projectService.getHmi();\n        if (hmi.layout) {\n            templayout = JSON.parse(JSON.stringify(hmi.layout));\n        }\n        if (templayout && templayout.showdev !== false) {\n\t\t\ttemplayout.showdev = true;\n\t\t}\n        let dialogRef = this.dialog.open(LayoutPropertyComponent, {\n            position: { top: '60px' },\n            data: { layout: templayout, views: hmi.views, securityEnabled: this.projectService.isSecurityEnabled() }\n        });\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                hmi.layout = JSON.parse(JSON.stringify(result.layout));\n                this.projectService.setLayout(hmi.layout);\n            }\n        });\n    }\n\n    /**\n     * edit the plugins to install or remove\n     */\n    onPlugins() {\n        this.onNoClick();\n        let dialogRef = this.dialog.open(PluginsComponent, {\n            position: { top: '60px' },\n        });\n        dialogRef.afterClosed().subscribe(result => {\n        });\n    }\n\n    /**\n     * edit application settings\n     */\n    onSettings() {\n        this.onNoClick();\n        let dialogRef = this.dialog.open(AppSettingsComponent, {\n            position: { top: '60px' },\n        });\n        dialogRef.afterClosed().subscribe(result => {\n        });\n    }\n\n    isToDisable(section: string) {\n        if (section === 'messages') {\n            return this.appService.isClientApp;\n        } else if (section === 'users') {\n            return this.appService.isClientApp;\n        } else if (section === 'plugins') {\n            return this.appService.isClientApp;\n        }\n        return false;\n    }\n}\n","module.exports = \".view-container {\\n    display: table;\\n}\\n\\n.fab-card {\\n    position: absolute;\\n    width: 1300px;\\n    height: 800px;\\n    /* background-color:black; */\\n    /* box-shadow: 0 2px 5px 0 rgba(0,0,0,.26); */\\n    box-shadow: 0px 1px 4px 1px #888888;\\n}\\n\\n.card-close {\\n    position: absolute;\\n    top: 0px;\\n    right: 0px;\\n    height: 22px;\\n    width: 100%;\\n    color: rgba(0, 0, 0, 0.7);\\n    background-color: transparent;\\n    font-size: 12px;\\n    cursor: move !important;\\n}\\n\\n.card-close i {\\n    float: right;\\n}\\n\\n.fab-iframe {\\n    position: absolute;\\n    width: 800px;\\n    height: 600px;\\n    background-color: black;\\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.26);\\n    /* box-shadow: 0px 2px 6px -1px #888888; */\\n}\\n\\n.iframe-header {\\n    display: block;\\n    height: 22px;\\n    width: 100%;\\n    color: white;\\n    background-color: black;\\n    font-size: 12px;\\n    text-align: center;\\n    line-height: 22px;\\n}\\n\\n.iframe-header i {\\n    float: right;\\n    color: white;\\n}\\n\\n.iframe-class {\\n    display: block;\\n    height: 100%;\\n    -webkit-transform-origin: 0 0;\\n            transform-origin: 0 0;\\n    /* transform-origin:left top; */\\n}\\n\\n.ng-draggable {\\n    cursor: move;\\n}\\n\\n.dialog-modal {\\n    /* display: none; */\\n    position: fixed; /* Stay in place */\\n    z-index: 1; /* Sit on top */\\n    left: 0;\\n    top: 0;\\n    width: 100%; /* Full width */\\n    height: 100%; /* Full height */\\n    overflow: auto; /* Enable scroll if needed */\\n    /*background-color: rgb(0,0,0); /* Fallback color */\\n    /*background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\\n}\\n\\n/* Modal Content/Box */\\n\\n.dialog-modal-content {\\n    border: 1px solid #888;\\n    box-shadow: 0 0 12px #000000 !important;\\n    position: absolute;\\n    top: 50%;\\n    left: 50%;\\n    -webkit-transform: translate(-50%, -50%);\\n            transform: translate(-50%, -50%);\\n}\\n\\n.dialog-modal-close {\\n    position: relative;\\n    top: 0px;\\n    right: 0px;\\n    height: 22px;\\n    width: 100%;\\n    color: rgba(0, 0, 0, 0.7);\\n    background-color: transparent;\\n    font-size: 12px;\\n    cursor: move !important;\\n}\\n\\n.dialog-modal-close i {\\n    float: right;\\n}\\n\\n/* input */\\n\\n.dialog-input {\\n    z-index: 1; /* Sit on top */\\n    box-shadow: 1px 2px 5px -1px #888;\\n    position: absolute;\\n    padding: 5px;\\n    background-color: #fff;\\n    min-width: 80px;\\n}\\n\\n.dialog-input input {\\n    border: 0.5px solid rgba(0,0,0,0.1);\\n    border-radius: 2px;\\n    padding: 6px 3px 7px 4px;\\n    width: 100%;\\n    display: block;\\n    margin: 0 auto;\\n}\\n\\n.dialog-input button {\\n    min-width: 80px;\\n}\"","module.exports = \"<div #dataContainer class=\\\"view-container\\\" id=\\\"content\\\">\\n</div>\\n<div *ngFor=\\\"let card of cards; let i = index\\\" [style.height]=\\\"getCardHeight(card.height) + 'px'\\\" [style.left]=\\\"card.x + 'px'\\\" [style.top]=\\\"card.y +'px'\\\"\\n    [style.width]=\\\"card.width +'px'\\\" class=\\\"fab-card\\\" style=\\\"cursor: auto  !important;\\\" ngDraggable>\\n    <a (click)=\\\"onCloseCard(card);\\\" class=\\\"card-close\\\">\\n        <i class=\\\"material-icons\\\" style=\\\"font-size: 22px; cursor: pointer;\\\">close</i>\\n    </a>\\n    <app-fuxa-view (onclose)=\\\"onCloseCard(card)\\\" [child]='true' [gaugesManager]=\\\"gaugesManager\\\" [hmi]=\\\"hmi\\\" [parentcards]=\\\"cards\\\" [variablesMapping]=\\\"card.variablesMapping\\\"\\n        [view]=\\\"card.view\\\"></app-fuxa-view>\\n</div>\\n<div *ngIf=\\\"dialog\\\" class=\\\"dialog-modal\\\">\\n    <div [style.background-color]=\\\"dialog.bkcolor\\\" [style.height]=\\\"dialog.height + 'px'\\\" [style.width]=\\\"dialog.width +'px'\\\" class=\\\"dialog-modal-content\\\">\\n        <a (click)=\\\"onCloseDialog();\\\" class=\\\"dialog-modal-close\\\">\\n            <i class=\\\"material-icons\\\" style=\\\"font-size: 22px; cursor: pointer;\\\">close</i>\\n        </a>\\n        <app-fuxa-view (onclose)=\\\"onCloseDialog()\\\" [child]='true' [gaugesManager]=\\\"gaugesManager\\\" [hmi]=\\\"hmi\\\" [variablesMapping]=\\\"dialog.variablesMapping\\\" [view]=\\\"dialog.view\\\">\\n        </app-fuxa-view>\\n    </div>\\n</div>\\n<div (rzResizing)=\\\"onIframeResizing(iframe, $event)\\\" *ngFor=\\\"let iframe of iframes; let i = index\\\" [handle]=\\\"iframeHandle\\\" [style.height]=\\\"(iframe.height + 22) + 'px'\\\"\\n    [style.left]=\\\"iframe.x + 'px'\\\" [style.top]=\\\"iframe.y + 'px'\\\" [style.width]=\\\"iframe.width + 'px'\\\" class=\\\"fab-iframe\\\" ngDraggable ngResizable>\\n    <div #iframeHandle class=\\\"iframe-header\\\">\\n        <span>{{iframe.name}}</span>\\n        <a (click)=\\\"onCloseIframe(iframe);\\\">\\n            <i class=\\\"material-icons\\\" style=\\\"font-size: 22px; cursor: pointer;\\\">close</i>\\n        </a>\\n    </div>\\n    <app-iframe [link]=\\\"iframe.link\\\" [style.height]=\\\"iframe.height + 'px'\\\" [style.transform]=\\\"'scale(' + iframe.scale + ')'\\\" [style.width]=\\\"iframe.width + 'px'\\\"\\n        [style.zoom]=\\\"1 / iframe.scale\\\" class=\\\"iframe-class\\\"></app-iframe>\\n</div>\\n<div #inputDialogRef [style.display]=\\\"(inputDialog.show) ? 'inline-block' : 'none'\\\" class=\\\"dialog-input\\\" [style.top.px]=\\\"inputDialog.y\\\" [style.left.px]=\\\"inputDialog.x\\\">\\n    <input matInput #inputValueRef [(ngModel)]=\\\"gaugeInput\\\" autocomplete=\\\"off\\\" type=\\\"text\\\" (focus)=\\\"toggleShowInputDialog(true)\\\" (focusout)=\\\"toggleShowInputDialog(false)\\\">\\n    <div style=\\\"display: block; padding-top: 5px;\\\">\\n        <button mat-raised-button (click)=\\\"onOkClick(gaugeInput)\\\" style=\\\"float: right;min-width: 16px;padding-left: 4px;padding-right: 4px;margin-left: 5px;\\\" color=\\\"primary\\\" cdkFocusInitial>\\n            <mat-icon>done</mat-icon>\\n        </button>\\n        <button mat-raised-button (click)=\\\"onNoClick()\\\" style=\\\"float: right; min-width:16px;padding-left: 4px;padding-right: 4px;\\\">\\n            <mat-icon>close</mat-icon>\\n        </button>\\n    </div>\\n</div>\"","import {\n    AfterViewInit,\n    Component,\n    ComponentFactoryResolver,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    ViewChild,\n    ViewContainerRef\n} from '@angular/core';\nimport { Subscription } from \"rxjs\";\nimport { ChangeDetectorRef } from '@angular/core';\n\nimport { Event, GaugeEvent, GaugeEventActionType, GaugeSettings, GaugeProperty, GaugeRangeProperty, GaugeStatus, Hmi, View, ViewType, Variable } from '../_models/hmi';\nimport { GaugesManager } from '../gauges/gauges.component';\nimport { isUndefined } from 'util';\nimport { Utils } from '../_helpers/utils';\nimport { HmiService } from \"../_services/hmi.service\";\n\ndeclare var SVG: any;\n\n@Component({\n    selector: 'app-fuxa-view',\n    templateUrl: './fuxa-view.component.html',\n    styleUrls: ['./fuxa-view.component.css']\n})\nexport class FuxaViewComponent implements OnInit, AfterViewInit {\n\n    @Input() id: string;\n    @Input() variablesMapping: any = [];\n    @Input() view: View;\n    @Input() hmi: Hmi;\n    @Input() child: boolean = false;\n    @Input() gaugesManager: GaugesManager;        // gauges.component\n    @Input() parentcards: CardModel[];\n    @Output() onclose = new EventEmitter();\n\n    @ViewChild('dataContainer') dataContainer: ElementRef;\n    @ViewChild('inputDialogRef') inputDialogRef: ElementRef;\n    @ViewChild('inputValueRef') inputValueRef: ElementRef;\n\n    cards: CardModel[] = [];\n    iframes: CardModel[] = [];\n    dialog: DialogModalModel;\n    mapGaugeStatus = {};\n    inputDialog = { show: false, timer: null, x: 0, y: 0, target: null };\n    gaugeInput = '';\n\n    cardViewType = Utils.getEnumKey(ViewType, ViewType.cards);\n\n    private subscriptionOnChange: Subscription;\n    protected staticValues: any = {};\n    protected plainVariableMapping: any = {};\n\n    constructor(private el: ElementRef,\n        private changeDetector: ChangeDetectorRef,\n        private viewContainerRef: ViewContainerRef,\n        private resolver: ComponentFactoryResolver) {\n    }\n\n    ngOnInit() {\n        try {\n            if (this.variablesMapping) {\n                this.variablesMapping.forEach(variableMapping => {\n                    this.plainVariableMapping[variableMapping.from.variableId] = variableMapping.to.variableId\n                })\n            }\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n    ngAfterViewInit() {\n        this.loadHmi(this.view);\n        try {\n            this.gaugesManager.emitBindedSignals(this.id);\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n    ngOnDestroy() {\n        try {\n            this.gaugesManager.unbindGauge(this.id);\n            this.clearGaugeStatus();\n            if (this.subscriptionOnChange) {\n                this.subscriptionOnChange.unsubscribe();\n            }\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n    private clearGaugeStatus() {\n        Object.values(this.mapGaugeStatus).forEach((gs: GaugeStatus) => {\n            try {\n                if (gs.actionRef) {\n                    if (gs.actionRef.timer) {\n                        clearTimeout(gs.actionRef.timer);\n                        gs.actionRef.timer = null;\n                    }\n                    if (gs.actionRef.animr) {\n                        if (gs.actionRef.animr.reset) {\n                            gs.actionRef.animr.reset();\n                        }\n                        delete gs.actionRef.animr;\n                    }\n                }\n            } catch (err) {\n                console.error(err);\n            }\n        });\n        this.mapGaugeStatus = {};\n    }\n\n    /**\n     * load the svg content to show in browser, clear all binded to this view\n     * @param view\n     */\n    public loadHmi(view: View) {\n        if (this.id) {\n            try {\n                this.gaugesManager.unbindGauge(this.id);\n                this.clearGaugeStatus();\n                this.viewContainerRef.clear();\n                this.dataContainer.nativeElement.innerHTML = '';\n            } catch (err) {\n                console.error(err);\n            }\n        }\n        if (view) {\n            this.id = view.id;\n            this.view = view;\n            if (view.type === this.cardViewType) {\n                let cards = JSON.parse(view.svgcontent);\n                if (cards.content) {\n                    this.dataContainer.nativeElement.innerHTML = cards.content.replace('<title>Layer 1</title>', '');\n                }\n            } else {\n                this.dataContainer.nativeElement.innerHTML = view.svgcontent.replace('<title>Layer 1</title>', '');\n            }\n            if (view.profile.bkcolor && this.child) {\n                this.dataContainer.nativeElement.style.backgroundColor = view.profile.bkcolor;\n            }\n        }\n        this.changeDetector.detectChanges();\n        this.loadWatch(this.view);\n    }\n\n    /**\n     * load all gauge settings, bind gauge with signals, bind gauge event\n     * @param view\n     */\n     private loadWatch(view: View) {\n        if (view && view.items) {\n            let items = this.applyVariableMapping(view.items);\n            // this.gaugesManager.initGaugesMap();\n            for (let key in items) {\n                if (!items.hasOwnProperty(key)) {\n                    continue;\n                }\n                try {\n                    let gauge = this.gaugesManager.initElementAdded(items[key], this.resolver, this.viewContainerRef, true);\n                    this.gaugesManager.bindGauge(gauge, this.id, items[key],\n                        (gatobindclick) => {\n                            this.onBindClick(gatobindclick);\n                        },\n                        (gatobindhtmlevent) => {\n                            this.onBindHtmlEvent(gatobindhtmlevent);\n                        });\n                    if (items[key].property) {\n                        let gaugeSetting = items[key];\n                        let gaugeStatus = this.getGaugeStatus(gaugeSetting);\n                        let variables = [];\n                        // prepare the start value to precess\n                        if (items[key].property.variableValue && gaugeSetting.property.variableId) {\n                            let variable: Variable = <Variable>{ id: gaugeSetting.property.variableId, value: gaugeSetting.property.variableValue };\n                            if (this.checkStatusValue(gaugeSetting.id, gaugeStatus, variable)) {\n                                variables = [variable];\n                            }\n                        }\n                        // get the the last signal value in memory of gauge, is important that last one is the value (variableId)\n                        variables = variables.concat(this.gaugesManager.getBindSignalsValue(items[key]));\n                        if (variables.length) {\n                            let svgeles = FuxaViewComponent.getSvgElements(gaugeSetting.id);\n                            for (let y = 0; y < svgeles.length; y++) {\n                                variables.forEach(variable => {\n                                    this.gaugesManager.processValue(gaugeSetting, svgeles[y], variable, gaugeStatus);                                    \n                                });\n                            }\n                        }\n                    }\n\n    \n                } catch (err) {\n                    console.error('loadWatch: ' + err);\n                }    \n            }\n            if (!this.subscriptionOnChange) {\n                this.subscriptionOnChange = this.gaugesManager.onchange.subscribe(this.handleSignal.bind(this));\n            }\n            for (let variableId in this.staticValues) {\n                if (!this.staticValues.hasOwnProperty(variableId)) {\n                    continue;\n                }\n                this.handleSignal({\n                    id: variableId,\n                    value: this.staticValues[variableId]\n                });\n            }\n        }\n    }\n\n    protected handleSignal(sig) {\n        if (!isUndefined(sig.value)) {\n            try {\n                // take all gauges settings binded to the signal id in this view\n                let gas = this.gaugesManager.getGaugeSettings(this.id, sig.id);\n                if (gas) {\n                    for (let i = 0; i < gas.length; i++) {\n                        let gaugeSetting = gas[i];\n                        let gaugeStatus = this.getGaugeStatus(gaugeSetting);\n                        if (this.checkStatusValue(gaugeSetting.id, gaugeStatus, sig)) {\n                            let svgeles = FuxaViewComponent.getSvgElements(gaugeSetting.id);\n                            for (let y = 0; y < svgeles.length; y++) {\n                                this.gaugesManager.processValue(gaugeSetting, svgeles[y], sig, gaugeStatus);\n                            }\n                        }\n                    }\n                }\n            } catch (err) {\n            }\n        }\n    }\n\n    /**\n     * return the mapped gauge status, if it doesn't exist add it\n     * @param ga\n     */\n    private getGaugeStatus(ga: GaugeSettings): GaugeStatus {\n        if (this.mapGaugeStatus[ga.id]) {\n            return this.mapGaugeStatus[ga.id];\n        } else {\n            this.mapGaugeStatus[ga.id] = this.gaugesManager.createGaugeStatus(ga);\n            return this.mapGaugeStatus[ga.id];\n        }\n    }\n\n    /**\n     * Replace variables by defined mapping\n     * @param items\n     * @protected\n     */\n    protected applyVariableMapping(items) {\n        // Deep clone\n        items = JSON.parse(JSON.stringify(items));\n\n        for (let gaId in items) {\n            if (!items.hasOwnProperty(gaId)) {\n                continue;\n            }\n            let property = <GaugeProperty> items[gaId].property;\n            if (!property) {\n                continue;\n            }\n            this.applyVariableMappingTo(property);\n            if (property.actions) {\n                property.actions.forEach(action => {\n                    this.applyVariableMappingTo(action);\n                });\n            }\n\n            if (property.events) {\n                property.events.forEach((event: GaugeEvent) => {\n                    if (event.actoptions) {\n                        if (Utils.isObject(event.actoptions['variable'])) {\n                            this.applyVariableMappingTo(event.actoptions['variable']);\n                        } else {\n                            this.applyVariableMappingTo(event.actoptions);\n                        }\n                    }\n                })\n            }\n\n            if (property.ranges) {\n                property.ranges.forEach((range: GaugeRangeProperty) => {\n                    if (range.textId) {\n                        this.applyVariableMappingTo(range.textId);\n                    }\n                })\n            }\n        }\n        return items;\n    }\n\n    protected applyVariableMappingTo(target) {\n        if (!target || !target['variableId']) {\n            return;\n        }\n        if (this.plainVariableMapping.hasOwnProperty(target.variableId)) {\n            target.variableId = this.plainVariableMapping[target.variableId];\n        }\n    }\n\n    /**\n     * check the change of variable value in gauge status\n     * @param gaugeId\n     * @param gaugeStatus\n     * @param signal\n     */\n    private checkStatusValue(gaugeId: string, gaugeStatus: GaugeStatus, signal: any) {\n        let result = true;\n        if (gaugeStatus.onlyChange) {\n            if (gaugeStatus.takeValue) {\n                let value = this.gaugesManager.getGaugeValue(gaugeId);\n                gaugeStatus.variablesValue[signal.id] = value;\n            }\n            if (gaugeStatus.variablesValue[signal.id] === signal.value) {\n                result = false;\n            }\n        }\n        gaugeStatus.variablesValue[signal.id] = signal.value;\n        return result;\n    }\n\n    /**\n     * bind the gauge svg element with click event\n     * @param ga\n     */\n    private onBindClick(ga: GaugeSettings) {\n        let self = this;\n        let svgele = FuxaViewComponent.getSvgElement(ga.id);\n        if (svgele) {\n            svgele.click(function (ev) {\n                let event = self.gaugesManager.getBindClick(ga);\n                if (event && event.length > 0) {\n                    for (let i = 0; i < event.length; i++) {\n                        let actindex = Object.keys(GaugeEventActionType).indexOf(event[i].action);\n                        let eventTypes = Object.values(GaugeEventActionType);\n                        if (eventTypes.indexOf(GaugeEventActionType.onpage) === actindex) {\n                            self.loadPage(ev, event[i].actparam);\n                        } else if (eventTypes.indexOf(GaugeEventActionType.onwindow) === actindex) {\n                            self.onOpenCard(ga.id, ev, event[i].actparam, event[i].actoptions);\n                        } else if (eventTypes.indexOf(GaugeEventActionType.ondialog) === actindex) {\n                            self.openDialog(ev, event[i].actparam, event[i].actoptions);\n                        } else if (eventTypes.indexOf(GaugeEventActionType.onSetValue) === actindex) {\n                            self.onSetValue(ga, event[i]);\n                        } else if (eventTypes.indexOf(GaugeEventActionType.onToggleValue) === actindex) {\n                            self.onToggleValue(ga, event[i]);\n                        } else if (eventTypes.indexOf(GaugeEventActionType.onSetInput) === actindex) {\n                            self.onSetInput(ga, event[i]);\n                        } else if (eventTypes.indexOf(GaugeEventActionType.oniframe) === actindex) {\n                            self.openIframe(ga.id, ev, event[i].actparam, event[i].actoptions);\n                        } else if (eventTypes.indexOf(GaugeEventActionType.oncard) === actindex) {\n                            self.openWindow(ga.id, ev, event[i].actparam, event[i].actoptions);\n                        } else if (eventTypes.indexOf(GaugeEventActionType.onclose) === actindex) {\n                            self.onClose(ev);\n                        }\n                    }\n                }\n            });\n        }\n    }\n\n    onToggleValue(ga: GaugeSettings, event: GaugeEvent) {\n        if (event.actoptions && event.actoptions['variableId']) {\n            this.gaugesManager.toggleSignalValue(event.actoptions['variableId']);\n        } else if (ga.property && ga.property.variableId) {\n            this.gaugesManager.toggleSignalValue(ga.property.variableId);\n        }\n    }\n\n    /**\n     * bind the html input control with key-enter event and select control with change event\n     * @param htmlevent\n     */\n    private onBindHtmlEvent(htmlevent: Event) {\n        let self = this;\n        // let htmlevent = this.getHtmlElement(ga.id);\n        if (htmlevent.type === 'key-enter') {\n            htmlevent.dom.onkeypress = function (ev) {\n                if (ev.keyCode === 13) {\n                    htmlevent.dbg = 'key pressed ' + htmlevent.dom.id + ' ' + htmlevent.dom.value;\n                    htmlevent.id = htmlevent.dom.id;\n                    htmlevent.value = htmlevent.dom.value;\n                    self.gaugesManager.putEvent(htmlevent);\n                }\n            };\n            if (this.hmi.layout.inputdialog === 'true') {\n                htmlevent.dom.onfocus = function (ev) {\n                    if (ev.currentTarget) {\n                        var inputRect = ev.currentTarget.getBoundingClientRect();\n                        self.toggleShowInputDialog(true, inputRect.left, inputRect.top, htmlevent);\n                        self.toggleShowInputDialog(true, inputRect.left + ((inputRect.width < 80) ? -((80 - inputRect.width) / 2) : 0), inputRect.top - 5, htmlevent);\n                        for (let i = 0; i < ev.currentTarget.attributes.length; i++)  {\n                            if (ev.currentTarget.attributes['style']) {\n                                self.setInputDialogStyle(self.inputDialogRef.nativeElement, ev.currentTarget.attributes['style'].textContent, inputRect);\n                            }\n                            \n                        }\n                        document.body.appendChild(self.inputDialogRef.nativeElement);\n                        setTimeout(() => {\n                            self.inputValueRef.nativeElement.focus();\n                        }, 300);\n                    }\n                }\n                htmlevent.dom.onblur = function (ev) {\n                    self.toggleShowInputDialog(false);\n                }\n            }\n\n        } else if (htmlevent.type === 'change') {\n            htmlevent.dom.onchange = function (ev) {\n                htmlevent.dbg = 'key pressed ' + htmlevent.dom.id + ' ' + htmlevent.dom.value;\n                htmlevent.id = htmlevent.dom.id;\n                htmlevent.value = htmlevent.dom.value;\n                self.gaugesManager.putEvent(htmlevent);\n            };\n        }\n    }\n\n    private setInputDialogStyle(element: any, style: string, sourceBound: DOMRect) {\n        for (let i = 0; i < element.children.length; i++) {\n            let el = element.children[i];\n            if (el.tagName.toLowerCase() === 'input') {\n                el.value = '';\n                style += 'width: ' + sourceBound.width + 'px !important;'; \n                el.setAttribute('style', style);\n            }\n        }\n        element.style.backgroundColor = this.view.profile.bkcolor;\n    }\n\n    private getView(viewref: string): View {\n        let view: View;\n        for (let i = 0; i < this.hmi.views.length; i++) {\n            if (this.hmi.views[i] && this.hmi.views[i].id === viewref) {\n                view = this.hmi.views[i];\n                break;\n            }\n        }\n        return view;\n    }\n\n    private static getSvgElements(svgid: string) {\n        let ele = document.getElementsByTagName('svg');\n        let result = [];\n        for (let i = 0; i < ele.length; i++) {\n            let svgItems = ele[i].getElementById(svgid);\n            if (svgItems) {\n                result.push(SVG.adopt(svgItems));\n            }\n        }\n        return result;\n    }\n\n    private static getSvgElement(svgid: string) {\n        let ele = document.getElementsByTagName('svg');\n        for (let i = 0; i < ele.length; i++) {\n            let svgItems = ele[i].getElementById(svgid);\n            if (svgItems) {\n                return SVG.adopt(svgItems);\n            }\n        }\n    }\n\n    private loadPage(event, viewref: string) {\n        let view: View = this.getView(viewref);\n        if (view) {\n            this.loadHmi(view);\n        }\n    }\n\n    openDialog(event, viewref: string, options: any = {}) {\n        let view: View = this.getView(viewref);\n        if (!view) {\n            return;\n        }\n        this.dialog = new DialogModalModel(viewref);\n        this.dialog.width = view.profile.width;\n        this.dialog.height = view.profile.height + 26;\n        this.dialog.view = view;\n        this.dialog.bkcolor = 'trasparent';\n        this.dialog.variablesMapping = options.variablesMapping;\n        if (view.profile.bkcolor) {\n            this.dialog.bkcolor = view.profile.bkcolor;\n        }\n    }\n\n    onOpenCard(id: string, event, viewref: string, options: any = {}) {\n        let view: View = this.getView(viewref);\n        if (!view) {\n            return;\n        }\n        // check existing card\n        let card = null;\n        this.cards.forEach(c => {\n            if (c.id === id) {\n                card = c;\n            }\n        });\n        if (card) {\n            return;\n        }\n        card = new CardModel(id);\n        card.x = event.clientX;\n        card.y = event.clientY;\n        card.width = view.profile.width;\n        card.height = view.profile.height;\n        card.view = view;\n        card.variablesMapping = options.variablesMapping;\n        if (this.parentcards) {\n            this.parentcards.push(card);\n        } else {\n            this.cards.push(card);\n        }\n    }\n\n    openIframe(id: string, event: any, link: string, options: any) {\n        // check existing iframe\n        let iframe = null;\n        this.iframes.forEach(f => {\n            if (f.id === id) {\n                iframe = f;\n            }\n        });\n        if (iframe) {\n            return;\n        }\n        iframe = new CardModel(id);\n        iframe.x = event.clientX;\n        iframe.y = event.clientY;\n        iframe.width = 600;\n        iframe.height = 400;\n        iframe.scale = 1;\n        if (!isNaN(parseInt(options.width))) {\n            iframe.width = parseInt(options.width);\n        }\n        if (!isNaN(parseInt(options.height))) {\n            iframe.height = parseInt(options.height);\n        }\n        if (!isNaN(parseFloat(options.scale))) {\n            iframe.scale = parseFloat(options.scale);\n        }\n\n        iframe.link = link;\n        iframe.name = link;\n        this.iframes.push(iframe);\n        this.onIframeResizing(iframe, { size: { width: iframe.width, height: iframe.height } });\n    }\n\n    onIframeResizing(iframe: CardModel, event) {\n        iframe.width = event.size.width;\n        iframe.height = event.size.height;\n    }\n\n    onCloseIframe(iframe: CardModel) {\n        this.iframes.forEach(f => {\n            if (f.id === iframe.id) {\n                this.iframes.splice(this.cards.indexOf(f), 1);\n            }\n        });\n    }\n\n    openWindow(id: string, event: any, link: string, options: any) {\n        let width = 600;\n        let height = 400;\n        if (!isNaN(parseInt(options.width))) {\n            width = parseInt(options.width);\n        }\n        if (!isNaN(parseInt(options.height))) {\n            height = parseInt(options.height);\n        }\n        window.open(link, '_blank', 'height=' + height + ',width=' + width + ',left=' + event.clientX + ',top=' + event.clientY);\n    }\n\n    onCloseCard(card: CardModel) {\n        this.cards.splice(this.cards.indexOf(card), 1);\n    }\n\n    onCloseDialog() {\n        delete this.dialog;\n    }\n\n    private onClose($event) {\n        if (this.onclose) {\n            this.onclose.emit($event);\n        }\n        // if (this.dialog && this.dialog.view && this.dialog.view.name === viewref) {\n        // \tthis.onCloseDialog();\n        // } else if (this.cards.find((c) => c.name === viewref)) {\n        // \tthis.onCloseCard(this.cards.find((c) => c.name === viewref));\n        // }\n    }\n\n    onSetValue(ga: GaugeSettings, event: GaugeEvent) {\n        if (event.actparam) {\n            let variableId = this.fetchVariableId(event) || ga.property.variableId\n            this.gaugesManager.putSignalValue(variableId, event.actparam);\n        }\n    }\n\n    onSetInput(ga: GaugeSettings, event: GaugeEvent) {\n        if (event.actparam) {\n            let ele = document.getElementById(event.actparam);\n            if (ele) {\n                let input = null;\n                for (let i = 0; i < GaugesManager.GaugeWithInput.length; i++) {\n                    input = Utils.searchTreeStartWith(ele, GaugesManager.GaugeWithInput[i]);\n                    if (input) {\n                        break;\n                    }\n                }\n                if (input && !isNaN(input.value)) {\n                    let variableId = this.fetchVariableId(event) || ga.property.variableId\n                    this.gaugesManager.putSignalValue(variableId, input.value);\n                }\n            }\n        }\n    }\n\n    getCardHeight(height) {\n        return parseInt(height) + 4;\n    }\n\n    protected fetchVariableId(event) {\n        if (!event.actoptions) {\n            return null;\n        }\n\n        if (Utils.isObject(event.actoptions['variable']) && event.actoptions['variable']['variableId']) {\n            return event.actoptions['variable']['variableId'];\n        }\n        // For legacy events\n        if (event.actoptions['variableId']) {\n            return event.actoptions['variableId'];\n        }\n\n        return null;\n    }\n\n    \n    toggleShowInputDialog(show: boolean, x: number = -1, y: number = -1, htmlev: Event = null) {\n        if (show) {\n            this.inputDialog.show = true;\n            if (x >= 0 && y >= 0) {\n                this.inputDialog.target = htmlev;\n                this.inputDialog.x = x;\n                this.inputDialog.y = y;\n            }\n            clearTimeout(this.inputDialog.timer);\n        } else {\n            this.inputDialog.timer = setTimeout(() => {\n                this.inputDialog.show = false;\n            }, 300);\n        }\n    }\n\n    onNoClick() {\n\n    }\n\n    onOkClick(evintput) {\n        if (this.inputDialog.target.dom) {\n            this.inputDialog.target.dom.value = evintput;\n            this.inputDialog.target.dbg = 'key pressed ' + this.inputDialog.target.dom.id + ' ' + this.inputDialog.target.dom.value;\n            this.inputDialog.target.id = this.inputDialog.target.dom.id;\n            this.inputDialog.target.value = this.inputDialog.target.dom.value;\n            this.gaugesManager.putEvent(this.inputDialog.target);\n        }\n    }\n}\n\nexport class CardModel {\n    public id: string;\n    public name: string;\n    public link: string;\n    public x: number;\n    public y: number;\n    public scale: number;\n    public scaleX: number;\n    public scaleY: number;\n    public width: number;\n    public height: number;\n    public variablesMapping: any = [];\n    public view: View;\n\n    constructor(id: string) {\n        this.id = id;\n    }\n}\n\nexport class DialogModalModel {\n\n    public id: string;\n    public name: string;\n    public width: number;\n    public height: number;\n    public bkcolor: string;\n    public view: View;\n    public variablesMapping: any = [];\n\n    constructor(id: string) {\n        this.id = id;\n    }\n}\n","module.exports = \"\"","module.exports = \"\"","import { Component, OnInit, Input } from '@angular/core';\nimport { GaugeBaseComponent } from '../../gauge-base/gauge-base.component'\nimport { GaugeSettings, Variable, GaugeRangeProperty, GaugeStatus, WindowLink, Event, GaugeProperty } from '../../../_models/hmi';\nimport { Utils } from '../../../_helpers/utils';\nimport { GaugeDialogType } from '../../gauge-property/gauge-property.component';\n\n@Component({\n    selector: 'gauge-progress',\n    templateUrl: './gauge-progress.component.html',\n    styleUrls: ['./gauge-progress.component.css']\n})\nexport class GaugeProgressComponent extends GaugeBaseComponent implements OnInit {\n\n    @Input() data: any;\n\n    static TypeTag = 'svg-ext-gauge_progress';\n    static LabelTag = 'HtmlProgress';\n    static prefixA = 'A-GXP_';\n    static prefixB = 'B-GXP_';\n    static prefixH = 'H-GXP_';\n    static prefixMax = 'M-GXP_';\n    static prefixMin = 'm-GXP_';\n    static prefixValue = 'V-GXP_';\n    static barColor = '#1565c0';\n\n    constructor() {\n        super();\n    }\n\n    ngOnInit() {\n    }\n\n    static getSignals(pro: any) {\n        let res: string[] = [];\n        if (pro.variableId) {\n            res.push(pro.variableId);\n        }\n        return res;\n    }\n\n    static getDialogType(): GaugeDialogType {\n        return GaugeDialogType.MinMax;\n    }\n\n    static processValue(ga: GaugeSettings, svgele: any, sig: Variable, gaugeStatus: GaugeStatus) {\n        try {\n            if (svgele.node && svgele.node.children && svgele.node.children.length === 3 && ga.property && ga.property.ranges.length > 0) {\n                let gap: GaugeRangeProperty = ga.property.ranges[0];\n                let g = svgele.node.children[0];\n                let val = parseFloat(sig.value);\n                let rectBase = Utils.searchTreeStartWith(svgele.node, this.prefixA);\n                let heightBase = parseFloat(rectBase.getAttribute('height'));\n                let yBase = parseFloat(rectBase.getAttribute('y'));\n                let rect = Utils.searchTreeStartWith(svgele.node, this.prefixB);\n                if (rectBase && rect) {\n                    if (val > gap.max) val = gap.max;\n                    if (val < gap.min) val = gap.min;\n                    let k = (heightBase - 0) / (gap.max - gap.min);\n                    let vtoy = k * (val - gap.min);\n                    rect.setAttribute('y', yBase + heightBase - vtoy);\n                    rect.setAttribute('height', vtoy);\n                    if (gap.style[1]) {\n                        let htmlValue = Utils.searchTreeStartWith(svgele.node, this.prefixValue);\n                        if (htmlValue) {\n                            htmlValue.innerHTML = val;\n                            if (gap.text) {\n                                htmlValue.innerHTML += ' ' + gap.text;\n                            }\n                            htmlValue.style.top = (heightBase - vtoy - 7).toString() + 'px';\n                        }\n                    }\n                }\n            }\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n    static initElement(ga: GaugeSettings, isview: boolean = false) {\n        let ele = document.getElementById(ga.id);\n        if (ele) {\n            if (!ga.property) {\n                ga.property = new GaugeProperty();\n                let ip: GaugeRangeProperty = new GaugeRangeProperty();\n                ip.type = this.getDialogType();\n                ip.min = 0;\n                ip.max = 100;\n                ip.style = [true, true];\n                ip.color = '#1565c0';\n                ga.property.ranges = [ip];\n            }\n            if (ga.property.ranges.length > 0) {\n                let gap: GaugeRangeProperty = ga.property.ranges[0];\n                // label min\n                let htmlLabel = Utils.searchTreeStartWith(ele, this.prefixMin);\n                if (htmlLabel) {\n                    htmlLabel.innerHTML = gap.min.toString();\n                    htmlLabel.style.display = (gap.style[0]) ? 'block' : 'none';\n                }\n                // label max\n                htmlLabel = Utils.searchTreeStartWith(ele, this.prefixMax);\n                if (htmlLabel) {\n                    htmlLabel.innerHTML = gap.max.toString();\n                    htmlLabel.style.display = (gap.style[0]) ? 'block' : 'none';\n                }\n                // value\n                let htmlValue = Utils.searchTreeStartWith(ele, this.prefixValue);\n                if (htmlValue) {\n                    htmlValue.style.display = (gap.style[1]) ? 'block' : 'none';\n                }\n                // bar color\n                let rect = Utils.searchTreeStartWith(ele, this.prefixB);\n                if (rect) {\n                    rect.setAttribute('fill', gap.color);\n                }\n            }\n        }\n    }\n\n    static initElementColor(bkcolor, color, ele) {\n        let rectArea = Utils.searchTreeStartWith(ele, this.prefixA);\n        if (rectArea) {\n            if (bkcolor) {\n                rectArea.setAttribute('fill', bkcolor);\n            }\n            if (color) {\n                rectArea.setAttribute('stroke', color);\n            }\n        }\n        rectArea = Utils.searchTreeStartWith(ele, this.prefixB);\n        if (rectArea) {\n            if (color) {\n                rectArea.setAttribute('stroke', color);\n            }\n        }\n    }\n\n    static getFillColor(ele) {\n        let rectArea = Utils.searchTreeStartWith(ele, this.prefixA);\n        if (rectArea) {\n            return rectArea.getAttribute('fill');\n        }\n    }\n\n    static getStrokeColor(ele) {\n        let rectArea = Utils.searchTreeStartWith(ele, this.prefixA);\n        if (rectArea) {\n            return rectArea.getAttribute('stroke');\n        }\n    }\n\n    static getDefaultValue() {\n        return { color: this.barColor };\n    }\n}\n","module.exports = \"\"","module.exports = \"\"","import { Component, Input, OnInit } from '@angular/core';\nimport { GaugeBaseComponent } from '../../gauge-base/gauge-base.component'\nimport { GaugeSettings, GaugeStatus, Variable, GaugeActionsType, GaugeAction } from '../../../_models/hmi';\nimport { GaugeDialogType } from '../../gauge-property/gauge-property.component';\n\ndeclare var SVG: any;\n\n@Component({\n    selector: 'gauge-semaphore',\n    templateUrl: './gauge-semaphore.component.html',\n    styleUrls: ['./gauge-semaphore.component.css']\n})\nexport class GaugeSemaphoreComponent extends GaugeBaseComponent implements OnInit {\n\n    @Input() data: any;\n\n    static TypeTag = 'svg-ext-gauge_semaphore';\n    static LabelTag = 'HtmlSemaphore';\n\n    static actionsType = { hide: GaugeActionsType.hide, show: GaugeActionsType.show, blink: GaugeActionsType.blink };\n\n    constructor() {\n        super();\n    }\n\n    ngOnInit() {\n    }\n\n    static getSignals(pro: any) {\n        let res: string[] = [];\n        if (pro.variableId) {\n            res.push(pro.variableId);\n        }\n        if (pro.actions && pro.actions.length) {\n            pro.actions.forEach(act => {\n                res.push(act.variableId);\n            });\n        }\n        return res;\n    }\n\n    static getDialogType(): GaugeDialogType {\n        return GaugeDialogType.Range;\n    }\n\n    static getActions() {\n        return this.actionsType;\n    }\n    \n    static processValue(ga: GaugeSettings, svgele: any, sig: Variable, gaugeStatus: GaugeStatus) {\n        try {\n            if (svgele.node && svgele.node.children && svgele.node.children.length <= 1) {\n                let g = svgele.node.children[0];\n                let clr = '';\n                let val = parseFloat(sig.value);\n                if (Number.isNaN(val)) {\n                    // maybe boolean\n                    val = Number(sig.value);\n                }\n                if (ga.property && ga.property.ranges) {\n                    for (let idx = 0; idx < ga.property.ranges.length; idx++) {\n                        if (ga.property.ranges[idx].min <= val && ga.property.ranges[idx].max >= val) {\n                            clr = ga.property.ranges[idx].color;\n                        }\n                    }\n                    g.setAttribute('fill', clr);\n                    // check actions\n                    if (ga.property.actions) {\n                        ga.property.actions.forEach(act => {\n                            if (act.variableId === sig.id) {\n                                GaugeSemaphoreComponent.processAction(act, svgele, val, gaugeStatus);\n                            }\n                        });\n                    }\n                }\n            }\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n    static getFillColor(ele) {\n        if (ele.children && ele.children[0]) {\n            return ele.children[0].getAttribute('fill');\n        }\n        return ele.getAttribute('fill');\n    }\n\n    static getStrokeColor(ele) {\n        if (ele.children && ele.children[0]) {\n            return ele.children[0].getAttribute('stroke');\n        }\n        return ele.getAttribute('stroke');\n    }\n\n    static processAction(act: GaugeAction, svgele: any, value: any, gaugeStatus: GaugeStatus) {\n        if (this.actionsType[act.type] === this.actionsType.hide) {\n            if (act.range.min <= value && act.range.max >= value) {\n                let element = SVG.adopt(svgele.node);\n                this.runActionHide(element, act.type, gaugeStatus);\n            }\n        } else if (this.actionsType[act.type] === this.actionsType.show) {\n            if (act.range.min <= value && act.range.max >= value) {\n                let element = SVG.adopt(svgele.node);\n                this.runActionShow(element, act.type, gaugeStatus);\n            }\n        } else if (this.actionsType[act.type] === this.actionsType.blink) {\n            let element = SVG.adopt(svgele.node);\n            let inRange = (act.range.min <= value && act.range.max >= value);\n            this.checkActionBlink(element, act.type, gaugeStatus, inRange, act.options, false);\n        }\n    }\n}\n","module.exports = \"\\n.slider {\\n    display:inline-block; \\n    width: 100px;\\n}\\n\\n.gauge {\\n    display: inline-block;\\n    position: absolute;\\n    top: 0px;\\n    width: 360px;\\n    height: 350px;\\n    margin: 0 auto;\\n    padding-top: 30px;\\n    padding-left: 70px;\\n}\\n\\n.gauge-select {\\n    width: 280px; \\n    text-align: center;\\n}\\n\\n.gauge-view {\\n    border: 1px solid var(--formSeparatorColor);\\n    width: 280px; \\n    height: 220px;\\n    margin-top: -5px;\\n    padding-top: 30px;\\n}\\n\\n.btn-gauge {\\n    z-index: 99;\\n    display: inline-block;\\n    width: 50px;\\n    height:38px;\\n    border: 1px solid var(--formSeparatorColor);\\n}\\n\\n.btn-gauge-mat {\\n    background: url('/assets/images/gauge-mat.png') no-repeat center center;\\n    background-size: 45px 30px;\\n}\\n\\n.btn-gauge-donut {\\n    background: url('/assets/images/gauge-donut.png') no-repeat center center;\\n    background-size: 52px 28px;\\n}\\n\\n.btn-gauge-zone {\\n    background: url('/assets/images/gauge-zone.png') no-repeat center center;\\n    background-size: 45px 30px;\\n}\\n\\n.toolbox {\\n    position: absolute;\\n    width: 100%;\\n    height: 310px;\\n}\\n\\n.toolbox-left {\\n    display: inline-block;\\n    width: 460px;\\n    padding-top: 20px;\\n}\\n\\n.toolbox-right {\\n    width: 300px;\\n    position: absolute;\\n    top: 0px;\\n    right: 0px;\\n    height: 270px;\\n}\\n\\n.toolbox-det {\\n    display: inline-block;\\n    width: 312px;\\n    height: 300px;\\n    position: absolute;\\n    top: 15px;\\n    right: 0px;\\n}\\n\\n.slider-field span {\\n    padding-left: 2px;\\n    text-overflow: clip;\\n    max-width: 125px;\\n    white-space: nowrap;\\n    overflow: hidden;\\n}\\n\\n.slider-field mat-slider {\\n    background-color: var(--formSliderBackground);\\n    height: 30px;\\n}\\n\\n.field-row {\\n    display: block;\\n    margin-bottom: 5px;\\n}\\n\"","module.exports = \"<div style=\\\"width: 750px;height: 810px; position: relative\\\" class=\\\"dialog-mdsd-v\\\">\\n    <h1 mat-dialog-title style=\\\"display:inline-block;cursor:move;\\\" mat-dialog-draggable>{{'editor.controls-bag-settings' | translate}}</h1>\\n    <mat-icon (click)=\\\"onNoClick()\\\" style=\\\"float:right;margin-right:-10px;margin-top:-10px;cursor:pointer;color:gray;\\\">clear</mat-icon>\\n    <div style=\\\"display: block; width: 660px\\\">\\n        <div style=\\\"display: block;\\\">\\n            <div class=\\\"my-form-field\\\">\\n                <span>{{'gauges.property-name' | translate}}</span>\\n                <input [(ngModel)]=\\\"data.settings.name\\\" style=\\\"width: 220px\\\" type=\\\"text\\\">\\n            </div>\\n            <div class=\\\"my-form-field\\\" style=\\\"vertical-align: bottom; margin-left: 13px;\\\">\\n                <span>{{'gauges.property-permission' | translate}}</span>\\n                <div style=\\\"text-align:center;cursor:pointer;\\\" class=\\\"my-form-field-permission\\\" (click)=\\\"onEditPermission()\\\">\\n                    <mat-icon class=\\\"header-icon\\\" style=\\\"line-height: 30px;\\\" *ngIf=\\\"!property || !property.permission\\\">lock_open</mat-icon>\\n                    <mat-icon class=\\\"header-icon\\\" style=\\\"line-height: 30px;\\\" *ngIf=\\\"property && property.permission\\\">lock</mat-icon>\\n                </div>\\n            </div>\\n        </div>\\n        <div mat-dialog-content style=\\\"overflow: hidden; width:100%\\\">\\n            <flex-head [data]=\\\"data\\\" [property]=\\\"property\\\" #flexhead></flex-head>\\n        </div>\\n    </div>\\n    <div style=\\\"width: 750px; height: 660px; position: relative\\\">\\n        <div style=\\\"display: block; height: 360px;\\\">\\n            <div class=\\\"gauge\\\">\\n                <div class=\\\"gauge-select\\\">\\n                    <div (click)=\\\"onGaugeChange(gaugeTypeEnum.Gauge)\\\" class=\\\"btn-gauge btn-gauge-mat\\\"\\n                        [ngStyle]=\\\"{'background-color': gaugeType === gaugeTypeEnum.Gauge ? 'transparent' : 'rgba(0,0,0,0.1)'}\\\"></div>\\n                    <div (click)=\\\"onGaugeChange(gaugeTypeEnum.Donut)\\\" class=\\\"btn-gauge btn-gauge-donut\\\"\\n                        [ngStyle]=\\\"{'background-color': gaugeType === gaugeTypeEnum.Donut ? 'transparent' : 'rgba(0,0,0,0.1)'}\\\"></div>\\n                    <div (click)=\\\"onGaugeChange(gaugeTypeEnum.Zones)\\\" class=\\\"btn-gauge btn-gauge-zone\\\"\\n                        [ngStyle]=\\\"{'background-color': gaugeType === gaugeTypeEnum.Zones ? 'transparent' : 'rgba(0,0,0,0.1)'}\\\"></div>\\n                </div>\\n                <div class=\\\"gauge-view\\\">\\n                    <ngx-gauge [options]=\\\"options\\\" #ngauge [value]=\\\"gauge.value\\\"></ngx-gauge>\\n                </div>\\n            </div>\\n            <div class=\\\"toolbox-det\\\" *ngIf=\\\"gaugeType!=gaugeTypeEnum.Donut\\\">\\n                <div class=\\\"field-row\\\">\\n                    <div class=\\\"my-form-field\\\" style=\\\"padding-left: 12px\\\">\\n                        <span>{{'bag.property-ticks' | translate}}</span>\\n                        <mat-slide-toggle color=\\\"primary\\\" [(ngModel)]=\\\"optcfg.ticksEnabled\\\" (change)=\\\"onChangeTicks($event.checked)\\\"></mat-slide-toggle>\\n                    </div>\\n                </div>\\n                <div class=\\\"field-row\\\">\\n                    <div class=\\\"my-form-field slider-field\\\" style=\\\"padding-left: 12px\\\">\\n                        <span>{{'bag.property-divisions' | translate}}</span>\\n                        <mat-slider [disabled]=\\\"!optcfg.ticksEnabled\\\" style=\\\"display:inline-block;\\\" [max]=\\\"20\\\" [min]=\\\"0\\\" [step]=\\\"1\\\" [thumbLabel]=\\\"true\\\"\\n                            [(ngModel)]=\\\"optcfg.renderTicks.divisions\\\" (input)=\\\"onChangeOptionsTicks('divisions', $event.value)\\\">\\n                        </mat-slider>\\n                    </div>\\n                    <div class=\\\"my-form-field slider-field\\\" style=\\\"padding-left: 12px\\\">\\n                        <span>{{'bag.property-subdivisions' | translate}}</span>\\n                        <mat-slider [disabled]=\\\"!optcfg.ticksEnabled\\\" style=\\\"display:inline-block;\\\" [max]=\\\"20\\\" [min]=\\\"0\\\" [step]=\\\"1\\\" [thumbLabel]=\\\"true\\\"\\n                            [(ngModel)]=\\\"optcfg.renderTicks.subDivisions\\\" (input)=\\\"onChangeOptionsTicks('subDivisions', $event.value)\\\">\\n                        </mat-slider>\\n                    </div>\\n                </div>\\n                <div class=\\\"field-row\\\">\\n                    <div class=\\\"my-form-field slider-field\\\" style=\\\"padding-left: 12px\\\">\\n                        <span>{{'bag.property-divisions-length' | translate}}</span>\\n                        <mat-slider [disabled]=\\\"!optcfg.ticksEnabled\\\" style=\\\"display:inline-block;\\\" [max]=\\\"100\\\" [min]=\\\"0\\\" [step]=\\\"1\\\" [thumbLabel]=\\\"true\\\"\\n                            [(ngModel)]=\\\"optcfg.renderTicks.divLength\\\" (input)=\\\"onChangeOptionsTicks('divLength', $event.value)\\\">\\n                        </mat-slider>\\n                    </div>\\n                    <div class=\\\"my-form-field slider-field\\\" style=\\\"padding-left: 12px\\\">\\n                        <span>{{'bag.property-subdivisions-length' | translate}}</span>\\n                        <mat-slider [disabled]=\\\"!optcfg.ticksEnabled\\\" style=\\\"display:inline-block;\\\" [max]=\\\"100\\\" [min]=\\\"0\\\" [step]=\\\"1\\\" [thumbLabel]=\\\"true\\\"\\n                            [(ngModel)]=\\\"optcfg.renderTicks.subLength\\\" (input)=\\\"onChangeOptionsTicks('subLength', $event.value)\\\">\\n                        </mat-slider>\\n                    </div>\\n                </div>\\n                <div class=\\\"field-row\\\">\\n                    <div class=\\\"my-form-field slider-field\\\" style=\\\"padding-left: 12px\\\">\\n                        <span>{{'bag.property-divisions-width' | translate}}</span>\\n                        <mat-slider [disabled]=\\\"!optcfg.ticksEnabled\\\" style=\\\"display:inline-block;\\\" [max]=\\\"100\\\" [min]=\\\"0\\\" [step]=\\\"1\\\" [thumbLabel]=\\\"true\\\"\\n                            [(ngModel)]=\\\"optcfg.renderTicks.divWidth\\\" (input)=\\\"onChangeOptionsTicks('divWidth', $event.value)\\\">\\n                        </mat-slider>\\n                    </div>\\n                    <div class=\\\"my-form-field slider-field\\\" style=\\\"padding-left: 12px\\\">\\n                        <span>{{'bag.property-subdivisions-width' | translate}}</span>\\n                        <mat-slider [disabled]=\\\"!optcfg.ticksEnabled\\\" style=\\\"display:inline-block;\\\" [max]=\\\"100\\\" [min]=\\\"0\\\" [step]=\\\"1\\\" [thumbLabel]=\\\"true\\\"\\n                            [(ngModel)]=\\\"optcfg.renderTicks.subWidth\\\" (input)=\\\"onChangeOptionsTicks('subWidth', $event.value)\\\">\\n                        </mat-slider>\\n                    </div>\\n                </div>\\n                <div class=\\\"field-row\\\">\\n                    <div class=\\\"my-form-field slider-field color-field\\\" style=\\\"padding-left: 12px\\\">\\n                        <span>{{'bag.property-divisions-color' | translate}}</span>\\n                        <input [disabled]=\\\"!optcfg.ticksEnabled\\\" [(colorPicker)]=\\\"optcfg.renderTicks.divColor\\\" [cpAlphaChannel]=\\\"'always'\\\" class=\\\"input-color\\\"\\n                            [style.background]=\\\"optcfg.renderTicks.divColor\\\" [cpPresetColors]=\\\"defaultColor\\\" [cpOKButton]=\\\"true\\\" [cpCancelButton]=\\\"true\\\"\\n                            [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\" [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\"\\n                            style=\\\"width: 121px\\\" [cpPosition]=\\\"'left'\\\" (colorPickerChange)=\\\"onChangeOptionsTicks('divColor', $event)\\\" />\\n                    </div>\\n                    <div class=\\\"my-form-field slider-field color-field\\\" style=\\\"padding-left: 12px;\\\">\\n                        <span>{{'bag.property-subdivisions-color' | translate}}</span>\\n                        <input [disabled]=\\\"!optcfg.ticksEnabled\\\" [(colorPicker)]=\\\"optcfg.renderTicks.subColor\\\" [cpAlphaChannel]=\\\"'always'\\\" class=\\\"input-color\\\"\\n                            [style.background]=\\\"optcfg.renderTicks.subColor\\\" [cpPresetColors]=\\\"defaultColor\\\" [cpOKButton]=\\\"true\\\" [cpCancelButton]=\\\"true\\\"\\n                            [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\" [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\"\\n                            style=\\\"width: 121px\\\" [cpPosition]=\\\"'left'\\\" (colorPickerChange)=\\\"onChangeOptionsTicks('subColor', $event)\\\" />\\n                    </div>\\n                </div>\\n                <div class=\\\"field-row\\\">\\n                    <div class=\\\"my-form-field slider-field\\\" style=\\\"padding-left: 12px\\\">\\n                        <span>{{'bag.property-divisionfont-size' | translate}}</span>\\n                        <mat-slider [disabled]=\\\"!optcfg.ticksEnabled\\\" style=\\\"display:inline-block;\\\" [max]=\\\"100\\\" [min]=\\\"0\\\" [step]=\\\"1\\\" [thumbLabel]=\\\"true\\\"\\n                            [(ngModel)]=\\\"optcfg.staticFontSize\\\" (input)=\\\"onChangeOptionsLabels('fontSize', $event.value)\\\">\\n                        </mat-slider>\\n                    </div>\\n                    <div class=\\\"my-form-field slider-field color-field\\\" style=\\\"padding-left: 12px\\\">\\n                        <span>{{'bag.property-divisionfont-color' | translate}}</span>\\n                        <input [(colorPicker)]=\\\"optcfg.staticFontColor\\\" [cpDisabled]=\\\"!optcfg.ticksEnabled\\\" [cpAlphaChannel]=\\\"'always'\\\" class=\\\"input-color\\\"\\n                            [style.background]=\\\"optcfg.staticFontColor\\\" [cpPresetColors]=\\\"defaultColor\\\" [cpOKButton]=\\\"true\\\" [cpCancelButton]=\\\"true\\\"\\n                            [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\" [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\"\\n                            style=\\\"width: 121px\\\" [cpPosition]=\\\"'left'\\\" (colorPickerChange)=\\\"onChangeOptionsLabels('labelsColor', $event)\\\" />\\n                    </div>\\n                </div>\\n                <div class=\\\"field-row\\\">\\n                    <div class=\\\"my-form-field slider-field\\\" style=\\\"padding-left: 12px\\\">\\n                        <span style=\\\"max-width: 180px\\\">{{'bag.property-divisions-labels' | translate}}</span>\\n                        <input [disabled]=\\\"!optcfg.ticksEnabled\\\" [(ngModel)]=\\\"optcfg.staticLabelsText\\\" (change)=\\\"onChangeOptionsLabels('labels', optcfg.staticLabelsText)\\\"\\n                            style=\\\"width: 265px;\\\" type=\\\"text\\\">\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"toolbox\\\">\\n            <div class=\\\"toolbox-left\\\">\\n                <div class=\\\"field-row\\\">\\n                    <div class=\\\"my-form-field slider-field\\\" style=\\\"padding-left: 12px\\\">\\n                        <span>{{'bag.property-current-value' | translate}}</span>\\n                        <mat-slider style=\\\"display:inline-block;\\\" [max]=\\\"optcfg.maxValue\\\" [min]=\\\"optcfg.minValue\\\" [step]=\\\"1\\\" [thumbLabel]=\\\"true\\\" [(ngModel)]=\\\"gauge.value\\\"\\n                            (input)=\\\"onChangeValue($event.value)\\\">\\n                        </mat-slider>\\n                    </div>\\n                    <div class=\\\"my-form-field slider-field\\\" style=\\\"padding-left: 12px\\\">\\n                        <span>{{'bag.property-min' | translate}}</span>\\n                        <input numberOnly [(ngModel)]=\\\"optcfg.minValue\\\" (change)=\\\"onChangeOptions('minValue', optcfg.minValue)\\\"\\n                            style=\\\"width: 50px;text-align: center;display:inline-block;\\\" type=\\\"text\\\">\\n                    </div>\\n                    <div class=\\\"my-form-field slider-field\\\" style=\\\"padding-left: 14px\\\">\\n                        <span>{{'bag.property-max' | translate}}</span>\\n                        <input numberOnly [(ngModel)]=\\\"optcfg.maxValue\\\" (change)=\\\"onChangeOptions('maxValue', optcfg.maxValue)\\\"\\n                            style=\\\"width: 50px;text-align: center;display:inline-block;\\\" type=\\\"text\\\">\\n                    </div>\\n                    <div class=\\\"my-form-field slider-field\\\" style=\\\"padding-left: 12px\\\">\\n                        <span>{{'bag.property-bar-width' | translate}}</span>\\n                        <mat-slider style=\\\"display:inline-block;\\\" [max]=\\\"70\\\" [min]=\\\"0\\\" [step]=\\\"1\\\" [thumbLabel]=\\\"true\\\" [(ngModel)]=\\\"optcfg.lineWidth\\\"\\n                            (input)=\\\"onChangeOptions('lineWidth', $event.value)\\\">\\n                        </mat-slider>\\n                    </div>\\n                </div>\\n                <div class=\\\"field-row\\\">\\n                    <div class=\\\"my-form-field slider-field\\\" style=\\\"padding-left: 12px\\\">\\n                        <span>{{'bag.property-animation-speed' | translate}}</span>\\n                        <mat-slider style=\\\"display:inline-block;\\\" [max]=\\\"128\\\" [min]=\\\"1\\\" [step]=\\\"1\\\" [thumbLabel]=\\\"true\\\" [(ngModel)]=\\\"optcfg.animationSpeed\\\"\\n                            (input)=\\\"onChangeOptions('animationSpeed', $event.value)\\\">\\n                        </mat-slider>\\n                    </div>\\n                    <div class=\\\"my-form-field slider-field\\\" style=\\\"padding-left: 12px\\\">\\n                        <span>{{'bag.property-angle' | translate}}</span>\\n                        <mat-slider style=\\\"display:inline-block;\\\" [max]=\\\"50\\\" [min]=\\\"-50\\\" [step]=\\\"1\\\" [thumbLabel]=\\\"true\\\" [(ngModel)]=\\\"optcfg.angle\\\"\\n                            (input)=\\\"onChangeOptions('angle', $event.value)\\\">\\n                        </mat-slider>\\n                    </div>\\n                    <div class=\\\"my-form-field slider-field\\\" style=\\\"padding-left: 12px\\\">\\n                        <span>{{'bag.property-radius' | translate}}</span>\\n                        <mat-slider style=\\\"display:inline-block;\\\" [max]=\\\"100\\\" [min]=\\\"50\\\" [step]=\\\"1\\\" [thumbLabel]=\\\"true\\\" [(ngModel)]=\\\"optcfg.radiusScale\\\"\\n                            (input)=\\\"onChangeOptions('radiusScale', $event.value)\\\">\\n                        </mat-slider>\\n                    </div>\\n                </div>\\n                <div class=\\\"field-row\\\">\\n                    <div class=\\\"my-form-field slider-field\\\" style=\\\"padding-left: 12px\\\">\\n                        <span>{{'bag.property-font-size' | translate}}</span>\\n                        <mat-slider style=\\\"display:inline-block;\\\" [max]=\\\"100\\\" [min]=\\\"0\\\" [step]=\\\"1\\\" [thumbLabel]=\\\"true\\\" [(ngModel)]=\\\"optcfg.fontSize\\\"\\n                            (input)=\\\"onChangeOptions('fontSize', $event.value)\\\">\\n                        </mat-slider>\\n                    </div>\\n                    <div class=\\\"my-form-field slider-field\\\" style=\\\"padding-left: 12px\\\">\\n                        <span>{{'bag.property-textfield-position' | translate}}</span>\\n                        <mat-slider style=\\\"display:inline-block;\\\" [max]=\\\"100\\\" [min]=\\\"0\\\" [step]=\\\"1\\\" [thumbLabel]=\\\"true\\\" [(ngModel)]=\\\"optcfg.textFilePosition\\\"\\n                            (input)=\\\"onChangeOptions('textFilePosition', $event.value)\\\">\\n                        </mat-slider>\\n                    </div>\\n                    <div class=\\\"my-form-field slider-field\\\" style=\\\"padding-left: 12px\\\">\\n                        <span>{{'bag.property-format-digits' | translate}}</span>\\n                        <mat-slider style=\\\"display:inline-block;\\\" [max]=\\\"5\\\" [min]=\\\"0\\\" [step]=\\\"1\\\" [thumbLabel]=\\\"true\\\" [(ngModel)]=\\\"optcfg.fractionDigits\\\"\\n                            (input)=\\\"onChangeOptions('fractionDigits', $event.value)\\\">\\n                        </mat-slider>\\n                    </div>\\n                </div>\\n                <div class=\\\"field-row\\\">\\n                    <div class=\\\"my-form-field slider-field\\\" style=\\\"padding-left: 12px\\\">\\n                        <span>{{'bag.property-pointer-length' | translate}}</span>\\n                        <mat-slider style=\\\"display:inline-block;\\\" [max]=\\\"100\\\" [min]=\\\"0\\\" [step]=\\\"1\\\" [thumbLabel]=\\\"true\\\" [(ngModel)]=\\\"optcfg.pointer.length\\\"\\n                            (input)=\\\"onChangeOptionsPointer('pointerLength', $event.value)\\\">\\n                        </mat-slider>\\n                    </div>\\n                    <div class=\\\"my-form-field slider-field\\\" style=\\\"padding-left: 12px\\\">\\n                        <span>{{'bag.property-pointer-stroke' | translate}}</span>\\n                        <mat-slider style=\\\"display:inline-block;\\\" [max]=\\\"300\\\" [min]=\\\"0\\\" [step]=\\\"1\\\" [thumbLabel]=\\\"true\\\" [(ngModel)]=\\\"optcfg.pointer.strokeWidth\\\"\\n                            (input)=\\\"onChangeOptionsPointer('pointerStrokeWidth', $event.value)\\\">\\n                        </mat-slider>\\n                    </div>\\n                    <div class=\\\"my-form-field slider-field color-field\\\" style=\\\"padding-left: 12px\\\">\\n                        <span>{{'bag.property-pointer-color' | translate}}</span>\\n                        <input [(colorPicker)]=\\\"optcfg.pointer.color\\\" [cpAlphaChannel]=\\\"'always'\\\" [style.background]=\\\"optcfg.pointer.color\\\" class=\\\"input-color\\\"\\n                            [cpPresetColors]=\\\"defaultColor\\\" [cpOKButton]=\\\"true\\\" [cpCancelButton]=\\\"true\\\" [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\"\\n                            [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\" style=\\\"width: 121px\\\"\\n                            [cpPosition]=\\\"'top'\\\" (colorPickerChange)=\\\"onChangeOptionsPointer('color', $event)\\\" />\\n                    </div>\\n                </div>\\n                <div class=\\\"field-row slider-field\\\">\\n                    <div class=\\\"my-form-field color-field\\\" style=\\\"padding-left: 12px\\\">\\n                        <span>{{'bag.property-color-start' | translate}}</span>\\n                        <input [(colorPicker)]=\\\"optcfg.colorStart\\\" [style.background]=\\\"optcfg.colorStart\\\" [cpAlphaChannel]=\\\"'always'\\\" class=\\\"input-color\\\"\\n                            [cpPresetColors]=\\\"defaultColor\\\" [cpOKButton]=\\\"true\\\" [cpCancelButton]=\\\"true\\\" [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\"\\n                            [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\" style=\\\"width: 121px\\\"\\n                            [cpPosition]=\\\"'top'\\\" (colorPickerChange)=\\\"onChangeOptions('colorStart', $event)\\\" />\\n                    </div>\\n                    <div class=\\\"my-form-field slider-field color-field\\\" style=\\\"padding-left: 12px\\\">\\n                        <span>{{'bag.property-color-stop' | translate}}</span>\\n                        <input [(colorPicker)]=\\\"optcfg.colorStop\\\" [style.background]=\\\"optcfg.colorStop\\\" [cpAlphaChannel]=\\\"'always'\\\" class=\\\"input-color\\\"\\n                            [cpPresetColors]=\\\"defaultColor\\\" [cpOKButton]=\\\"true\\\" [cpCancelButton]=\\\"true\\\" [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\"\\n                            [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\" style=\\\"width: 121px\\\"\\n                            [cpPosition]=\\\"'top'\\\" (colorPickerChange)=\\\"onChangeOptions('colorStop', $event)\\\" />\\n                    </div>\\n                    <div class=\\\"my-form-field slider-field color-field\\\" style=\\\"padding-left: 12px\\\">\\n                        <span>{{'bag.property-background' | translate}}</span>\\n                        <input [(colorPicker)]=\\\"optcfg.strokeColor\\\" [style.background]=\\\"optcfg.strokeColor\\\" [cpAlphaChannel]=\\\"'always'\\\" class=\\\"input-color\\\"\\n                            [cpPresetColors]=\\\"defaultColor\\\" [cpOKButton]=\\\"true\\\" [cpCancelButton]=\\\"true\\\" [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\"\\n                            [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\" style=\\\"width: 121px\\\"\\n                            [cpPosition]=\\\"'top'\\\" (colorPickerChange)=\\\"onChangeOptions('strokeColor', $event)\\\" />\\n                    </div>\\n                </div>\\n                <div class=\\\"field-row slider-field\\\">\\n                    <div class=\\\"my-form-field\\\" style=\\\"padding-left: 12px;width:160px\\\">\\n                        <span>{{'bag.property-font' | translate}}</span>\\n                        <mat-select [(value)]=\\\"options.fontFamily\\\" (selectionChange)=\\\"onChangeOptionsLabels('fontFamily',  $event.value)\\\">\\n                            <mat-option *ngFor=\\\"let font of fonts\\\" [style.fontFamily]=\\\"font\\\" [value]=\\\"font\\\">\\n                                {{font}}\\n                            </mat-option>\\n                        </mat-select>\\n                    </div>\\n                    <!-- <div class=\\\"my-form-field slider-field color-field\\\" style=\\\"padding-left: 12px\\\">\\n                        <span>{{'bag.property-background' | translate}}</span>\\n                        <input [(colorPicker)]=\\\"optcfg.backgroundColor\\\" [style.background]=\\\"optcfg.backgroundColor\\\" [cpAlphaChannel]=\\\"'always'\\\" class=\\\"input-color\\\" [cpPresetColors]=\\\"defaultColor\\\" [cpOKButton]=\\\"true\\\" [cpCancelButton]=\\\"true\\\" [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\" [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\" style=\\\"padding: 8px 0 0 0; width: 126px\\\" [cpPosition]=\\\"'top'\\\" (colorPickerChange)=\\\"onChangeOptions('backgroundColor', $event)\\\" />\\n                    </div> -->\\n                </div>\\n            </div>\\n            <div class=\\\"toolbox-right\\\" *ngIf=\\\"gaugeType==gaugeTypeEnum.Zones\\\">\\n                <div style=\\\"position: absolute; top: 0px; right: 0px\\\">\\n                    <span>{{'bag.property-zones' | translate}}</span>\\n                    <button mat-icon-button (click)=\\\"onAddZone()\\\" [disabled]=\\\"optcfg.staticZones && optcfg.staticZones.length >= 5\\\">\\n                        <mat-icon>add_circle_outline</mat-icon>\\n                    </button>\\n                </div>\\n                <div style=\\\"margin-top: 20px; margin-bottom:20px; height:250px\\\">\\n                    <div *ngFor=\\\"let item of optcfg.staticZones; index as i\\\" style=\\\"display: block;\\\">\\n                        <div class=\\\"my-form-field slider-field\\\">\\n                            <span>{{'bag.property-min' | translate}}</span>\\n                            <input [(ngModel)]=\\\"item.min\\\" style=\\\"width: 60px; text-align: center;\\\" type=\\\"text\\\" (change)=\\\"onChangeStaticZones()\\\">\\n                        </div>\\n                        <div class=\\\"my-form-field slider-field\\\" style=\\\"padding-left: 12px;\\\">\\n                            <span>{{'bag.property-max' | translate}}</span>\\n                            <input [(ngModel)]=\\\"item.max\\\" style=\\\"width: 60px\\\" type=\\\"text\\\" (change)=\\\"onChangeStaticZones()\\\">\\n                        </div>\\n                        <div class=\\\"my-form-field slider-field color-field\\\" style=\\\"padding-left: 12px\\\">\\n                            <span>{{'bag.property-color' | translate}}</span>\\n                            <input [cpDialogDisplay]=\\\"'popup'\\\" [(colorPicker)]=\\\"item.strokeStyle\\\" [cpAlphaChannel]=\\\"'always'\\\" class=\\\"input-color\\\"\\n                                [style.background]=\\\"item.strokeStyle\\\" [cpPresetColors]=\\\"defaultColor\\\" [cpOKButton]=\\\"true\\\" [cpCancelButton]=\\\"true\\\"\\n                                [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\" [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\"\\n                                style=\\\"width: 58px\\\" [cpPosition]=\\\"'top'\\\" (colorPickerChange)=\\\"onChangeStaticZones()\\\" />\\n                        </div>\\n                        <div class=\\\"my-form-field\\\" style=\\\"line-height: 40px;\\\">\\n                            <button mat-icon-button (click)=\\\"onRemoveZone(i)\\\" class=\\\"remove\\\">\\n                                <mat-icon>clear</mat-icon>\\n                            </button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div mat-dialog-actions class=\\\"dialog-action\\\">\\n        <button mat-raised-button (click)=\\\"onNoClick()\\\">{{'dlg.cancel' | translate}}</button>\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onOkClick()\\\" [mat-dialog-close]=\\\"data\\\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\\n    </div>\\n</div>\"","import { Component, Inject, OnInit, AfterViewInit, OnChanges, SimpleChanges, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { Utils } from '../../../../_helpers/utils';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\nimport { GaugeOptions, GaugeType, } from '../../../../gui-helpers/ngx-gauge/gaugeOptions';\nimport { NgxGaugeComponent } from '../../../../gui-helpers/ngx-gauge/ngx-gauge.component';\nimport { GaugeSettings } from '../../../../_models/hmi';\nimport { GaugeProperty } from '../../../../_models/hmi';\nimport { DialogGaugePermission } from '../../../gauge-property/gauge-property.component';\nimport { FlexHeadComponent } from '../../../gauge-property/flex-head/flex-head.component';\nimport { Define } from '../../../../_helpers/define';\n\n@Component({\n    selector: 'bag-property',\n    templateUrl: './bag-property.component.html',\n    styleUrls: ['./bag-property.component.css']\n})\nexport class BagPropertyComponent implements OnInit, AfterViewInit, OnChanges {\n\n    @ViewChild(\"ngauge\") ngauge: NgxGaugeComponent;\n\t@ViewChild('flexhead') flexHead: FlexHeadComponent;\n\n    gauge = {\n        value: 30\n    }\n\n\tproperty: GaugeProperty;\n    gaugeTypeEnum = GaugeType;\n    gaugeType = GaugeType.Gauge;\n    options: any = new GaugeOptions();\n    optionsGauge = new GaugeOptions();\n    optionsDonut = new GaugeOptions();\n    optionsZones = new GaugeOptions();\n    optcfg: any = new GaugeOptions();\n    defaultColor = Utils.defaultColor;\n    fonts = Define.fonts;\n\n    constructor(private cdRef: ChangeDetectorRef,\n                public dialog: MatDialog,\n                public dialogRef: MatDialogRef<BagPropertyComponent>,\n                @Inject(MAT_DIALOG_DATA) public data: any) { \n        this.optionsGauge = this.getDefaultOptions(GaugeType.Gauge);\n        this.optionsDonut = this.getDefaultOptions(GaugeType.Donut);\n        this.optionsZones = this.getDefaultOptions(GaugeType.Zones);\n        this.options = this.optionsGauge;\n        this.property = JSON.parse(JSON.stringify(this.data.settings.property));\n        if (!this.property) {\n\t\t\tthis.property = new GaugeProperty();\n        }\n    }\n\n    ngOnInit() { \n    }\n\n    ngAfterViewInit() {\n        setTimeout(() => {\n            this.gaugeType = GaugeType.Gauge;\n            if (this.property.options) {\n                this.options = this.property.options;\n                this.gaugeType = this.options.type;\n                if (this.gaugeType === GaugeType.Donut) {\n                    this.optionsDonut = this.options;\n                } else if (this.gaugeType === GaugeType.Zones) {\n                    this.optionsZones = this.options;\n                } else {\n                    this.optionsGauge = this.options;\n                }\n            }\n            this.onGaugeChange(this.gaugeType);\n            this.cdRef.detectChanges();    \n        }, 500);\n    }\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n\n    onOkClick(): void {\n        this.data.settings.property = this.flexHead.getProperty();\n        this.options.type = this.gaugeType;\n        this.data.settings.property.options = this.options;\n    }\n\n    onEditPermission() {\n\t\tlet permission = this.property.permission;\n\t\tlet dialogRef = this.dialog.open(DialogGaugePermission, {\n\t\t\tposition: { top: '60px' },\n\t\t\tdata: { permission: permission }\n\t\t});\n\n\t\tdialogRef.afterClosed().subscribe(result => {\n\t\t\tif (result) {\n\t\t\t\tthis.property.permission = result.permission;\n\t\t\t}\n\t\t});\n\t}\n\n    ngOnChanges(changes: SimpleChanges) {\n    }\n\n    onGaugeChange(type: GaugeType) {\n        if (type === GaugeType.Donut) {\n            this.gaugeType = GaugeType.Donut;\n            this.initOptionsToConfig(this.optionsDonut);\n            this.initDonut();\n        } else if (type === GaugeType.Zones) {\n            this.gaugeType = GaugeType.Zones;\n            this.initOptionsToConfig(this.optionsZones);\n            this.initZones();\n        } else {\n            this.gaugeType = GaugeType.Gauge;\n            this.initOptionsToConfig(this.optionsGauge);\n            this.initGauge();\n        }\n        this.cdRef.detectChanges();\n    }\n\n    onChangeValue(value) {\n        this.ngauge.setValue(value);\n    }\n\n    onChangeOptions(opt, value) {\n        this.optcfg[opt] = value;\n        this.configToOptions(this.optcfg[opt], opt);\n        this.setGaugeOptions();\n    }\n\n    onChangeOptionsPointer(opt, value) {\n        this.options.pointer[opt] = value;\n        if (opt === 'pointerLength') {\n            this.options.pointer.length = value / 100;\n        } else if (opt === 'pointerStrokeWidth') {\n            this.options.pointer.strokeWidth = value / 1000;\n        }\n        this.setGaugeOptions();\n    }\n\n    onChangeOptionsTicks(opt, value) {\n        this.options.renderTicks[opt] = value;\n        if (opt === 'divLength') {\n            this.options.renderTicks.divLength = value / 100;\n        } else if (opt === 'divWidth') {\n            this.options.renderTicks.divWidth = value / 10;\n        } else if (opt === 'subLength') {\n            this.options.renderTicks.subLength = value / 100;\n        } else if (opt === 'subWidth') {\n            this.options.renderTicks.subWidth = value / 10;\n        }\n        this.setGaugeOptions();\n    }\n\n    onChangeTicks(event) {\n        this.options.ticksEnabled = event;\n        if (event) {\n            let opt = new GaugeOptions();\n            this.options.renderTicks = JSON.parse(JSON.stringify(opt.renderTicks));\n        } else {\n            this.options.renderTicks = {};\n        }\n        this.onGaugeChange(this.gaugeType);\n    }\n\n    onChangeOptionsLabels(opt: string, value: any) {\n        if (opt === 'labels') {\n            let labels = [];\n            if (value) {\n                let tks = value.split(';');\n                tks.forEach(tk => {\n                    let v = parseFloat(tk);\n                    if (!isNaN(v)) {\n                        labels.push(v);\n                    }                    \n                });\n            }\n            this.options.staticLabels = { labels: labels, font: this.options.staticFontSize + 'px Sans-serif', color: this.options.staticFontColor };\n            this.checkFontFamily();\n            this.onGaugeChange(this.gaugeType);\n        } else if (opt === 'fontSize') {\n            this.options.staticFontSize = value;\n            if (this.options.staticLabels) {\n                this.options.staticLabels.font = this.options.staticFontSize + 'px Sans-serif' ;\n                this.checkFontFamily();\n                this.setGaugeOptions();\n            }\n        } else if (opt === 'labelsColor') {\n            this.options.staticFontColor = value;\n            if (this.options.staticLabels) {\n                this.options.staticLabels.color = this.options.staticFontColor;\n                this.setGaugeOptions();\n            }\n        } else if (opt === 'fontFamily') {\n            this.options.fontFamily = value;\n            this.checkFontFamily();\n            this.setGaugeOptions();\n        }\n    }\n\n    onAddZone() {\n        if (!this.optcfg.staticZones) {\n            this.optcfg.staticZones = [];\n        }\n        if (this.optcfg.staticZones.length < 5) {\n            this.optcfg.staticZones.push({ min: null, max: null, strokeStyle: null});\n        }\n        this.options.staticZones = this.optcfg.staticZones;\n        this.onGaugeChange(this.gaugeType);\n    }\n\n    onRemoveZone(index) {\n        this.optcfg.staticZones.splice(index, 1);\n        if (this.optcfg.staticZones.length <= 0) {\n            delete this.optcfg.staticZones;\n            delete this.options.staticZones;\n        } else {\n            this.options.staticZones = this.optcfg.staticZones;\n        }\n        this.onGaugeChange(this.gaugeType);\n    }\n\n    \n    onChangeStaticZones() {\n        this.options.staticZones = this.optcfg.staticZones;\n        this.setGaugeOptions();\n    }\n\n    private checkFontFamily() {\n        if (this.options.staticLabels && this.options.fontFamily) {\n            this.options.staticLabels.font = this.options.staticFontSize + 'px ' + this.options.fontFamily;\n        }\n    }\n\n    private initGauge() {\n        this.setGaugeOptions();\n        this.options = this.optionsGauge;\n        this.ngauge.init(GaugeType.Gauge);\n    }\n\n    private initDonut() {\n        this.setGaugeOptions();\n        this.options = this.optionsDonut;\n        this.ngauge.init(GaugeType.Donut);\n    }\n\n    private initZones() {\n        this.setGaugeOptions();\n        this.options = this.optionsZones;\n        this.ngauge.init(GaugeType.Zones);\n    }\n\n    private setGaugeOptions() {\n        if (this.gaugeType === GaugeType.Donut) {\n            this.ngauge.setOptions(this.optionsDonut);\n        } else if (this.gaugeType === GaugeType.Zones) {\n            this.ngauge.setOptions(this.optionsZones);\n        } else {\n            this.ngauge.setOptions(this.optionsGauge);\n        }\n    }\n\n    private initOptionsToConfig(options: GaugeOptions) {\n        this.optcfg = JSON.parse(JSON.stringify(options));\n        this.optcfg.angle *= 100;\n        this.optcfg.lineWidth *= 100;\n        this.optcfg.radiusScale *= 100;\n        this.optcfg.pointer.length *= 100;\n        this.optcfg.pointer.strokeWidth *= 1000;\n        if (this.optcfg.renderTicks) {\n            if (this.optcfg.renderTicks.divLength) {\n                this.optcfg.renderTicks.divLength *= 100;\n            }\n            if (this.optcfg.renderTicks.divWidth) {\n                this.optcfg.renderTicks.divWidth *= 10;\n            }\n            if (this.optcfg.renderTicks.subLength) {\n                this.optcfg.renderTicks.subLength *= 100;\n            }\n            if (this.optcfg.renderTicks.subWidth) {\n                this.optcfg.renderTicks.subWidth *= 10;\n            }\n        }\n        this.optcfg.staticLabelsText = '';\n        if (this.optcfg.staticLabels && this.optcfg.staticLabels.labels.length) {\n            this.optcfg.staticLabels.labels.forEach(lb => {\n                if (this.optcfg.staticLabelsText) {\n                    this.optcfg.staticLabelsText += ';';\n                }\n                this.optcfg.staticLabelsText += lb;\n            });\n        }\n    }\n\n    private configToOptions(value, opt) {\n        if (opt === 'angle' || opt === 'lineWidth' || opt === 'radiusScale') {\n            value /= 100;\n        }\n        this.options[opt] = value;\n    }\n\n    private getDefaultOptions(type: GaugeType) {\n        if (type === GaugeType.Zones) {\n            var opts = new GaugeOptions();\n            opts.angle = -0.25;\n            opts.lineWidth = 0.2;\n            opts.radiusScale = 0.9;\n            opts.pointer.length = 0.6;\n            opts.pointer.strokeWidth = 0.05;\n            return opts;\n        } else if (type === GaugeType.Donut) {\n            var optsd = new GaugeOptions();\n            optsd.angle = 0.3;\n            optsd.lineWidth = 0.1;\n            optsd.radiusScale = 0.8;\n            optsd.renderTicks.divisions = 0;\n            optsd.renderTicks.divWidth = 0;\n            optsd.renderTicks.divLength = 0;\n            optsd.renderTicks.subDivisions = 0;\n            optsd.renderTicks.subWidth = 0;\n            optsd.renderTicks.subLength = 0;\n            delete optsd.staticLabels;\n            delete optsd.staticZones;\n            optsd.ticksEnabled = false;\n            return optsd;\n        } else {\n            var optsa: any = new GaugeOptions();\n            delete optsa.staticLabels;\n            delete optsa.staticZones;\n            optsa.ticksEnabled = false;\n            optsa.renderTicks = {};\n            optsa.staticFontSize = 0;\n            optsa.staticLabelsText = '';\n            return optsa;\n        }\n    }\n}\n\n","module.exports = \"\"","module.exports = \"\"","import { Component, OnInit, ViewContainerRef, ComponentFactoryResolver } from '@angular/core';\nimport { GaugeBaseComponent } from '../../gauge-base/gauge-base.component';\nimport { GaugeSettings, Variable, GaugeStatus } from '../../../_models/hmi';\nimport { Utils } from '../../../_helpers/utils';\nimport { GaugeDialogType } from '../../gauge-property/gauge-property.component';\n\nimport { NgxGaugeComponent } from '../../../gui-helpers/ngx-gauge/ngx-gauge.component';\n\n@Component({\n    selector: 'app-html-bag',\n    templateUrl: './html-bag.component.html',\n    styleUrls: ['./html-bag.component.css']\n})\nexport class HtmlBagComponent extends GaugeBaseComponent implements OnInit {\n    static TypeTag = \"svg-ext-html_bag\";\n    static LabelTag = \"HtmlBag\";\n    static prefixD = \"D-BAG_\";\n\n    constructor(private resolver: ComponentFactoryResolver) {\n        super();\n    }\n\n    ngOnInit() { }\n\n    static getSignals(pro: any) {\n        let res: string[] = [];\n        if (pro.variableId) {\n            res.push(pro.variableId);\n        }\n        return res;\n    }\n\n    static getDialogType(): GaugeDialogType {\n        return GaugeDialogType.Gauge;\n    }\n\n    static processValue(ga: GaugeSettings, svgele: any, sig: Variable, gaugeStatus: GaugeStatus, gauge?: NgxGaugeComponent) {\n        try {\n            gauge.setValue(sig.value);\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n    static initElement(gab: GaugeSettings, resolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, isview: boolean) {\n        let ele = document.getElementById(gab.id);\n        if (ele) {\n            let htmlBag = Utils.searchTreeStartWith(ele, this.prefixD);\n            if (htmlBag) {\n                const factory = resolver.resolveComponentFactory(NgxGaugeComponent);\n                const componentRef = viewContainerRef.createComponent(factory);\n                htmlBag.innerHTML = '';\n\n                componentRef.changeDetectorRef.detectChanges();\n                const loaderComponentElement = componentRef.location.nativeElement;\n                htmlBag.appendChild(loaderComponentElement);\n                componentRef.instance.resize(htmlBag.clientHeight, htmlBag.clientWidth);\n                if (gab.property && gab.property.options) {\n                    componentRef.instance.setOptions(gab.property.options);\n                    componentRef.instance.init(gab.property.options.type);\n                }\n                return componentRef.instance;\n            }\n        }\n    }\n\n    static resize(gab: GaugeSettings, resolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, options?: any) {\n        let ele = document.getElementById(gab.id);\n        if (ele) {\n            let htmlBag = Utils.searchTreeStartWith(ele, this.prefixD);\n            if (htmlBag) {        \n                const factory = resolver.resolveComponentFactory(NgxGaugeComponent);\n                const componentRef = viewContainerRef.createComponent(factory);\n                htmlBag.innerHTML = '';\n\n                componentRef.changeDetectorRef.detectChanges();\n                const loaderComponentElement = componentRef.location.nativeElement;\n                htmlBag.appendChild(loaderComponentElement);\n                componentRef.instance.resize(htmlBag.clientHeight, htmlBag.clientWidth);\n                if (options) {\n                    componentRef.instance.setOptions(options);\n                    componentRef.instance.init(options.type);\n                }\n                return componentRef.instance;\n            }\n        }\n    }\n\n    static detectChange(gab: GaugeSettings, res: any, ref: any) {\n        let options;\n        if (gab.property && gab.property.options) {\n            options = gab.property.options;\n        }\n        return HtmlBagComponent.resize(gab, res, ref, options);\n    }\n}\n","module.exports = \"\"","module.exports = \"\"","import { Component, Input, OnInit } from '@angular/core';\nimport { GaugeBaseComponent } from '../../gauge-base/gauge-base.component'\nimport { GaugeAction, GaugeSettings, GaugeStatus, Variable, GaugeActionsType } from '../../../_models/hmi';\nimport { Utils } from '../../../_helpers/utils';\nimport { GaugeDialogType } from '../../gauge-property/gauge-property.component';\n\ndeclare var SVG: any;\n\n@Component({\n    selector: 'html-button',\n    templateUrl: './html-button.component.html',\n    styleUrls: ['./html-button.component.css']\n})\nexport class HtmlButtonComponent extends GaugeBaseComponent implements OnInit {\n\n    @Input() data: any;\n\n    static TypeTag = 'svg-ext-html_button';\n    static LabelTag = 'HtmlButton';\n    static prefixB = 'B-HXB_';\n    static prefixRect = 'svg_';\n\n    static actionsType = { hide: GaugeActionsType.hide, show: GaugeActionsType.show, blink: GaugeActionsType.blink };\n    // static actionBlink = Object.keys(GaugeActionsType).find(key => GaugeActionsType[key] === GaugeActionsType.blink);\n\n    constructor() {\n        super();\n    }\n\n    ngOnInit() {\n    }\n\n    static getSignals(pro: any) {\n        let res: string[] = [];\n        if (pro.variableId) {\n            res.push(pro.variableId);\n        }\n        if (pro.actions && pro.actions.length) {\n            pro.actions.forEach(act => {\n                res.push(act.variableId);\n            });\n        }\n        return res;\n    }\n\n    static getDialogType(): GaugeDialogType {\n        return GaugeDialogType.Range;\n    }\n\n    static getActions() {\n        return this.actionsType;\n    }\n\n    static initElement(gab: GaugeSettings) {\n        let ele = document.getElementById(gab.id);\n        if (ele && gab.property) {\n            let htmlButton = Utils.searchTreeStartWith(ele, this.prefixB);\n            if (htmlButton) {\n                htmlButton.innerHTML = (gab.name) ? gab.name : '<span>&nbsp;</span>';\n            }\n        }\n    }\n\n    static initElementColor(bkcolor, color, ele) {\n        let htmlButton = Utils.searchTreeStartWith(ele, this.prefixB);\n        if (htmlButton) {\n            ele.setAttribute('fill', 'rgba(0, 0, 0, 0)');\n            ele.setAttribute('stroke', 'rgba(0, 0, 0, 0)');\n            for (let i = 0; i < ele.children.length; i++) {\n                ele.children[i].removeAttribute('fill');\n                ele.children[i].removeAttribute('stroke');\n            }\n            if (bkcolor) {\n                htmlButton.style.backgroundColor = bkcolor;\n            }\n            if (color) {\n                htmlButton.style.color = color;\n            }\n        }\n    }\n\n    static processValue(ga: GaugeSettings, svgele: any, sig: Variable, gaugeStatus: GaugeStatus) {\n        try {\n            if (svgele.node && svgele.node.children && svgele.node.children.length >= 1) {\n                let button = Utils.searchTreeStartWith(svgele.node, this.prefixB);\n                let clr = '';\n                let val = parseFloat(sig.value);\n                if (Number.isNaN(val)) {\n                    // maybe boolean\n                    val = Number(sig.value);\n                }\n                if (ga.property) {\n                    if (ga.property.ranges) {\n                        for (let idx = 0; idx < ga.property.ranges.length; idx++) {\n                            if (ga.property.ranges[idx].min <= val && ga.property.ranges[idx].max >= val) {\n                                clr = ga.property.ranges[idx].color;\n                            }\n                        }\n                        if (clr) {\n                            button.style.backgroundColor = clr;\n                        }\n                    }\n                    // check actions\n                    if (ga.property.actions) {\n                        ga.property.actions.forEach(act => {\n                            if (act.variableId === sig.id) {\n                                HtmlButtonComponent.processAction(act, svgele, button, val, gaugeStatus);\n                            }\n                        });\n                    }\n                }\n            }\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n    static getFillColor(ele) {\n        if (ele.children && ele.children[0]) {\n            let htmlButton = Utils.searchTreeStartWith(ele, this.prefixB);\n            if (htmlButton) {\n                let result = htmlButton.style['background-color'];\n                if (!result) {\n                    result = htmlButton.getAttribute('fill');\n                }\n                if (result) {\n                    return result;\n                }\n            }\n        }\n        return ele.getAttribute('fill');\n    }\n\n    static getStrokeColor(ele) {\n        if (ele.children && ele.children[0]) {\n            let htmlButton = Utils.searchTreeStartWith(ele, this.prefixB);\n            if (htmlButton) {\n                let result = htmlButton.style['color'];\n                if (!result) {\n                    result = htmlButton.getAttribute('stroke');\n                }\n                if (result) {\n                    return result;\n                }\n            }\n        }\n        return ele.getAttribute('stroke');\n    }\n\n    static processAction(act: GaugeAction, svgele: any, button: any, value: any, gaugeStatus: GaugeStatus) {\n        if (this.actionsType[act.type] === this.actionsType.hide) {\n            if (act.range.min <= value && act.range.max >= value) {\n                let element = SVG.adopt(svgele.node);\n                this.runActionHide(element, act.type, gaugeStatus);\n            }\n        } else if (this.actionsType[act.type] === this.actionsType.show) {\n            if (act.range.min <= value && act.range.max >= value) {\n                let element = SVG.adopt(svgele.node);\n                this.runActionShow(element, act.type, gaugeStatus);\n            }\n        } else if (this.actionsType[act.type] === this.actionsType.blink) {\n            let inRange = (act.range.min <= value && act.range.max >= value);\n            this.checkActionBlink(button, act.type, gaugeStatus, inRange, act.options, true);\n        }\n    }\n}\n","module.exports = \".mychart-graph {\\n    display: block;\\n    margin: 0 auto;\\n    margin-top: 30px;\\n    overflow: hidden;\\n    width: 360px;\\n}\\n\\n.toolbox {\\n    padding-top: 25px;\\n    display: block;\\n    overflow: hidden;\\n}\\n\\n.field-row {\\n    display: block;\\n    margin-bottom: 5px;\\n}\\n\\n.slider-field span {\\n    padding-left: 2px;\\n    text-overflow: clip;\\n    max-width: 125px;\\n    white-space: nowrap;\\n    overflow: hidden;\\n}\\n\\n::ng-deep .slider-field mat-slider {\\n    background-color: var(--formSliderBackground);\\n    height: 30px;\\n    width: 100px;\\n}\\n\\n::ng-deep .mat-tab-label {\\n    height: 34px !important;\\n}\\n\"","module.exports = \"<div style=\\\"width: 680px;position: relative;\\\">\\n    <h1 mat-dialog-title style=\\\"display:inline-block;cursor:move;\\\" mat-dialog-draggable>{{'editor.controls-chart-settings' | translate}}</h1>\\n    <mat-icon (click)=\\\"onNoClick()\\\" style=\\\"float:right;margin-right:-10px;margin-top:-10px;cursor:pointer;color:gray;\\\">clear</mat-icon>\\n    <mat-tab-group style=\\\"width: 100%;height: 500px\\\" (selectedIndexChange)=\\\"onTabChanged()\\\">\\n        <mat-tab label=\\\"{{'chart.property-props' | translate}}\\\">\\n            <div style=\\\"max-height: 540px; overflow-y: auto; overflow-x: hidden; padding-top: 15px;\\\">\\n                <div style=\\\"display: block;\\\">\\n                    <div class=\\\"my-form-field\\\" style=\\\"width: 320px;\\\">\\n                        <span>{{'chart.property-chart' | translate}}</span>\\n                        <mat-select [formControl]=\\\"chartCtrl\\\">\\n                            <mat-select-search [formControl]=\\\"chartFilterCtrl\\\"></mat-select-search>\\n                            <mat-option *ngFor=\\\"let chart of filteredChart | async\\\" [value]=\\\"chart\\\">\\n                                {{ chart.name }}\\n                            </mat-option>\\n                        </mat-select>\\n                    </div>\\n                    <div class=\\\"my-form-field\\\" style=\\\"width: 140px;margin-left: 20px;\\\">\\n                        <span>{{'chart.property-chart-type' | translate}}</span>\\n                        <mat-select [(value)]=\\\"chartViewValue\\\">\\n                            <mat-option *ngFor=\\\"let ev of chartViewType | enumToArray\\\" [value]=\\\"ev.key\\\">\\n                                {{ ev.value }}\\n                            </mat-option>\\n                        </mat-select>\\n                    </div>\\n                    <div *ngIf=\\\"chartViewValue === chartViewRealtime\\\" class=\\\"my-form-field\\\" style=\\\"margin-left: 20px;\\\">\\n                        <span>{{'chart.property-realtime-max' | translate}}</span>\\n                        <input numberOnly [(ngModel)]=\\\"options.realtime\\\" type=\\\"text\\\" style=\\\"width: 80px\\\">\\n                    </div>\\n                </div>\\n                <div style=\\\"display: block; width:100%\\\">\\n                    <mat-list class=\\\"list\\\" style=\\\"padding-left: 8px;padding-right: 8px;\\\">\\n                        <div style=\\\"height: calc(100% - 36px); overflow-y: auto\\\" *ngIf=\\\"chartCtrl.value\\\">\\n                            <mat-list-item *ngFor=\\\"let tag of chartCtrl.value.lines\\\" style=\\\"font-size:14px;height: 27px;\\\">\\n                                <div style=\\\"width: 50%;text-overflow: ellipsis;display: block; overflow: hidden; white-space: nowrap;\\\">\\n                                    <span matTooltip=\\\"{{tag.name}}\\\">{{tag.name}}</span>\\n                                </div>\\n                                <div style=\\\"width: 40%;text-overflow: ellipsis;display: block; overflow: hidden; white-space: nowrap;\\\">\\n                                    <span matTooltip=\\\"{{tag.device}}\\\">{{tag.device}}</span>\\n                                </div>\\n                                <div [style.background-color]=\\\"tag.color\\\" style=\\\"height:20px; width:30px\\\">\\n                                </div>\\n                            </mat-list-item>\\n                        </div>\\n                    </mat-list>\\n                </div>\\n            </div>\\n        </mat-tab>\\n        <mat-tab label=\\\"{{'chart.property-layout' | translate}}\\\">\\n            <chart-uplot #chartuplot [options]=\\\"options\\\" class=\\\"mychart-graph\\\"></chart-uplot>\\n            <div class=\\\"toolbox\\\">\\n                <div class=\\\"field-row\\\">\\n                    <div class=\\\"my-form-field\\\" style=\\\"width:160px\\\">\\n                        <span>{{'chart.property-font' | translate}}</span>\\n                        <mat-select [(value)]=\\\"options.fontFamily\\\" (selectionChange)=\\\"onChangeOptions('fontFamily',  $event.value)\\\">\\n                            <mat-option *ngFor=\\\"let font of fonts\\\" [style.fontFamily]=\\\"font\\\" [value]=\\\"font\\\">\\n                                {{font}}\\n                            </mat-option>\\n                        </mat-select>\\n                    </div>\\n                    <div class=\\\"my-form-field slider-field color-field\\\" style=\\\"padding-left: 15px;\\\">\\n                        <span>{{'chart.property-color.text' | translate}}</span>\\n                        <input [(colorPicker)]=\\\"options.axisLabelColor\\\" [cpAlphaChannel]=\\\"'always'\\\" class=\\\"input-color\\\" [style.background]=\\\"options.axisLabelColor\\\"\\n                            [cpPresetColors]=\\\"defaultColor\\\" [cpOKButton]=\\\"true\\\" [cpCancelButton]=\\\"true\\\" [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\"\\n                            [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\" style=\\\"width: 88px\\\"\\n                            [cpPosition]=\\\"'top'\\\" (colorPickerChange)=\\\"onChangeOptions('axisLabelColor', $event)\\\" />\\n                    </div>\\n                    <div class=\\\"my-form-field slider-field color-field\\\" style=\\\"padding-left: 30px;\\\">\\n                        <span>{{'chart.property-color.background' | translate}}</span>\\n                        <input [(colorPicker)]=\\\"options.colorBackground\\\" [cpAlphaChannel]=\\\"'always'\\\" class=\\\"input-color\\\" [style.background]=\\\"options.colorBackground\\\"\\n                            [cpPresetColors]=\\\"defaultColor\\\" [cpOKButton]=\\\"true\\\" [cpCancelButton]=\\\"true\\\" [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\"\\n                            [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\" style=\\\"width: 88px\\\"\\n                            [cpPosition]=\\\"'top'\\\" (colorPickerChange)=\\\"onChangeOptions('colorBackground', $event)\\\" />\\n                    </div>\\n                    <div class=\\\"my-form-field\\\" style=\\\"width:120px;padding-left: 30px\\\">\\n                        <span>{{'chart.property-date.format' | translate}}</span>\\n                        <mat-select [(value)]=\\\"options.dateFormat\\\" (selectionChange)=\\\"onChangeOptions('date',  $event.value)\\\">\\n                            <mat-option *ngFor=\\\"let ev of dateFormat | enumToArray\\\" [value]=\\\"ev.key\\\">\\n                                {{ ev.value }}\\n                            </mat-option>\\n                        </mat-select>\\n                    </div>\\n                    <div class=\\\"my-form-field\\\" style=\\\"width:120px;padding-left: 15px\\\">\\n                        <span>{{'chart.property-time.format' | translate}}</span>\\n                        <mat-select [(value)]=\\\"options.timeFormat\\\" (selectionChange)=\\\"onChangeOptions('time',  $event.value)\\\">\\n                            <mat-option *ngFor=\\\"let ev of timeFormat | enumToArray\\\" [value]=\\\"ev.key\\\">\\n                                {{ ev.value }}\\n                            </mat-option>\\n                        </mat-select>\\n                    </div>\\n                    <!-- <div class=\\\"my-form-field slider-field color-field\\\" style=\\\"padding-left: 30px;\\\">\\n                        <span>{{'chart.property-color.legend' | translate}}</span>\\n                        <input [(colorPicker)]=\\\"options.legendBackground\\\" [cpAlphaChannel]=\\\"'always'\\\" class=\\\"input-color\\\" [style.background]=\\\"options.legendBackground\\\"\\n                            [cpPresetColors]=\\\"defaultColor\\\" [cpOKButton]=\\\"true\\\" [cpCancelButton]=\\\"true\\\" [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\"\\n                            [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\" style=\\\"padding: 8px 0 0 0; width: 88px\\\"\\n                            [cpPosition]=\\\"'top'\\\" (colorPickerChange)=\\\"onChangeOptions('legendBackground', $event)\\\" />\\n                    </div>\\n                    <div class=\\\"my-form-field slider-field\\\" style=\\\"padding-left: 8px\\\">\\n                        <span>{{'chart.property-font.legendsize' | translate}}</span>\\n                        <mat-slider [(ngModel)]=\\\"options.legendFontSize\\\" style=\\\"display:inline-block;width:80px\\\" [min]=\\\"0\\\" [max]=\\\"16\\\" [step]=\\\"1\\\" [thumbLabel]=\\\"true\\\"\\n                            (input)=\\\"onChangeOptions('legendFontSize', $event.value)\\\">\\n                        </mat-slider>\\n                    </div> -->\\n                </div>\\n                <div class=\\\"field-row\\\" style=\\\"padding-top: 5px;\\\">\\n                    <div class=\\\"my-form-field slider-field\\\">\\n                        <span>{{'chart.property-font.titlesize' | translate}}</span>\\n                        <mat-slider [(ngModel)]=\\\"options.titleHeight\\\" style=\\\"display:inline-block;\\\" [min]=\\\"0\\\" [max]=\\\"36\\\" [step]=\\\"1\\\" [thumbLabel]=\\\"true\\\"\\n                            (input)=\\\"onChangeOptions('titleHeight', $event.value)\\\">\\n                        </mat-slider>\\n                    </div>\\n                    <div class=\\\"my-form-field slider-field\\\" style=\\\"padding-left: 8px\\\">\\n                        <span>{{'chart.property-font.axissize' | translate}}</span>\\n                        <mat-slider [(ngModel)]=\\\"options.axisLabelFontSize\\\" style=\\\"display:inline-block;\\\" [min]=\\\"0\\\" [max]=\\\"15\\\" [step]=\\\"1\\\" [thumbLabel]=\\\"true\\\"\\n                            (input)=\\\"onChangeOptions('axisLabelFontSize', $event.value)\\\">\\n                        </mat-slider>\\n                    </div>\\n                    <div class=\\\"my-form-field slider-field color-field\\\" style=\\\"padding-left: 36px\\\">\\n                        <span>{{'chart.property-color.grid' | translate}}</span>\\n                        <input [(colorPicker)]=\\\"options.gridLineColor\\\" [cpAlphaChannel]=\\\"'always'\\\" class=\\\"input-color\\\" [style.background]=\\\"options.gridLineColor\\\"\\n                            [cpPresetColors]=\\\"defaultColor\\\" [cpOKButton]=\\\"true\\\" [cpCancelButton]=\\\"true\\\" [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\"\\n                            [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\" style=\\\"width: 88px\\\"\\n                            [cpPosition]=\\\"'top'\\\" (colorPickerChange)=\\\"onChangeOptions('gridLineColor', $event)\\\" />\\n                    </div>\\n                    <div class=\\\"my-form-field\\\" style=\\\"width:120px;padding-left: 30px\\\">\\n                        <span>{{'chart.property-legend.mode' | translate}}</span>\\n                        <mat-select [(value)]=\\\"options.legendMode\\\" (selectionChange)=\\\"onChangeOptions('legend',  $event.value)\\\">\\n                            <mat-option *ngFor=\\\"let ev of legendModes | enumToArray\\\" [value]=\\\"ev.key\\\">\\n                                {{ ev.value }}\\n                            </mat-option>\\n                        </mat-select>\\n                    </div>\\n                    <!-- <div class=\\\"my-form-field slider-field\\\" style=\\\"padding-left: 12px\\\">\\n                        <span>{{'chart.property-scala.auto' | translate}}</span>\\n                        <mat-slide-toggle color=\\\"primary\\\" [(ngModel)]=\\\"autoScala.enabled\\\" (change)=\\\"onChangeOptions('autoscala', $event.value)\\\"></mat-slide-toggle>\\n                    </div>\\n                    <div class=\\\"my-form-field slider-field\\\" style=\\\"padding-left: 12px\\\">\\n                        <span>{{'chart.property-scala.min' | translate}}</span>\\n                        <input numberOnly [disabled]=\\\"autoScala.enabled\\\" [(ngModel)]=\\\"autoScala.min\\\" (change)=\\\"onChangeOptions('minscala', $event.value)\\\" style=\\\"width: 50px;text-align: center;display:inline-block;\\\" type=\\\"text\\\">\\n                    </div>\\n                    <div class=\\\"my-form-field slider-field\\\" style=\\\"padding-left: 12px\\\">\\n                        <span>{{'chart.property-scala.max' | translate}}</span>\\n                        <input numberOnly [disabled]=\\\"autoScala.enabled\\\" [(ngModel)]=\\\"autoScala.max\\\" (change)=\\\"onChangeOptions('maxscala', $event.value)\\\" style=\\\"width: 50px;text-align: center;display:inline-block;\\\" type=\\\"text\\\">\\n                    </div> -->\\n                </div>\\n            </div>\\n        </mat-tab>\\n    </mat-tab-group>\\n    <div mat-dialog-actions style=\\\"float:right; padding-bottom: 20px;\\\">\\n        <button mat-raised-button (click)=\\\"onNoClick()\\\">{{'dlg.cancel' | translate}}</button>\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onOkClick()\\\" [mat-dialog-close]=\\\"data\\\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\\n    </div>\\n</div>\"","import { Component, Inject, OnInit, AfterViewInit, ElementRef, ViewChild } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { ReplaySubject } from 'rxjs';\nimport { FormControl } from '@angular/forms';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { GaugeChartProperty, DateFormatType, TimeFormatType } from '../../../../_models/hmi';\nimport { Chart, ChartViewType, ChartLegendMode } from '../../../../_models/chart';\nimport { ChartOptions, ChartUplotComponent } from '../chart-uplot/chart-uplot.component';\nimport { Define } from '../../../../_helpers/define';\nimport { Utils } from '../../../../_helpers/utils';\n\n\n@Component({\n    selector: 'app-chart-property',\n    templateUrl: './chart-property.component.html',\n    styleUrls: ['./chart-property.component.css']\n})\nexport class ChartPropertyComponent implements OnInit, AfterViewInit {\n\n    chartViewType = ChartViewType;\n    chartViewRealtime = Utils.getEnumKey(ChartViewType, ChartViewType.realtime1);\n    dateFormat = DateFormatType;\n    timeFormat = TimeFormatType;\n    legendModes = ChartLegendMode;\n    fonts = Define.fonts;\n    defaultColor = Utils.defaultColor;\n    chartViewValue: any;\n    public chartCtrl: FormControl = new FormControl();\n    public chartFilterCtrl: FormControl = new FormControl();\n\n    @ViewChild('chartuplot') public chartuplot: ChartUplotComponent;\n\n    options: ChartOptions = ChartUplotComponent.DefaultOptions();\n\n    autoScala = { enabled: true, min: 0, max: 10 };\n\n    public filteredChart: ReplaySubject<Chart[]> = new ReplaySubject<Chart[]>(1);\n\n    private _onDestroy = new Subject<void>();\n\n    constructor(\n        public dialogRef: MatDialogRef<ChartPropertyComponent>,\n        private translateService: TranslateService,\n        @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n    ngOnInit() {\n        Object.keys(this.chartViewType).forEach(key => {\n            this.translateService.get(this.chartViewType[key]).subscribe((txt: string) => { this.chartViewType[key] = txt });\n        });\n        Object.keys(this.legendModes).forEach(key => {\n            this.translateService.get(this.legendModes[key]).subscribe((txt: string) => { this.legendModes[key] = txt });\n        });\n        this.loadChart();\n        let selected = null;\n        if (this.data.settings.property) {\n            this.chartViewValue = this.data.settings.property.type;\n            this.data.charts.forEach(chart => {\n                if (chart.id === this.data.settings.property.id) {\n                    selected = chart;\n                }\n            });\n            if (this.data.settings.property.options) {\n                this.options = Object.assign(this.options, this.data.settings.property.options);\n            }\n        }\n        if (selected) {\n            this.chartCtrl.setValue(selected);\n        }\n    }\n\n    ngAfterViewInit() {\n        this.chartuplot.withToolbar = false;\n        this.chartuplot.setOptions(this.options);\n    }\n\n    ngOnDestroy() {\n        this._onDestroy.next();\n        this._onDestroy.complete();\n    }\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n\n    onOkClick(): void {\n        this.data.settings.property = <GaugeChartProperty>{ id: null, type: this.chartViewValue, options: this.options };\n        if (this.chartCtrl.value) {\n            this.data.settings.name = this.chartCtrl.value.name;\n            this.data.settings.property.id = this.chartCtrl.value.id;\n        } else {\n            this.data.settings.name = '';\n        }\n    }\n\n    onChangeOptions(option, value) {\n        if (option === 'titleHeight') {\n            this.options.titleHeight = value;\n        } else if (option === 'axisLabelFontSize') {\n            this.options.axisLabelFontSize = value;\n        } else if (option === 'axisLabelColor') {\n            this.options.axisLineColor = value;\n            this.options.axisLabelColor = value;\n        } else if (option === 'fontFamily') {\n            this.options.fontFamily = value;\n        } else if (option === 'colorBackground') {\n            this.options.colorBackground = value;\n        } else if (option === 'gridLineColor') {\n            this.options.gridLineColor = value;\n        } else if (option === 'legend') {\n            this.options.legendMode = value;\n        } else if (option === 'date') {\n            this.options.dateFormat = value;\n        } else if (option === 'time') {\n            this.options.timeFormat = value;\n        }\n        this.chartuplot.setOptions(this.options);\n    }\n\n    onTabChanged() {\n    }\n\n    private loadChart(toset?: string) {\n        // load the initial chart list\n        this.filteredChart.next(this.data.charts.slice());\n        // listen for search field value changes\n        this.chartFilterCtrl.valueChanges\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(() => {\n                this.filterChart();\n            });\n        if (toset) {\n            let idx = -1;\n            this.data.charts.every(function (value, index, _arr) {\n                if (value.id === toset) {\n                    idx = index;\n                    return false;\n                }\n                return true;\n            });\n            if (idx >= 0) {\n                this.chartCtrl.setValue(this.data.charts[idx]);\n            }\n        }\n    }\n\n    private filterChart() {\n        if (!this.data.charts) {\n            return;\n        }\n        // get the search keyword\n        let search = this.chartFilterCtrl.value;\n        if (!search) {\n            this.filteredChart.next(this.data.charts.slice());\n            return;\n        } else {\n            search = search.toLowerCase();\n        }\n        // filter the variable\n        this.filteredChart.next(\n            this.data.charts.filter(chart => chart.name.toLowerCase().indexOf(search) > -1)\n        );\n    }\n}\n","module.exports = \".mychart-panel {\\n    display: block;\\n    margin: 0 auto;\\n    height: inherit;\\n    width: inherit;\\n}\\n\\n.mychart-graph {\\n    display: block;\\n    margin: 0 auto;\\n}\\n\\n.mychar-toolbar {\\n    display: block;\\n    height: 34px !important;\\n    width: 100% !important;\\n    background-color: transparent;\\n}\"","module.exports = \"<div class=\\\"mychart-panel\\\" #chartPanel>\\n    <div class=\\\"mychar-toolbar\\\" *ngIf=\\\"withToolbar\\\">\\n        <div style=\\\"display: block; padding-right: 5px;text-align: center;\\\" class=\\\"my-form-field\\\">\\n            <button *ngIf=\\\"isEditor\\\" style=\\\"margin-left:5px; border: 0px; height: 28px; width: 200px; cursor: pointer; vertical-align: middle;\\\">\\n            </button>\\n            <mat-select *ngIf=\\\"!isEditor\\\" [(value)]=\\\"rangeTypeValue\\\" style=\\\"width: 200px\\\" (selectionChange)=\\\"onRangeChanged($event.source.value)\\\">\\n                <mat-option *ngFor=\\\"let ev of rangeType | enumToArray\\\" [value]=\\\"ev.key\\\">\\n                    {{ ev.value }}\\n                </mat-option>\\n            </mat-select>\\n            <button style=\\\"margin-left:5px; border: 0px; height: 28px; width: 40px; cursor: pointer; vertical-align: middle;\\\" (click)=\\\"onClick('B')\\\">\\n\\t\\t\\t\\t<mat-icon aria-label=\\\"<<\\\">skip_previous</mat-icon>\\n            </button>\\n            <button style=\\\"margin-left:5px; border: 0px; height: 28px; width: 40px; cursor: pointer; vertical-align: middle;\\\" (click)=\\\"onClick('F')\\\">\\n\\t\\t\\t\\t<mat-icon aria-label=\\\">>\\\">skip_next</mat-icon>\\n            </button>\\n        </div>\\n    </div>\\n    <ngx-uplot class=\\\"mychart-graph\\\" #nguplot></ngx-uplot>\\n    <!-- <div class=\\\"loader-holder\\\"> -->\\n        <!-- <div class=\\\"loader\\\"></div> -->\\n    <!-- </div> -->\\n</div>\"","import { Component, OnInit, AfterViewInit, OnDestroy, ViewChild, Input, Output, EventEmitter, ElementRef } from '@angular/core';\n\nimport { ChartLegendMode, ChartRangeType, ChartRangeConverter } from '../../../../_models/chart';\nimport { NgxUplotComponent, NgxOptions, NgxSeries } from '../../../../gui-helpers/ngx-uplot/ngx-uplot.component';\nimport { DaqQuery, DateFormatType, TimeFormatType } from '../../../../_models/hmi';\nimport { Utils } from '../../../../_helpers/utils';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n    selector: 'chart-uplot',\n    templateUrl: './chart-uplot.component.html',\n    styleUrls: ['./chart-uplot.component.css']\n})\nexport class ChartUplotComponent implements OnInit, AfterViewInit, OnDestroy {\n\n    @ViewChild('chartPanel') public chartPanel: ElementRef;\n    @ViewChild('nguplot') public nguplot: NgxUplotComponent;\n    \n    @Input() options: ChartOptions;\n    @Output() onTimeRange: EventEmitter<DaqQuery> = new EventEmitter();\n    \n    public id: string;\n    public withToolbar = false;\n    public isEditor = false;\n    rangeTypeValue = Utils.getEnumKey(ChartRangeType, ChartRangeType.last8h);\n    rangeType: ChartRangeType;\n    range = { from: Date.now(), to: Date.now() };\n    mapData = {};\n\n    constructor(private translateService: TranslateService) { \n    }\n\n    ngOnInit() {\n        if (!this.options) {\n            this.options = ChartUplotComponent.DefaultOptions();\n        }\n    }\n\n    ngAfterViewInit() {\n        this.translateService.get('chart.labels-serie').subscribe((txt: string) => { if (this.nguplot) this.nguplot.languageLabels.serie = txt });\n        this.translateService.get('chart.labels-time').subscribe((txt: string) => { if (this.nguplot) this.nguplot.languageLabels.time = txt });\n        this.translateService.get('chart.labels-title').subscribe((txt: string) => { if (this.nguplot) this.nguplot.languageLabels.title = txt });\n    }\n\n    ngOnDestroy() {\n        try {\n            delete this.chartPanel;\n            delete this.nguplot;\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    onClick(ev: string) {\n        if (this.isEditor) {\n            return;\n        }\n        let msg = new DaqQuery();\n        msg.gid = this.id;\n        msg.event = ev;\n        if (ev === 'B') {           // back\n            this.range.to = new Date(this.range.from).getTime();\n            this.range.from = new Date(this.range.from).setTime(new Date(this.range.from).getTime() - (ChartRangeConverter.ChartRangeToHours(<ChartRangeType>this.rangeTypeValue) * 60 * 60 * 1000));    \n        } else if (ev === 'F') {    // forward\n            this.range.from = new Date(this.range.to).getTime();\n            this.range.to = new Date(this.range.from).setTime(new Date(this.range.from).getTime() + (ChartRangeConverter.ChartRangeToHours(<ChartRangeType>this.rangeTypeValue) * 60 * 60 * 1000));    \n        }\n        msg.sids = Object.keys(this.mapData);\n        msg.from = this.range.from;\n        msg.to = this.range.to;        \n        this.onTimeRange.emit(msg);\n    }\n\n    onRangeChanged(ev) {\n        if (this.isEditor) {\n            return;\n        }\n        if (ev) {\n            this.range.from = Date.now();\n            this.range.to = Date.now();\n            this.range.from = new Date(this.range.from).setTime(new Date(this.range.from).getTime() - (ChartRangeConverter.ChartRangeToHours(ev) * 60 * 60 * 1000));\n\n            let msg = new DaqQuery();\n            msg.event = ev;\n            msg.gid = this.id;\n            msg.sids = Object.keys(this.mapData);\n            msg.from = this.range.from;\n            msg.to = this.range.to;\n            this.onTimeRange.emit(msg);\n        }\n    }\n\n    public resize(height?: number, width?: number) {\n        let chart = this.chartPanel.nativeElement;\n        if (!height && chart.offsetParent) {\n            height = chart.offsetParent.clientHeight;\n        }\n        if (!width && chart.offsetParent) {\n            width = chart.offsetParent.clientWidth;\n        }\n        if (height && width) {\n            this.options.panel.width = width;\n            this.options.width = width;\n            this.options.panel.height = height;\n            this.options.height = height;  \n            this.options.height -= 40;      // legend\n            if (this.withToolbar) {\n                this.options.height -= 34;  // toolbar\n            }\n            let size = Utils.getDomTextHeight(this.options.titleHeight, this.options.fontFamily);\n            this.options.height -= size;    // title\n\n            size = Utils.getDomTextHeight(this.options.axisLabelFontSize, this.options.fontFamily);\n            if (size < 10) size = 10;\n            this.options.height -= size;    // axis\n            this.nguplot.resize(this.options.height, this.options.width);\n        }\n    }\n\n    public init(options: ChartOptions = null) {\n        this.mapData = {};\n        if (options) {\n            this.options = options;\n        }\n        this.updateCanvasOptions(this.nguplot);\n        if (this.options.panel) {\n            this.resize(this.options.panel.height, this.options.panel.width);\n        }\n        this.nguplot.init(this.options);\n        this.updateDomOptions(this.nguplot);\n    }\n\n    public setRange(startRange) {\n        if (this.withToolbar) {\n            this.onRangeChanged(startRange);\n        }\n    }\n\n    public setOptions(options: ChartOptions, clear: boolean = false) {\n        this.options = { ...this.options, ...options };\n        if (clear) {\n            this.options = { ...this.options, ...<ChartOptions>{ series: [{}] } };\n        }\n        this.init(this.options);\n        this.redraw();\n    }\n\n    public addLine(id: string, name:string, color: string, label: string, yaxis: number) {\n        if (!this.mapData[id]) {\n            const linelabel = label || name;\n            let serie = <NgxSeries>{ label: linelabel, stroke: color, spanGaps: true };\n            if (yaxis > 1) {\n                serie.scale = yaxis.toString();\n            } else {\n                serie.scale = '1';\n            }\n            this.mapData[id] = { index: Object.keys(this.mapData).length + 1, \n                                 attribute: serie };\n            this.nguplot.addSerie(this.mapData[id].index, this.mapData[id].attribute);\n        }\n        if (this.isEditor) {\n            this.nguplot.setSample();\n        }\n    }\n\n    /**\n     * add value to a realtime chart\n     * @param id \n     * @param x \n     * @param y \n     */\n    public addValue(id: string, x, y) {\n        if (this.mapData[id]) {\n            this.nguplot.addValue(this.mapData[id].index, x, y, this.options.realtime * 60);\n        }\n    }\n\n    /**\n     * set values to a history chart\n     * the values is composed of a matrix of array, array of lines values[]<datetime, value> [line][pos]{dt, value}\n     * the have to be transform in uplot format. a matrix with array of datetime and arrays of values [datetime[dt], lineN[value]]\n     * @param values \n     */\n    public setValues(values) {\n        let result = [];\n        result.push([]);    // timestamp, index 0\n        let xmap = {};\n        for (var i = 0; i < values.length; i++) {\n            result.push([]);    // line\n            for (var x = 0; x < values[i].length; x++) {\n                let t = values[i][x].dt / 1e3;\n                if (!result[0][t]) {\n                    result[0].push(t);\n                    xmap[t] = {};\n                }\n                xmap[t][i] = values[i][x].value;\n            }\n        }\n        result[0].sort(function(a, b){return a-b});\n        for (var i = 0; i < result[0].length; i++) {\n            let t = result[0][i];\n            for (var x = 1; x < result.length; x++) {\n                if (xmap[t][x - 1] !== undefined) {\n                    result[x].push(xmap[t][x - 1]);\n                } else {\n                    result[x].push(null);\n                }\n            }\n        }\n        this.nguplot.setData(result);\n        this.nguplot.setXScala(this.range.from / 1e3, this.range.to / 1e3);\n    }\n\n    public redraw() {\n        this.nguplot.redraw();\n    }\n\n    public static DefaultOptions() {\n        return <ChartOptions>{ title: 'Title', fontFamily: 'Roboto-Regular', legendFontSize: 12, colorBackground: 'rgba(0,0,0,0)', legendBackground: 'rgba(0,0,0,0)', \n        titleHeight: 18, axisLabelFontSize: 12, labelsDivWidth: 0, axisLineColor: 'rgba(0,0,0,1)', axisLabelColor: 'rgba(0,0,0,1)',\n            legendMode: 'always', series: [], width: 360, height: 200, decimalsPrecision: 2, realtime: 60,\n            dateFormat: Utils.getEnumKey(DateFormatType, DateFormatType.MM_DD_YYYY),\n            timeFormat: Utils.getEnumKey(TimeFormatType, TimeFormatType.hh_mm_ss_AA)};\n    }\n\n    private updateCanvasOptions(ngup: NgxUplotComponent) {\n        if (!this.options.axes) { \n            this.options.axes = [{ label: 'Time', grid: { show: true, width: 1 / devicePixelRatio }, ticks: { } }];\n            this.options.axes.push({ grid: { show: true, width: 1 / devicePixelRatio }, ticks: { }, scale: '1'});\n            this.options.axes.push({ grid: { show: false, width: 1 / devicePixelRatio }, ticks: { }, side: 1, scale: '2' });\n            this.options.axes.push({ grid: { show: false, width: 1 / devicePixelRatio }, ticks: { }, side: 3, scale: '3' });\n            this.options.axes.push({ grid: { show: false, width: 1 / devicePixelRatio }, ticks: { }, side: 1, scale: '4' });\n        }\n        for (let i = 0; i < this.options.axes.length; i++) {\n            let font = '';\n            if (this.options.axisLabelFontSize) {\n                font = this.options.axisLabelFontSize + 'px';\n            }\n            if (this.options.fontFamily) font += ' ' + this.options.fontFamily;\n            this.options.axes[i].font = font;\n            this.options.axes[i].labelFont = font;\n            this.options.axes[i].ticks = { width: 1 / devicePixelRatio };\n            if (this.options.gridLineColor) {\n                this.options.axes[i].grid.stroke = this.options.gridLineColor;\n                this.options.axes[i].ticks.stroke = this.options.gridLineColor;\n            }\n            if (this.options.axisLabelColor) this.options.axes[i].stroke = this.options.axisLabelColor;\n        }\n\n        let always = Utils.getEnumKey(ChartLegendMode, ChartLegendMode.always);\n        let bottom = Utils.getEnumKey(ChartLegendMode, ChartLegendMode.bottom);\n        let follow = Utils.getEnumKey(ChartLegendMode, ChartLegendMode.follow);\n        this.options.legend = { show: (this.options.legendMode === always || this.options.legendMode === bottom), width: 1 };\n        this.options.tooltip = { show: (this.options.legendMode === always || this.options.legendMode === follow) };\n    }\n\n    private updateDomOptions(ngup: NgxUplotComponent) {\n        let ele = this.chartPanel.nativeElement.getElementsByClassName('u-title');\n        if (ele) {\n            let title = ele[0];\n            if (this.options.titleHeight) {\n                if (this.options.axisLabelColor) title.style.color = this.options.axisLabelColor;\n                if (this.options.titleHeight) title.style.fontSize = this.options.titleHeight + \"px\";\n                if (this.options.fontFamily) title.style.fontFamily = this.options.fontFamily;\n            } else {\n                title.style.display = 'none';\n            }\n        }\n        this.chartPanel.nativeElement.style.backgroundColor = this.options.colorBackground;\n    }\n}\n\nexport interface ChartOptions extends NgxOptions  {\n    /** chart panel size, with from toolbar to legend */\n    panel?: { height: number, width: number };\n    /** when true, null data values will not cause line breaks, Series.spanGaps */\n    connectSeparatedPoints?: boolean;\n\n    titleHeight?: number;\n    axisLabelFontSize?: number;\n    axisLabelWidth?: number;\n    labelsDivWidth?: number;\n    axisLineColor?: string;\n    axisLabelColor?: string;\n    gridLineColor?: string;\n\n    fontFamily?: string;\n    legendFontSize?: number;\n    colorBackground?: string;\n    legendBackground?: string;\n    legendMode?: string;\n    realtime?: number;\n}","module.exports = \"\"","module.exports = \"\"","import { Component, OnInit, ViewContainerRef, ComponentFactoryResolver } from '@angular/core';\nimport { GaugeBaseComponent } from '../../gauge-base/gauge-base.component';\nimport { GaugeSettings, Variable, GaugeStatus } from '../../../_models/hmi';\nimport { Utils } from '../../../_helpers/utils';\nimport { GaugeDialogType } from '../../gauge-property/gauge-property.component';\n\nimport { ChartUplotComponent, ChartOptions } from './chart-uplot/chart-uplot.component';\n\n@Component({\n    selector: \"html-chart\",\n    templateUrl: \"./html-chart.component.html\",\n    styleUrls: [\"./html-chart.component.css\"]\n})\nexport class HtmlChartComponent extends GaugeBaseComponent implements OnInit {\n    static TypeTag = \"svg-ext-html_chart\";\n    static LabelTag = \"HtmlChart\";\n    static prefixD = \"D-HXC_\";\n    \n    constructor(private resolver: ComponentFactoryResolver) {\n        super();\n    }\n\n    ngOnInit() { }\n\n    static getSignals(pro: any) {\n        return pro.variableIds;\n    }\n\n    static getDialogType(): GaugeDialogType {\n        return GaugeDialogType.Chart;\n    }\n\n    static processValue(ga: GaugeSettings, svgele: any, sig: Variable, gaugeStatus: GaugeStatus, gauge?: ChartUplotComponent) {\n        try {\n            gauge.addValue(sig.id, new Date().getTime() / 1000, sig.value);\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n    static initElement(gab: GaugeSettings, resolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, isview: boolean, chartRange: any) {\n        let ele = document.getElementById(gab.id);\n        if (ele) {\n            let htmlChart = Utils.searchTreeStartWith(ele, this.prefixD);\n            if (htmlChart) {\n                const factory = resolver.resolveComponentFactory(ChartUplotComponent);\n                const componentRef = viewContainerRef.createComponent(factory);\n                if (gab.property) {\n                    componentRef.instance.withToolbar = (gab.property.type === 'history') ? true : false;\n                }\n                htmlChart.innerHTML = '';\n                componentRef.instance.isEditor = !isview;\n\n                componentRef.instance.rangeType = chartRange;\n                componentRef.instance.id = gab.id;\n\n                componentRef.changeDetectorRef.detectChanges();\n                htmlChart.appendChild(componentRef.location.nativeElement);\n                let opt = <ChartOptions>{ title: '', panel: { height: htmlChart.clientHeight, width: htmlChart.clientWidth } };\n                componentRef.instance.setOptions(opt);\n\n                componentRef.instance['myComRef'] = componentRef;\n                return componentRef.instance;\n            }\n        }\n    }\n\n    static detectChange(gab: GaugeSettings, res: any, ref: any) {\n        return HtmlChartComponent.initElement(gab, res, ref, false, null);\n    }\n}\n","module.exports = \"\"","module.exports = \"\"","import { Component, OnInit, Input } from '@angular/core';\nimport { GaugeBaseComponent } from '../../gauge-base/gauge-base.component'\nimport { GaugeSettings, Variable, GaugeStatus, GaugeAction, Event, GaugeActionsType } from '../../../_models/hmi';\nimport { Utils } from '../../../_helpers/utils';\nimport { GaugeDialogType } from '../../gauge-property/gauge-property.component';\n\ndeclare var SVG: any;\n\n@Component({\n    selector: 'html-input',\n    templateUrl: './html-input.component.html',\n    styleUrls: ['./html-input.component.css']\n})\nexport class HtmlInputComponent extends GaugeBaseComponent implements OnInit {\n\n    @Input() data: any;\n\n    static TypeTag = 'svg-ext-html_input';\n    static LabelTag = 'HtmlInput';\n    static prefix = 'I-HXI_';\n\n    static actionsType = { hide: GaugeActionsType.hide, show: GaugeActionsType.show };\n\n    constructor() {\n        super();\n    }\n\n    ngOnInit() {\n    }\n\n    static getSignals(pro: any) {\n        let res: string[] = [];\n        if (pro.variableId) {\n            res.push(pro.variableId);\n        }\n        if (pro.actions && pro.actions.length) {\n            pro.actions.forEach(act => {\n                res.push(act.variableId);\n            });\n        }        \n        return res;\n    }\n\n    static getDialogType(): GaugeDialogType {\n        return GaugeDialogType.OnlyValue;\n    }\n\n    static getActions() {\n        return this.actionsType;\n    }\n\n    static getHtmlEvents(ga: GaugeSettings): Event {\n        let ele = document.getElementById(ga.id);\n        if (ele) {\n            let input = Utils.searchTreeStartWith(ele, this.prefix);\n            if (input) {\n                let event = new Event();\n                event.dom = input;\n                event.type = 'key-enter';\n                event.ga = ga;\n                return event;\n            }\n        }\n        return null;\n    }\n\n    static processValue(ga: GaugeSettings, svgele: any, sig: Variable, gaugeStatus: GaugeStatus) {\n        try {\n            if (svgele.node && svgele.node.children && svgele.node.children.length >= 1) {\n                let input = Utils.searchTreeStartWith(svgele.node, this.prefix);\n                if (input) {\n                    let val = parseFloat(sig.value);\n                    if (Number.isNaN(val)) {\n                        // maybe boolean\n                        val = Number(sig.value);\n                    } else {\n                        val = parseFloat(val.toFixed(5));\n                    }\n                    if (!input.value || input.value.length <= 0) {\n                        input.value = val;\n                    }\n                    // check actions\n                    if (ga.property.actions) {\n                        ga.property.actions.forEach(act => {\n                            if (act.variableId === sig.id) {\n                                HtmlInputComponent.processAction(act, svgele, input, val, gaugeStatus);\n                            }\n                        });\n                    }                \n                }\n            }\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n    static initElement(gab: GaugeSettings, isview: boolean) {\n        if (isview) {\n            let ele = document.getElementById(gab.id);        \n            if (ele && gab.property) {\n                let input = Utils.searchTreeStartWith(ele, this.prefix);\n                if (input) {\n                    input.value = '';\n                    input.setAttribute('autocomplete', 'off');\n                }\n            }\n        }\n    }\n    \n    static initElementColor(bkcolor, color, ele) {\n        let htmlInput = Utils.searchTreeStartWith(ele, this.prefix);\n        if (htmlInput) {\n            if (bkcolor) {\n                htmlInput.style.backgroundColor = bkcolor;\n            }\n            if (color) {\n                htmlInput.style.color = color;\n            }\n        }\n    }\n\n    static getFillColor(ele) {\n        if (ele.children && ele.children[0]) {\n            let htmlInput = Utils.searchTreeStartWith(ele, this.prefix);\n            if (htmlInput) {\n                return htmlInput.style.backgroundColor;\n            }\n        }\n        return ele.getAttribute('fill');\n    }\n\n    static getStrokeColor(ele) {\n        if (ele.children && ele.children[0]) {\n            let htmlInput = Utils.searchTreeStartWith(ele, this.prefix);\n            if (htmlInput) {\n                return htmlInput.style.color;\n            }\n        }\n        return ele.getAttribute('stroke');\n    }\n\n    static processAction(act: GaugeAction, svgele: any, input: any, value: any, gaugeStatus: GaugeStatus) {\n        if (this.actionsType[act.type] === this.actionsType.hide) {\n            if (act.range.min <= value && act.range.max >= value) {\n                let element = SVG.adopt(svgele.node);\n                this.runActionHide(element, act.type, gaugeStatus);\n            }\n        } else if (this.actionsType[act.type] === this.actionsType.show) {\n            if (act.range.min <= value && act.range.max >= value) {\n                let element = SVG.adopt(svgele.node);\n                this.runActionShow(element, act.type, gaugeStatus);\n            }\n        }\n    }\n}\n","module.exports = \"\"","module.exports = \"\"","import { Component, OnInit, Input } from '@angular/core';\nimport { GaugeBaseComponent } from '../../gauge-base/gauge-base.component'\nimport { GaugeSettings, Variable, GaugeStatus, GaugeAction, Event, GaugeActionsType } from '../../../_models/hmi';\nimport { Utils } from '../../../_helpers/utils';\nimport { GaugeDialogType } from '../../gauge-property/gauge-property.component';\n\ndeclare var SVG: any;\n\n@Component({\n    selector: 'html-select',\n    templateUrl: './html-select.component.html',\n    styleUrls: ['./html-select.component.css']\n})\nexport class HtmlSelectComponent extends GaugeBaseComponent implements OnInit {\n\n    @Input() data: any;\n\n    static TypeTag = 'svg-ext-html_select';\n    static LabelTag = 'HtmlSelect';\n    static prefix = 'S-HXS_';\n\n    static actionsType = { hide: GaugeActionsType.hide, show: GaugeActionsType.show };\n\n    constructor() {\n        super();\n    }\n\n    ngOnInit() {\n    }\n\n    static getSignals(pro: any) {\n        let res: string[] = [];\n        if (pro.variableId) {\n            res.push(pro.variableId);\n        }\n        if (pro.actions && pro.actions.length) {\n            pro.actions.forEach(act => {\n                res.push(act.variableId);\n            });\n        }\n        return res;\n    }\n\n    static getDialogType(): GaugeDialogType {\n        return GaugeDialogType.Step;\n    }\n\n    static getActions() {\n        return this.actionsType;\n    }\n\n    static getHtmlEvents(ga: GaugeSettings): Event {\n        let ele = document.getElementById(ga.id);\n        if (ele) {\n            let select = Utils.searchTreeStartWith(ele, this.prefix);\n            if (select) {\n                let event = new Event();\n                event.dom = select;\n                event.type = 'change';\n                event.ga = ga;\n                return event;\n            }\n        }\n        return null;\n    }\n\n    static processValue(ga: GaugeSettings, svgele: any, sig: Variable, gaugeStatus: GaugeStatus) {\n        try {\n            let select = Utils.searchTreeStartWith(svgele.node, this.prefix);\n            if (select) {\n                let val = parseFloat(sig.value);\n                if (Number.isNaN(val)) {\n                    // maybe boolean\n                    val = Number(sig.value);\n                } else {\n                    val = parseFloat(val.toFixed(5));\n                }\n                select.value = val;\n                // check actions\n                if (ga.property.actions) {\n                    ga.property.actions.forEach(act => {\n                        if (act.variableId === sig.id) {\n                            HtmlSelectComponent.processAction(act, svgele, select, val, gaugeStatus);\n                        }\n                    });\n                }\n            }\n        } catch (err) {\n            console.error(err);\n        }            \n    }\n\n    static initElement(ga: GaugeSettings, isview: boolean = false) {\n        let ele = document.getElementById(ga.id);\n        if (ele) {\n            let select = Utils.searchTreeStartWith(ele, this.prefix);            \n            if (select) {\n                if (ga.property) {\n                    if (ga.property.readonly) {\n                        select.disabled = true;\n                        select.style['appearance'] = \"none\";\n                        select.style['border-width'] = \"0px\";\n                    } else {\n                        select.style['appearance'] = \"menulist\";\n                    }\n                    let align = select.style['text-align'];\n                    if (align) {\n                        select.style['text-align-last'] = align;\n                    }\n                        \n                }\n                select.innerHTML = \"\";\n                if (!isview) {\n                    let option = document.createElement(\"option\", );\n                    option.disabled = true;\n                    option.selected = true;//'<option value=\"\" selected disabled hidden>Choose here</option>';\n                    option.innerHTML = \"Choose...\";\n                    select.appendChild(option);\n                } else {\n                    ga.property.ranges.forEach(element => {\n                        let option = document.createElement(\"option\");\n                        option.value = element.min;\n                        if (element.text) {\n                            option.text = element.text;\n                        }\n                        select.appendChild(option);\n                    });\n                }\n            }\n        }\n    }\n\n    static initElementColor(bkcolor, color, ele) {\n        let select = Utils.searchTreeStartWith(ele, this.prefix);\n        if (select) {\n            if (bkcolor) {\n                select.style.backgroundColor = bkcolor;\n            }\n            if (color) {\n                select.style.color = color;\n            }\n        }\n    }\n\n    static getFillColor(ele) {\n        if (ele.children && ele.children[0]) {\n            let select = Utils.searchTreeStartWith(ele, this.prefix);\n            if (select) {\n                return select.style.backgroundColor;\n            }\n        }\n        return ele.getAttribute('fill');\n    }\n\n    static getStrokeColor(ele) {\n        if (ele.children && ele.children[0]) {\n            let select = Utils.searchTreeStartWith(ele, this.prefix);\n            if (select) {\n                return select.style.color;\n            }\n        }\n        return ele.getAttribute('stroke');\n    }\n\n    static processAction(act: GaugeAction, svgele: any, select: any, value: any, gaugeStatus: GaugeStatus) {\n        if (this.actionsType[act.type] === this.actionsType.hide) {\n            if (act.range.min <= value && act.range.max >= value) {\n                let element = SVG.adopt(svgele.node);\n                this.runActionHide(element, act.type, gaugeStatus);\n            }\n        } else if (this.actionsType[act.type] === this.actionsType.show) {\n            if (act.range.min <= value && act.range.max >= value) {\n                let element = SVG.adopt(svgele.node);\n                this.runActionShow(element, act.type, gaugeStatus);\n            }\n        }\n    }\n}\n","module.exports = \"<div style=\\\"width: 650px;position: relative;\\\">\\n    <h1 mat-dialog-title style=\\\"display:inline-block;cursor:move;\\\" mat-dialog-draggable>{{'editor.controls-html-switch-settings' | translate}}</h1>\\n    <mat-icon (click)=\\\"onNoClick()\\\" style=\\\"float:right;margin-right:-10px;margin-top:-10px;cursor:pointer;color:gray;\\\">clear</mat-icon>\\n    <mat-tab-group style=\\\"width: 100%;\\\">\\n        <mat-tab label=\\\"{{'gauges.property-props' | translate}}\\\">\\n            <div style=\\\"height: 500px; overflow-y: auto; overflow-x: hidden; padding-top: 15px;\\\">\\n                <div style=\\\"display: block;\\\">\\n                    <flex-auth [name]=\\\"name\\\" [permission]=\\\"property.permission\\\" #flexauth></flex-auth>\\n                </div>\\n                <div mat-dialog-content style=\\\"overflow: hidden; width:100%\\\">\\n                    <flex-head [data]=\\\"data\\\" [property]=\\\"property\\\" #flexhead></flex-head>\\n                </div>\\n                <div class=\\\"field-row\\\" style=\\\"padding-top: 10px;\\\">\\n                    <div class=\\\"my-form-field\\\" style=\\\"padding-left: 60px;\\\">\\n                        <span>{{'html-switch.property-off-value' | translate}}</span>\\n                        <input numberOnly [(ngModel)]=\\\"options.offValue\\\" style=\\\"width: 80px;text-align: center;display:inline-block;\\\" type=\\\"text\\\">\\n                    </div>\\n                    <div class=\\\"my-form-field\\\" style=\\\"float: right;padding-right: 60px\\\">\\n                        <span>{{'html-switch.property-on-value' | translate}}</span>\\n                        <input numberOnly [(ngModel)]=\\\"options.onValue\\\" style=\\\"width: 80px;text-align: center;display:inline-block;\\\" type=\\\"text\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"field-row\\\" style=\\\"padding-top: 10px;\\\">\\n                    <div class=\\\"my-form-field color-field\\\">\\n                        <span>{{'html-switch.property-off-background' | translate}}</span>\\n                        <input [(colorPicker)]=\\\"options.offBackground\\\" [style.background]=\\\"options.offBackground\\\" [cpAlphaChannel]=\\\"'always'\\\" class=\\\"input-color\\\"\\n                            [cpPresetColors]=\\\"defaultColor\\\" [cpOKButton]=\\\"true\\\" [cpCancelButton]=\\\"true\\\" [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\"\\n                            [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\" style=\\\"padding: 8px 0 0 0; width: 98px\\\"\\n                            [cpPosition]=\\\"'right'\\\" (colorPickerChange)=\\\"updateOptions()\\\" />\\n                    </div>\\n                    <div class=\\\"my-form-field color-field\\\" style=\\\"padding-left: 12px\\\">\\n                        <span>{{'html-switch.property-off-slider-color' | translate}}</span>\\n                        <input [(colorPicker)]=\\\"options.offSliderColor\\\" [style.background]=\\\"options.offSliderColor\\\" [cpAlphaChannel]=\\\"'always'\\\" class=\\\"input-color\\\"\\n                            [cpPresetColors]=\\\"defaultColor\\\" [cpOKButton]=\\\"true\\\" [cpCancelButton]=\\\"true\\\" [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\"\\n                            [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\" style=\\\"padding: 8px 0 0 0; width: 98px\\\"\\n                            [cpPosition]=\\\"'right'\\\" (colorPickerChange)=\\\"updateOptions()\\\" />\\n                    </div>\\n                    <div class=\\\"my-form-field slider-field\\\" style=\\\"padding-left: 50px; top: -1px;\\\">\\n                        <span>{{'html-switch.property-radius' | translate}}</span>\\n                        <mat-slider style=\\\"display:inline-block;\\\" [max]=\\\"100\\\" [min]=\\\"0\\\" [step]=\\\"1\\\" [thumbLabel]=\\\"true\\\" [(ngModel)]=\\\"options.radius\\\" (input)=\\\"updateOptions()\\\">\\n                        </mat-slider>\\n                    </div>\\n                    <div class=\\\"my-form-field color-field\\\" style=\\\"float: right;padding-left: 12px;\\\">\\n                        <span>{{'html-switch.property-on-background' | translate}}</span>\\n                        <input [(colorPicker)]=\\\"options.onBackground\\\" [style.background]=\\\"options.onBackground\\\" [cpAlphaChannel]=\\\"'always'\\\" class=\\\"input-color\\\"\\n                            [cpPresetColors]=\\\"defaultColor\\\" [cpOKButton]=\\\"true\\\" [cpCancelButton]=\\\"true\\\" [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\"\\n                            [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\" style=\\\"padding: 8px 0 0 0; width: 98px\\\"\\n                            [cpPosition]=\\\"'left'\\\" (colorPickerChange)=\\\"updateOptions()\\\" />\\n                    </div>\\n                    <div class=\\\"my-form-field color-field\\\" style=\\\"float: right;\\\">\\n                        <span>{{'html-switch.property-on-slider-color' | translate}}</span>\\n                        <input [(colorPicker)]=\\\"options.onSliderColor\\\" [style.background]=\\\"options.onSliderColor\\\" [cpAlphaChannel]=\\\"'always'\\\" class=\\\"input-color\\\"\\n                            [cpPresetColors]=\\\"defaultColor\\\" [cpOKButton]=\\\"true\\\" [cpCancelButton]=\\\"true\\\" [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\"\\n                            [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\" style=\\\"padding: 8px 0 0 0; width: 98px\\\"\\n                            [cpPosition]=\\\"'left'\\\" (colorPickerChange)=\\\"updateOptions()\\\" />\\n                    </div>\\n                </div>\\n                <div class=\\\"field-row\\\">\\n                    <div class=\\\"my-form-field color-field\\\">\\n                        <span>{{'html-switch.property-off-text-color' | translate}}</span>\\n                        <input [(colorPicker)]=\\\"options.offTextColor\\\" [style.background]=\\\"options.offTextColor\\\" [cpAlphaChannel]=\\\"'always'\\\" class=\\\"input-color\\\"\\n                            [cpPresetColors]=\\\"defaultColor\\\" [cpOKButton]=\\\"true\\\" [cpCancelButton]=\\\"true\\\" [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\"\\n                            [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\" style=\\\"padding: 8px 0 0 0; width: 98px\\\"\\n                            [cpPosition]=\\\"'top'\\\" (colorPickerChange)=\\\"updateOptions()\\\" />\\n                    </div>\\n                    <div class=\\\"my-form-field\\\" style=\\\"padding-left: 12px;\\\">\\n                        <span>{{'html-switch.property-off-text' | translate}}</span>\\n                        <input [(ngModel)]=\\\"options.offText\\\" (change)=\\\"updateOptions()\\\" style=\\\"width: 60px;text-align: center;display:inline-block;\\\" type=\\\"text\\\">\\n                    </div>\\n                    <div class=\\\"my-form-field slider-field slider-small\\\" style=\\\"padding-left: 17px; top: -2px;width: 80px;\\\">\\n                        <span>{{'html-switch.property-font-size' | translate}}</span>\\n                        <mat-slider style=\\\"display:inline-block;\\\" [max]=\\\"50\\\" [min]=\\\"0\\\" [step]=\\\"1\\\" [thumbLabel]=\\\"true\\\" [(ngModel)]=\\\"options.fontSize\\\" (input)=\\\"updateOptions()\\\">\\n                        </mat-slider>\\n                    </div>\\n                    <div class=\\\"my-form-field\\\" style=\\\"width:160px;padding-left: 12px;\\\">\\n                        <span>{{'html-switch.property-font' | translate}}</span>\\n                        <mat-select [(value)]=\\\"options.fontFamily\\\" (selectionChange)=\\\"updateOptions()\\\">\\n                            <mat-option *ngFor=\\\"let font of fonts\\\" [style.fontFamily]=\\\"font\\\" [value]=\\\"font\\\">\\n                                {{font}}\\n                            </mat-option>\\n                        </mat-select>\\n                    </div>\\n                    <div class=\\\"my-form-field color-field\\\" style=\\\"float: right;padding-left: 12px\\\">\\n                        <span>{{'html-switch.property-on-text-color' | translate}}</span>\\n                        <input [(colorPicker)]=\\\"options.onTextColor\\\" [style.background]=\\\"options.onTextColor\\\" [cpAlphaChannel]=\\\"'always'\\\" class=\\\"input-color\\\"\\n                            [cpPresetColors]=\\\"defaultColor\\\" [cpOKButton]=\\\"true\\\" [cpCancelButton]=\\\"true\\\" [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\"\\n                            [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\" style=\\\"padding: 8px 0 0 0; width: 98px\\\"\\n                            [cpPosition]=\\\"'top'\\\" (colorPickerChange)=\\\"updateOptions()\\\" />\\n                    </div>\\n                    <div class=\\\"my-form-field\\\" style=\\\"float: right;padding-left: 12px;\\\">\\n                        <span>{{'html-switch.property-on-text' | translate}}</span>\\n                        <input [(ngModel)]=\\\"options.onText\\\" (change)=\\\"updateOptions()\\\" style=\\\"width: 60px;text-align: center;display:inline-block;\\\" type=\\\"text\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"field-row\\\" style=\\\"position: absolute;height:210px;width:650px;margin-top: 16px;max-width: 650px; max-height: 210px;overflow: hidden;\\\">\\n                    <ngx-switch #switcher style=\\\"position: absolute;left: 50%;top: 50%;transform: translateX(-50%) translateY(-50%);\\\" [style.width]=\\\"switchWidth + 'px'\\\"\\n                        [style.height]=\\\"switchHeight + 'px'\\\"></ngx-switch>\\n                </div>\\n            </div>\\n        </mat-tab>\\n    </mat-tab-group>\\n    <div mat-dialog-actions class=\\\"dialog-action\\\">\\n        <button mat-raised-button (click)=\\\"onNoClick()\\\">{{'dlg.cancel' | translate}}</button>\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onOkClick()\\\" [mat-dialog-close]=\\\"data\\\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\\n    </div>\\n</div>\"","module.exports = \".field-row{display:block;margin-bottom:5px}.slider-field span{padding-left:2px;text-overflow:clip;width:150px;white-space:nowrap;overflow:hidden}.slider-field mat-slider{background-color:var(--formSliderBackground);height:29px}.slider-small>.mat-slider-horizontal{min-width:80px}::ng-deep .mat-tab-label{height:34px !important}\\n\"","import { Component, OnInit, Inject, ViewChild, AfterContentInit } from '@angular/core';\n\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { GaugeProperty } from '../../../../_models/hmi';\n\nimport { FlexAuthComponent } from '../../../gauge-property/flex-auth/flex-auth.component';\nimport { FlexHeadComponent } from '../../../gauge-property/flex-head/flex-head.component';\nimport { HtmlSwitchComponent } from '../html-switch.component';\nimport { NgxSwitchComponent, SwitchOptions } from '../../../../gui-helpers/ngx-switch/ngx-switch.component';\nimport { Define } from '../../../../_helpers/define';\nimport { Utils } from '../../../../_helpers/utils';\n\n@Component({\n    selector: 'app-html-switch-property',\n    templateUrl: './html-switch-property.component.html',\n    styleUrls: ['./html-switch-property.component.scss']\n})\nexport class HtmlSwitchPropertyComponent implements AfterContentInit {\n\n    @ViewChild('switcher') switcher: NgxSwitchComponent;\n\t@ViewChild('flexhead') flexhead: FlexHeadComponent;\n    @ViewChild('flexauth') flexauth: FlexAuthComponent;\n\n    property: GaugeProperty;\n    options: SwitchOptions;\n    name: string;\n    switchWidth = 80;\n    switchHeight = 40;\n    fonts = Define.fonts;\n    defaultColor = Utils.defaultColor;\n\n    constructor(public dialogRef: MatDialogRef<HtmlSwitchPropertyComponent>,\n                @Inject(MAT_DIALOG_DATA) public data: any) {\n        this.property = <GaugeProperty>JSON.parse(JSON.stringify(this.data.settings.property));\n        if (!this.property) {\n            this.property = new GaugeProperty();\n        }\n        this.name = this.data.settings.name;\n        this.options = <SwitchOptions>this.property.options;\n        if (!this.options) {\n            this.options = new SwitchOptions();\n        }\n        let switchsize = HtmlSwitchComponent.getSize(this.data.settings);\n        this.switchHeight = switchsize.height;\n        this.switchWidth = switchsize.width;\n        this.options.height = this.switchHeight;\n    }\n\n    ngAfterContentInit() {\n        this.updateOptions();\n    }\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n\n    onOkClick(): void {\n        this.data.settings.property = this.property;\n        this.data.settings.property.permission = this.flexauth.permission;\n        this.data.settings.property.options = this.options;\n        this.data.settings.name = this.flexauth.name;\n    }\n\n    updateOptions() {\n        this.switcher.setOptions(this.options);\n    }\n}\n","import { Injectable, ViewContainerRef, ComponentFactoryResolver } from '@angular/core';\n\nimport { GaugeBaseComponent } from '../../gauge-base/gauge-base.component'\nimport { GaugeSettings, Variable, GaugeStatus, WindowLink, Event } from '../../../_models/hmi';\nimport { GaugeDialogType } from '../../gauge-property/gauge-property.component';\n\nimport { NgxSwitchComponent } from '../../../gui-helpers/ngx-switch/ngx-switch.component';\nimport { Utils } from '../../../_helpers/utils';\n\n@Injectable()\nexport class HtmlSwitchComponent {\n\n    static TypeTag = 'svg-ext-html_switch';\n    static LabelTag = 'HtmlSwitch';\n    static prefix = 'T-HXT_';\n\n    constructor() {\n    }\n\n    static getSignals(pro: any) {\n        let res: string[] = [];\n        if (pro.variableId) {\n            res.push(pro.variableId);\n        }\n        if (pro.alarmId) {\n            res.push(pro.alarmId);\n        }\n        if (pro.actions) {\n            pro.actions.forEach(act => {\n                res.push(act.variableId);\n            });\n        }\n        return res;\n    }\n\n    static getDialogType(): GaugeDialogType {\n        return GaugeDialogType.Switch;\n    }\n\n    static bindEvents(ga: GaugeSettings, slider?: NgxSwitchComponent, callback?:any): Event {\n        if (slider) {\n            slider.bindUpdate((val) => {\n                let event = new Event();\n                event.type = 'on';\n                event.ga = ga;\n                event.value = val;\n                callback(event);\n            });\n        }\n        return null;\n    }\n\n    static processValue(ga: GaugeSettings, svgele: any, sig: Variable, gaugeStatus: GaugeStatus, switcher?: NgxSwitchComponent) {\n        try {\n            if (switcher) {\n                let val = parseFloat(sig.value);\n                if (Number.isNaN(val)) {\n                    // maybe boolean\n                    val = Number(sig.value);\n                } else {\n                    val = parseFloat(val.toFixed(5));\n                }\n                switcher.setValue(val);\n            }\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n    static initElement(ga: GaugeSettings, resolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, options?: any) {\n        let ele = document.getElementById(ga.id);\n        if (ele) {\n            let htmlSwitch = Utils.searchTreeStartWith(ele, this.prefix);\n            if (htmlSwitch) {\n                const factory = resolver.resolveComponentFactory(NgxSwitchComponent);\n                const componentRef = viewContainerRef.createComponent(factory);\n                htmlSwitch.innerHTML = '';\n\n                componentRef.changeDetectorRef.detectChanges();\n                const loaderComponentElement = componentRef.location.nativeElement;\n                htmlSwitch.appendChild(loaderComponentElement);\n                if (ga.property && ga.property.options) {\n                    ga.property.options.height = htmlSwitch.clientHeight;\n                    if (componentRef.instance.setOptions(ga.property.options)) {\n                        if (ga.property.options.radius) {\n                            htmlSwitch.style.borderRadius = ga.property.options.radius + 'px';\n                        }\n                    }\n                }\n                return componentRef.instance;\n            }\n        }\n    }\n\n    static resize(ga: GaugeSettings, resolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, options?: any) {\n        let ele = document.getElementById(ga.id);\n        if (ele) {\n            let htmlSwitch = Utils.searchTreeStartWith(ele, this.prefix);\n            if (htmlSwitch) {\n                const factory = resolver.resolveComponentFactory(NgxSwitchComponent);\n                const componentRef = viewContainerRef.createComponent(factory);\n                htmlSwitch.innerHTML = '';\n\n                componentRef.changeDetectorRef.detectChanges();\n                const loaderComponentElement = componentRef.location.nativeElement;\n                htmlSwitch.appendChild(loaderComponentElement);\n                if (ga.property && ga.property.options) {\n                    ga.property.options.height = htmlSwitch.clientHeight;\n                    if (!componentRef.instance.setOptions(ga.property.options, true)) {\n                        // componentRef.instance.init();\n                    }\n                }\n                return componentRef.instance;\n            }\n        }\n    }\n\n    static detectChange(ga: GaugeSettings, res: any, ref: any) {\n        let options;\n        if (ga.property && ga.property.options) {\n            options = ga.property.options;\n        }\n        return HtmlSwitchComponent.initElement(ga, res, ref, options);\n    }\n\n    static getSize(ga: GaugeSettings) {\n        let result = {height: 0, width: 0};\n        let ele = document.getElementById(ga.id);\n        if (ele) {\n            let htmlSwitch = Utils.searchTreeStartWith(ele, this.prefix);\n            if (htmlSwitch) {\n                result.height = htmlSwitch.clientHeight;\n                result.width = htmlSwitch.clientWidth;\n            }\n        }\n        return result;\n    }\n}","module.exports = \".toolbox {\\n    display: inline-block;\\n    float: right;\\n    margin-top: 10px;\\n    margin-bottom: 3px;\\n}\\n  \\n.toolbox button {\\n    margin-right: 8px;\\n    margin-left: 8px;\\n}\\n  \\n.toolbox-right {\\n    width: 300px;\\n    position: absolute;\\n    top: 85px;\\n    right: 20px;\\n    height: 200px;\\n    overflow: hidden;\\n}\\n  \\n.slider-field span {\\n    padding-left: 2px;\\n    text-overflow: clip;\\n    max-width: 125px;\\n    white-space: nowrap;\\n    overflow: hidden;\\n}\\n  \\n.slider-field mat-slider {\\n    background-color: var(--formSliderBackground);\\n    height: 30px;\\n}\\n  \\n.field-row {\\n    display: block;\\n    margin-bottom: 5px;\\n}\\n  \\n::ng-deep .input-text .mat-form-field-infix {\\n    padding-top: 5px;\\n    padding-bottom: 0px;\\n}\\n  \\n::ng-deep .mat-dialog-container {\\n    display: inline-table !important;\\n}\\n  \\n::ng-deep .mat-tab-label {\\n    height: 34px !important;\\n}\"","module.exports = \"<div style=\\\"width:700px;position: relative;margin-bottom: 40px\\\">\\n    <h1 mat-dialog-title style=\\\"display:inline-block;cursor:move;\\\" mat-dialog-draggable>{{'editor.controls-pipe-settings' | translate}}</h1>\\n    <mat-icon (click)=\\\"onNoClick()\\\" style=\\\"float:right;margin-right:-10px;margin-top:-10px;cursor:pointer;color:gray;\\\">clear</mat-icon>\\n    <mat-tab-group style=\\\"width: 100%;height: 560px;\\\">\\n        <mat-tab label=\\\"{{'pipe.property-props' | translate}}\\\">\\n            <div style=\\\"max-height: 495px; overflow-y: auto; overflow-x: hidden; padding-top: 15px;\\\">\\n                <div style=\\\"display: block;\\\">\\n                    <flex-auth [name]=\\\"name\\\" [permission]=\\\"property.permission\\\" #flexauth></flex-auth>\\n                </div>\\n                <div mat-dialog-content style=\\\"overflow: hidden; width:100%;padding-top: 20px;\\\">\\n                    <div id=\\\"pipe\\\" style=\\\"width: 200px; height: 240px;margin-left: 20px;\\\"></div>\\n                    <!-- <flex-head [data]=\\\"data\\\" [property]=\\\"property\\\" #flexhead></flex-head> -->\\n                    <div class=\\\"toolbox-right\\\">\\n                        <div class=\\\"field-row\\\">\\n                            <div class=\\\"my-form-field slider-field\\\" style=\\\"padding-left: 12px\\\">\\n                                <span>{{'pipe.property-border-width' | translate}}</span>\\n                                <mat-slider style=\\\"display:inline-block;\\\" [max]=\\\"100\\\" [min]=\\\"0\\\" [step]=\\\"1\\\" [thumbLabel]=\\\"true\\\" [(ngModel)]=\\\"options.borderWidth\\\"\\n                                    (input)=\\\"onChangeValue('borderWidth', $event.value)\\\">\\n                                </mat-slider>\\n                            </div>\\n                            <div class=\\\"my-form-field slider-field color-field\\\" style=\\\"padding-left: 12px\\\">\\n                                <span>{{'pipe.property-border-color' | translate}}</span>\\n                                <input [(colorPicker)]=\\\"options.border\\\" [style.background]=\\\"options.border\\\" [cpAlphaChannel]=\\\"'always'\\\" class=\\\"input-color\\\"\\n                                    [cpPresetColors]=\\\"defaultColor\\\" [cpOKButton]=\\\"true\\\" [cpCancelButton]=\\\"true\\\" [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\"\\n                                    [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\" style=\\\"width: 126px\\\"\\n                                    [cpPosition]=\\\"'bottom'\\\" (colorPickerChange)=\\\"onChangeValue('border', $event)\\\" />\\n                            </div>\\n                        </div>\\n                        <div class=\\\"field-row\\\">\\n                            <div class=\\\"my-form-field slider-field\\\" style=\\\"padding-left: 12px\\\">\\n                                <span>{{'pipe.property-pipe-width' | translate}}</span>\\n                                <mat-slider style=\\\"display:inline-block;\\\" [max]=\\\"100\\\" [min]=\\\"0\\\" [step]=\\\"1\\\" [thumbLabel]=\\\"true\\\" [(ngModel)]=\\\"options.pipeWidth\\\"\\n                                    (input)=\\\"onChangeValue('pipeWidth', $event.value)\\\">\\n                                </mat-slider>\\n                            </div>\\n                            <div class=\\\"my-form-field slider-field color-field\\\" style=\\\"padding-left: 12px\\\">\\n                                <span>{{'pipe.property-pipe-color' | translate}}</span>\\n                                <input [(colorPicker)]=\\\"options.pipe\\\" [style.background]=\\\"options.pipe\\\" [cpAlphaChannel]=\\\"'always'\\\" class=\\\"input-color\\\"\\n                                    [cpPresetColors]=\\\"defaultColor\\\" [cpOKButton]=\\\"true\\\" [cpCancelButton]=\\\"true\\\" [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\"\\n                                    [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\" style=\\\"width: 126px\\\"\\n                                    [cpPosition]=\\\"'bottom'\\\" (colorPickerChange)=\\\"onChangeValue('pipe', $event)\\\" />\\n                            </div>\\n                        </div>\\n                        <div class=\\\"field-row\\\">\\n                            <div class=\\\"my-form-field slider-field\\\" style=\\\"padding-left: 12px\\\">\\n                                <span>{{'pipe.property-content-width' | translate}}</span>\\n                                <mat-slider style=\\\"display:inline-block;\\\" [max]=\\\"100\\\" [min]=\\\"0\\\" [step]=\\\"1\\\" [thumbLabel]=\\\"true\\\" [(ngModel)]=\\\"options.contentWidth\\\"\\n                                    (input)=\\\"onChangeValue('contentWidth', $event.value)\\\">\\n                                </mat-slider>\\n                            </div>\\n                            <div class=\\\"my-form-field slider-field color-field\\\" style=\\\"padding-left: 12px\\\">\\n                                <span>{{'pipe.property-content-color' | translate}}</span>\\n                                <input [(colorPicker)]=\\\"options.content\\\" [style.background]=\\\"options.content\\\" [cpAlphaChannel]=\\\"'always'\\\" class=\\\"input-color\\\"\\n                                    [cpPresetColors]=\\\"defaultColor\\\" [cpOKButton]=\\\"true\\\" [cpCancelButton]=\\\"true\\\" [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\"\\n                                    [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\" style=\\\"width: 126px\\\"\\n                                    [cpPosition]=\\\"'bottom'\\\" (colorPickerChange)=\\\"onChangeValue('content', $event)\\\" />\\n                            </div>\\n                        </div>\\n                        <div class=\\\"field-row\\\">\\n                            <div class=\\\"my-form-field slider-field\\\" style=\\\"padding-left: 12px\\\">\\n                                <span>{{'pipe.property-content-space' | translate}}</span>\\n                                <mat-slider style=\\\"display:inline-block;\\\" [max]=\\\"100\\\" [min]=\\\"0\\\" [step]=\\\"1\\\" [thumbLabel]=\\\"true\\\" [(ngModel)]=\\\"options.contentSpace\\\"\\n                                    (input)=\\\"onChangeValue('contentSpace', $event.value)\\\">\\n                                </mat-slider>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </mat-tab>\\n        <mat-tab label=\\\"{{'gauges.property-events' | translate}}\\\" *ngIf=\\\"eventsSupported\\\">\\n            <div style=\\\"max-height: 495px; overflow-y: auto; overflow-x: hidden; padding-top: 15px;\\\">\\n                <div style=\\\"display: block;\\\">\\n                    <div class=\\\"toolbox\\\">\\n                        <button mat-icon-button (click)=\\\"onAddEvent()\\\">\\n                            <mat-icon>add_circle_outline</mat-icon>\\n                        </button>\\n                    </div>\\n                </div>\\n                <div mat-dialog-content style=\\\"overflow: hidden; width:100%\\\">\\n                    <flex-event [property]=\\\"property\\\" [views]=\\\"views\\\" #flexevent *ngIf=\\\"eventsSupported\\\" style=\\\"padding-bottom: 5px\\\"></flex-event>\\n                </div>\\n            </div>\\n        </mat-tab>\\n        <mat-tab label=\\\"{{'gauges.property-actions' | translate}}\\\" *ngIf=\\\"actionsSupported\\\">\\n            <div style=\\\"max-height: 495px; overflow-y: auto; overflow-x: hidden; padding-top: 15px;\\\">\\n                <div style=\\\"display: block;\\\">\\n                    <div class=\\\"toolbox\\\">\\n                        <button mat-icon-button (click)=\\\"onAddAction()\\\">\\n                            <mat-icon>add_circle_outline</mat-icon>\\n                        </button>\\n                    </div>\\n                </div>\\n                <div mat-dialog-content style=\\\"overflow: hidden; width:100%\\\">\\n                    <flex-action [data]=\\\"data\\\" [property]=\\\"property\\\" #flexaction *ngIf=\\\"actionsSupported\\\" style=\\\"padding-bottom: 5px\\\"></flex-action>\\n                </div>\\n            </div>\\n        </mat-tab>\\n    </mat-tab-group>\\n    <!-- \\n    <div style=\\\"display: block; width: 660px;padding-top: 30px\\\">\\n        <div style=\\\"display: block;\\\">\\n            <flex-auth [name]=\\\"name\\\" [permission]=\\\"property.permission\\\" #flexauth></flex-auth>\\n        </div>\\n        <div mat-dialog-content style=\\\"overflow: hidden; width:100%\\\">\\n            <flex-head [data]=\\\"data\\\" [property]=\\\"property\\\" #flexhead></flex-head>\\n        </div>\\n    </div> -->\\n    <!-- <div style=\\\"width: 760px; height: 620px; position: relative\\\"> -->\\n    <!-- </div> -->\\n    <div mat-dialog-actions class=\\\"dialog-action\\\">\\n        <button mat-raised-button (click)=\\\"onNoClick()\\\">{{'dlg.cancel' | translate}}</button>\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onOkClick()\\\" [mat-dialog-close]=\\\"data\\\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\\n    </div>\\n</div>\"","import { Component, AfterViewInit, OnInit, Inject, ViewChild } from '@angular/core';\n\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { GaugeProperty } from '../../../../_models/hmi';\nimport { FlexHeadComponent } from '../../../gauge-property/flex-head/flex-head.component';\nimport { FlexAuthComponent } from '../../../gauge-property/flex-auth/flex-auth.component';\nimport { FlexEventComponent } from '../../../gauge-property/flex-event/flex-event.component';\nimport { FlexActionComponent } from '../../../gauge-property/flex-action/flex-action.component';\nimport { Utils } from '../../../../_helpers/utils';\nimport { PipeOptions } from '../pipe.component';\n\ndeclare var SVG: any;\n\n@Component({\n    selector: 'pipe-property',\n    templateUrl: './pipe-property.component.html',\n    styleUrls: ['./pipe-property.component.css']\n})\nexport class PipePropertyComponent implements OnInit, AfterViewInit {\n\n\t@ViewChild('flexauth') flexAuth: FlexAuthComponent;\n    @ViewChild('flexhead') flexHead: FlexHeadComponent;\n    @ViewChild('flexevent') flexEvent: FlexEventComponent;\n    @ViewChild('flexaction') flexAction: FlexActionComponent;\n    property: GaugeProperty;\n    options: PipeOptions;\n    name: string;\n\teventsSupported: boolean;\n    actionsSupported: any;\n    defaultColor = Utils.defaultColor;\n    pipepath = { bk: null, fg: null, hp: null };\n    \n    constructor(public dialogRef: MatDialogRef<PipePropertyComponent>,\n                @Inject(MAT_DIALOG_DATA) public data: any) { \n    }\n\n    ngOnInit() {\n        this.eventsSupported = this.data.withEvents;\n\t\tthis.actionsSupported = this.data.withActions;\n        this.property = <GaugeProperty>JSON.parse(JSON.stringify(this.data.settings.property));\n        if (!this.property) {\n            this.property = new GaugeProperty();\n        }\n        this.name = this.data.settings.name;\n        this.options = <PipeOptions>this.property.options;\n        if (!this.options) {\n            this.options = new PipeOptions();\n            this.options.borderWidth = 40;\n            this.options.border = '#000000';\n            this.options.pipeWidth = 30;\n            this.options.pipe = '#0000ff';\n            this.options.contentWidth = 30;\n            this.options.content = '#0044ff';\n            this.options.contentSpace = 48;\n        }\n        // this.permission = this.property.permission;\n    }\n\n    ngAfterViewInit() {\n        // var draw = SVG().addTo('#pipe').size('100%', '100%');\n        var draw = SVG('pipe');\n        this.pipepath.bk = draw.path('m 1,120 200,0');\n        this.pipepath.fg = draw.path('m 1,120 200,0');\n        this.pipepath.hp = draw.path('m 1,120 200,0');\n        this.redrawPipe();\n    }\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n\n    onOkClick(): void {\n        this.data.settings.property = this.property;\n        this.data.settings.property.permission = this.flexAuth.permission;\n        this.data.settings.property.options = this.options;\n        this.data.settings.name = this.flexAuth.name;\n\t\tif (this.flexEvent) {\n\t\t\tthis.data.settings.property.events = this.flexEvent.getEvents();\n\t\t}\n\t\tif (this.flexAction) {\n\t\t\tthis.data.settings.property.actions = this.flexAction.getActions();\n\t\t}\n    }\n    redrawPipe() {\n        this.pipepath.fg.stroke({ color: this.options.pipe, width: this.options.pipeWidth});\n        this.pipepath.fg.fill('none');\n        this.pipepath.bk.stroke({ color: this.options.border, width: this.options.borderWidth});\n        this.pipepath.bk.fill('none');\n        let space = '' + this.options.contentSpace + ' ' + this.options.contentSpace;\n        this.pipepath.hp.stroke({ color: this.options.content, width: this.options.contentWidth, dasharray: space });\n        this.pipepath.hp.fill('none');\n    }\n\n    onChangeValue(type, value) {\n        if (type == 'borderWidth') {\n            this.options.borderWidth = value;\n        } else if (type == 'border') {\n            this.options.border = value;\n        } else if (type == 'pipeWidth') {\n            this.options.pipeWidth = value;\n        } else if (type == 'pipe') {\n            this.options.pipe = value;\n        } else if (type == 'contentWidth') {\n            this.options.contentWidth = value;\n        } else if (type == 'content') {\n            this.options.content = value;\n        } else if (type == 'contentSpace') {\n            this.options.contentSpace = value;\n        }\n        this.redrawPipe();\n    }\n\n    onAddEvent() {\n\t\tthis.flexEvent.onAddEvent();\n\t}\n\n\tonAddAction() {\n\t\tthis.flexAction.onAddAction();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { GaugeSettings, GaugeAction, Variable, GaugeStatus, GaugeActionStatus, GaugeActionsType } from '../../../_models/hmi';\nimport { GaugeBaseComponent } from '../../gauge-base/gauge-base.component'\nimport { GaugeDialogType } from '../../gauge-property/gauge-property.component';\nimport { Utils } from '../../../_helpers/utils';\n\ndeclare var SVG: any;\ndeclare var Raphael: any;\n\n@Injectable()\nexport class PipeComponent {\n\n    static TypeId = 'pipe';\n    static TypeTag = 'svg-ext-' + PipeComponent.TypeId;      // used to identify shapes type, binded with the library svgeditor\n    static LabelTag = 'Pipe';\n    static prefixB = 'PIE_';\n\n    static actionsType = { stop: GaugeActionsType.stop, clockwise: GaugeActionsType.clockwise, anticlockwise: GaugeActionsType.anticlockwise };\n\n    static getSignals(pro: any) {\n        let res: string[] = [];\n        if (pro.variableId) {\n            res.push(pro.variableId);\n        }\n        if (pro.alarmId) {\n            res.push(pro.alarmId);\n        }\n        if (pro.actions) {\n            pro.actions.forEach(act => {\n                res.push(act.variableId);\n            });\n        }\n        return res;\n    }\n\n    static getActions() {\n        return this.actionsType;\n    }\n\n    static getDialogType(): GaugeDialogType {\n        return GaugeDialogType.Pipe;\n    }\n\n    static processValue(ga: GaugeSettings, svgele: any, sig: Variable, gaugeStatus: GaugeStatus) {\n        try {\n            if (svgele.node) {\n                let clr = '';\n                let value = parseFloat(sig.value);\n                if (Number.isNaN(value)) {\n                    // maybe boolean\n                    value = Number(sig.value);\n                } else {\n                    value = parseFloat(value.toFixed(5));\n                }\n                if (ga.property) {\n                    // check actions\n                    if (ga.property.actions) {\n                        ga.property.actions.forEach(act => {\n                            if (act.variableId === sig.id) {\n                                PipeComponent.processAction(act, svgele, value, gaugeStatus);\n                            }\n                        });\n                    }\n                }\n            }\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n    static processAction(act: GaugeAction, svgele: any, value: any, gaugeStatus: GaugeStatus) {\n        if (act.range.min <= value && act.range.max >= value) {\n            var element = SVG.adopt(svgele.node);\n            PipeComponent.runMyAction(element, act.type, gaugeStatus);\n        }    \n    }\n\n    static runMyAction(element, type, gaugeStatus: GaugeStatus) {\n        if (PipeComponent.actionsType[type] === PipeComponent.actionsType.stop) {\n            if (gaugeStatus.actionRef && gaugeStatus.actionRef.timer) {\n                clearTimeout(gaugeStatus.actionRef.timer);\n                gaugeStatus.actionRef.timer = null;\n            }\n        } else {\n            if (gaugeStatus.actionRef && gaugeStatus.actionRef.timer) {\n                if (gaugeStatus.actionRef.type === type) {\n                    return;\n                }\n                clearTimeout(gaugeStatus.actionRef.timer);\n                gaugeStatus.actionRef.timer = null;\n            }\n            var eletoanim = Utils.searchTreeStartWith(element.node, 'c' + this.prefixB);\n            if (eletoanim) {\n                let len = 1000;\n                if (PipeComponent.actionsType[type] === PipeComponent.actionsType.clockwise) {\n                    let timeout = setInterval(() => {\n                        if (len < 0) len = 1000;\n                        eletoanim.style.strokeDashoffset = len;\n                        len--;\n                    }, 20);\n                    gaugeStatus.actionRef = <GaugeActionStatus>{ type: type, timer: timeout };\n                } else if (PipeComponent.actionsType[type] === PipeComponent.actionsType.anticlockwise) {\n                    let timeout = setInterval(() => {\n                        if (len > 1000) len = 0;\n                        eletoanim.style.strokeDashoffset = len;\n                        len++;\n                    }, 20);\n                    gaugeStatus.actionRef = <GaugeActionStatus>{ type: type, timer: timeout };\n                }\n            }\n        }\n    }\n\n    static detectChange(gab: GaugeSettings, res: any, ref: any) {\n        let data = { id: gab.id, property: gab.property.options };\n        let result = ref.nativeWindow.svgEditor.runExtension('pipe', 'initPipe', data);\n        return result;\n    }\n}\n\nexport class PipeOptions {\n    border: string;\n    borderWidth: number;\n    pipe: string;\n    pipeWidth: number;\n    content: string;\n    contentWidth: number;\n    contentSpace: number;\n}","module.exports = \"\\n.field-row {\\n    display: block;\\n    margin-bottom: 5px;\\n}\\n\\n.slider-field span {\\n    padding-left: 2px;\\n    text-overflow: clip;\\n    max-width: 125px;\\n    white-space: nowrap;\\n    overflow: hidden;\\n}\\n\\n.slider-field mat-slider {\\n    background-color: var(--formSliderBackground);\\n    height: 30px;\\n}\\n\\n::ng-deep .mat-tab-label {\\n    height: 34px !important;\\n}\"","module.exports = \"<div style=\\\"width: 790px;height: 730px;position: relative;\\\" class=\\\"dialog-mdsd-v\\\">\\n    <h1 mat-dialog-title style=\\\"display:inline-block;cursor:move;\\\" mat-dialog-draggable>{{'editor.controls-slider-settings' | translate}}</h1>\\n    <mat-icon (click)=\\\"onNoClick()\\\" style=\\\"float:right;margin-right:-10px;margin-top:-10px;cursor:pointer;color:gray;\\\">clear</mat-icon>\\n    <mat-tab-group style=\\\"width: 100%;\\\">\\n        <mat-tab label=\\\"{{'slider.property-props' | translate}}\\\">\\n            <div style=\\\"display: block;width: 660px;padding-top: 20px\\\">\\n                <div style=\\\"display: block;\\\">\\n                    <flex-auth [name]=\\\"name\\\" [permission]=\\\"property.permission\\\" #flexauth></flex-auth>\\n                </div>\\n                <div mat-dialog-content style=\\\"overflow: hidden; width:100%\\\">\\n                    <flex-head [data]=\\\"data\\\" [property]=\\\"property\\\" #flexhead></flex-head>\\n                </div>\\n            </div>\\n            <div style=\\\"width: 100%; height: 515px; position: relative;\\\">\\n                <div style=\\\"position: absolute;\\\" [style.width]=\\\"sliderLayout.width + 'px'\\\" [style.height]=\\\"sliderLayout.height + 'px'\\\" [style.top]=\\\"sliderLayout.top + 'px'\\\"\\n                    [style.left]=\\\"sliderLayout.left + 'px'\\\">\\n                    <ngx-nouislider #slider></ngx-nouislider>\\n                </div>\\n                <div style=\\\"width: 280px;height: 100%;float: right;\\\">\\n                    <div class=\\\"field-row\\\" style=\\\"margin-top: 20px;\\\">\\n                        <div class=\\\"my-form-field\\\" style=\\\"width: 120px;\\\">\\n                            <span>{{'slider.property-orientation' | translate}}</span>\\n                            <mat-select [(value)]=\\\"options.orientation\\\" (selectionChange)=\\\"setSliderOptions()\\\">\\n                                <mat-option *ngFor=\\\"let ev of orientationType | enumToArray\\\" [value]=\\\"ev.key\\\">\\n                                    {{ ev.value }}\\n                                </mat-option>\\n                            </mat-select>\\n                        </div>\\n                        <div class=\\\"my-form-field\\\" style=\\\"width: 120px;margin-left: 20px;\\\">\\n                            <span>{{'slider.property-direction' | translate}}</span>\\n                            <mat-select [(value)]=\\\"options.direction\\\" (selectionChange)=\\\"setSliderOptions()\\\">\\n                                <mat-option *ngFor=\\\"let ev of directionType | enumToArray\\\" [value]=\\\"ev.key\\\">\\n                                    {{ ev.value }}\\n                                </mat-option>\\n                            </mat-select>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"field-row slider-field\\\">\\n                        <div class=\\\"my-form-field\\\" style=\\\"width:163px\\\">\\n                            <span>{{'slider.property-font' | translate}}</span>\\n                            <mat-select [(value)]=\\\"options.fontFamily\\\" (selectionChange)=\\\"onChangeOptions('fontFamily',  $event.value)\\\">\\n                                <mat-option *ngFor=\\\"let font of fonts\\\" [style.fontFamily]=\\\"font\\\" [value]=\\\"font\\\">\\n                                    {{font}}\\n                                </mat-option>\\n                            </mat-select>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"field-row\\\" style=\\\"margin-top: 20px;\\\">\\n                        <div class=\\\"my-form-field slider-field color-field\\\">\\n                            <span>{{'slider.property-slider-color' | translate}}</span>\\n                            <input [(colorPicker)]=\\\"options.shape.connectColor\\\" [style.background]=\\\"options.shape.connectColor\\\" [cpAlphaChannel]=\\\"'always'\\\" class=\\\"input-color\\\"\\n                                [cpPresetColors]=\\\"defaultColor\\\" [cpOKButton]=\\\"true\\\" [cpCancelButton]=\\\"true\\\" [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\"\\n                                [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\" style=\\\"width: 78px\\\"\\n                                [cpPosition]=\\\"'left'\\\" (colorPickerChange)=\\\"setSliderOptions()\\\" />\\n                        </div>\\n                        <div class=\\\"my-form-field slider-field color-field\\\" style=\\\"padding-left: 10px\\\">\\n                            <span>{{'slider.property-slider-background' | translate}}</span>\\n                            <input [(colorPicker)]=\\\"options.shape.baseColor\\\" [style.background]=\\\"options.shape.baseColor\\\" [cpAlphaChannel]=\\\"'always'\\\" class=\\\"input-color\\\"\\n                                [cpPresetColors]=\\\"defaultColor\\\" [cpOKButton]=\\\"true\\\" [cpCancelButton]=\\\"true\\\" [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\"\\n                                [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\" style=\\\"width: 78px\\\"\\n                                [cpPosition]=\\\"'left'\\\" (colorPickerChange)=\\\"setSliderOptions()\\\" />\\n                        </div>\\n                        <div class=\\\"my-form-field slider-field color-field\\\" style=\\\"padding-left: 10px\\\">\\n                            <span>{{'slider.property-slider-handle' | translate}}</span>\\n                            <input [(colorPicker)]=\\\"options.shape.handleColor\\\" [style.background]=\\\"options.shape.handleColor\\\" [cpAlphaChannel]=\\\"'always'\\\" class=\\\"input-color\\\"\\n                                [cpPresetColors]=\\\"defaultColor\\\" [cpOKButton]=\\\"true\\\" [cpCancelButton]=\\\"true\\\" [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\"\\n                                [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\" style=\\\"width: 78px\\\"\\n                                [cpPosition]=\\\"'left'\\\" (colorPickerChange)=\\\"setSliderOptions()\\\" />\\n                        </div>\\n                    </div>\\n                    <div class=\\\"field-row\\\">\\n                        <div class=\\\"my-form-field slider-field\\\">\\n                            <span>{{'slider.property-min' | translate}}</span>\\n                            <input numberOnly [(ngModel)]=\\\"options.range.min\\\" (change)=\\\"onChangeOptions('min', options.range.min)\\\"\\n                                style=\\\"width: 50px;text-align: center;display:inline-block;\\\" type=\\\"text\\\">\\n                        </div>\\n                        <div class=\\\"my-form-field slider-field\\\" style=\\\"padding-left: 12px\\\">\\n                            <span>{{'slider.property-max' | translate}}</span>\\n                            <input numberOnly [(ngModel)]=\\\"options.range.max\\\" (change)=\\\"onChangeOptions('max', options.range.max)\\\"\\n                                style=\\\"width: 50px;text-align: center;display:inline-block;\\\" type=\\\"text\\\">\\n                        </div>\\n                        <div class=\\\"my-form-field slider-field\\\" style=\\\"padding-left: 12px\\\">\\n                            <span>{{'slider.property-step' | translate}}</span>\\n                            <input numberOnly [(ngModel)]=\\\"options.step\\\" (change)=\\\"onChangeOptions('step', options.step)\\\"\\n                                style=\\\"width: 50px;text-align: center;display:inline-block;\\\" type=\\\"text\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"field-row\\\" style=\\\"margin-top: 20px;\\\">\\n                        <div class=\\\"my-form-field slider-field\\\">\\n                            <div class=\\\"my-form-field slider-field\\\">\\n                                <span style=\\\"max-width: 180px\\\">{{'slider.property-scala' | translate}}</span>\\n                                <input [(ngModel)]=\\\"staticScala\\\" (change)=\\\"onChangeOptions('staticScala', staticScala)\\\" style=\\\"width: 160px;\\\" type=\\\"text\\\">\\n                            </div>\\n                            <div class=\\\"my-form-field slider-field color-field\\\" style=\\\"padding-left: 10px\\\">\\n                                <span>{{'slider.property-marker-color' | translate}}</span>\\n                                <input [(colorPicker)]=\\\"options.marker.color\\\" [style.background]=\\\"options.marker.color\\\" [cpAlphaChannel]=\\\"'always'\\\" class=\\\"input-color\\\"\\n                                    [cpPresetColors]=\\\"defaultColor\\\" [cpOKButton]=\\\"true\\\" [cpCancelButton]=\\\"true\\\" [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\"\\n                                    [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\" style=\\\"width: 78px\\\"\\n                                    [cpPosition]=\\\"'top'\\\" (colorPickerChange)=\\\"setSliderOptions()\\\" />\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"field-row\\\">\\n                        <div class=\\\"my-form-field slider-field\\\">\\n                            <span>{{'slider.property-font-size' | translate}}</span>\\n                            <mat-slider style=\\\"display:inline-block;\\\" [max]=\\\"50\\\" [min]=\\\"6\\\" [step]=\\\"1\\\" [thumbLabel]=\\\"true\\\" [(ngModel)]=\\\"options.marker.fontSize\\\"\\n                                (change)=\\\"setSliderOptions()\\\">\\n                            </mat-slider>\\n                        </div>\\n                        <div class=\\\"my-form-field slider-field\\\" style=\\\"padding-left: 10px\\\">\\n                            <span>{{'slider.property-divisions-height' | translate}}</span>\\n                            <mat-slider style=\\\"display:inline-block;min-width: 60px;\\\" [max]=\\\"15\\\" [min]=\\\"0\\\" [step]=\\\"1\\\" [thumbLabel]=\\\"true\\\" [(ngModel)]=\\\"options.marker.divHeight\\\"\\n                                (change)=\\\"setSliderOptions()\\\">\\n                            </mat-slider>\\n                        </div>\\n                        <div class=\\\"my-form-field slider-field\\\" style=\\\"padding-left: 10px\\\">\\n                            <span>{{'slider.property-divisions-width' | translate}}</span>\\n                            <mat-slider style=\\\"display:inline-block;min-width: 60px;\\\" [max]=\\\"15\\\" [min]=\\\"0\\\" [step]=\\\"1\\\" [thumbLabel]=\\\"true\\\" [(ngModel)]=\\\"options.marker.divWidth\\\"\\n                                (change)=\\\"setSliderOptions()\\\">\\n                            </mat-slider>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"field-row\\\">\\n                        <div class=\\\"my-form-field slider-field\\\">\\n                            <span>{{'slider.property-subdivisions' | translate}}</span>\\n                            <mat-slider style=\\\"display:inline-block;\\\" [max]=\\\"50\\\" [min]=\\\"0\\\" [step]=\\\"1\\\" [thumbLabel]=\\\"true\\\" [(ngModel)]=\\\"options.pips.density\\\"\\n                                (change)=\\\"setSliderOptions()\\\">\\n                            </mat-slider>\\n                        </div>\\n                        <div class=\\\"my-form-field slider-field\\\" style=\\\"padding-left: 10px\\\">\\n                            <span>{{'slider.property-subdivisions-height' | translate}}</span>\\n                            <mat-slider style=\\\"display:inline-block;min-width: 60px;\\\" [max]=\\\"15\\\" [min]=\\\"0\\\" [step]=\\\"1\\\" [thumbLabel]=\\\"true\\\" [(ngModel)]=\\\"options.marker.subHeight\\\"\\n                                (change)=\\\"setSliderOptions()\\\">\\n                            </mat-slider>\\n                        </div>\\n                        <div class=\\\"my-form-field slider-field\\\" style=\\\"padding-left: 10px\\\">\\n                            <span>{{'slider.property-subdivisions-width' | translate}}</span>\\n                            <mat-slider style=\\\"display:inline-block;min-width: 60px;\\\" [max]=\\\"15\\\" [min]=\\\"0\\\" [step]=\\\"1\\\" [thumbLabel]=\\\"true\\\" [(ngModel)]=\\\"options.marker.subWidth\\\"\\n                                (change)=\\\"setSliderOptions()\\\">\\n                            </mat-slider>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"field-row\\\" style=\\\"margin-top: 20px;\\\">\\n                        <div class=\\\"my-form-field\\\" style=\\\"width: 80px;\\\">\\n                            <span>{{'slider.property-tooltip' | translate}}</span>\\n                            <mat-select [(value)]=\\\"options.tooltip.type\\\" (selectionChange)=\\\"onChangeOptions('tooltipType', options.tooltip.type)\\\">\\n                                <mat-option *ngFor=\\\"let ev of tooltipType | enumToArray\\\" [value]=\\\"ev.key\\\">\\n                                    {{ ev.value }}\\n                                </mat-option>\\n                            </mat-select>\\n                        </div>\\n                        <div class=\\\"my-form-field slider-field color-field\\\" style=\\\"padding-left: 17px\\\">\\n                            <span>{{'slider.property-tooltip-color' | translate}}</span>\\n                            <input [(colorPicker)]=\\\"options.tooltip.color\\\" [style.background]=\\\"options.tooltip.color\\\" [cpAlphaChannel]=\\\"'always'\\\" class=\\\"input-color\\\"\\n                                [cpPresetColors]=\\\"defaultColor\\\" [cpOKButton]=\\\"true\\\" [cpCancelButton]=\\\"true\\\" [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\"\\n                                [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\" style=\\\"width: 78px\\\"\\n                                [cpPosition]=\\\"'top'\\\" (colorPickerChange)=\\\"setSliderOptions()\\\" />\\n                        </div>\\n                        <div class=\\\"my-form-field slider-field color-field\\\" style=\\\"padding-left: 10px\\\">\\n                            <span>{{'slider.property-tooltip-background' | translate}}</span>\\n                            <input [(colorPicker)]=\\\"options.tooltip.background\\\" [style.background]=\\\"options.tooltip.background\\\" [cpAlphaChannel]=\\\"'always'\\\" class=\\\"input-color\\\"\\n                                [cpPresetColors]=\\\"defaultColor\\\" [cpOKButton]=\\\"true\\\" [cpCancelButton]=\\\"true\\\" [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\"\\n                                [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\" style=\\\"width: 78px\\\"\\n                                [cpPosition]=\\\"'top'\\\" (colorPickerChange)=\\\"setSliderOptions()\\\" />\\n                        </div>\\n                    </div>\\n                    <div class=\\\"field-row\\\">\\n                        <div class=\\\"my-form-field slider-field\\\">\\n                            <span>{{'slider.property-tooltip-font-size' | translate}}</span>\\n                            <mat-slider style=\\\"display:inline-block;\\\" [max]=\\\"50\\\" [min]=\\\"6\\\" [step]=\\\"1\\\" [thumbLabel]=\\\"true\\\" [(ngModel)]=\\\"options.tooltip.fontSize\\\"\\n                                (change)=\\\"setSliderOptions()\\\">\\n                            </mat-slider>\\n                        </div>\\n                        <div class=\\\"my-form-field slider-field\\\" style=\\\"padding-left: 10px\\\">\\n                            <span>{{'slider.property-tooltip-decimals' | translate}}</span>\\n                            <mat-slider style=\\\"display:inline-block;min-width: 60px;\\\" [max]=\\\"3\\\" [min]=\\\"0\\\" [step]=\\\"1\\\" [thumbLabel]=\\\"true\\\" [(ngModel)]=\\\"options.tooltip.decimals\\\"\\n                                (change)=\\\"setSliderOptions()\\\">\\n                            </mat-slider>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </mat-tab>\\n    </mat-tab-group>\\n    <div mat-dialog-actions class=\\\"dialog-action\\\">\\n        <button mat-raised-button (click)=\\\"onNoClick()\\\">{{'dlg.cancel' | translate}}</button>\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onOkClick()\\\" [mat-dialog-close]=\\\"data\\\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\\n    </div>\\n</div>\"","import { Component, AfterViewInit, OnInit, Inject, ViewChild } from '@angular/core';\nimport { ChangeDetectorRef } from '@angular/core';\n\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Utils } from '../../../../_helpers/utils';\nimport { GaugeProperty } from '../../../../_models/hmi';\nimport { FlexHeadComponent } from '../../../gauge-property/flex-head/flex-head.component';\nimport { FlexAuthComponent } from '../../../gauge-property/flex-auth/flex-auth.component';\nimport { NgxNouisliderComponent, NgxNouisliderOptions } from '../../../../gui-helpers/ngx-nouislider/ngx-nouislider.component';\nimport { Define } from '../../../../_helpers/define';\n\n@Component({\n    selector: 'app-slider-property',\n    templateUrl: './slider-property.component.html',\n    styleUrls: ['./slider-property.component.css']\n})\nexport class SliderPropertyComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('flexauth') flexAuth: FlexAuthComponent;\n    @ViewChild('flexhead') flexHead: FlexHeadComponent;\n    @ViewChild('slider') slider: NgxNouisliderComponent;\n    property: GaugeProperty;\n    options = new NgxNouisliderOptions();\n    defaultColor = Utils.defaultColor;\n    fonts = Define.fonts;\n    name: string;\n    layoutHorizontal = { width: 400, height: 80, top: 180, left: 0 };\n    layoutVertical = { width: 80, height: 400, top: 20, left: 150 };\n    sliderLayout = this.layoutVertical;\n    orientationType = { horizontal: 'horizontal', vertical: 'vertical' };\n    directionType = { ltr: 'ltr', rtl: 'rtl' };\n    tooltipType = { none: 'none', hide: 'hide', show: 'show' };\n    staticScala = \"\";\n\n\n    constructor(public dialogRef: MatDialogRef<SliderPropertyComponent>,\n        private translateService: TranslateService,\n        private changeDetector: ChangeDetectorRef,\n        @Inject(MAT_DIALOG_DATA) public data: any) {\n\n        this.property = JSON.parse(JSON.stringify(this.data.settings.property));\n        if (!this.property) {\n            this.property = new GaugeProperty();\n        }\n        this.name = this.data.settings.name;\n        this.options = <NgxNouisliderOptions>this.property.options;\n        if (!this.options) {\n            this.options = new NgxNouisliderOptions();\n        }\n    }\n\n    ngOnInit() {\n        Object.keys(this.orientationType).forEach(key => {\n            this.translateService.get('slider.property-' + this.orientationType[key]).subscribe((txt: string) => { this.orientationType[key] = txt });\n        });\n        Object.keys(this.directionType).forEach(key => {\n            this.translateService.get('slider.property-' + this.directionType[key]).subscribe((txt: string) => { this.directionType[key] = txt });\n        });\n        Object.keys(this.tooltipType).forEach(key => {\n            this.translateService.get('slider.property-tooltip-' + this.tooltipType[key]).subscribe((txt: string) => { this.tooltipType[key] = txt });\n        });\n        this.sliderLayout = (this.options.orientation === 'vertical') ? this.layoutVertical : this.layoutHorizontal;\n        this.options.pips.values.forEach(k => {\n            if (this.staticScala.length) {\n                this.staticScala += ';';\n            }\n            this.staticScala += k.toString();\n        });  \n    }\n\n    ngAfterViewInit() {\n        this.setSliderOptions();\n    }    \n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n\n    onOkClick(): void {\n        this.data.settings.property = this.property;\n        this.data.settings.property.permission = this.flexAuth.permission;\n        this.data.settings.property.options = this.options;\n        this.data.settings.name = this.flexAuth.name;\n    }\n\n    onChangeOptions(opt, value) {\n        if (opt === 'min' || opt === 'max') {\n            this.options.range[opt] = parseFloat(value);\n        } else if (opt === 'step') {\n            this.options[opt] = parseFloat(value);\n        } else if (opt === 'staticScala') {\n            this.options.pips.values = [];\n            if (value) {\n                let tks = value.split(';');\n                tks.forEach(tk => {\n                    let v = parseFloat(tk);\n                    if (!isNaN(v)) {\n                        this.options.pips.values.push(v);\n                    }                    \n                });\n            }\n        } else if (opt === 'tooltipType') {\n            this.options.tooltip.type = value;\n        } else {\n            this.options[opt] = value;\n        }\n        this.setSliderOptions();\n    }\n\n    onChangeDirection(event) {\n        this.setSliderOptions();\n    }\n\n    setSliderOptions() {\n        this.sliderLayout = (this.options.orientation === 'vertical') ? this.layoutVertical : this.layoutHorizontal;\n        this.changeDetector.detectChanges();\n        let opt = JSON.parse(JSON.stringify(this.options));\n        this.slider.setOptions(opt);\n        this.slider.resize(this.sliderLayout.height, this.sliderLayout.width);\n    }\n    \n}\n","import { Injectable, ViewContainerRef, ComponentFactoryResolver } from '@angular/core';\n\nimport { GaugeSettings, Variable, GaugeStatus, WindowLink, Event } from '../../../_models/hmi';\nimport { Utils } from '../../../_helpers/utils';\nimport { GaugeDialogType } from '../../gauge-property/gauge-property.component';\n\nimport { NgxNouisliderComponent } from '../../../gui-helpers/ngx-nouislider/ngx-nouislider.component';\n\n@Injectable()\nexport class SliderComponent {\n\n    static TypeId = 'html_slider';\n    static TypeTag = 'svg-ext-' + SliderComponent.TypeId;\n    static LabelTag = 'HtmlSlider';\n    static prefix = 'D-SLI_';\n\n    static getSignals(pro: any) {\n        let res: string[] = [];\n        if (pro.variableId) {\n            res.push(pro.variableId);\n        }\n        if (pro.alarmId) {\n            res.push(pro.alarmId);\n        }\n        if (pro.actions) {\n            pro.actions.forEach(act => {\n                res.push(act.variableId);\n            });\n        }\n        return res;\n    }\n\n    static getDialogType(): GaugeDialogType {\n        return GaugeDialogType.Slider;\n    }\n\n    static bindEvents(ga: GaugeSettings, slider?: NgxNouisliderComponent, callback?:any): Event {\n        if (slider) {\n            slider.bindUpdate((val) => {\n                let event = new Event();\n                event.type = 'on';\n                event.ga = ga;\n                event.value = val;\n                callback(event);\n            });\n        }\n        return null;\n    }\n\n    static processValue(ga: GaugeSettings, svgele: any, sig: Variable, gaugeStatus: GaugeStatus, slider?: NgxNouisliderComponent) {\n        try {\n            if (slider) {\n                let val = parseFloat(sig.value);\n                if (Number.isNaN(val)) {\n                    // maybe boolean\n                    val = Number(sig.value);\n                } else {\n                    val = parseFloat(val.toFixed(5));\n                }\n                slider.setValue(val);\n            }\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n    static initElement(gab: GaugeSettings, resolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, options?: any) {\n        let ele = document.getElementById(gab.id);\n        if (ele) {\n            let htmlSlider = Utils.searchTreeStartWith(ele, this.prefix);\n            if (htmlSlider) {\n                const factory = resolver.resolveComponentFactory(NgxNouisliderComponent);\n                const componentRef = viewContainerRef.createComponent(factory);\n                htmlSlider.innerHTML = '';\n\n                componentRef.changeDetectorRef.detectChanges();\n                const loaderComponentElement = componentRef.location.nativeElement;\n                htmlSlider.appendChild(loaderComponentElement);\n                componentRef.instance.resize(htmlSlider.clientHeight, htmlSlider.clientWidth);\n                if (gab.property && gab.property.options) {\n                    if (!componentRef.instance.setOptions(gab.property.options)) {\n                        componentRef.instance.init();\n                    }\n                }\n                componentRef.instance['myComRef'] = componentRef;\n                return componentRef.instance;\n            }\n        }\n    }\n\n    static initElementColor(bkcolor, color, ele) {\n        if (ele) {\n            ele.setAttribute('fill', bkcolor);\n        }\n    }\n\n    static resize(gab: GaugeSettings, resolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, options?: any) {\n        let ele = document.getElementById(gab.id);\n        if (ele) {\n            let htmlSlider = Utils.searchTreeStartWith(ele, this.prefix);\n            if (htmlSlider) {        \n                const factory = resolver.resolveComponentFactory(NgxNouisliderComponent);\n                const componentRef = viewContainerRef.createComponent(factory);\n                htmlSlider.innerHTML = '';\n\n                componentRef.changeDetectorRef.detectChanges();\n                const loaderComponentElement = componentRef.location.nativeElement;\n                htmlSlider.appendChild(loaderComponentElement);\n                componentRef.instance.resize(htmlSlider.clientHeight, htmlSlider.clientWidth);\n                if (options) {\n                    componentRef.instance.setOptions(options);\n                }\n                return componentRef.instance;\n            }\n        }\n    }\n\n    static getFillColor(ele) {\n        if (ele) {\n            return ele.getAttribute('fill');\n        }\n    }\n\n    static detectChange(gab: GaugeSettings, res: any, ref: any) {\n        let options;\n        if (gab.property && gab.property.options) {\n            options = gab.property.options;\n        }\n        return SliderComponent.initElement(gab, res, ref, options);\n    }\n}","module.exports = \"\"","module.exports = \"\"","import { Component, Inject, OnInit, Input, AfterViewInit } from '@angular/core';\nimport { GaugeBaseComponent } from '../../gauge-base/gauge-base.component'\nimport { GaugeSettings, Variable, GaugeStatus, GaugeAction, GaugeActionsType, GaugeRangeProperty } from '../../../_models/hmi';\nimport { GaugeDialogType } from '../../gauge-property/gauge-property.component';\n\nimport { Utils } from '../../../_helpers/utils';\n\ndeclare var SVG: any;\n\n@Component({\n    selector: 'gauge-value',\n    templateUrl: './value.component.html',\n    styleUrls: ['./value.component.css']\n})\nexport class ValueComponent extends GaugeBaseComponent implements OnInit {\n\n    @Input() data: any;\n\n    static TypeTag = 'svg-ext-value';\n    static LabelTag = 'Value';\n\n    static actionsType = { hide: GaugeActionsType.hide, show: GaugeActionsType.show, blink: GaugeActionsType.blink };\n\n    constructor() {\n        super();\n    }\n\n    ngOnInit() {\n    }\n\n    static getSignals(pro: any) {\n        let res: string[] = [];\n        if (pro.actions && pro.actions.length) {\n            pro.actions.forEach(act => {\n                res.push(act.variableId);\n            });\n        }\n        if (pro.ranges) {\n            pro.ranges.forEach((range: GaugeRangeProperty) => {\n                if (range.textId) {\n                    res.push(range.textId);\n                }\n                if (range['fractionDigitsId']) {\n                    res.push(range['fractionDigitsId']);\n                }\n            })\n        }\n        if (pro.variableId) {\n            res.push(pro.variableId);\n        }\n        return res;\n    }\n\n    static getDialogType(): GaugeDialogType {\n        return GaugeDialogType.ValueAndUnit;\n    }\n\n    static getActions() {\n        return this.actionsType;\n    }\n    \n    static processValue(ga: GaugeSettings, svgele: any, sig: Variable, gaugeStatus: GaugeStatus) {\n        try {\n            if (svgele.node && svgele.node.children && svgele.node.children.length <= 1) {\n                let g = svgele.node.children[0];\n                let val: any = parseFloat(sig.value);\n                let isString = false;\n                switch(typeof(sig.value)){\n                    case \"undefined\":\n                        break;\n                    case \"boolean\":\n                        val = Number(sig.value);\n                        break;\n                    case \"number\":\n                        val = parseFloat(val.toFixed(5));\n                        break;\n                    case \"string\":\n                        val = sig.value;\n                        isString = true;\n                        break;\n                    default: break;\n                }\n                // if (Number.isNaN(val)) {\n                //     // maybe boolean\n                //     val = Number(sig.value);\n                //     // maybe string\n                //     if (Number.isNaN(val)) {\n                //         val = sig.value;\n                //         isString = true;\n                //     }\n                // } else {\n                //     val = parseFloat(val.toFixed(5));\n                // }\n                if (ga.property) {\n                    let unit = GaugeBaseComponent.getUnit(ga.property, gaugeStatus);\n                    let digit = GaugeBaseComponent.getDigits(ga.property, gaugeStatus);\n\n                    if (!isString && !Utils.isNullOrUndefined(digit)) {\n                        val = parseFloat(val).toFixed(digit);\n                    }\n                    if (ga.property.variableId === sig.id) {\n                        g.textContent = val;\n                        if (unit) {\n                            g.textContent += ' ' + unit;\n                        }\n                    }\n                    // check actions\n                    if (ga.property.actions) {\n                        ga.property.actions.forEach(act => {\n                            if (act.variableId === sig.id) {\n                                ValueComponent.processAction(act, svgele, parseFloat(val), gaugeStatus);\n                            }\n                        });\n                    }      \n                }\n            }\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n    static processAction(act: GaugeAction, svgele: any, value: any, gaugeStatus: GaugeStatus) {\n        if (this.actionsType[act.type] === this.actionsType.hide) {\n            if (act.range.min <= value && act.range.max >= value) {\n                let element = SVG.adopt(svgele.node);\n                this.runActionHide(element, act.type, gaugeStatus);\n            }\n        } else if (this.actionsType[act.type] === this.actionsType.show) {\n            if (act.range.min <= value && act.range.max >= value) {\n                let element = SVG.adopt(svgele.node);\n                this.runActionShow(element, act.type, gaugeStatus);\n            }\n        } else if (this.actionsType[act.type] === this.actionsType.blink) {\n            let element = SVG.adopt(svgele.node.children[0]);\n            let inRange = (act.range.min <= value && act.range.max >= value);\n            this.checkActionBlink(element, act.type, gaugeStatus, inRange, act.options, false);\n        }\n    }\n}\n\nexport class ValueProperty {\n    signalid: string = '';\n    format: string = '##.##'\n}\n","module.exports = \".svg-property-split2:after {\\n    display: table;\\n    clear: both;\\n}\\n\\n.svg-property-split2 div {\\n    display: inline-block;\\n}\\n\\n.svg-property {\\n    color: rgba(255, 255, 255, 0.75);\\n\\n}\\n\\n.svg-property span {\\n    display: block;\\n    font-size: 10px;\\n    margin: 0px 5px 0px 10px;\\n}\\n\\n.svg-property input {\\n    display: block;\\n    margin: 0px 10px 12px 10px;\\n    border: unset;\\n    background-color: inherit;\\n    color: var(--toolboxFlyColor);\\n    border-bottom: 1px solid var(--toolboxFlyColor);\\n}\\n\\n.mat-button {\\n    min-width: 60px;\\n}\\n\"","module.exports = \"<div class=\\\"svg-property-split2\\\" *ngIf=\\\"settings\\\">\\n    <div class=\\\"svg-property\\\" title=\\\"Gauge name\\\">\\n        <span>{{'editor.interactivity-name' | translate}}</span>\\n        <input type=\\\"text\\\" id=\\\"gaugename\\\" [(ngModel)]=\\\"settings.name\\\" type=\\\"text\\\" readonly />\\n    </div>\\n    <div class=\\\"svg-property\\\" style=\\\"display:block !important; padding: 0px 10px 5px 10px;\\\" title=\\\"Change rectangle height\\\">\\n        <button mat-button color=\\\"primary\\\" style=\\\"background-color: dimgrey;color:white; display: inline-block\\\" (click)=\\\"onEdit()\\\">{{'gauges.property-title' | translate}}</button>\\n    </div>\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { GaugeSettings, GaugeProperty, GaugeEvent, GaugeEventType, GaugeStatus, GaugeActionStatus } from '../../_models/hmi';\n\nimport { Utils } from '../../_helpers/utils';\n\n// declare var SVG: any;\n\n@Component({\n    selector: 'gauge-base',\n    templateUrl: './gauge-base.component.html',\n    styleUrls: ['./gauge-base.component.css']\n})\nexport class GaugeBaseComponent implements OnInit {\n\n    @Input() data: any;\n    @Input() settings: GaugeSettings;\n    @Output() edit: EventEmitter<any> = new EventEmitter();\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n    onEdit() {\n        this.edit.emit(this.settings);\n    }\n\n    static pathToAbsolute(relativePath) {\n        var pattern = /([ml])\\s*(-?\\d*\\.?\\d+)\\s*,\\s*(-?\\d*\\.?\\d+)/ig,\n            coords = [];\n\n        relativePath.replace(pattern, function (match, command, x, y) {\n            var prev;\n\n            x = parseFloat(x);\n            y = parseFloat(y);\n\n            if (coords.length === 0 || command.toUpperCase() === command) {\n                coords.push([x, y]);\n            } else {\n                prev = coords[coords.length - 1];\n                coords.push([x + prev[0], y + prev[1]]);\n            }\n        });\n\n        return coords;\n    }\n\n    static getEvents(pro: GaugeProperty, type: GaugeEventType) {\n        let res: GaugeEvent[] = [];\n        if (!pro || !pro.events) {\n            return null;\n        }\n        let idxtype = Object.values(GaugeEventType).indexOf(type);\n        pro.events.forEach(ev => {\n            if (Object.keys(GaugeEventType).indexOf(ev.type) === idxtype) {\n                res.push(ev);\n            }\n        });\n        return res;\n    }\n\n    static getUnit(pro: GaugeProperty, gaugeStatus: GaugeStatus) {\n        if (pro) {\n            if (pro.ranges && pro.ranges.length > 0 && pro.ranges[0].type === 'unit') {\n                if (pro.ranges[0].textId && !Utils.isNullOrUndefined(gaugeStatus.variablesValue[pro.ranges[0].textId])) {\n                    pro.ranges[0].text = gaugeStatus.variablesValue[pro.ranges[0].textId];\n                }\n                return pro.ranges[0].text;\n            }\n        }\n        return '';\n    }\n\n    static getDigits(pro: GaugeProperty, gaugeStatus: GaugeStatus) {\n        if (pro) {\n            if (pro.ranges && pro.ranges.length > 0) {\n                if (pro.ranges[0]['fractionDigitsId'] && !Utils.isNullOrUndefined(gaugeStatus.variablesValue[pro.ranges[0]['fractionDigitsId']])) {\n                    pro.ranges[0]['fractionDigits'] = gaugeStatus.variablesValue[pro.ranges[0]['fractionDigitsId']];\n                } \n                if (pro.ranges[0]['fractionDigits']) {\n                    return pro.ranges[0]['fractionDigits'];\n                }\n            }\n        }\n        return null;\n    }\n\n    static runActionHide(element, type, gaugeStatus: GaugeStatus) {\n        let actionRef = <GaugeActionStatus>{ type: type, animr: element.hide() };\n        if (gaugeStatus.actionRef) {\n            actionRef.spool = gaugeStatus.actionRef.spool;\n            actionRef.timer = gaugeStatus.actionRef.timer;\n        }\n        gaugeStatus.actionRef = actionRef;\n    }\n\n    static runActionShow(element, type, gaugeStatus: GaugeStatus) {\n        let actionRef = <GaugeActionStatus>{ type: type, animr: element.show() };\n        if (gaugeStatus.actionRef) {\n            actionRef.spool = gaugeStatus.actionRef.spool;\n            actionRef.timer = gaugeStatus.actionRef.timer;\n        }\n        gaugeStatus.actionRef = actionRef;\n    }\n\n    static checkActionBlink(element: any, type: any, gaugeStatus: GaugeStatus, toEnable: boolean, options: any, dom: boolean) {\n        if (!gaugeStatus.actionRef) {\n            gaugeStatus.actionRef = new GaugeActionStatus(type);\n        }\n        gaugeStatus.actionRef.type = type;\n        if (toEnable && options.interval && !gaugeStatus.actionRef.timer) {\n            var blinkStatus = false;\n            // save colors to restore on break\n            try {\n                if (dom) gaugeStatus.actionRef.spool = { bk: element.style.backgroundColor, clr: element.style.color };\n                else gaugeStatus.actionRef.spool = { bk: element.node.getAttribute('fill'), clr: element.node.getAttribute('stroke') };\n            } catch (err) {\n                console.error(err);\n            }\n            gaugeStatus.actionRef.timer = setInterval(() => {\n                blinkStatus = (blinkStatus) ? false : true;\n                try {\n                    if (blinkStatus) {\n                        if (dom) {\n                            element.style.backgroundColor = options.fillA;\n                            element.style.color = options.strokeA;\n                        } else {\n                            element.node.setAttribute('fill', options.fillA);\n                            element.node.setAttribute('stroke', options.strokeA);\n                        }\n                    } else {\n                        if (dom) {\n                            element.style.backgroundColor = options.fillB;\n                            element.style.color = options.strokeB;\n                        } else {\n                            element.node.setAttribute('fill', options.fillB);\n                            element.node.setAttribute('stroke', options.strokeB);\n                        }\n                    }\n                } catch (err) {\n                    console.error(err);\n                }\n            }, options.interval);\n        } else if (!toEnable) {\n            try {\n                if (gaugeStatus.actionRef.timer) {\n                    clearInterval(gaugeStatus.actionRef.timer);\n                    gaugeStatus.actionRef.timer = null;\n                }\n                // restore gauge\n                if (gaugeStatus.actionRef.spool) {\n                    if (dom) {\n                        element.style.backgroundColor = gaugeStatus.actionRef.spool.bk;\n                        element.style.color = gaugeStatus.actionRef.spool.clr;\n                    } else {\n                        element.node.setAttribute('fill', gaugeStatus.actionRef.spool.bk);\n                        element.node.setAttribute('stroke', gaugeStatus.actionRef.spool.clr);\n                    }\n                }\n            } catch (err) { \n                console.error(err);\n            }\n        }\n    }\n}\n","module.exports = \".item {\\n    display: block;\\n    /* min-height: 100px; */\\n    width: 100%;\\n    border-bottom: 1px solid rgba(0,0,0,0.1);\\n    padding: 0px 0px 5px 0px;\\n    margin-bottom: 3px;\\n}\\n\\n.item-head {\\n    display: block;\\n}\\n\\n.remove {\\n    position: relative;\\n    top: 4px;\\n    right: 0px;\\n}\\n\\n.item-remove {\\n    float: right;\\n    /* padding-top: 6px; */\\n    /* min-width: 140px; */\\n}\\n\\n.action-content {\\n    display: block;\\n    padding-top: 2px;\\n    margin-left: 30px;\\n}\\n\\n.item-range {\\n    display: inline-block;\\n    min-width: 240px;\\n    width: 240px;\\n}\\n\\n.action-blink {\\n    display: inline-block;\\n    padding-top: 5px;\\n}\\n\\n::ng-deep .ng5-slider .ng5-slider-pointer { \\n    width: 16px !important;\\n    height: 16px !important;\\n    border-radius: 8px !important; \\n    top: -7px !important \\n}\\n\\n::ng-deep .ng5-slider .ng5-slider-pointer:after { \\n    top: 6px !important;\\n    left: 6px !important;\\n    width: 4px !important;\\n    height: 4px !important; \\n    border-radius: 2px !important \\n}\\n\\n.input-slider {\\n    display: inline;\\n    /* max-width: 160px; */\\n}\\n\\n::ng-deep .input-slider span {\\n    font-size: 14px !important;\\n}\\n\\n.input-slider ng5-slider {\\n    /* display: block; */\\n    max-width: 300px;\\n    margin-top: 29px;\\n    margin-right: 20px;\\n}\\n\"","module.exports = \"<div *ngFor=\\\"let item of actions; index as i\\\" class=\\\"item\\\">\\n    <flex-variable class=\\\"item-head\\\" [data]=\\\"data\\\" (onchange)=\\\"setVariable(i, $event)\\\" [variableId]=\\\"item.variableId\\\" [withStaticValue]=\\\"false\\\">\\n    </flex-variable>\\n    <div class=\\\"action-content\\\">\\n        <div *ngIf=\\\"slideView\\\" class=\\\"item-range\\\">\\n            <div class=\\\"my-form-field\\\">\\n                <span>{{'gauges.property-input-min' | translate}}</span>\\n                <input numberOnly [(ngModel)]=\\\"item.range.min\\\" type=\\\"text\\\" style=\\\"width: 80px\\\">\\n            </div>\\n            <div class=\\\"my-form-field\\\" style=\\\"padding-left: 20px;\\\">\\n                <span>{{'gauges.property-input-max' | translate}}</span>\\n                <input numberOnly [(ngModel)]=\\\"item.range.max\\\" type=\\\"text\\\" style=\\\"width: 80px\\\">\\n            </div>\\n        </div>\\n        <!-- <div class=\\\"item-range input-slider\\\" *ngIf=\\\"!slideView\\\">\\n            <ng5-slider [(value)]=\\\"item.min\\\" [(highValue)]=\\\"item.max\\\" [options]=\\\"options\\\"></ng5-slider>\\n        </div> -->\\n        <div class=\\\"my-form-field\\\" style=\\\"width: 300px;\\\">\\n            <span>{{'gauges.property-action-type' | translate}}</span>\\n            <mat-select [(value)]=\\\"item.type\\\" (selectionChange)=\\\"onCheckActionType(item.type, item)\\\">\\n                <mat-option *ngFor=\\\"let ev of actionsSupported | enumToArray\\\" [value]=\\\"ev.key\\\">\\n                    {{ ev.value }}\\n                </mat-option>\\n            </mat-select>\\n        </div>\\n        <div class=\\\"item-remove\\\">\\n            <button mat-icon-button (click)=\\\"onRemoveAction(i)\\\" class=\\\"_remove\\\">\\n                <mat-icon>clear</mat-icon>\\n            </button>\\n        </div>\\n        <div [ngSwitch]=\\\"item.type\\\">\\n            <div *ngSwitchCase=\\\"actionBlink\\\" class=\\\"action-blink\\\">\\n                <div class=\\\"my-form-field\\\">\\n                    <span>{{'gauges.property-input-color' | translate}}</span>\\n                    <input [(colorPicker)]=\\\"item.options.fillA\\\" [value]=\\\"item.options.fillA\\\" [style.background]=\\\"item.options.fillA\\\" [cpPresetColors]=\\\"defaultColor\\\" [cpOKButton]=\\\"true\\\" [cpCancelButton]=\\\"true\\\"\\n                        [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\" [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\" class=\\\"input-color\\\"\\n                        style=\\\"width:70px;\\\" [cpPosition]=\\\"'auto'\\\" [cpAlphaChannel]=\\\"'always'\\\" [cpOutputFormat]=\\\"'hex'\\\"/>\\n                </div>\\n                <div class=\\\"my-form-field\\\" style=\\\"margin-left: 10px;\\\">\\n                    <span>{{'gauges.property-input-stroke' | translate}}</span>\\n                    <input [(colorPicker)]=\\\"item.options.strokeA\\\" [value]=\\\"item.options.strokeA\\\" [style.background]=\\\"item.options.strokeA\\\" [cpPresetColors]=\\\"defaultColor\\\" [cpOKButton]=\\\"true\\\" [cpCancelButton]=\\\"true\\\"\\n                        [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\" [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\" class=\\\"input-color\\\"\\n                        style=\\\"width:70px;\\\" [cpPosition]=\\\"'auto'\\\" [cpAlphaChannel]=\\\"'always'\\\" [cpOutputFormat]=\\\"'hex'\\\"/>\\n                </div>\\n                <div class=\\\"my-form-field\\\" style=\\\"padding-left: 35px;padding-right: 35px;\\\">\\n                    <span>{{'gauges.property-interval-msec' | translate}}</span>\\n                    <input numberOnly [(ngModel)]=\\\"item.options.interval\\\" type=\\\"text\\\" style=\\\"width: 80px\\\">\\n                </div>\\n                <div class=\\\"my-form-field\\\">\\n                    <span>{{'gauges.property-input-color' | translate}}</span>\\n                    <input [(colorPicker)]=\\\"item.options.fillB\\\" [value]=\\\"item.options.fillB\\\" [style.background]=\\\"item.options.fillB\\\" [cpPresetColors]=\\\"defaultColor\\\" [cpOKButton]=\\\"true\\\" [cpCancelButton]=\\\"true\\\"\\n                        [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\" [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\" class=\\\"input-color\\\"\\n                        style=\\\"width:70px;\\\" [cpPosition]=\\\"'auto'\\\" [cpAlphaChannel]=\\\"'always'\\\" [cpOutputFormat]=\\\"'hex'\\\"/>\\n                </div>\\n                <div class=\\\"my-form-field\\\" style=\\\"margin-left: 10px;\\\">\\n                    <span>{{'gauges.property-input-stroke' | translate}}</span>\\n                    <input [(colorPicker)]=\\\"item.options.strokeB\\\" [value]=\\\"item.options.strokeB\\\" [style.background]=\\\"item.options.strokeB\\\" [cpPresetColors]=\\\"defaultColor\\\" [cpOKButton]=\\\"true\\\" [cpCancelButton]=\\\"true\\\"\\n                        [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\" [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\" class=\\\"input-color\\\"\\n                        style=\\\"width:70px;\\\" [cpPosition]=\\\"'auto'\\\" [cpAlphaChannel]=\\\"'always'\\\" [cpOutputFormat]=\\\"'hex'\\\"/>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\n\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { GaugeProperty, GaugeAction, GaugeRangeProperty, GaugeActionsType, GaugeActionBlink } from '../../../_models/hmi';\n\n@Component({\n    selector: 'flex-action',\n    templateUrl: './flex-action.component.html',\n    styleUrls: ['./flex-action.component.css']\n})\nexport class FlexActionComponent implements OnInit {\n\n    @Input() data: any;\n    @Input() property: GaugeProperty;\n\n    actions: GaugeAction[];\n    actionsSupported: any;\n    actionBlink = Object.keys(GaugeActionsType).find(key => GaugeActionsType[key] === GaugeActionsType.blink);\n    itemtype: any;\n    slideView = true;\n\n    constructor(private translateService: TranslateService) { }\n\n    ngOnInit() {\n        if (this.property) {\n            this.actions = this.property.actions;\n        }\n        if (!this.actions || this.actions.length <= 0) {\n            this.onAddAction();\n        }\n        // this.itemtype = this.data.withActions.clockwise;\n        if (this.data.withActions) {\n\t\t\tthis.actionsSupported = this.data.withActions;\n\t\t\tObject.keys(this.actionsSupported).forEach(key => {\n\t\t\t\tthis.translateService.get(this.actionsSupported[key]).subscribe((txt: string) => { this.actionsSupported[key] = txt });\n\t\t\t});\n\t\t}\n    }\n\n    getActions() {\n        let result = null;\n        if (this.actions) {\n            result = [];\n            this.actions.forEach(act => {\n                if (act.variableId) {\n                    result.push(act);\n                }\n            });\n        }\n        return result;\n    }\n\n    onAddAction() {\n        let ga: GaugeAction = new GaugeAction();\n        ga.range = new GaugeRangeProperty();\n        this.addAction(ga);\n    }\n\n    onRemoveAction(index: number) {\n        this.actions.splice(index, 1);\n    }\n\n    onRangeViewToggle(slideView) {\n        this.slideView = slideView;\n        // this.flexInput.changeTag(this.currentTag);\n    }\n\n    setVariable(index, event) {\n        this.actions[index].variableId = event.variableId;\n    }\n\n    private addAction(ga: GaugeAction) {\n        if (!this.actions) {\n            this.actions = [];\n        }\n        this.actions.push(ga);\n    }\n\n    onCheckActionType(type: any, ga: GaugeAction) {\n        if (type === this.actionBlink && typeof(ga.options) !== typeof(GaugeActionBlink)) {\n            ga.options = new GaugeActionBlink();\n        }\n    }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"my-form-field\\\">\\n    <span>{{'gauges.property-name' | translate}}</span>\\n    <input [(ngModel)]=\\\"name\\\" style=\\\"width: 220px\\\" type=\\\"text\\\">\\n</div>\\n<div class=\\\"my-form-field\\\" style=\\\"vertical-align: bottom; margin-left: 13px;\\\">\\n    <span>{{'gauges.property-permission' | translate}}</span>\\n    <div style=\\\"text-align:center;cursor:pointer;\\\" class=\\\"my-form-field-permission\\\" (click)=\\\"onEditPermission()\\\">\\n        <mat-icon class=\\\"header-icon\\\" style=\\\"line-height: 30px;\\\" *ngIf=\\\"!permission\\\">lock_open</mat-icon>\\n        <mat-icon class=\\\"header-icon\\\" style=\\\"line-height: 30px;\\\" *ngIf=\\\"permission\\\">lock</mat-icon>\\n    </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\nimport { GaugeProperty } from '../../../_models/hmi';\nimport { DialogGaugePermission } from '../../gauge-property/gauge-property.component';\n\n@Component({\n    selector: 'flex-auth',\n    templateUrl: './flex-auth.component.html',\n    styleUrls: ['./flex-auth.component.css']\n})\nexport class FlexAuthComponent implements OnInit {\n\n    @Input() name: string;\n    @Input() permission: number;\n\n\n    constructor(public dialog: MatDialog) { }\n\n    ngOnInit() {\n        // this.property = JSON.parse(JSON.stringify(this.data.settings.property));\n    }\n\n    onEditPermission() {\n        let permission = this.permission;\n        let dialogRef = this.dialog.open(DialogGaugePermission, {\n            position: { top: '60px' },\n            data: { permission: permission }\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.permission = result.permission;\n            }\n        });\n    }\n\n    getResult() {\n        return { name: this.name, pemission: this.permission };\n    }\n}\n","module.exports = \".item {\\n    display: block;\\n    width: 100%;\\n    border-bottom: 1px solid rgba(0, 0, 0, 0.1);\\n    padding: 0px 0px 5px 0px;\\n    min-width: 664px;\\n    margin-bottom: 3px;\\n}\\n\\n.remove {\\n    position: relative;\\n    top: 4px;\\n    right: 0px;\\n}\\n\\n.item-remove {\\n    /* display: inline-block; */\\n    float: right;\\n    /* padding-top: 6px; */\\n    /* min-width: 140px; */\\n}\\n\"","module.exports = \"<div *ngFor=\\\"let item of events; index as i\\\" class=\\\"item\\\">\\n    <div class=\\\"item-remove\\\">\\n        <button mat-icon-button (click)=\\\"onRemoveEvent(i)\\\" class=\\\"remove\\\">\\n            <mat-icon>clear</mat-icon>\\n        </button>\\n    </div>\\n    <div style=\\\"display: inline-block;\\\">\\n        <div class=\\\"my-form-field\\\" style=\\\"width: 140px;\\\">\\n            <span>{{'gauges.property-event-type' | translate}}</span>\\n            <mat-select [(value)]=\\\"item.type\\\">\\n                <mat-option *ngFor=\\\"let ev of eventType | enumToArray\\\" [value]=\\\"ev.key\\\">\\n                    {{ ev.value }}\\n                </mat-option>\\n            </mat-select>\\n        </div>\\n        <div class=\\\"my-form-field\\\" style=\\\"width: 140px;padding-left: 20px\\\">\\n            <span>{{'gauges.property-event-action' | translate}}</span>\\n            <mat-select [(value)]=\\\"item.action\\\" (change)=\\\"item.actparam = '';\\\">\\n                <mat-option *ngFor=\\\"let type of actionType | enumToArray\\\" [value]=\\\"type.key\\\">\\n                    {{ type.value }}\\n                </mat-option>\\n            </mat-select>\\n        </div>\\n    </div>\\n    <div class=\\\"my-form-field\\\" style=\\\"width: 260px;padding-left: 20px\\\" *ngIf=\\\"withDestination(item.action)\\\">\\n        <span>{{'gauges.property-event-destination' | translate}}</span>\\n        <mat-select [(value)]=\\\"item.actparam\\\">\\n            <mat-option *ngFor=\\\"let v of views; index as i\\\" [value]=\\\"v.id\\\">{{v.name}}</mat-option>\\n        </mat-select>\\n    </div>\\n    <div *ngIf=\\\"withDestination(item.action)\\\" style=\\\"padding-left: 25px;\\\">\\n        <flex-variables-mapping [(mapping)]=\\\"item.actoptions['variablesMapping']\\\" [view]=\\\"getView(item.actparam)\\\" [data]=\\\"data\\\"></flex-variables-mapping>\\n    </div>\\n    <div style=\\\"display: inline-block\\\" *ngIf=\\\"withSetInput(item.action)\\\">\\n        <div class=\\\"my-form-field\\\" style=\\\"width: 260px;padding-left: 20px;\\\">\\n            <span>{{'gauges.property-event-input' | translate}}</span>\\n            <mat-select [(value)]=\\\"item.actparam\\\">\\n                <mat-option *ngFor=\\\"let v of inputs; index as i\\\" [value]=\\\"v.id\\\">{{v.name}}</mat-option>\\n            </mat-select>\\n        </div>\\n    </div>\\n    <div style=\\\"display: inline-block\\\" *ngIf=\\\"withSetValue(item.action)\\\">\\n        <div class=\\\"my-form-field\\\" style=\\\"padding-left: 20px;\\\">\\n            <span>{{'gauges.property-event-value' | translate}}</span>\\n            <input numberOnly [(ngModel)]=\\\"item.actparam\\\" type=\\\"text\\\" style=\\\"width: 260px\\\">\\n        </div>\\n    </div>\\n    <div style=\\\"display: block; padding-top: 5px;padding-left: 25px;\\\"\\n        *ngIf=\\\"withToggleValue(item.action) || withSetValue(item.action) || withSetInput(item.action)\\\">\\n        <flex-variable style=\\\"display: block\\\" [data]=\\\"data\\\" [(value)]=\\\"item.actoptions.variable\\\" [withStaticValue]=\\\"false\\\"></flex-variable>\\n    </div>\\n    <div style=\\\"display: inline-block\\\" *ngIf=\\\"withAddress(item.action)\\\">\\n        <div class=\\\"my-form-field\\\" style=\\\"padding-left: 20px;\\\">\\n            <span>{{'gauges.property-event-address' | translate}}</span>\\n            <input [(ngModel)]=\\\"item.actparam\\\" type=\\\"text\\\" style=\\\"width: 260px\\\">\\n        </div>\\n        <div style=\\\"display: table; padding-left: 20px; padding-top: 5px;\\\" *ngIf=\\\"withAddress(item.action)\\\">\\n            <div class=\\\"my-form-field\\\">\\n                <span>{{'gauges.property-event-width' | translate}}</span>\\n                <input numberOnly [(ngModel)]=\\\"item.actoptions.width\\\" type=\\\"text\\\" style=\\\"width: 60px\\\">\\n            </div>\\n            <div class=\\\"my-form-field\\\" style=\\\"padding-left: 20px;\\\">\\n                <span>{{'gauges.property-event-height' | translate}}</span>\\n                <input numberOnly [(ngModel)]=\\\"item.actoptions.height\\\" type=\\\"text\\\" style=\\\"width: 60px\\\">\\n            </div>\\n            <div class=\\\"my-form-field\\\" style=\\\"padding-left: 20px;\\\" *ngIf=\\\"withScale(item.action)\\\">\\n                <span>{{'gauges.property-event-scale' | translate}}</span>\\n                <input numberOnly [(ngModel)]=\\\"item.actoptions.scale\\\" type=\\\"text\\\" style=\\\"width: 60px\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import {Component, Input, OnInit} from '@angular/core';\n\nimport { TranslateService } from '@ngx-translate/core';\n\nimport {\n    GaugeEvent,\n    GaugeEventActionType,\n    GaugeEventType,\n    GaugeProperty,\n    GaugeSettings,\n    View\n} from '../../../_models/hmi';\n\n@Component({\n    selector: 'flex-event',\n    templateUrl: './flex-event.component.html',\n    styleUrls: ['./flex-event.component.css']\n})\nexport class FlexEventComponent implements OnInit {\n\n    @Input() property: GaugeProperty;\n    @Input() views: View[];\n    @Input() inputs: GaugeSettings[];\n    @Input() data: any;\n\n    events: GaugeEvent[];\n    eventType: any;\n    actionType: any;\n\n    constructor(private translateService: TranslateService) {\n    }\n\n    ngOnInit() {\n        this.eventType = GaugeEventType;\n        this.actionType = GaugeEventActionType;\n\n        Object.keys(this.eventType).forEach(key => {\n            this.translateService.get(this.eventType[key]).subscribe((txt: string) => { this.eventType[key] = txt });\n        });\n        Object.keys(this.actionType).forEach(key => {\n            this.translateService.get(this.actionType[key]).subscribe((txt: string) => { this.actionType[key] = txt });\n        });\n\n        if (this.property) {\n            this.events = this.property.events;\n            // compatibility with <= 1.0.4\n            this.events.forEach(element => {\n                if (!element.actoptions || Object.keys(element.actoptions).length == 0) {\n                    element.actoptions = {variablesMapping: []};\n                }\n            });\n        }\n        if (!this.events || this.events.length <= 0) {\n            this.onAddEvent();\n        }\n    }\n\n    getEvents() {\n        let result = [];\n        if (this.events) {\n            this.events.forEach(element => {\n                if (element.type) {\n                    result.push(element);\n                }\n            });\n        }\n        return result;\n    }\n\n    onAddEvent() {\n        let ga: GaugeEvent = new GaugeEvent();\n        this.addEvent(ga);\n    }\n\n    onRemoveEvent(index: number) {\n        this.events.splice(index, 1);\n    }\n\n    withDestination(action) {\n        let a = Object.keys(this.actionType).indexOf(action);\n        let b = Object.values(this.actionType).indexOf(GaugeEventActionType.onpage);\n        let c = Object.values(this.actionType).indexOf(GaugeEventActionType.onwindow);\n        let d = Object.values(this.actionType).indexOf(GaugeEventActionType.ondialog);\n        return a === b || a === c || a === d;\n    }\n\n    withSetValue(action) {\n        let a = Object.keys(this.actionType).indexOf(action);\n        let b = Object.values(this.actionType).indexOf(GaugeEventActionType.onSetValue);\n        return a === b;\n    }\n\n    withToggleValue(action) {\n        let a = Object.keys(this.actionType).indexOf(action);\n        let b = Object.values(this.actionType).indexOf(GaugeEventActionType.onToggleValue);\n        return a === b;\n    }\n\n    withSetInput(action) {\n        let a = Object.keys(this.actionType).indexOf(action);\n        let b = Object.values(this.actionType).indexOf(GaugeEventActionType.onSetInput);\n        return a === b;\n    }\n\n    withAddress(action) {\n        let a = Object.keys(this.actionType).indexOf(action);\n        let b = Object.values(this.actionType).indexOf(GaugeEventActionType.oniframe);\n        let c = Object.values(this.actionType).indexOf(GaugeEventActionType.oncard);\n        return a === b || a === c;\n    }\n\n    withScale(action) {\n        let a = Object.keys(this.actionType).indexOf(action);\n        let b = Object.values(this.actionType).indexOf(GaugeEventActionType.oniframe);\n        return a === b;\n    }\n\n    getView(viewId: any) {\n        return this.views.find(function (item) {\n            return item.id == viewId\n        })\n    }\n\n    private addEvent(ge: GaugeEvent) {\n        if (!this.events) {\n            this.events = [];\n        }\n        this.events.push(ge);\n    }\n}\n","module.exports = \".container {\\n    /* border: 1px solid rgba(248,249,250, 1); */\\n}\\n\\n.head {\\n    /* background-color: rgba(243,243,243, 1); */\\n    /* padding-left: 10px; */\\n    /* padding-right: 10px; */\\n    padding-top: 0;\\n}\\n\\n.selection {\\n    margin-right: 20px;\\n    margin-bottom: -10px;\\n    margin-top: 2px;\\n    width: 220px;\\n}\\n\\n.selection .mat-form-field-wrapper {\\n    padding-bottom: 15px !important;\\n}\\n\\n.item-set {\\n    display: inline-block;\\n    float: right;\\n    padding-top: 13px;\\n    min-width: 140px;\\n}\\n\\n.panel-color-class {\\n    position: relative;\\n    top: 30px;\\n}\\n\\n.panel-color {\\n    display: inline-block;\\n    padding-top: 10px;\\n    max-width: 60px;\\n    /* border: 1px solid rgba(0,0,0,0.1); */\\n    height: 20px;\\n    line-height: 12px;\\n    margin-right: 25px;\\n}\\n\\n.option-color {\\n    height: 32px !important;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"head\\\" style=\\\"padding-top: 10px;\\\">\\n        <flex-variable [data]=\\\"data\\\" (onchange)=\\\"setVariable($event)\\\" [variableId]=\\\"property.variableId\\\" [variableValue]=\\\"property.variableValue\\\" [withStaticValue]=\\\"withStaticValue\\\">\\n        </flex-variable>\\n    </div>\\n    <flex-input #flexinput *ngIf=\\\"withInput\\\" [data]=\\\"data\\\" [ranges]=\\\"property.ranges\\\" [default]=\\\"defaultValue\\\" [inputType]=\\\"withInput\\\" style=\\\"padding-bottom: 5px\\\">\\n    </flex-input>\\n</div>\"","import { Component, Input, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { takeUntil } from 'rxjs/operators';\nimport { ReplaySubject, Subject } from 'rxjs';\n\nimport { FlexInputComponent } from '../flex-input/flex-input.component';\nimport { GaugeProperty } from '../../../_models/hmi';\nimport { Device, Tag } from '../../../_models/device';\nimport { HmiService } from '../../../_services/hmi.service';\nimport { Utils } from '../../../_helpers/utils';\n\ninterface Variable {\n    id: string;\n    name: string;\n}\n\n@Component({\n    selector: 'flex-head',\n    templateUrl: './flex-head.component.html',\n    styleUrls: ['./flex-head.component.css'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class FlexHeadComponent implements OnInit {\n\n    @Input() data: any;\n    @Input() property: GaugeProperty;\n    @Input() withStaticValue = true;\n    @ViewChild('flexinput') flexInput: FlexInputComponent;\n\n    variable: any;\n    withInput = null;\n    alarme: any;\n    currentTag: Tag = null;\n    defaultValue: any;\n    defaultColor = Utils.defaultColor;\n\n    // alarm: string;\n    public alarmDeviceCtrl: FormControl = new FormControl();\n    public alarmDeviceFilterCtrl: FormControl = new FormControl();\n\n    public alarmCtrl: FormControl = new FormControl();\n    public alarmFilterCtrl: FormControl = new FormControl();\n\n    /** list of variable filtered by search keyword */\n    public filteredAlarmDevice: ReplaySubject<Device[]> = new ReplaySubject<Device[]>(1);\n    /** list of variable filtered by search keyword */\n    public filteredAlarm: ReplaySubject<Variable[]> = new ReplaySubject<Variable[]>(1);\n\n    /** Subject that emits when the component has been destroyed. */\n    private _onDestroy = new Subject<void>();\n\n    constructor() {\n    }\n\n    ngOnInit() {\n        if (!this.property) {\n            this.property = new GaugeProperty();\n        }\n    }\n\n    ngAfterViewInit() {\n    }\n\n    ngOnDestroy() {\n        this._onDestroy.next();\n        this._onDestroy.complete();\n    }\n\n    getProperty() {\n        if (this.withInput) {\n            this.property.ranges = this.flexInput.getRanges();\n        }\n        return this.property;\n    }\n\n    getVariableLabel(vari) {\n        if (vari.label) {\n            return vari.label;\n        } else {\n            return vari.name;\n        }\n    }\n\n    setVariable(event) {\n        this.property.variableId = event.variableId;\n        this.property.variableValue = event.variableValue;\n\n        if (this.flexInput) {\n            this.flexInput.changeTag(event.variableRaw);\n        }\n    }\n\n    onAddInput() {\n        this.flexInput.onAddInput();\n    }\n\n    onRangeViewToggle(slideView) {\n        this.flexInput.onRangeViewToggle(slideView);\n        this.flexInput.changeTag(this.currentTag);\n    }\n}\n","module.exports = \".grid-conta {\\n    /* margin-left: 30px; */\\n    /* max-height: 260px; */\\n    /* overflow: auto; */\\n}\\n\\n.item {\\n    display: block;\\n    /* min-height: 54px; */\\n    width: 100%;\\n    border-bottom: 1px solid rgba(0, 0, 0, 0.1);\\n    padding: 0px 0px 5px 0px;\\n}\\n\\n.item-alarm {\\n    margin-left: -30px;\\n    width: calc(100% + 30px);\\n}\\n\\n.remove {\\n    position: relative;\\n    top: 4px;\\n    right: 0px;\\n}\\n\\n.item-range {\\n    display: inline-block;\\n    min-width: 320px;\\n    max-width: 320px;\\n    width: 320px;\\n}\\n\\n.item-minmax {\\n    display: inline-block;\\n    width: 100%;\\n}\\n\\n.item-step {\\n    display: inline-block;\\n    width: 100%;\\n    margin-top: 5px;\\n}\\n\\n.item-unit {\\n    display: inline-block;\\n    /* width: 520px; */\\n}\\n\\n.item-remove {\\n    float: right;\\n    /* padding-top: 6px; */\\n    /* min-width: 140px; */\\n}\\n\\n.panel-color-class {\\n    position: relative;\\n    top: 30px;\\n}\\n\\n.panel-color {\\n    display: inline-block;\\n    padding-top: 10px;\\n    max-width: 60px;\\n    /* border: 1px solid rgba(0,0,0,0.1); */\\n    height: 21px;\\n    line-height: 12px;\\n    margin-right: 25px;\\n}\\n\\n.option-color {\\n    height: 32px !important;\\n}\\n\\n.panel-color-class {\\n    margin-top: 30px !important;\\n}\\n\\n.input-range {\\n    display: inline-block;\\n    max-width: 80px;\\n}\\n\\n.input-range input {\\n    font-size: 15px;\\n    text-align: center;\\n}\\n\\n.input-minmax {\\n    display: inline-block;\\n    max-width: 80px;\\n}\\n\\n.input-minmax input {\\n    font-size: 15px;\\n    text-align: center;\\n}\\n\\n.input-step {\\n    display: inline-block;\\n    max-width: 80px;\\n}\\n\\n.input-step input {\\n    font-size: 15px;\\n    text-align: center;\\n}\\n\\n.input-minmax-cb {\\n    font-size: 15px;\\n}\\n\\n::ng-deep .ng5-slider .ng5-slider-pointer {\\n    width: 16px !important;\\n    height: 16px !important;\\n    border-radius: 8px !important;\\n    top: -7px !important;\\n}\\n\\n::ng-deep .ng5-slider .ng5-slider-pointer:after {\\n    top: 6px !important;\\n    left: 6px !important;\\n    width: 4px !important;\\n    height: 4px !important;\\n    border-radius: 2px !important;\\n}\\n\\n::ng-deep .input-range .input-step .input-minmax .mat-form-field-wrapper {\\n    margin-bottom: -15px !important;\\n}\\n\\n::ng-deep .input-range .input-step .input-minmax .mat-form-field-infix {\\n    padding-top: 1px;\\n    padding-bottom: 5px;\\n}\\n\\n.input-step input {\\n    font-size: 15px;\\n    text-align: center;\\n}\\n\\n.input-slider {\\n    display: inline;\\n    /* max-width: 160px; */\\n}\\n\\n::ng-deep .input-slider span {\\n    font-size: 14px !important;\\n}\\n\\n.input-slider ng5-slider {\\n    /* display: block; */\\n    max-width: 300px;\\n    margin-top: 29px;\\n    margin-right: 20px;\\n}\\n\\n.toolbox {\\n    margin-top: 3px;\\n    margin-bottom: 3px;\\n}\\n\\n.toolbox button {\\n    margin-right: 8px;\\n    margin-left: 8px;\\n}\\n\\n.slider-field span {\\n    padding-left: 2px;\\n    text-overflow: clip;\\n    max-width: 125px;\\n    white-space: nowrap;\\n    overflow: hidden;\\n}\\n\\n.slider-field mat-slider {\\n    background-color: #f1f3f4;\\n    height: 30px;\\n}\\n\"","module.exports = \"<div class=\\\"grid-conta\\\">\\n    <div *ngFor=\\\"let item of ranges; index as i\\\" class=\\\"item\\\">\\n        <div *ngIf=\\\"isWithRange()\\\">\\n            <div *ngIf=\\\"slideView\\\" class=\\\"item-range\\\">\\n                <div class=\\\"my-form-field\\\">\\n                    <span>{{'gauges.property-input-min' | translate}}</span>\\n                    <input numberOnly [(ngModel)]=\\\"item.min\\\" type=\\\"text\\\" style=\\\"width: 80px\\\">\\n                </div>\\n                <div class=\\\"my-form-field\\\" style=\\\"padding-left: 20px;\\\">\\n                    <span>{{'gauges.property-input-max' | translate}}</span>\\n                    <input numberOnly [(ngModel)]=\\\"item.max\\\" type=\\\"text\\\" style=\\\"width: 80px\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"item-range input-slider\\\" *ngIf=\\\"!slideView\\\">\\n                <ng5-slider [(value)]=\\\"item.min\\\" [(highValue)]=\\\"item.max\\\" [options]=\\\"options\\\"></ng5-slider>\\n            </div>\\n            <div *ngIf=\\\"isWithRangeColor()\\\" style=\\\"display: inline-block;\\\">\\n                <div class=\\\"my-form-field\\\">\\n                    <span>{{'gauges.property-input-color' | translate}}</span>\\n                    <input [(colorPicker)]=\\\"item.color\\\" [value]=\\\"item.color\\\" [style.background]=\\\"item.color\\\" [cpPresetColors]=\\\"defaultColor\\\" [cpOKButton]=\\\"true\\\" [cpCancelButton]=\\\"true\\\"\\n                        [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\" [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\" class=\\\"input-color\\\"\\n                        style=\\\"width:70px;\\\" [cpPosition]=\\\"'auto'\\\" [cpAlphaChannel]=\\\"'always'\\\" [cpOutputFormat]=\\\"'hex'\\\"/>\\n                </div>\\n                <div class=\\\"my-form-field\\\" style=\\\"margin-left: 10px;\\\">\\n                    <span>{{'gauges.property-input-stroke' | translate}}</span>\\n                    <input [(colorPicker)]=\\\"item.stroke\\\" [value]=\\\"item.stroke\\\" [style.background]=\\\"item.stroke\\\" [cpPresetColors]=\\\"defaultColor\\\" [cpOKButton]=\\\"true\\\" [cpCancelButton]=\\\"true\\\"\\n                        [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\" [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\" class=\\\"input-color\\\"\\n                        style=\\\"width:70px;\\\" [cpPosition]=\\\"'auto'\\\" [cpAlphaChannel]=\\\"'always'\\\" [cpOutputFormat]=\\\"'hex'\\\"/>\\n                </div>\\n            </div>\\n            <div class=\\\"item-remove\\\">\\n                <button mat-icon-button (click)=\\\"onRemoveInput(i)\\\" class=\\\"remove\\\">\\n                    <mat-icon>clear</mat-icon>\\n                </button>\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"isMinMax()\\\">\\n            <div class=\\\"item-minmax\\\">\\n                <div class=\\\"my-form-field\\\">\\n                    <span>{{'gauges.property-input-min' | translate}}</span>\\n                    <input numberOnly [(ngModel)]=\\\"item.min\\\" type=\\\"text\\\" style=\\\"width: 80px\\\">\\n                </div>\\n                <div class=\\\"my-form-field\\\" style=\\\"padding-left: 20px;\\\">\\n                    <span>{{'gauges.property-input-max' | translate}}</span>\\n                    <input numberOnly [(ngModel)]=\\\"item.max\\\" type=\\\"text\\\" style=\\\"width: 80px\\\">\\n                </div>\\n                <div class=\\\"my-form-field\\\" style=\\\"padding-left: 30px\\\">\\n                    <!-- <span>Unit</span>\\n                    <input [(ngModel)]=\\\"item.text\\\" type=\\\"text\\\" style=\\\"width: 60px;text-align: center !important\\\"> -->\\n                </div>\\n                <div class=\\\"my-form-field\\\" style=\\\"width: 60px;margin-left: 20px;\\\">\\n                    <span>{{'gauges.property-input-color' | translate}}</span>\\n                    <input [(colorPicker)]=\\\"item.color\\\" [style.background]=\\\"getColor(item)\\\" [cpPresetColors]=\\\"defaultColor\\\" [cpOKButton]=\\\"true\\\" [cpCancelButton]=\\\"true\\\"\\n                        [cpCancelButtonClass]=\\\"'cpCancelButtonClass'\\\" [cpCancelButtonText]=\\\"'Cancel'\\\" [cpOKButtonText]=\\\"'OK'\\\" [cpOKButtonClass]=\\\"'cpOKButtonClass'\\\"\\n                        class=\\\"input-color\\\" style=\\\"width:70px;\\\" [cpPosition]=\\\"'auto'\\\" [cpAlphaChannel]=\\\"'always'\\\" />\\n                </div>\\n                <!-- <mat-checkbox class=\\\"input-minmax-cb\\\" style=\\\"padding-left: 30px\\\" [(ngModel)]=\\\"withLabel\\\">Range</mat-checkbox> -->\\n                <!-- <mat-checkbox class=\\\"input-minmax-cb\\\" style=\\\"padding-left: 20px\\\" [(ngModel)]=\\\"withValue\\\">Value</mat-checkbox> -->\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"isWithStep()\\\" class=\\\"item-step\\\">\\n            <div class=\\\"my-form-field\\\">\\n                <span>{{'gauges.property-input-value' | translate}}</span>\\n                <input numberOnly [(ngModel)]=\\\"item.min\\\" type=\\\"text\\\" style=\\\"width: 100px\\\">\\n            </div>\\n            <div style=\\\"font-size: 18px;width: 11px; display:inline-block;text-align: center;\\\">-</div>\\n            <div class=\\\"my-form-field\\\">\\n                <span>{{'gauges.property-input-label' | translate}}</span>\\n                <input [(ngModel)]=\\\"item.text\\\" type=\\\"text\\\" style=\\\"width: 200px;text-align: left !important\\\">\\n            </div>\\n            <div class=\\\"item-remove\\\">\\n                <button mat-icon-button (click)=\\\"onRemoveInput(i)\\\" class=\\\"remove\\\">\\n                    <mat-icon>clear</mat-icon>\\n                </button>\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"isWithUnit()\\\" class=\\\"item-unit\\\">\\n            <flex-variable #unit [data]=\\\"data\\\" (onchange)=\\\"onUnitChanged(item, $event)\\\" [variableId]=\\\"item.textId\\\" [variableValue]=\\\"item.text\\\"\\n                [variableLabel]=\\\"'gauges.property-input-unit'\\\">\\n            </flex-variable>\\n            <flex-variable #digits [data]=\\\"data\\\" (onchange)=\\\"onFormatDigitChanged(item, $event)\\\" [variableId]=\\\"item.fractionDigitsId\\\" [variableValue]=\\\"item.fractionDigits\\\"\\n                [variableLabel]=\\\"'gauges.property-format-digits'\\\">\\n            </flex-variable>\\n        </div>\\n    </div>\\n</div>\"","import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { Options } from 'ng5-slider';\n\nimport { GaugeRangeProperty } from '../../../_models/hmi';\nimport { DevicesUtils, Tag } from '../../../_models/device';\nimport { Utils } from '../../../_helpers/utils';\nimport { FlexVariableComponent } from '../flex-variable/flex-variable.component';\n\n@Component({\n    selector: 'flex-input',\n    templateUrl: './flex-input.component.html',\n    styleUrls: ['./flex-input.component.css']\n})\nexport class FlexInputComponent implements OnInit {\n    @Input() data: any;\n    @Input() ranges: GaugeRangeProperty[];\n    @Input() type: string;\n    @Input() inputType: string;\n    @Input() default: any;\n    @ViewChild('unit') varunit: FlexVariableComponent;\n    @ViewChild('digits') vardigits: FlexVariableComponent;\n\n\n    tag: Tag = null;\n    withLabel = true;\n    withValue = true;\n    slideView = true;\n    defaultColor = Utils.defaultColor;\n    options: Options = {\n        floor: 0,\n        ceil: 100\n    };\n    valueresult = '123';\n\n    constructor() {\n    }\n\n    ngOnInit() {\n        if (!this.ranges) {\n            this.ranges = [];\n            let ip: GaugeRangeProperty = new GaugeRangeProperty();\n            if (this.isWithStep()) {\n                ip.type = this.type;\n                ip.min = 1;\n                ip.max = 1;\n            } else if (this.isMinMax()) {\n                ip.type = this.type;\n                ip.min = 0;\n                ip.max = 100;\n                ip.style = [true, true];\n            } else {\n                ip.type = this.type;\n                ip.min = 20;\n                ip.max = 80;\n            }\n            this.addInput(ip);\n        } else if (this.isMinMax()) {\n            if (this.ranges.length > 0 && this.ranges[0].style.length === 2) {\n                this.withLabel = this.ranges[0].style[0];\n                this.withValue = this.ranges[0].style[1];\n            }\n        } else if (this.isWithUnit()) {\n\n        }\n        this.ranges.forEach(range => {\n            if (!range.color) {\n                range.color = '';\n            }\n            if (!range.stroke) {\n                range.stroke = '';\n            }\n        });\n    }\n\n    onAddInput() {\n        let gap: GaugeRangeProperty = new GaugeRangeProperty();\n        gap.type = this.type;\n        gap.color = '';\n        gap.stroke = '';\n        this.addInput(gap);\n    }\n\n    onRemoveInput(index: number) {\n        this.ranges.splice(index, 1);\n    }\n\n    onRangeViewToggle(slideView) {\n        this.slideView = slideView;\n    }\n\n    getRanges() {\n        let result = [];\n        this.ranges.forEach(element => {\n            element.type = this.inputType;\n            if (this.isWithStep()) {\n                element.max = element.min;\n                if (element.min !== null && element.max !== null) {\n                    result.push(element);\n                }\n            } else if (this.isMinMax()) {\n                element.style = [this.withLabel, this.withValue];\n                result.push(element);\n            } else {\n                if (!Utils.isNullOrUndefined(element.min) && !Utils.isNullOrUndefined(element.max)) {\n                    result.push(element);\n                }\n            }\n        });\n        return result;\n    }\n\n    getColor(item) {\n        if (item && item.color) {\n            return item.color;\n        } else if (this.default && this.default.color) {\n            return this.default.color;\n        }\n    }\n\n    changeTag(_tag) {\n        this.tag = _tag;\n        if (this.tag) {\n            const newOptions: Options = Object.assign({}, this.options);\n            for (let i = 0; i < this.ranges.length; i++) {\n                if (!this.ranges[i].min || this.ranges[i].min <= newOptions.floor) {\n                    this.ranges[i].min = newOptions.floor;\n                }\n                if (!this.ranges[i].max || this.ranges[i].max >= newOptions.ceil) {\n                    this.ranges[i].max = newOptions.ceil;\n                }\n            }\n        }\n        if (this.isWithUnit()) {\n            let device = DevicesUtils.getDeviceFromTagId(this.data.devices, _tag.id);\n            if (device) {\n                if (this.varunit) {\n                    this.varunit.setVariable(DevicesUtils.getTagFromTagAddress(device, _tag.address + 'OpcEngUnit'));\n                }\n                if (this.vardigits) {\n                    this.vardigits.setVariable(DevicesUtils.getTagFromTagAddress(device, _tag.address + 'DecimalPlaces'));\n                }\n            }\n        }\n    }\n\n    isWithRange() {\n        if (this.inputType === 'range') {\n            return true;\n        }\n        return false;\n    }\n\n    isMinMax() {\n        if (this.inputType === 'minmax') {\n            return true;\n        }\n        return false;\n    }\n\n    isWithRangeColor() {\n        if (this.inputType === 'range') {\n            return true;\n        }\n        return false;\n    }\n\n    isWithStep() {\n        if (this.inputType === 'step') {\n            return true;\n        }\n        return false;\n    }\n\n    isWithUnit() {\n        if (this.inputType === 'unit') {\n            return true;\n        }\n        return false;\n    }\n\n    onFormatDigitChanged(range: GaugeRangeProperty, event) {\n        range['fractionDigitsId'] = event.variableId;\n        range['fractionDigits'] = event.variableValue;\n    }\n\n    onUnitChanged(range: GaugeRangeProperty, event) {\n        range.textId = event.variableId;\n        range.text = event.variableValue;\n    }\n\n    private addInput(gap: GaugeRangeProperty) {\n        this.ranges.push(gap);\n    }\n}\n\nexport enum InputItemType {\n    Color,\n}\n","module.exports = \".flex-variable-mapping {\\n    border-bottom: 1px solid rgba(0, 0, 0, 0.08);\\n    padding-bottom: 3px;\\n    padding-top: 3px;\\n}\\n\"","module.exports = \"<div class=\\\"flex-variable-mapping\\\">\\n    <!-- <div class=\\\"my-form-field\\\" style=\\\"min-width: 200px;margin-right: 10px\\\">\\n        <span>{{'gauges.property-events-mapping-from' | translate}}</span>\\n        <mat-select class=\\\"my-form-field\\\" [compareWith]=\\\"compareVariables\\\" [(value)]=\\\"value.from\\\" (valueChange)=\\\"onValueChange()\\\">\\n            <mat-option *ngFor=\\\"let vr of fromVariables\\\" [value]=\\\"vr\\\">{{ vr.variable }}</mat-option>\\n        </mat-select>\\n    </div> -->\\n    <div style=\\\"display: inline-block;\\\">\\n        <flex-variable style=\\\"display: block\\\" [data]=\\\"data\\\" [(value)]=\\\"value.from\\\" (valueChange)=\\\"onValueChange()\\\" [allowManualEdit]=\\\"true\\\"\\n         [withStaticValue]=\\\"false\\\" [tagTitle]=\\\"'gauges.property-tag-internal-title'\\\"></flex-variable>\\n        <flex-variable style=\\\"display: block\\\" [data]=\\\"data\\\" [(value)]=\\\"value.to\\\" (valueChange)=\\\"onValueChange()\\\" [allowManualEdit]=\\\"false\\\"\\n         [withStaticValue]=\\\"false\\\"></flex-variable>\\n    </div>\\n    <div style=\\\"display: inline-block;\\\">\\n        <div style=\\\"display: inline-block; margin-bottom: 2px; width: 12px; border-radius: 2px; height: 45px; \\n            border-radius: 0px 3px 3px 0px; border-top: 2px solid #cacaca; border-right: 2px solid #cacaca; border-bottom: 2px solid #cacaca;\\\">\\n        </div>\\n    </div>\\n    <ng-content></ng-content>\\n</div>\"","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { View } from \"../../../_models/hmi\";\n\n@Component({\n    selector: 'flex-variable-map',\n    templateUrl: './flex-variable-map.component.html',\n    styleUrls: ['./flex-variable-map.component.css']\n})\nexport class FlexVariableMapComponent implements OnInit, OnChanges {\n    @Input() view: View;\n    @Input() data: any;\n    @Input() value: any;\n    @Input() fromVariables: any = [];\n    @Output() valueChange: EventEmitter<any> = new EventEmitter();\n\n    constructor() {\n    }\n\n    ngOnInit() {\n        if (!this.value) {\n            this.value = {};\n        }\n        this.value.from = this.value.from || {}\n        this.value.to = this.value.to || {}\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n    }\n\n    onValueChange() {\n        this.valueChange.emit(this.value);\n    }\n\n    compareVariables(v1, v2) {\n        return v1 && v2 && v1.variableId == v2.variableId;\n    }\n}\n","module.exports = \"\"","module.exports = \"<div style=\\\"display: block; margin-bottom: 5px;\\\">\\n    <div class=\\\"my-form-field\\\" style=\\\"max-width: 100px;margin-right: 18px;\\\" *ngIf=\\\"withStaticValue\\\">\\n        <span>{{variableLabel | translate}}</span>\\n        <input [(ngModel)]=\\\"variableValue\\\" (change)=\\\"onChanged()\\\" style=\\\"width: 100px\\\" type=\\\"text\\\">\\n    </div>\\n    <div class=\\\"my-form-field\\\" style=\\\"display:inline-block;\\\">\\n        <span>{{tagLabel | translate}}</span>\\n        <div class=\\\"my-form-field-link\\\"></div>\\n        <button mat-icon-button (click)=\\\"onBindTag()\\\" style=\\\"line-height: 28px;height:28px; width:28px; vertical-align: middle;\\\">\\n            <mat-icon>link</mat-icon>\\n        </button>\\n    </div>\\n    <div class=\\\"my-form-field\\\" style=\\\"margin-left: 0px;\\\">\\n        <span>{{getDeviceName(variableId)}}</span>\\n        <input style=\\\"font-size: 13px;min-width: 450px\\\" value=\\\"{{getVariableName(variableId)}}\\\" readonly=\\\"true\\\" [disabled]=\\\"true\\\" \\n            title=\\\"{{tagTitle | translate}}\\\" placeholder=\\\"{{tagTitle | translate}}\\\">\\n    </div>\\n</div>\"","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { ReplaySubject, Subject } from 'rxjs';\nimport { FormControl } from '@angular/forms';\nimport { takeUntil } from 'rxjs/operators';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\nimport { Device, DeviceType, Tag, TAG_PREFIX, DevicesUtils } from '../../../_models/device';\nimport { HmiService } from '../../../_services/hmi.service';\nimport { Utils } from '../../../_helpers/utils';\nimport { DeviceTagDialog } from '../../../device/device.component';\n\ninterface Variable {\n    id: string;\n    name: string;\n    initValue: string;\n}\n\n@Component({\n    selector: 'flex-variable',\n    templateUrl: './flex-variable.component.html',\n    styleUrls: ['./flex-variable.component.css']\n})\nexport class FlexVariableComponent implements OnInit {\n    @Input() data: any;\n    @Input() variableId: string;\n    @Input() value: any;\n    @Input() allowManualEdit: boolean = false;\n    @Input() variableValue: string;\n    @Input() variableLabel: string = 'gauges.property-variable-value';\n    @Input() withStaticValue: boolean = true;\n    @Input() tagLabel: string = 'gauges.property-tag-label';\n    @Input() tagTitle: string = '';\n\n    @Output() onchange: EventEmitter<any> = new EventEmitter();\n    @Output() valueChange: EventEmitter<any> = new EventEmitter();\n\n    public manualEdit: boolean = false;\n\n    variableList: any = [];\n    currentVariable: Variable = null;\n\n    constructor(public dialog: MatDialog) {\n    }\n\n    ngOnInit() {\n        if (!this.value) {\n            this.value = {\n                variableId: this.variableId\n            }\n        } else if (this.value.variableId) {\n            this.variableId = this.value.variableId;\n        }\n    }\n\n    getDeviceName(variableId: string) {\n        let device = DevicesUtils.getDeviceFromTagId(this.data.devices, this.variableId);\n        if (device) {\n            return device.name;\n        }\n        return '';\n    }\n\n    getVariableName(variableId: string) {\n        let tag = DevicesUtils.getTagFromTagId(this.data.devices, this.variableId);\n        if (tag) {\n            let result = tag.label || tag.name;\n            if (result && tag.address && result !== tag.address) {\n                return result + ' - ' + tag.address;\n            } \n            if (tag.address) {\n                return tag.address;\n            }\n            return result;\n        }\n        return '';\n    }\n\n    onChanged() {\n        let tag = DevicesUtils.getTagFromTagId(this.data.devices, this.variableId);\n        if (tag) {\n            this.value.variableId = tag.id;\n            this.value.variableRaw = tag;\n        } else {\n            this.value.variableId = null;\n            this.value.variableRaw = null;\n        }\n        this.value.variableValue = this.variableValue;\n        this.onchange.emit(this.value);   // Legacy\n        this.valueChange.emit(this.value);\n    }\n\n    onBindTag() {\n        let dialogRef = this.dialog.open(DeviceTagDialog, {\n            position: { top: '60px' },\n            data: { variableId: this.variableId, devices: this.data.devices }\n        });\n\n        dialogRef.afterClosed().subscribe((result) => {\n            if (result) {\n                this.variableId = result.variableId;\n                this.onChanged();\n            }\n        });\n    }\n\n    setVariable(tag: Tag) {\n        if (tag) {\n            this.variableId = tag.id;\n        } else {\n            this.variableId = null;\n        }\n        this.onChanged();\n    }\n}\n\n","module.exports = \"\"","module.exports = \"<div class=\\\"flex-variable-mapping\\\">\\n    <button mat-icon-button (click)=\\\"addVariableMapping($event)\\\">\\n        <mat-icon>add_circle_outline</mat-icon>\\n        {{'gauges.property-map-variable' | translate}}\\n    </button>\\n\\n    <div *ngFor=\\\"let variableMap of this.mapping;index as i\\\">\\n        <flex-variable-map [data]=\\\"data\\\" [view]=\\\"view\\\" [value]=\\\"mapping[i]\\\" [fromVariables]=\\\"viewVars\\\" (valueChange)=\\\"onChange()\\\">\\n            <button style=\\\"float: right; margin-top: 7px;\\\" mat-icon-button (click)=\\\"removeVariableMapping($event, i)\\\"  matTooltip=\\\"{{'gauges.property-head-remove-mapvariable' | translate}}\\\">\\n                <mat-icon>clear</mat-icon>\\n            </button>\\n        </flex-variable-map>\\n    </div>\\n</div>\"","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\n\nimport { View } from '../../../_models/hmi';\n\n@Component({\n    selector: 'flex-variables-mapping',\n    templateUrl: './flex-variables-mapping.component.html',\n    styleUrls: ['./flex-variables-mapping.component.css']\n})\nexport class FlexVariablesMappingComponent implements OnInit, OnChanges {\n    @Input() view: View;\n    @Input() mapping: any;\n    @Input() data: any;\n    @Output() mappingChange: EventEmitter<any> = new EventEmitter();\n\n    public viewVariables;\n\n    constructor() {\n    }\n\n    ngOnInit() {\n        if (!this.mapping) {\n            this.mapping = [];\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.view) {\n            this.viewVariables = null;\n        }\n    }\n\n    get viewVars() {\n        if (this.viewVariables) {\n            return this.viewVariables;\n        }\n        let viewVariables = {};\n        if (this.view) {\n            Object.values(this.view.items).forEach((item) => {\n                if (item && item.property) {\n                    if (item.property.variableId) {\n                        this.assignVariableTo(item.property, viewVariables)\n                    }\n                    if (item.property.actions) {\n                        Object.values(item.property.actions).forEach((action) => {\n                            this.assignVariableTo(action, viewVariables);\n                        });\n                    }\n                    if (item.property.events) {\n                        Object.values(item.property.events).forEach((event) => {\n                            if (event['actoptions'] && event['actoptions']['variableId']) {\n                                this.assignVariableTo(event['actoptions'], viewVariables);\n                            } else if (event['actoptions'] && event['actoptions']['variable']) {\n                                this.assignVariableTo(event['actoptions']['variable'], viewVariables);\n                            }\n                        });\n                    }\n                }\n            });\n        }\n        this.viewVariables = Object.values(viewVariables)\n        return this.viewVariables;\n    }\n\n    protected assignVariableTo(object, target) {\n        let variable = {\n            variableId: object['variableId']\n        }\n        target[variable.variableId] = variable\n    }\n\n    addVariableMapping($event) {\n        $event.preventDefault();\n        this.mapping.push({ from: {}, to: {} })\n    }\n\n    removeVariableMapping($event, i) {\n        $event.preventDefault();\n        this.mapping.splice(i, 1)\n    }\n\n    public onChange() {\n        this.mappingChange.emit(this.mapping);\n    }\n}\n","module.exports = \"<div style=\\\"width: 350px;\\\">\\n    <h1 mat-dialog-title style=\\\"display:inline-block;cursor: move;\\\" mat-dialog-draggable>{{'dlg.gauge-permission-title' | translate}}</h1>\\n    <mat-icon (click)=\\\"onNoClick()\\\" style=\\\"float:right;margin-right:-10px;margin-top:-10px;cursor:pointer;color:gray;\\\">\\n        clear\\n    </mat-icon>\\n    <div mat-dialog-content>\\n        <div class=\\\"my-form-field\\\" style=\\\"display: block;margin-bottom: 10px;\\\">\\n            <span style=\\\"display:inline-block; width: 45px; text-align: center;\\\">{{'dlg.gauge-permission-show' | translate}}</span>\\n            <span style=\\\"display:inline-block; width: 70px;\\\">{{'dlg.gauge-permission-enabled' | translate}}</span>\\n            <span style=\\\"display:inline-block\\\">{{'dlg.gauge-permission-label' | translate}}</span>\\n            <sel-options style=\\\"display:block\\\" #seloptions [selected]=\\\"selectedGroups\\\" [options]=\\\"groups\\\" [extSelected]=\\\"extensionGroups\\\"></sel-options>\\n        </div>\\n    </div>\\n    <div mat-dialog-actions class=\\\"dialog-action\\\">\\n        <button mat-raised-button (click)=\\\"onNoClick()\\\">{{'dlg.cancel' | translate}}</button>\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onOkClick()\\\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\\n    </div>\\n</div>\"","module.exports = \".toolbox {\\n    float: right;\\n    line-height: 44px;\\n}\\n\\n.toolbox button {\\n    /* margin-right: 8px; */\\n    margin-left: 10px;\\n}\\n\\n::ng-deep .input-text .mat-form-field-infix {\\n    padding-top: 5px;\\n    padding-bottom: 0px;\\n}\\n\\n::ng-deep .mat-dialog-container {\\n    display: inline-table !important;\\n}\\n\\n::ng-deep .mat-tab-label {\\n  height: 34px !important;\\n}\\n\\n.mat-tab-container {\\n  min-height:300px;\\n  height:60vmin;\\n  overflow-y: auto;\\n  overflow-x: hidden;\\n  padding-top: 15px;\\n}\\n\\n.mat-tab-container > div {\\n  display: block;\\n}\"","module.exports = \"<div style=\\\"width: 740px;position: relative;\\\">\\n    <h1 mat-dialog-title style=\\\"display:inline-block;cursor:move;\\\" mat-dialog-draggable>{{data.title}}</h1>\\n    <mat-icon (click)=\\\"onNoClick()\\\" style=\\\"float:right;margin-right:-10px;margin-top:-10px;cursor:pointer;color:gray;\\\">clear</mat-icon>\\n\\t<mat-tab-group style=\\\"width: 100%;\\\">\\n\\t\\t<mat-tab label=\\\"{{'gauges.property-props' | translate}}\\\">\\n            <div class=\\\"mat-tab-container\\\">\\n\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t<div class=\\\"my-form-field\\\">\\n\\t\\t\\t\\t\\t\\t<span>{{'gauges.property-name' | translate}}</span>\\n\\t\\t\\t\\t\\t\\t<input [(ngModel)]=\\\"data.settings.name\\\" style=\\\"width: 220px\\\" type=\\\"text\\\">\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"my-form-field\\\" style=\\\"vertical-align: bottom; margin-left: 13px;\\\">\\n\\t\\t\\t\\t\\t\\t<span>{{'gauges.property-permission' | translate}}</span>\\n\\t\\t\\t\\t\\t\\t<div style=\\\"text-align:center;cursor:pointer;\\\" class=\\\"my-form-field-permission\\\" (click)=\\\"onEditPermission()\\\">\\n\\t\\t\\t\\t\\t\\t\\t<mat-icon class=\\\"header-icon\\\" style=\\\"line-height: 30px;\\\" *ngIf=\\\"!property || !property.permission\\\">lock_open</mat-icon>\\n\\t\\t\\t\\t\\t\\t\\t<mat-icon class=\\\"header-icon\\\" style=\\\"line-height: 30px;\\\" *ngIf=\\\"property && property.permission\\\">lock</mat-icon>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"my-form-field\\\" style=\\\"padding-left: 100px\\\" *ngIf=\\\"isReadonlyToShow()\\\">\\n\\t\\t\\t\\t\\t\\t<span>{{'gauges.property-readonly' | translate}}</span>\\n\\t\\t\\t\\t\\t\\t<mat-slide-toggle color=\\\"primary\\\" [(ngModel)]=\\\"property.readonly\\\"></mat-slide-toggle>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"toolbox\\\" *ngIf=\\\"isToolboxToShow()\\\">\\n\\t\\t\\t\\t\\t\\t<button mat-icon-button (click)=\\\"onAddInput()\\\">\\n\\t\\t\\t\\t\\t\\t\\t<mat-icon>add_circle_outline</mat-icon>\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div mat-dialog-content style=\\\"overflow: visible; width:100%;\\\">\\n\\t\\t\\t\\t\\t<flex-head [data]=\\\"data\\\" [property]=\\\"property\\\" #flexhead></flex-head>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</mat-tab>\\n\\t\\t<mat-tab label=\\\"{{'gauges.property-events' | translate}}\\\" *ngIf=\\\"eventsSupported\\\">\\n            <div class=\\\"mat-tab-container\\\">\\n\\t\\t\\t\\t<div class=\\\"toolbox\\\">\\n\\t\\t\\t\\t\\t<button mat-icon-button (click)=\\\"onAddEvent()\\\" matTooltip=\\\"{{'gauges.property-tooltip-add-event' | translate}}\\\">\\n\\t\\t\\t\\t\\t\\t<mat-icon>add_circle_outline</mat-icon>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div mat-dialog-content style=\\\"overflow: visible; width:100%;\\\">\\n\\t\\t\\t\\t\\t<flex-event [property]=\\\"property\\\" [views]=\\\"views\\\" [data]=\\\"data\\\" [inputs]=\\\"inputs\\\" #flexevent *ngIf=\\\"eventsSupported\\\" style=\\\"padding-bottom: 5px\\\"></flex-event>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n        </mat-tab>\\n        <mat-tab label=\\\"{{'gauges.property-actions' | translate}}\\\" *ngIf=\\\"actionsSupported\\\">\\n            <div class=\\\"mat-tab-container\\\">\\n                <div class=\\\"toolbox\\\">\\n                    <button mat-icon-button (click)=\\\"onAddAction()\\\">\\n                        <mat-icon>add_circle_outline</mat-icon>\\n                    </button>\\n                    <!-- <button mat-icon-button (click)=\\\"slideActionView = !slideActionView; onActionRangeViewToggle()\\\">\\n                        <mat-icon class=\\\"header-icon\\\" *ngIf=\\\"slideActionView\\\">toll</mat-icon>\\n                        <mat-icon class=\\\"header-icon\\\" *ngIf=\\\"!slideActionView\\\">input</mat-icon>\\n                    </button>-->\\n                </div>\\n                <div mat-dialog-content style=\\\"overflow: visible; width:100%\\\">\\n                    <flex-action [data]=\\\"data\\\" [property]=\\\"property\\\" #flexaction *ngIf=\\\"actionsSupported\\\" style=\\\"padding-bottom: 5px\\\"></flex-action>\\n                </div>\\n            </div>\\n        </mat-tab>\\n    </mat-tab-group>\\n    <div mat-dialog-actions class=\\\"dialog-action\\\">\\n        <button mat-raised-button (click)=\\\"onNoClick()\\\">{{'dlg.cancel' | translate}}</button>\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onOkClick()\\\" [mat-dialog-close]=\\\"data\\\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\\n    </div>\\n</div>\\n\"","import { Component, Inject, Input, OnInit, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material';\n\nimport { SelOptionsComponent } from '../../gui-helpers/sel-options/sel-options.component';\n\nimport { FlexHeadComponent } from './flex-head/flex-head.component';\nimport { FlexEventComponent } from './flex-event/flex-event.component';\nimport { FlexActionComponent } from './flex-action/flex-action.component';\nimport { GaugeProperty, GaugeSettings, View } from '../../_models/hmi';\nimport { UserGroups } from '../../_models/user';\n\n@Component({\n    selector: 'gauge-property',\n    templateUrl: './gauge-property.component.html',\n    styleUrls: ['./gauge-property.component.css']\n})\nexport class GaugePropertyComponent implements OnInit {\n\n    @Input() name: any;\n    @ViewChild('flexhead') flexHead: FlexHeadComponent;\n    @ViewChild('flexevent') flexEvent: FlexEventComponent;\n    @ViewChild('flexaction') flexAction: FlexActionComponent;\n\n    slideView = true;\n    slideActionView = true;\n    property: GaugeProperty;\n    dialogType: GaugeDialogType = GaugeDialogType.RangeWithAlarm;\n    eventsSupported: boolean;\n    actionsSupported: any;\n    views: View[];\n    defaultValue: any;\n    inputs: GaugeSettings[];\n\n    constructor(public dialog: MatDialog,\n        public dialogRef: MatDialogRef<GaugePropertyComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: any) {\n    }\n\n    ngOnInit() {\n        this.dialogType = this.data.dlgType;\n        this.eventsSupported = this.data.withEvents;\n        this.actionsSupported = this.data.withActions;\n        this.views = this.data.views;\n        this.inputs = this.data.inputs;\n\n        this.property = JSON.parse(JSON.stringify(this.data.settings.property));\n        if (!this.property) {\n            this.property = new GaugeProperty();\n        }\n\n        this.defaultValue = this.data.default;\n\n        if (this.dialogType === GaugeDialogType.OnlyValue) {\n            this.flexHead.withInput = null;\n        } else if (this.dialogType === GaugeDialogType.ValueAndUnit) {\n            this.flexHead.withInput = 'unit';\n        } else {\n            this.flexHead.defaultValue = this.defaultValue;\n            this.flexHead.withInput = 'range';\n            if (this.dialogType === GaugeDialogType.ValueWithRef) {\n                this.flexHead.withInput = 'text';\n            } else if (this.dialogType === GaugeDialogType.Step) {\n                this.flexHead.withInput = 'step';\n            } else if (this.dialogType === GaugeDialogType.MinMax) {\n                this.flexHead.withInput = 'minmax';\n            }\n        }\n    }\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n\n    onOkClick(): void {\n        // this.data.settings.property = this.flexHead.property;\n        this.data.settings.property = this.flexHead.getProperty();\n        if (this.flexEvent) {\n            this.data.settings.property.events = this.flexEvent.getEvents();\n        }\n        if (this.flexAction) {\n            this.data.settings.property.actions = this.flexAction.getActions();\n        }\n        if (this.property.readonly) {\n            this.property.readonly = true;\n        } else {\n            delete this.property.readonly;\n        }\n    }\n\n    onAddInput() {\n        this.flexHead.onAddInput();\n    }\n\n    onAddEvent() {\n        this.flexEvent.onAddEvent();\n    }\n\n    onAddAction() {\n        this.flexAction.onAddAction();\n    }\n\n    onRangeViewToggle() {\n        this.flexHead.onRangeViewToggle(this.slideView);\n    }\n\n    onActionRangeViewToggle() {\n        this.flexAction.onRangeViewToggle(this.slideActionView);\n    }\n\n    isToolboxToShow() {\n        if (this.dialogType === GaugeDialogType.RangeWithAlarm || this.dialogType === GaugeDialogType.Range || this.dialogType === GaugeDialogType.Step) {\n            return true;\n        }\n        return false;\n    }\n\n    isRangeToShow() {\n        if (this.dialogType === GaugeDialogType.RangeWithAlarm || this.dialogType === GaugeDialogType.Range) {\n            return true;\n        }\n        return false;\n    }\n\n    isAlarmToShow() {\n        if (this.dialogType === GaugeDialogType.RangeWithAlarm) {\n            return true;\n        }\n        return false;\n    }\n\n    isReadonlyToShow() {\n        if (this.dialogType === GaugeDialogType.Step) {\n            return true;\n        }\n        return false;\n    }\n\n    onEditPermission() {\n        let permission = this.property.permission;\n        let dialogRef = this.dialog.open(DialogGaugePermission, {\n            position: { top: '60px' },\n            data: { permission: permission }\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.property.permission = result.permission;\n            }\n        });\n    }\n}\n\nexport enum GaugeDialogType {\n    Range,\n    RangeWithAlarm,\n    OnlyValue,\n    ValueAndUnit,\n    ValueWithRef,\n    Step,\n    MinMax,\n    Chart,\n    Gauge,\n    Pipe,\n    Slider,\n    Switch\n}\n\n@Component({\n    selector: 'dialog-gaugepermission',\n    templateUrl: './gauge-permission.dialog.html',\n})\nexport class DialogGaugePermission {\n    // defaultColor = Utils.defaultColor;\n    selectedGroups = [];\n    extensionGroups = [];\n    groups = UserGroups.Groups;\n\n    @ViewChild(SelOptionsComponent) seloptions: SelOptionsComponent;\n\n    constructor(\n        public dialogRef: MatDialogRef<DialogGaugePermission>,\n        @Inject(MAT_DIALOG_DATA) public data: any) {\n        this.selectedGroups = UserGroups.ValueToGroups(this.data.permission);\n        this.extensionGroups = UserGroups.ValueToGroups(this.data.permission, true);\n\n    }\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n\n    onOkClick(): void {\n        this.data.permission = UserGroups.GroupsToValue(this.seloptions.selected);\n        this.data.permission += UserGroups.GroupsToValue(this.seloptions.extSelected, true);\n        this.dialogRef.close(this.data);\n    }\n}\n","import { Component, OnInit, OnDestroy, Injectable, Inject, Output, EventEmitter } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Observable } from 'rxjs';\n\nimport { TranslateService } from '@ngx-translate/core';\nimport { HmiService } from '../_services/hmi.service';\nimport { ChartRangeType } from '../_models/chart';\n\nimport { GaugeBaseComponent } from './gauge-base/gauge-base.component';\nimport { GaugeSettings, GaugeProperty, Variable, Event, GaugeEvent, GaugeEventType, GaugeStatus } from '../_models/hmi';\nimport { ValueComponent } from './controls/value/value.component';\nimport { GaugePropertyComponent, GaugeDialogType } from './gauge-property/gauge-property.component';\nimport { HtmlInputComponent } from './controls/html-input/html-input.component';\nimport { HtmlButtonComponent } from './controls/html-button/html-button.component';\nimport { HtmlSelectComponent } from './controls/html-select/html-select.component';\nimport { HtmlChartComponent } from './controls/html-chart/html-chart.component';\nimport { HtmlBagComponent } from './controls/html-bag/html-bag.component';\nimport { HtmlSwitchComponent } from './controls/html-switch/html-switch.component';\nimport { GaugeProgressComponent } from './controls/gauge-progress/gauge-progress.component';\nimport { GaugeSemaphoreComponent } from './controls/gauge-semaphore/gauge-semaphore.component';\nimport { ShapesComponent } from './shapes/shapes.component';\nimport { ProcEngComponent } from './shapes/proc-eng/proc-eng.component';\nimport { ApeShapesComponent } from './shapes/ape-shapes/ape-shapes.component';\nimport { PipeComponent } from './controls/pipe/pipe.component';\nimport { SliderComponent } from './controls/slider/slider.component';\n\nimport { WindowRef } from '../_helpers/windowref';\nimport { Dictionary } from '../_helpers/dictionary';\nimport { Utils } from '../_helpers/utils';\nimport { ChartUplotComponent, ChartOptions } from './controls/html-chart/chart-uplot/chart-uplot.component';\nimport { NgxGaugeComponent } from '../gui-helpers/ngx-gauge/ngx-gauge.component';\nimport { GaugeOptions } from '../gui-helpers/ngx-gauge/gaugeOptions';\nimport { forEach } from '@angular/router/src/utils/collection';\nimport { NgxNouisliderComponent } from '../gui-helpers/ngx-nouislider/ngx-nouislider.component';\n\n@Injectable()\nexport class GaugesManager {\n\n    @Output() onchange: EventEmitter<Variable> = new EventEmitter();\n    @Output() onevent: EventEmitter<Event> = new EventEmitter();\n\n    // signalGaugeMap = new ViewSignalGaugeMap();      // map of all gauges (GaugeSettings) pro signals\n\n    // map of gauges that have a click/html event\n    eventGauge: MapGaugesSetting = {};\n    // map of gauges with views\n    mapGaugeView = {};\n    // map of all signals and binded gauges of current view\n    memorySigGauges = {};\n\n    mapChart = {};\n    mapGauges = {};\n\n    // list of gauges tags to speed up the check\n    gaugesTags = [];\n\n    // list of gauges with input\n    static GaugeWithInput = [HtmlInputComponent.prefix, HtmlSelectComponent.prefix, HtmlSwitchComponent.prefix];\n    // list of gauges tags to check who as events like mouse click\n    static GaugeWithEvents = [HtmlButtonComponent.TypeTag, GaugeSemaphoreComponent.TypeTag, ShapesComponent.TypeTag, ProcEngComponent.TypeTag,\n        ApeShapesComponent.TypeTag];\n    // list of gauges tags to check who as events like mouse click\n    static GaugeWithActions = [ApeShapesComponent, PipeComponent, ProcEngComponent, ShapesComponent, HtmlButtonComponent, HtmlSelectComponent,\n        ValueComponent, HtmlInputComponent, GaugeSemaphoreComponent ];\n    // list of gauges components\n    static Gauges = [ValueComponent, HtmlInputComponent, HtmlButtonComponent, HtmlBagComponent,\n        HtmlSelectComponent, HtmlChartComponent, GaugeProgressComponent, GaugeSemaphoreComponent, ShapesComponent, ProcEngComponent, ApeShapesComponent,\n        PipeComponent, SliderComponent, HtmlSwitchComponent];\n\n    constructor(private hmiService: HmiService,\n        private winRef: WindowRef,\n        private translateService: TranslateService,\n        private dialog: MatDialog) {\n        // subscription to the change of variable value, then emit to the gauges of fuxa-view\n        this.hmiService.onVariableChanged.subscribe(sig => {\n            try {\n                this.onchange.emit(sig);\n            } catch (err) {\n\n            }\n        });\n        // subscription to DAQ values, then emit to charts gauges of fuxa-view\n        this.hmiService.onDaqResult.subscribe(message => {\n            try {\n                if (this.mapChart[message.gid]) {\n                    let gauge: ChartUplotComponent = this.mapChart[message.gid];\n                    gauge.setValues(message.values);\n                }\n            } catch (err) {\n\n            }\n        });\n        // make the list of gauges tags to speed up the check\n        GaugesManager.Gauges.forEach(g => {\n            this.gaugesTags.push(g.TypeTag);\n        });\n    }\n\n    ngOnDestroy() {\n    }\n\n    createSettings(id: string, type: string) {\n        let gs: GaugeSettings = null;\n        if (type) {\n            for (let i = 0; i < GaugesManager.Gauges.length; i++) {\n                if (type.startsWith(GaugesManager.Gauges[i].TypeTag)) {\n                    gs = new GaugeSettings(id, type);\n                    gs.label = GaugesManager.Gauges[i].LabelTag;\n                    return gs;\n                }\n            }\n        }\n        return gs;\n    }\n\n\tcreateGaugeStatus(ga: GaugeSettings) : GaugeStatus {\n        let result = new GaugeStatus();\n        if (!ga.type.startsWith(HtmlChartComponent.TypeTag)) {\n            result.onlyChange = true;\n        }\n        if (ga.type.startsWith(SliderComponent.TypeTag)) {\n            result.takeValue = true;\n        }\n        return result;\n    }\n\n    isWithEvents(type) {\n        if (type) {\n            for (let i = 0; i < GaugesManager.GaugeWithEvents.length; i++) {\n                if (type.startsWith(GaugesManager.GaugeWithEvents[i])) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    isWithActions(type) {\n        if (type) {\n            for (let i = 0; i < GaugesManager.GaugeWithActions.length; i++) {\n                if (type.startsWith(GaugesManager.GaugeWithActions[i].TypeTag)) {\n                    if (typeof GaugesManager.GaugeWithActions[i]['getActions'] === 'function') {\n                        return GaugesManager.GaugeWithActions[i]['getActions']();\n                    }\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Return if is a gauge by check the svg attribute 'type' = 'svg-ext-...'\n     * @param type \n     * @returns \n     */\n    isGauge(type: string) {\n        for (let tag in this.gaugesTags) {\n            if (type.startsWith(this.gaugesTags[tag])) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * gauges to update in editor after changed property (GaugePropertyComponent, ChartPropertyComponent)\n     * @param ga\n     */\n    initInEditor(ga: GaugeSettings, res: any, ref: any) {\n        if (ga.type.startsWith(GaugeProgressComponent.TypeTag)) {\n            GaugeProgressComponent.initElement(ga);\n        } else if (ga.type.startsWith(HtmlButtonComponent.TypeTag)) {\n            HtmlButtonComponent.initElement(ga);\n        } else if (ga.type.startsWith(HtmlChartComponent.TypeTag)) {\n            delete this.mapGauges[ga.id];\n            let gauge = HtmlChartComponent.detectChange(ga, res, ref);\n            this.setChartPropety(gauge, ga.property);\n            this.mapGauges[ga.id] = gauge;\n        } else if (ga.type.startsWith(HtmlBagComponent.TypeTag)) {\n            this.mapGauges[ga.id] = HtmlBagComponent.detectChange(ga, res, ref);\n        } else if (ga.type.startsWith(PipeComponent.TypeTag)) {\n            return this.mapGauges[ga.id] = PipeComponent.detectChange(ga, res, this.winRef);\n        } else if (ga.type.startsWith(SliderComponent.TypeTag)) {\n            return this.mapGauges[ga.id] = SliderComponent.detectChange(ga, res, ref);\n        } else if (ga.type.startsWith(HtmlSwitchComponent.TypeTag)) {\n            return this.mapGauges[ga.id] = HtmlSwitchComponent.detectChange(ga, res, ref);\n        }\n        return false;\n    }\n\n    /**\n     * emit the signal value to the frontend, used for user_defined variable to make logic in frontend\n     * @param sigId \n     * @param value \n     */\n    setSignalValue(sigId: string, value: any) {\n        let variable = new Variable(sigId, null, null);\n        variable.value = value;\n        this.onchange.emit(variable);\n    }\n\n    //! toremove\n    initGaugesMap() {\n        this.eventGauge = {};\n        this.mapGaugeView = {};\n    }\n\n    /**\n     * called from fuxa-view, is used to emit message for a refresh of all signals values and the gauges of view\n     * @param domViewId\n     */\n    emitBindedSignals(domViewId: string) {\n        this.hmiService.emitMappedSignalsGauge(domViewId);\n    }\n\t/**\n\t * called from fuxa-view, bind dom view, gauge with signal (for animation) and event\n\t * @param gaugekey\n\t * @param gauge\n\t * @param domViewId\n\t * @param ga\n\t * @param bindclick\n\t * @param bindhtmlevent\n\t */\n    bindGauge(gauge: any, domViewId: string, ga: GaugeSettings, bindclick: any, bindhtmlevent: any) {\n        let sigsid: string[] = this.getBindSignals(ga);\n        if (sigsid) {\n            for (let i = 0; i < sigsid.length; i++) {\n                this.hmiService.addSignalGaugeToMap(domViewId, sigsid[i], ga);\n                // check for special gauge to save in memory binded to sigid (chart-html)\n                if (gauge) {\n                    if (!this.memorySigGauges[sigsid[i]]) {\n                        this.memorySigGauges[sigsid[i]] = {};\n                        this.memorySigGauges[sigsid[i]][ga.id] = gauge;\n                    } else if (!this.memorySigGauges[sigsid[i]][ga.id]) {\n                        this.memorySigGauges[sigsid[i]][ga.id] = gauge;\n                    }\n                }\n            }\n        }\n        let clicks: GaugeEvent[] = this.getBindClick(ga);\n        if (clicks && clicks.length > 0) { // && !this.eventGauge[ga.id]) {\n            this.eventGauge[ga.id] = ga;\n            if (!this.mapGaugeView[ga.id]) {\n                this.mapGaugeView[ga.id] = {};\n                this.mapGaugeView[ga.id][domViewId] = ga;\n                bindclick(ga);\n            } else if (!this.mapGaugeView[ga.id][domViewId]) {\n                this.mapGaugeView[ga.id][domViewId] = ga;\n                bindclick(ga);\n            }\n            // add pointer\n            let ele = document.getElementById(ga.id);\n            if (ele) {\n                ele.style.cursor = \"pointer\";\n            }\n            // bindclick(ga);\n        }\n        let htmlEvents = this.getHtmlEvents(ga);\n        if (htmlEvents) {\n            this.eventGauge[htmlEvents.dom.id] = ga;\n            bindhtmlevent(htmlEvents);\n        }\n        this.bindGaugeEventToSignal(ga);\n        this.checkElementToInit(ga);\n    }\n\n\n\t/**\n     * @param domViewId\n\t * called from fuxa-view, remove bind of dom view gauge\n\t */\n    unbindGauge(domViewId: string) {\n        // first remove special gauge like chart from memorySigGauges\n        let sigGaugeSettingsIdremoved = this.hmiService.removeSignalGaugeFromMap(domViewId);\n        Object.keys(sigGaugeSettingsIdremoved).forEach(sid => {\n            if (this.memorySigGauges[sid]) {\n                for (let i = 0; i < sigGaugeSettingsIdremoved[sid].length; i++) {\n                    let gsId = sigGaugeSettingsIdremoved[sid][i];\n                    if (this.memorySigGauges[sid][gsId]) {\n                        let g = this.memorySigGauges[sid][gsId];\n                        try {\n                            if (g.myComRef) {\n                                g.myComRef.destroy();\n                            }\n                            delete this.memorySigGauges[sid][gsId];\n                            if (this.mapChart[g.id]) {\n                                delete this.mapChart[g.id];\n                            }\n                            if (this.mapGauges[g.id]) {\n                                delete this.mapGauges[g.id];\n                            }\n                        } catch (err) {\n                            console.error(err);\n                        }\n                    }\n                }\n            }\n        });\n\n        // remove mapped gauge for events of this view\n        Object.values(this.mapGaugeView).forEach(val => {\n            if (val[domViewId]) {\n                let g = val[domViewId];\n                if (g.myComRef) {\n                    g.myComRef.destroy();\n                }\n                delete val[domViewId];\n            }\n        });\n    }\n\n    /**\n     * init element of fuxa-view,\n     * @param ga\n     */\n    checkElementToInit(ga: GaugeSettings) {\n        if (ga.type.startsWith(HtmlSelectComponent.TypeTag)) {\n            return HtmlSelectComponent.initElement(ga, true);\n        }\n        return null;\n    }\n\n    checkElementToResize(ga: GaugeSettings, res: any, ref: any) {\n        if (ga && this.mapGauges[ga.id]) {\n            if (typeof this.mapGauges[ga.id]['resize'] === 'function') {\n                this.mapGauges[ga.id]['resize']();\n            } else {\n                for (let i = 0; i < GaugesManager.Gauges.length; i++) {\n                    if (ga.type.startsWith(GaugesManager.Gauges[i].TypeTag)) {\n                        if (typeof GaugesManager.Gauges[i]['resize'] === 'function') {\n                            let options;\n                            if (this.mapGauges[ga.id].options) {\n                                options = this.mapGauges[ga.id].options;\n                            }\n                            return GaugesManager.Gauges[i]['resize'](ga, res, ref, options);\n                        }\n                        return;\n                    }\n                }\n            }\n        }\n    }\n\n    getGaugeValue(gaugeId: string) {\n        if (this.mapGauges[gaugeId] && this.mapGauges[gaugeId].currentValue) {\n            return this.mapGauges[gaugeId].currentValue();\n        }\n    }\n\n\t/**\n\t * get all gauge settings binded to dom view with the signal\n\t * @param domViewId\n\t * @param sigid\n\t */\n    getGaugeSettings(domViewId: string, sigid: string): GaugeSettings[] {\n        let gslist = this.hmiService.getMappedSignalsGauges(domViewId, sigid);\n        return gslist;\n    }\n\n\t/**\n\t * get all signals mapped in all dom views, used from LabComponent\n\t * @param fulltext a copy with item name and source\n\t */\n    getMappedGaugesSignals(fulltext: boolean) {\n        return this.hmiService.getMappedVariables(fulltext);\n    }\n\n    /**\n     * return all signals binded to the gauge\n     * @param ga\n     */\n    getBindSignals(ga: GaugeSettings) {\n        if (ga.property) {\n            for (let i = 0; i < GaugesManager.Gauges.length; i++) {\n                if (ga.type.startsWith(GaugesManager.Gauges[i].TypeTag)) {\n                    if (ga.type.startsWith(HtmlChartComponent.TypeTag)) {\n                        let sigs = this.hmiService.getChartSignal(ga.property.id)\n                        return sigs;\n                    } else if (typeof GaugesManager.Gauges[i]['getSignals'] === 'function') {\n                        return GaugesManager.Gauges[i]['getSignals'](ga.property);\n                    } else {\n                        return null;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n\n\n    getBindSignalsValue(ga: GaugeSettings): Variable[]  {\n        let signals = this.getBindSignals(ga);\n        let result = [];\n        if (signals) {\n            signals.forEach(sigId => {\n                let variable = this.hmiService.getMappedVariable(sigId, false);\n                if (variable && !Utils.isNullOrUndefined(variable.value)) {\n                    result.push(variable);\n                }                \n            });\n        }\n        return result;\n    }\n\n    /**\n     * return all events binded to the gauge with click event\n     * @param ga\n     */\n    getBindClick(ga: GaugeSettings) {\n        for (let i = 0; i < GaugesManager.Gauges.length; i++) {\n            if (ga.type.startsWith(GaugesManager.Gauges[i].TypeTag)) {\n                if (typeof GaugesManager.Gauges[i]['getEvents'] === 'function') {\n                    return GaugesManager.Gauges[i]['getEvents'](ga.property, GaugeEventType.click);\n                } else {\n                    return null;\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     * return all events binded to the html gauge ('key-enter' of input, 'change' of select)\n     * @param ga\n     */\n    getHtmlEvents(ga: GaugeSettings): Event {\n        if (ga.type.startsWith(HtmlInputComponent.TypeTag)) {\n            return HtmlInputComponent.getHtmlEvents(ga);\n        } else if (ga.type.startsWith(HtmlSelectComponent.TypeTag)) {\n            return HtmlSelectComponent.getHtmlEvents(ga);\n        }\n        return null;\n    }\n\n    bindGaugeEventToSignal(ga: GaugeSettings) {\n        if (ga.type.startsWith(SliderComponent.TypeTag)) {\n            let self = this;\n            SliderComponent.bindEvents(ga, this.mapGauges[ga.id], (event) => {\n                self.putEvent(event);\n            });\n        } else if (ga.type.startsWith(HtmlSwitchComponent.TypeTag)) {\n            let self = this;\n            HtmlSwitchComponent.bindEvents(ga, this.mapGauges[ga.id], (event) => {\n                self.putEvent(event);\n            });\n        }\n    }\n\n\t/**\n\t * manage to which gauge to forward the process function\n\t * @param ga\n\t * @param svgele\n\t * @param sig\n\t */\n    processValue(ga: GaugeSettings, svgele: any, sig: Variable, gaugeStatus: GaugeStatus) {\n        gaugeStatus.variablesValue[sig.id] = sig.value;\n        for (let i = 0; i < GaugesManager.Gauges.length; i++) {\n            if (ga.type.startsWith(GaugesManager.Gauges[i].TypeTag)) {\n                if (ga.type.startsWith(HtmlChartComponent.TypeTag)) {\n                    if (ga.property.type !== 'history' && this.memorySigGauges[sig.id]) {\n                        Object.keys(this.memorySigGauges[sig.id]).forEach(k => {\n                            if (k === ga.id && this.mapGauges[k]) {\n                                HtmlChartComponent.processValue(ga, svgele, sig, gaugeStatus, this.mapGauges[k]);\n                            }\n                        });\n                    }\n                    break;\n                } else if (ga.type.startsWith(HtmlBagComponent.TypeTag)) {\n                    Object.keys(this.memorySigGauges[sig.id]).forEach(k => {\n                        if (k === ga.id && this.mapGauges[k]) {\n                            HtmlBagComponent.processValue(ga, svgele, sig, gaugeStatus, this.mapGauges[k]);\n                        }\n                    });\n                    break;\n                } else if (ga.type.startsWith(SliderComponent.TypeTag)) {\n                    Object.keys(this.memorySigGauges[sig.id]).forEach(k => {\n                        if (k === ga.id && this.mapGauges[k]) {\n                            SliderComponent.processValue(ga, svgele, sig, gaugeStatus, this.mapGauges[k]);\n                        }\n                    });\n                    break;\n                } else if (ga.type.startsWith(HtmlSwitchComponent.TypeTag)) {\n                    Object.keys(this.memorySigGauges[sig.id]).forEach(k => {\n                        if (k === ga.id && this.mapGauges[k]) {\n                            HtmlSwitchComponent.processValue(ga, svgele, sig, gaugeStatus, this.mapGauges[k]);\n                        }\n                    });\n                    break;\n                } else if (typeof GaugesManager.Gauges[i]['processValue'] === 'function') {\n                    GaugesManager.Gauges[i]['processValue'](ga, svgele, sig, gaugeStatus);\n                    break;\n                } else {\n                    break;\n                }\n            }\n        }\n    }\n\n    toggleSignalValue(sigid: string){\n      if (this.hmiService.variables.hasOwnProperty(sigid)) {\n          let currentValue = this.hmiService.variables[sigid].value;\n          // Only boolean values\n          if (currentValue !== true && currentValue !== false && currentValue !== undefined){\n            return;\n          }\n          this.putSignalValue(sigid, String(!currentValue));\n      }\n    }\n\n    /**\n     * called from fuxa-view to emit and send signal value from a gauge event ('key-enter' of input, 'change' of select)\n     * @param event\n     */\n    putEvent(event: Event) {\n        if (event.ga.property && event.ga.property.variableId) {\n            this.hmiService.putSignalValue(event.ga.property.variableId, event.value);\n            event.dbg = 'put ' + event.ga.property.variableId + ' ' + event.value;\n        }\n        this.onevent.emit(event);\n    }\n\n    /**\n     * called from fuxa-view to emit and send signal value from a gauge event (click)\n     * @param sigid\n     * @param val\n     */\n    putSignalValue(sigid: string, val: string) {\n        this.hmiService.putSignalValue(sigid, val);\n    }\n\n    static getEditDialogTypeToUse(type: string): GaugeDialogType {\n        for (let i = 0; i < GaugesManager.Gauges.length; i++) {\n            if (type.startsWith(GaugesManager.Gauges[i].TypeTag)) {\n                if (typeof GaugesManager.Gauges[i]['getDialogType'] === 'function') {\n                    return GaugesManager.Gauges[i]['getDialogType']();\n                } else {\n                    return null;\n                }\n            }\n        }\n    }\n\n\n    /**\n     * used from controls in editor to get default value of edit gauge property\n     */\n    static getDefaultValue(type: string): any {\n        if (type.startsWith(GaugeProgressComponent.TypeTag)) {\n            return GaugeProgressComponent.getDefaultValue();\n        }\n        return null;\n    }\n\n    /**\n     * used from controls in editor, to set the colorpicker of selected control\n     */\n    static checkGaugeColor(ele: any, eles: any, colors: any): boolean {\n        if (ele && ele.type && eles && (eles.length <= 1 || !eles[1]) && colors) {\n            if (ele.type.startsWith(GaugeProgressComponent.TypeTag)) {\n                colors.fill = GaugeProgressComponent.getFillColor(eles[0]);\n                colors.stroke = GaugeProgressComponent.getStrokeColor(eles[0]);\n                return true;\n            } else if (ele.type.startsWith(GaugeSemaphoreComponent.TypeTag)) {\n                colors.fill = GaugeSemaphoreComponent.getFillColor(eles[0]);\n                colors.stroke = GaugeSemaphoreComponent.getStrokeColor(eles[0]);\n                return true;\n            } else if (ele.type.startsWith(HtmlButtonComponent.TypeTag)) {\n                colors.fill = HtmlButtonComponent.getFillColor(eles[0]);\n                colors.stroke = HtmlButtonComponent.getStrokeColor(eles[0]);\n                return true;\n            } else if (ele.type.startsWith(HtmlInputComponent.TypeTag)) {\n                colors.fill = HtmlInputComponent.getFillColor(eles[0]);\n                colors.stroke = HtmlInputComponent.getStrokeColor(eles[0]);\n                return true;\n            } else if (ele.type.startsWith(HtmlSelectComponent.TypeTag)) {\n                colors.fill = HtmlSelectComponent.getFillColor(eles[0]);\n                colors.stroke = HtmlSelectComponent.getStrokeColor(eles[0]);\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * used from controls in editor to change fill and stroke colors\n     * @param bkcolor\n     * @param color\n     * @param elements\n     */\n    static initElementColor(bkcolor, color, elements) {\n        var elems = elements.filter(function(el) { return el; });\n        for (let i = 0; i < elems.length; i++) {\n            let type = elems[i].getAttribute('type');\n            if (type.startsWith(GaugeProgressComponent.TypeTag)) {\n                GaugeProgressComponent.initElementColor(bkcolor, color, elems[i]);\n            } else if (type.startsWith(HtmlButtonComponent.TypeTag)) {\n                HtmlButtonComponent.initElementColor(bkcolor, color, elems[i]);\n            } else if (type.startsWith(HtmlInputComponent.TypeTag)) {\n                HtmlInputComponent.initElementColor(bkcolor, color, elems[i]);\n            } else if (type.startsWith(HtmlSelectComponent.TypeTag)) {\n                HtmlSelectComponent.initElementColor(bkcolor, color, elems[i]);\n            }\n        }\n    }\n\n\n    /**\n     * Return the default prefix of gauge name\n     * @param type\n     */\n    static getPrefixGaugeName(type: string) {\n        if (type.startsWith(GaugeProgressComponent.TypeTag)) {\n            return 'progress_';\n        } else if (type.startsWith(HtmlButtonComponent.TypeTag)) {\n            return 'button_';\n        } else if (type.startsWith(HtmlInputComponent.TypeTag)) {\n            return 'input_';\n        } else if (type.startsWith(HtmlSelectComponent.TypeTag)) {\n            return 'select_';\n        } else if (type.startsWith(GaugeSemaphoreComponent.TypeTag)) {\n            return 'led_';\n        } else if (type.startsWith(SliderComponent.TypeTag)) {\n            return 'slider_';\n        } else if (type.startsWith(PipeComponent.TypeTag)) {\n            return 'pipe_';\n        } else if (type.startsWith(HtmlChartComponent.TypeTag)) {\n            return 'chart_';\n        } else if (type.startsWith(HtmlBagComponent.TypeTag)) {\n            return 'gauge_';\n        } else if (type.startsWith(HtmlSwitchComponent.TypeTag)) {\n            return 'switch_';\n        }\n        return 'shape_';\n    }\n\n\t/**\n\t * initialize the gauge element found in svg view and editor, like ngx-uplot, ngx-gauge\n\t * in svg is only a 'div' that have to be dynamic build and render from angular\n\t * @param ga gauge settings\n\t * @param res reference to factory\n\t * @param ref reference to factory\n\t * @param isview in view or editor, in editor have to disable mouse activity\n\t */\n    initElementAdded(ga: GaugeSettings, res: any, ref: any, isview: boolean) {\n        if (!ga) {\n            return null;\n        }\n        // add variable\n        let sigsid: string[] = this.getBindSignals(ga);\n        if (sigsid) {\n            for (let i = 0; i < sigsid.length; i++) {\n                this.hmiService.addSignal(sigsid[i], ga);\n            }\n        }\n        if (ga.type.startsWith(HtmlChartComponent.TypeTag)) {\n            // prepare attribute\n            let chartRange = ChartRangeType;\n            Object.keys(chartRange).forEach(key => {\n                this.translateService.get(chartRange[key]).subscribe((txt: string) => { chartRange[key] = txt });\n            });\n            let gauge: ChartUplotComponent = HtmlChartComponent.initElement(ga, res, ref, isview, chartRange);\n            if (gauge) {\n                this.setChartPropety(gauge, ga.property);\n                this.mapChart[ga.id] = gauge;\n                gauge.onTimeRange.subscribe(data => {\n                    this.hmiService.queryDaqValues(data);\n                });\n                if (isview) {\n                    gauge.setRange(Object.keys(chartRange)[0]);\n                }\n                this.mapGauges[ga.id] = gauge;\n            }\n            return gauge;\n        } else if (ga.type.startsWith(HtmlBagComponent.TypeTag)) {\n            let gauge: NgxGaugeComponent = HtmlBagComponent.initElement(ga, res, ref, isview);\n            this.mapGauges[ga.id] = gauge;\n            return gauge;\n        } else if (ga.type.startsWith(SliderComponent.TypeTag)) {\n            let gauge: NgxNouisliderComponent = SliderComponent.initElement(ga, res, ref, isview);\n            this.mapGauges[ga.id] = gauge;\n            return gauge;\n        } else if (ga.type.startsWith(HtmlInputComponent.TypeTag)) {\n            HtmlInputComponent.initElement(ga, isview);\n        } else if (ga.type.startsWith(HtmlSelectComponent.TypeTag)) {\n            HtmlSelectComponent.initElement(ga, isview);\n        } else if (ga.type.startsWith(GaugeProgressComponent.TypeTag)) {\n            GaugeProgressComponent.initElement(ga);\n            return true;\n        } else if (ga.type.startsWith(HtmlSwitchComponent.TypeTag)) {\n            let gauge = HtmlSwitchComponent.initElement(ga, res, ref, isview);\n            this.mapGauges[ga.id] = gauge;\n            return gauge;\n        }\n    }\n\n    /**\n     * add the chart settings (line) and property options to the gauge\n     * @param gauge \n     * @param chart \n     * @param property \n     */\n    private setChartPropety(gauge: ChartUplotComponent, property: any) {\n        if (property) {\n            if (property.id) {\n                let chart = this.hmiService.getChart(property.id);\n                if (chart) {\n                    const opt = <ChartOptions>{...property.options, ...{ title: chart.name, id: chart.name, scales: { x: { time: true } } } };\n                    gauge.setOptions(opt, true);\n                    for (let i = 0; i < chart.lines.length; i++) {\n                        let line = chart.lines[i];\n                        let sigid = line.id;\n                        let sigProperty = this.hmiService.getMappedVariable(sigid, true);\n                        if (sigProperty) {\n                            gauge.addLine(sigid, sigProperty.name, line.color, line.label, line.yaxis);\n                        }\n                    }\n                    gauge.redraw();\n                }\n            } else {\n                gauge.setOptions(property.options, true);  \n            }\n        }\n    }\n\n\t/**\n\t * clear memory object used from view, some reset\n\t */\n    clearMemory() {\n        this.memorySigGauges = {};\n    }\n}\n\ninterface MapGaugesSetting {\n    [x: string]: GaugeSettings\n}\n","module.exports = \"\"","module.exports = \"\"","/**\n * Shape extension\n */\nimport { Component } from '@angular/core';\nimport { GaugeBaseComponent } from '../../gauge-base/gauge-base.component'\nimport { GaugeSettings, GaugeAction, Variable, GaugeStatus, GaugeActionStatus, GaugeActionsType } from '../../../_models/hmi';\nimport { GaugeDialogType } from '../../gauge-property/gauge-property.component';\nimport { Utils } from '../../../_helpers/utils';\n\ndeclare var SVG: any;\ndeclare var Raphael: any;\n\n@Component({\n    selector: 'ape-shapes',\n    templateUrl: './ape-shapes.component.html',\n    styleUrls: ['./ape-shapes.component.css']\n})\nexport class ApeShapesComponent extends GaugeBaseComponent {\n\n    static TypeId = 'ape';\n    static TypeTag = 'svg-ext-' + ApeShapesComponent.TypeId;      // used to identify shapes type, binded with the library svgeditor\n    static LabelTag = 'AnimProcEng';\n\n    static actionsType = { stop: GaugeActionsType.stop, clockwise: GaugeActionsType.clockwise, anticlockwise: GaugeActionsType.anticlockwise, downup: GaugeActionsType.downup,\n        hide: GaugeActionsType.hide, show: GaugeActionsType.show };\n\n    constructor() {\n        super();\n    }\n\n    static getSignals(pro: any) {\n        let res: string[] = [];\n        if (pro.variableId) {\n            res.push(pro.variableId);\n        }\n        if (pro.alarmId) {\n            res.push(pro.alarmId);\n        }\n        if (pro.actions) {\n            pro.actions.forEach(act => {\n                res.push(act.variableId);\n            });\n        }\n        return res;\n    }\n\n    static getActions() {\n        return this.actionsType;\n    }\n\n    static getDialogType(): GaugeDialogType {\n        return GaugeDialogType.RangeWithAlarm;\n    }\n\n    static processValue(ga: GaugeSettings, svgele: any, sig: Variable, gaugeStatus: GaugeStatus) {\n        try {\n            if (svgele.node) {\n                let clr = '';\n                let value = parseFloat(sig.value);\n                if (Number.isNaN(value)) {\n                    // maybe boolean\n                    value = Number(sig.value);\n                } else {\n                    value = parseFloat(value.toFixed(5));\n                }\n                if (ga.property) {\n                    if (ga.property.variableId === sig.id && ga.property.ranges) {\n                        for (let idx = 0; idx < ga.property.ranges.length; idx++) {\n                            if (ga.property.ranges[idx].min <= value && ga.property.ranges[idx].max >= value) {\n                                clr = ga.property.ranges[idx].color;\n                            }\n                        }\n                        if (clr) {\n                            svgele.node.setAttribute('fill', clr);\n                        }\n                    }\n                    // check actions\n                    if (ga.property.actions) {\n                        ga.property.actions.forEach(act => {\n                            if (act.variableId === sig.id) {\n                                ApeShapesComponent.processAction(act, svgele, value, gaugeStatus);\n                            }\n                        });\n                    }\n                }\n            }\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n    static processAction(act: GaugeAction, svgele: any, value: any, gaugeStatus: GaugeStatus) {\n        if (this.actionsType[act.type] === this.actionsType.hide) {\n            if (act.range.min <= value && act.range.max >= value) {\n                let element = SVG.adopt(svgele.node);\n                this.runActionHide(element, act.type, gaugeStatus);\n            }\n        } else if (this.actionsType[act.type] === this.actionsType.show) {\n            if (act.range.min <= value && act.range.max >= value) {\n                let element = SVG.adopt(svgele.node);\n                this.runActionShow(element, act.type, gaugeStatus);\n            }\n        } else {\n            if (act.range.min <= value && act.range.max >= value) {\n                var element = SVG.adopt(svgele.node);\n                ApeShapesComponent.runMyAction(element, act.type, gaugeStatus);\n            }    \n        }\n    }\n\n    static runMyAction(element, type, gaugeStatus: GaugeStatus) {\n        element.stop(true);\n        if (ApeShapesComponent.actionsType[type] === ApeShapesComponent.actionsType.clockwise) {\n            gaugeStatus.actionRef = <GaugeActionStatus>{ type: type, animr: element.animate(3000).rotate(365).loop() };\n        } else if (ApeShapesComponent.actionsType[type] === ApeShapesComponent.actionsType.anticlockwise) {\n            gaugeStatus.actionRef = <GaugeActionStatus>{ type: type, animr: element.animate(3000).rotate(-365).loop() };\n        } else if (ApeShapesComponent.actionsType[type] === ApeShapesComponent.actionsType.downup) {\n            if (gaugeStatus.actionRef && gaugeStatus.actionRef.type === type) {\n                return;\n            }\n            let eletoanim = Utils.searchTreeStartWith(element.node, 'pm');\n            if (eletoanim) {\n                element = SVG.adopt(eletoanim);\n                let elebox = eletoanim.getBBox();\n\t\t\t\tvar movefrom = { x: elebox.x, y: elebox.y };\n                var moveto = { x: elebox.x, y: elebox.y  - 25 };\n                \n                let timeout = setInterval(() => {\n                    element.animate(1000).move(moveto.x, moveto.y).animate(1000).move(movefrom.x, movefrom.y);\n                }, 2000);\n                gaugeStatus.actionRef = <GaugeActionStatus>{ type: type, timer: timeout };\n            }\n        } else if (ApeShapesComponent.actionsType[type] === ApeShapesComponent.actionsType.stop) {\n            if (gaugeStatus.actionRef && gaugeStatus.actionRef.timer) {\n                clearTimeout(gaugeStatus.actionRef.timer);\n                gaugeStatus.actionRef.timer = null;\n            }\n        }\n    }\n\n    static firstAnimation(element, moveto, movefrom) {\n        // element.animate(1000).move(moveto.x, moveto.y).animate(1000).move(movefrom.x, movefrom.y).after(function () {\n        //     ApeShapesComponent.firstAnimation(element, moveto, movefrom);\n        // });\n        element.animate({duration: 1000, delay: 6000, wait: 6000 }).move(moveto.x, moveto.y).after(function () {\n        // element.animate(1000).move(movefrom.x, movefrom.y);\n        }).loop();//ApeShapesComponent.secondAnimation(element, moveto, movefrom));\n    }\n    static secondAnimation(element, movefrom, moveto) {\n        // element.animate(1000).move(moveto.x, moveto.y).after(ApeShapesComponent.firstAnimation(element, moveto, movefrom));\n    }\n}\n","module.exports = \"\"","module.exports = \"\"","/**\n * Shape extension\n */\nimport { Component, OnInit, Input } from '@angular/core';\nimport { GaugeBaseComponent } from '../../gauge-base/gauge-base.component'\nimport { GaugeSettings, GaugeAction, Variable, GaugeStatus, GaugeActionsType, GaugeActionStatus } from '../../../_models/hmi';\nimport { GaugeDialogType } from '../../gauge-property/gauge-property.component';\n\ndeclare var SVG: any;\n\n@Component({\n    selector: 'gauge-proc-eng',\n    templateUrl: './proc-eng.component.html',\n    styleUrls: ['./proc-eng.component.css']\n})\nexport class ProcEngComponent extends GaugeBaseComponent implements OnInit {\n\n    @Input() data: any;\n\n    static TypeId = 'proceng';\n    static TypeTag = 'svg-ext-' + ProcEngComponent.TypeId;\n    static LabelTag = 'Proc-Eng';\n\n    static actionsType = { hide: GaugeActionsType.hide, show: GaugeActionsType.show, blink: GaugeActionsType.blink };\n\n    constructor() {\n        super();\n    }\n\n    ngOnInit() {\n    }\n\n    static getSignals(pro: any) {\n        let res: string[] = [];\n        if (pro.variableId) {\n            res.push(pro.variableId);\n        }\n        if (pro.alarmId) {\n            res.push(pro.alarmId);\n        }\n        if (pro.actions && pro.actions.length) {\n            pro.actions.forEach(act => {\n                res.push(act.variableId);\n            });\n        }\n        return res;\n    }\n\n    static getActions() {\n        return this.actionsType;\n    }\n\n    static getDialogType(): GaugeDialogType {\n        return GaugeDialogType.RangeWithAlarm;\n    }\n\n    static processValue(ga: GaugeSettings, svgele: any, sig: Variable, gaugeStatus: GaugeStatus) {\n        try {\n            if (svgele.node) {\n                let clr = '';\n                let value = parseFloat(sig.value);\n                if (Number.isNaN(value)) {\n                    // maybe boolean\n                    value = Number(sig.value);\n                } else {\n                    value = parseFloat(value.toFixed(5));\n                }\n                if (ga.property) {\n                    if (ga.property.variableId === sig.id && ga.property.ranges) {\n                        for (let idx = 0; idx < ga.property.ranges.length; idx++) {\n                            if (ga.property.ranges[idx].min <= value && ga.property.ranges[idx].max >= value) {\n                                clr = ga.property.ranges[idx].color;\n                            }\n                        }\n                        if (clr) {\n                            svgele.node.setAttribute('fill', clr);\n                        }\n                    }\n                    // check actions\n                    if (ga.property.actions) {\n                        ga.property.actions.forEach(act => {\n                            if (act.variableId === sig.id) {\n                                ProcEngComponent.processAction(act, svgele, value, gaugeStatus);\n                            }\n                        });\n                    }   \n                }\n            }\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n    static processAction(act: GaugeAction, svgele: any, value: any, gaugeStatus: GaugeStatus) {\n        if (this.actionsType[act.type] === this.actionsType.hide) {\n            if (act.range.min <= value && act.range.max >= value) {\n                let element = SVG.adopt(svgele.node);\n                this.runActionHide(element, act.type, gaugeStatus);\n            }\n        } else if (this.actionsType[act.type] === this.actionsType.show) {\n            if (act.range.min <= value && act.range.max >= value) {\n                let element = SVG.adopt(svgele.node);\n                this.runActionShow(element, act.type, gaugeStatus);\n            }\n        } else if (this.actionsType[act.type] === this.actionsType.blink) {\n            let element = SVG.adopt(svgele.node);\n            let inRange = (act.range.min <= value && act.range.max >= value);\n            this.checkActionBlink(element, act.type, gaugeStatus, inRange, act.options, false);\n        }\n    }\n}","module.exports = \"\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { GaugeBaseComponent } from '../gauge-base/gauge-base.component'\nimport { GaugeSettings, GaugeAction, Variable, GaugeStatus, GaugeActionsType } from '../../_models/hmi';\nimport { GaugeDialogType } from '../gauge-property/gauge-property.component';\n\ndeclare var SVG: any;\n\n@Component({\n    selector: 'gauge-shapes',\n    templateUrl: './shapes.component.html',\n    styleUrls: ['./shapes.component.css']\n})\nexport class ShapesComponent extends GaugeBaseComponent implements OnInit {\n\n    static TypeId = 'shapes';\n    static TypeTag = 'svg-ext-' + ShapesComponent.TypeId;      // used to identify shapes type, binded with the library svgeditor\n    static LabelTag = 'Shapes';\n\n    static actionsType = { hide: GaugeActionsType.hide, show: GaugeActionsType.show, blink: GaugeActionsType.blink };\n\n    constructor() {\n        super();\n    }\n\n    ngOnInit() {\n    }\n\n    static getSignals(pro: any) {\n        let res: string[] = [];\n        if (pro.variableId) {\n            res.push(pro.variableId);\n        }\n        if (pro.alarmId) {\n            res.push(pro.alarmId);\n        }\n        if (pro.actions && pro.actions.length) {\n            pro.actions.forEach(act => {\n                res.push(act.variableId);\n            });\n        }\n        return res;\n    }\n\n    static getActions() {\n        return this.actionsType;\n    }\n\n    static getDialogType(): GaugeDialogType {\n        return GaugeDialogType.RangeWithAlarm;\n    }\n\n    static processValue(ga: GaugeSettings, svgele: any, sig: Variable, gaugeStatus: GaugeStatus) {\n        try {\n            if (svgele.node) {\n                let value = parseFloat(sig.value);\n                if (Number.isNaN(value)) {\n                    // maybe boolean\n                    value = Number(sig.value);\n                } else {\n                    value = parseFloat(value.toFixed(5));\n                }\n                if (ga.property) {\n                    if (ga.property.variableId === sig.id && ga.property.ranges) {\n                        let fill = '';\n                        let stroke = '';        \n                        for (let idx = 0; idx < ga.property.ranges.length; idx++) {\n                            if (ga.property.ranges[idx].min <= value && ga.property.ranges[idx].max >= value) {\n                                fill = ga.property.ranges[idx].color;\n                                stroke = ga.property.ranges[idx].stroke;\n                            }\n                        }\n                        // check if general shape (line/path/fpath/text) to set the stroke \n                        let mode = ga.type.replace('svg-ext-shapes-', '');\n                        if (fill) {\n                            svgele.node.setAttribute('fill', fill);\n                        }\n                        if (stroke) {\n                            svgele.node.setAttribute('stroke', stroke);\n                        }\n\n                    }\n                    // check actions\n                    if (ga.property.actions) {\n                        ga.property.actions.forEach(act => {\n                            if (act.variableId === sig.id) {\n                                ShapesComponent.processAction(act, svgele, value, gaugeStatus);\n                            }\n                        });\n                    }                \n                }\n            }\n        } catch (err) {\n            console.error(err);\n        }            \n    }\n\n    static processAction(act: GaugeAction, svgele: any, value: any, gaugeStatus: GaugeStatus) {\n        if (this.actionsType[act.type] === this.actionsType.hide) {\n            if (act.range.min <= value && act.range.max >= value) {\n                let element = SVG.adopt(svgele.node);\n                this.runActionHide(element, act.type, gaugeStatus);\n            }\n        } else if (this.actionsType[act.type] === this.actionsType.show) {\n            if (act.range.min <= value && act.range.max >= value) {\n                let element = SVG.adopt(svgele.node);\n                this.runActionShow(element, act.type, gaugeStatus);\n            }\n        } else if (this.actionsType[act.type] === this.actionsType.blink) {\n            let element = SVG.adopt(svgele.node);\n            let inRange = (act.range.min <= value && act.range.max >= value);\n            this.checkActionBlink(element, act.type, gaugeStatus, inRange, act.options, false);\n        }\n    }\n}\n","module.exports = \"\"","module.exports = \"<div style=\\\"width: 100%;position: relative;padding-bottom: 40px\\\">\\n    <div style=\\\"margin-top: 20px;margin-bottom: 20px;\\\">\\n        {{msgtoconfirm}}\\n    </div>\\n\\n    <div mat-dialog-actions class=\\\"dialog-action\\\">\\n        <button mat-raised-button (click)=\\\"onNoClick()\\\">{{'dlg.cancel' | translate}}</button>\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onOkClick()\\\" [mat-dialog-close]=\\\"data\\\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\\n    </div>\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n    selector: 'app-confirm-dialog',\n    templateUrl: './confirm-dialog.component.html',\n    styleUrls: ['./confirm-dialog.component.css']\n})\nexport class ConfirmDialogComponent implements OnInit {\n\n    msgtoconfirm: string = '';\n\n    constructor(public dialogRef: MatDialogRef<ConfirmDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: any) {\n    \n        this.msgtoconfirm = this.data.msg;\n    }\n\n    ngOnInit() {\n    }\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n\n    onOkClick(): void {\n        this.dialogRef.close(true);\n    }\n}\n","import { Observable, Subject, Subscription, BehaviorSubject } from 'rxjs';\nimport { NgxFabItemButtonComponent } from './ngx-fab-item-button.component';\nimport {\n    Component,\n    Input,\n    ContentChildren,\n    ElementRef,\n    HostListener,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    AfterContentInit,\n    OnDestroy,\n    Output,\n    OnChanges\n} from '@angular/core';\n\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'ngx-fab-button',\n    styles: [`\n  :host {\n    position: absolute;\n  }\n  .fab-menu {\n      box-sizing: border-box;\n      font-size: 12px;\n      width:40px;\n      height: 40px;\n      text-align: left;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      cursor: pointer;\n      z-index: 9;\n  }\n  .fab-toggle {\n    border-radius: 100%;\n    width: 36px;\n    height: 36px;\n    color: white;\n    text-align: center;\n    line-height: 50px;\n    transform: translate3d(0, 0, 0);\n    transition: all ease-out 200ms;\n    z-index: 2;\n    transition-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1.275);\n    transition-duration: 400ms;\n    transform: scale(1, 1) translate3d(0, 0, 0);\n    cursor: pointer;\n    box-shadow: 0 2px 5px 0 rgba(0,0,0,.26);\n  }\n  .fab-menu .fab-toggle:hover {\n    transform: scale(1.2, 1.2) translate3d(0, 0, 0);\n  }\n  .fab-menu /deep/ .item {\n     opacity: 0;\n  }\n  .fab-menu.active /deep/ .item {\n     opacity: 1;\n  }\n  .fab-menu.active /deep/ .content-wrapper {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .fab-menu.active /deep/ .content {\n    display: block;\n  }\n  .fab-menu.active .fab-toggle {\n    transition-timing-function: linear;\n    transition-duration: 200ms;\n    transform: scale(1, 1) translate3d(0, 0, 0);\n  }\n  `],\n    template: `\n    <div class=\"fab-menu\" [class.active]=\"(state | async).display\">\n        <a class=\"fab-toggle\" (click)=\"toggle()\" (touchend)=\"toggle()\" [style.backgroundColor]=\"color\">\n          <i class=\"material-icons\" *ngIf=\"!opened\"> {{icon}} </i>\n          <i class=\"material-icons\" *ngIf=\"opened\"> {{iconOpen}} </i>\n        </a>\n        <ng-content></ng-content>\n    </div>\n  `\n})\n\nexport class NgxFabButtonComponent implements AfterContentInit, OnDestroy, OnChanges {\n    private elementref: HTMLElement;\n    private subs: Subscription[] = [];\n    public state: BehaviorSubject<any>;\n\n    @Input() icon: string;\n    @Input() iconOpen: string;\n    @Input() direction: string;\n    @Input() spaceBetweenButtons = 45;\n    @Input() open: Subject<boolean>;\n    @Input() color = '#dd0031';\n    @Input() disabled = false;\n    @Output() events: Subject<any> = new Subject();\n    @Output() opened = false;\n    @ContentChildren(NgxFabItemButtonComponent) buttons;\n\n    constructor(private element: ElementRef, private cd: ChangeDetectorRef) {\n        this.elementref = element.nativeElement;\n\n        this.state = new BehaviorSubject({\n            display: false,\n            direction: 'top',\n            event: 'start',\n            spaceBetweenButtons: this.spaceBetweenButtons\n        });\n    }\n\n    public toggle() {\n        if (this.disabled) {\n            return this.disabled;\n        }\n        this.state.next({\n            ...this.state.getValue(),\n            display: !this.state.getValue().display,\n            event: !this.state.getValue().display ? 'open' : 'close'\n        });\n        this.opened = this.state.getValue().display;\n    }\n\n    // only top and bottom support content element\n    private checkDirectionType() {\n        if (this.buttons.toArray()) {\n            let display = 'block';\n\n            if (this.direction === 'right' || this.direction === 'left') {\n                display = 'none';\n            }\n\n            this.buttons.toArray().forEach(element => {\n                element.contentref.nativeElement.style.display = display;\n            });\n        }\n    }\n\n    // transition\n    private animateButtons(eventType) {\n        this.buttons.toArray().forEach((btn, i) => {\n            i += 1;\n            const style = btn.elementref.nativeElement.style;\n\n            if (eventType !== 'directionChanged' && this.state.getValue().display) {\n                style['transform'] = 'scale(1)';\n                style['transition-duration'] = '0s';\n\n                if (btn.timeout) {\n                    clearTimeout(btn.timeout);\n                }\n            }\n\n            setTimeout(() => {\n                style['transition-duration'] = this.state.getValue().display ? `${90 + (100 * i)}ms` : '';\n                style['transform'] = this.state.getValue().display ? this.getTranslate(i) : '';\n            }, 50);\n\n            if (eventType !== 'directionChanged' && !this.state.getValue().display) {\n                btn.timeout = setTimeout(() => {\n                    style['transform'] = 'scale(0)';\n                }, 90 + (100 * i));\n            }\n        });\n    }\n\n    // get transition direction\n    private getTranslate(i) {\n\n        let animation;\n\n        switch (this.direction) {\n            case 'right':\n                animation = `translate3d(${this.state.getValue().spaceBetweenButtons * i}px,0,0)`;\n                break;\n            case 'bottom':\n                animation = `translate3d(0,${this.state.getValue().spaceBetweenButtons * i}px,0)`;\n                break;\n            case 'left':\n                animation = `translate3d(-${this.state.getValue().spaceBetweenButtons * i}px,0,0)`;\n                break;\n            default:\n                animation = `translate3d(0,-${this.state.getValue().spaceBetweenButtons * i}px,0)`;\n                break;\n        }\n\n        return animation;\n    }\n\n    /* some problems here */\n    // @HostListener('document:click', ['$event.target']) private clickOutside(target) {\n    //   if (this.state.getValue().display && !this.elementref.contains(target)) {\n    //     this.state.next({\n    //       ...this.state.getValue(),\n    //       display: false,\n    //       event: 'close'\n    //     });\n    //   }\n    // }\n    ngAfterContentInit() {\n        if (this.direction) {\n            // first time to check\n            this.checkDirectionType();\n        }\n\n        this.buttons.toArray().map(v => {\n            const sub = v.clicked.subscribe(() => {\n                // this.state.next({\n                //   ...this.state.getValue(),\n                //   display: false,\n                //   event: 'close'\n                // });\n            });\n\n            this.subs.push(sub);\n        });\n\n        const sub = this.state.subscribe(v => {\n            this.animateButtons(v.event);\n\n            this.events.next({\n                display: v.display,\n                event: v.event,\n                direction: v.direction\n            });\n        });\n        this.subs.push(sub);\n    }\n\n    // if @Input values changes, we need check the direction type\n    ngOnChanges(changes) {\n        if (changes.direction && !changes.direction.firstChange) {\n            this.state.next({\n                ...this.state.getValue(),\n                event: 'directionChanged',\n                direction: changes.direction.currentValue\n            });\n            // if changes happens\n            this.checkDirectionType();\n        }\n\n        if (changes.open && changes.open.currentValue) {\n            const sub = this.open.subscribe(v => {\n                if (v !== this.state.getValue().display) {\n                    this.state.next({\n                        ...this.state.getValue(),\n                        event: v ? 'open' : 'close',\n                        display: v\n                    });\n\n                    // make angular happy\n                    this.cd.markForCheck();\n                }\n            });\n\n            this.subs.push(sub);\n        }\n\n        if (changes.spaceBetweenButtons && changes.spaceBetweenButtons.currentValue) {\n            this.state.next({\n                ...this.state.getValue(),\n                event: 'spaceBetweenButtonsChanged',\n                spaceBetweenButtons: changes.spaceBetweenButtons.currentValue\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        this.subs.forEach(v => {\n            v.unsubscribe();\n        });\n    }\n}","import {\n    Component,\n    Input,\n    Output,\n    EventEmitter,\n    ViewChild,\n    ChangeDetectionStrategy\n} from '@angular/core';\n\n@Component({\n    selector: 'ngx-fab-item-button',\n    styles: [`\n  .item {\n    /* width:40px; */\n    height: 36px;\n    left: 3px;\n    /* left: -3px; */\n    transform: translate3d(0, 0, 0);\n    transition: transform, opacity ease-out 200ms;\n    transition-timing-function: cubic-bezier(0.165, 0.84, 0.44, 1);\n    transition-duration: 180ms;\n    position: absolute;\n    cursor: pointer;\n    top:5px;\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    z-index: 9999;\n  }\n  .item.disabled {\n    pointer-events: none;\n  }\n  .item.disabled .fab-item {\n    background-color: lightgray;\n  }\n  .content {\n    z-index: 9999;\n    background: rgba(68,138,255, 1);\n    margin-left: 0px;\n    line-height: 25px;\n    color: white;\n    /* text-transform: lowercase; */\n    padding: 5px 20px 3px 20px;\n    border-top-right-radius: 18px;\n    border-bottom-right-radius: 18px;\n    border-bottom-left-radius: 18px;\n    border-top-left-radius: 18px;\n    display: none;\n    font-size: 13px;\n    height: 28px;\n    /* margin-top: 4px; */\n    box-shadow: 0 2px 5px 0 rgba(0,0,0,.26);\n    white-space:nowrap;\n  }\n  .fab-item {\n    left: 0;\n    background: rgba(68,138,255, 1);\n    border-radius: 100%;\n    width: 36px;\n    height: 36px;\n    position: absolute;\n    color: white;\n    text-align: center;\n    cursor: pointer;\n    line-height: 50px;\n    /* box-shadow: 0 2px 5px 0 rgba(0,0,0,.26); */\n  }\n  .fab-item-ex {\n    top: 0;\n    background: rgba(68,138,255, 1);\n    border-radius: 100%;\n    width: 36px;\n    height: 36px;\n    position: absolute;\n    color: white;\n    text-align: center;\n    cursor: pointer;\n    line-height: 45px;\n    /* box-shadow: 0 2px 5px 0 rgba(0,0,0,.26); */\n  }\n  .fab-item img {\n    padding-bottom: 2px;\n    padding-left: 5px;\n  }\n  `],\n    template: `\n    <div #elementref class=\"item {{ disabled ? 'disabled' : ''}}\"\n    (click)=\"emitClickEvent($event)\">\n        <a class=\"fab-item\" [style.backgroundColor]=\"color\">\n          <img *ngIf=\"svgicon\" src=\"{{svgicon}}\"/>\n          <i class=\"material-icons\" *ngIf=\"!svgicon\"> {{ icon }} </i>\n        </a>\n        <div class=\"content-wrapper\" #contentref>\n          <div class=\"content\" [style.display]=\"content ? 'block' : 'none'\" [style.padding-right]=\"iconex ? '28px' : '20px'\">{{content}}\n            <a class=\"fab-item-ex\" [style.backgroundColor]=\"color\" *ngIf=\"iconex\" (click)=\"stopPropagation($event);emitClickExEvent($event)\">\n                <i class=\"material-icons\" style=\"font-size: 18px\"> {{ iconex }} </i>\n            </a>\n          </div>\n        </div>\n    </div>\n  `,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxFabItemButtonComponent {\n    @Input() icon: string;\n    @Input() svgicon: string;\n    @Input() iconex: string;\n    @Input() svgiconex: string;\n    @Input() content: string;\n    @Input() color = 'white';\n    @Output() clicked: EventEmitter<any> = new EventEmitter();\n    @Output() exclicked: EventEmitter<any> = new EventEmitter();\n    @Input() disabled = false;\n    @ViewChild('elementref') elementref;\n    @ViewChild('contentref') contentref;\n\n    emitClickEvent($event: Event) {\n        if (this.disabled) {\n            return this.disabled;\n        }\n        this.clicked.emit($event);\n    }\n    emitClickExEvent($event: Event) {\n        if (this.disabled) {\n            return this.disabled;\n        }\n        this.exclicked.emit($event);\n    }\n\n    public stopPropagation($event: Event) {\n        $event.stopPropagation();\n    }\n}\n","module.exports = \"<input matInput class=\\\"mat-select-search-input mat-select-search-hidden\\\" />\\n\\n<div class=\\\"mat-select-search-inner\\\" [ngClass]=\\\"{'mat-select-search-inner-multiple': matSelect.multiple}\\\">\\n    <input matInput class=\\\"mat-select-search-input\\\" #searchSelectInput (keydown)=\\\"_handleKeydown($event)\\\" (input)=\\\"onInputChange($event.target.value)\\\"\\n        (blur)=\\\"onBlur($event.target.value)\\\" [placeholder]=\\\"placeholderLabel\\\" />\\n    <button mat-button *ngIf=\\\"value\\\" mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"_reset(true)\\\" class=\\\"mat-select-search-clear\\\">\\n        <mat-icon>close</mat-icon>\\n    </button>\\n</div>\\n\\n<div *ngIf=\\\"noEntriesFoundLabel && value && _options?.length === 0\\\" class=\\\"mat-select-search-no-entries-found\\\">\\n    {{noEntriesFoundLabel}}\\n</div>\"","module.exports = \".mat-select-search-hidden{visibility:hidden}.mat-select-search-inner{position:absolute;top:0;width:calc(100% + 22px);border-bottom:1px solid #cccccc;background:white;z-index:100}.mat-select-search-inner.mat-select-search-inner-multiple{width:calc( 100% + 55px)}::ng-deep .mat-select-search-panel{-webkit-transform:none !important;transform:none !important;max-height:350px}.mat-select-search-input{padding:16px;padding-right:36px;box-sizing:border-box;font-size:15px;border:none}.mat-select-search-no-entries-found{padding:16px}.mat-select-search-clear{position:absolute;right:0;top:4px}::ng-deep .cdk-overlay-pane-select-search{margin-top:40px}\\n\"","import {\n    AfterViewInit,\n    ChangeDetectionStrategy, ChangeDetectorRef,\n    Component, ElementRef, EventEmitter, forwardRef, Inject, Input, OnDestroy, OnInit, QueryList,\n    ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatOption, MatSelect } from '@angular/material';\nimport { Subject } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { TranslateService } from '@ngx-translate/core';\n\n/* tslint:disable:member-ordering */\n/**\n * Component providing an input field for searching MatSelect options.\n *\n * Example usage:\n *\n * interface Bank {\n *  id: string;\n *  name: string;\n * }\n *\n * @Component({\n *   selector: 'my-app-data-selection',\n *   template: `\n *     <mat-form-field>\n *       <mat-select [formControl]=\"bankCtrl\" placeholder=\"Bank\">\n *         <mat-select-search [formControl]=\"bankFilterCtrl\"></mat-select-search>\n *         <mat-option *ngFor=\"let bank of filteredBanks | async\" [value]=\"bank.id\">\n *           {{bank.name}}\n *         </mat-option>\n *       </mat-select>\n *     </mat-form-field>\n *   `\n * })\n * export class DataSelectionComponent implements OnInit, OnDestroy {\n *\n *   // control for the selected bank\n *   public bankCtrl: FormControl = new FormControl();\n *   // control for the MatSelect filter keyword\n *   public bankFilterCtrl: FormControl = new FormControl();\n *\n *   // list of banks\n *   private banks: Bank[] = [{name: 'Bank A', id: 'A'}, {name: 'Bank B', id: 'B'}, {name: 'Bank C', id: 'C'}];\n *   // list of banks filtered by search keyword\n *   public filteredBanks: ReplaySubject<Bank[]> = new ReplaySubject<Bank[]>(1);\n *\n *   // Subject that emits when the component has been destroyed.\n *   private _onDestroy = new Subject<void>();\n *\n *\n *   ngOnInit() {\n *     // load the initial bank list\n *     this.filteredBanks.next(this.banks.slice());\n *     // listen for search field value changes\n *     this.bankFilterCtrl.valueChanges\n *       .pipe(takeUntil(this._onDestroy))\n *       .subscribe(() => {\n *         this.filterBanks();\n *       });\n *   }\n *\n *   ngOnDestroy() {\n *     this._onDestroy.next();\n *     this._onDestroy.complete();\n *   }\n *\n *   private filterBanks() {\n *     if (!this.banks) {\n *       return;\n *     }\n *\n *     // get the search keyword\n *     let search = this.bankFilterCtrl.value;\n *     if (!search) {\n *       this.filteredBanks.next(this.banks.slice());\n *       return;\n *     } else {\n *       search = search.toLowerCase();\n *     }\n *\n *     // filter the banks\n *     this.filteredBanks.next(\n *       this.banks.filter(bank => bank.name.toLowerCase().indexOf(search) > -1)\n *     );\n *   }\n * }\n */\n@Component({\n    selector: 'mat-select-search',\n    templateUrl: './mat-select-search.component.html',\n    styleUrls: ['./mat-select-search.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => MatSelectSearchComponent),\n            multi: true\n        }\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatSelectSearchComponent implements OnInit, OnDestroy, AfterViewInit, ControlValueAccessor {\n\n    /** Label of the search placeholder */\n    @Input() placeholderLabel = '';\n\n    /** Label to be shown when no entries are found. Set to null if no message should be shown. */\n    @Input() noEntriesFoundLabel = '';\n\n    /** Reference to the search input field */\n    @ViewChild('searchSelectInput', { read: ElementRef }) searchSelectInput: ElementRef;\n\n    /** Current search value */\n    get value(): string {\n        return this._value;\n    }\n    private _value: string;\n\n    onChange: Function = (_: any) => { };\n    onTouched: Function = (_: any) => { };\n\n    /** Reference to the MatSelect options */\n    public _options: QueryList<MatOption>;\n\n    /** Previously selected values when using <mat-select [multiple]=\"true\">*/\n    private previousSelectedValues: any[];\n\n    /** Whether the backdrop class has been set */\n    private overlayClassSet = false;\n\n    /** Event that emits when the current value changes */\n    private change = new EventEmitter<string>();\n\n    /** Subject that emits when the component has been destroyed. */\n    private _onDestroy = new Subject<void>();\n\n\n    constructor(@Inject(MatSelect) public matSelect: MatSelect,\n        private translateService: TranslateService,\n        private changeDetectorRef: ChangeDetectorRef) {\n    }\n\n    ngOnInit() {\n        // set custom panel class\n        const panelClass = 'mat-select-search-panel';\n        if (this.matSelect.panelClass) {\n            if (Array.isArray(this.matSelect.panelClass)) {\n                this.matSelect.panelClass.push(panelClass);\n            } else if (typeof this.matSelect.panelClass === 'string') {\n                this.matSelect.panelClass = [this.matSelect.panelClass, panelClass];\n            } else if (typeof this.matSelect.panelClass === 'object') {\n                this.matSelect.panelClass[panelClass] = true;\n            }\n        } else {\n            this.matSelect.panelClass = panelClass;\n        }\n\n        // when the select dropdown panel is opened or closed\n        this.matSelect.openedChange\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe((opened) => {\n                if (opened) {\n                    // focus the search field when opening\n                    this._focus();\n                } else {\n                    // clear it when closing\n                    this._reset();\n                }\n            });\n\n        // set the first item active after the options changed\n        this.matSelect.openedChange\n            .pipe(take(1))\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(() => {\n                this._options = this.matSelect.options;\n                this._options.changes\n                    .pipe(takeUntil(this._onDestroy))\n                    .subscribe(() => {\n                        const keyManager = this.matSelect._keyManager;\n                        if (keyManager && this.matSelect.panelOpen) {\n                            // avoid \"expression has been changed\" error\n                            setTimeout(() => {\n                                keyManager.setFirstItemActive();\n                            });\n                        }\n                    });\n            });\n\n        // detect changes when the input changes\n        this.change\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(() => {\n                this.changeDetectorRef.detectChanges();\n            });\n\n        this.initMultipleHandling();\n    }\n\n    ngOnDestroy() {\n        this._onDestroy.next();\n        this._onDestroy.complete();\n    }\n\n    ngAfterViewInit() {\n        this.setOverlayClass();\n        this.translateService.get('general.search').subscribe((txt: string) => { this.placeholderLabel = txt });\n        this.translateService.get('general.search-notfound').subscribe((txt: string) => { this.noEntriesFoundLabel = txt });\n    }\n\n    /**\n     * Handles the key down event with MatSelect.\n     * Allows e.g. selecting with enter key, navigation with arrow keys, etc.\n     * @param {KeyboardEvent} event\n     * @private\n     */\n    _handleKeydown(event: KeyboardEvent) {\n        if (event.keyCode === 32) {\n            // do not propagate spaces to MatSelect, as this would select the currently active option\n            event.stopPropagation();\n        }\n\n    }\n\n\n    writeValue(value: string) {\n        const valueChanged = value !== this._value;\n        if (valueChanged) {\n            this._value = value;\n            this.change.emit(value);\n        }\n    }\n\n    onInputChange(value) {\n        const valueChanged = value !== this._value;\n        if (valueChanged) {\n            this._value = value;\n            this.onChange(value);\n            this.change.emit(value);\n        }\n    }\n\n    onBlur(value: string) {\n        this.writeValue(value);\n        this.onTouched();\n    }\n\n    registerOnChange(fn: Function) {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: Function) {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Focuses the search input field\n     * @private\n     */\n    public _focus() {\n        if (!this.searchSelectInput) {\n            return;\n        }\n        // save and restore scrollTop of panel, since it will be reset by focus()\n        // note: this is hacky\n        const panel = this.matSelect.panel.nativeElement;\n        const scrollTop = panel.scrollTop;\n\n        // focus\n        this.searchSelectInput.nativeElement.focus();\n\n        panel.scrollTop = scrollTop;\n    }\n\n    /**\n     * Resets the current search value\n     * @param {boolean} focus whether to focus after resetting\n     * @private\n     */\n    public _reset(focus?: boolean) {\n        if (!this.searchSelectInput) {\n            return;\n        }\n        this.searchSelectInput.nativeElement.value = '';\n        this.onInputChange('');\n        if (focus) {\n            this._focus();\n        }\n    }\n\n    /**\n     * Sets the overlay class  to correct offsetY\n     * so that the selected option is at the position of the select box when opening\n     */\n    private setOverlayClass() {\n        if (this.overlayClassSet) {\n            return;\n        }\n        const overlayClass = 'cdk-overlay-pane-select-search';\n\n        this.matSelect.overlayDir.attach\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(() => {\n                // note: this is hacky, but currently there is no better way to do this\n                this.searchSelectInput.nativeElement.parentElement.parentElement\n                    .parentElement.parentElement.parentElement.classList.add(overlayClass);\n            });\n\n        this.overlayClassSet = true;\n    }\n\n\n    /**\n     * Initializes handling <mat-select [multiple]=\"true\">\n     * Note: to improve this code, mat-select should be extended to allow disabling resetting the selection while filtering.\n     */\n    private initMultipleHandling() {\n        // if <mat-select [multiple]=\"true\">\n        // store previously selected values and restore them when they are deselected\n        // because the option is not available while we are currently filtering\n        this.matSelect.valueChange\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe((values) => {\n                if (this.matSelect.multiple) {\n                    let restoreSelectedValues = false;\n                    if (this._value && this._value.length\n                        && this.previousSelectedValues && Array.isArray(this.previousSelectedValues)) {\n                        if (!values || !Array.isArray(values)) {\n                            values = [];\n                        }\n                        const optionValues = this.matSelect.options.map(option => option.value);\n                        this.previousSelectedValues.forEach(previousValue => {\n                            if (values.indexOf(previousValue) === -1 && optionValues.indexOf(previousValue) === -1) {\n                                // if a value that was selected before is deselected and not found in the options, it was deselected\n                                // due to the filtering, so we restore it.\n                                values.push(previousValue);\n                                restoreSelectedValues = true;\n                            }\n                        });\n                    }\n\n                    if (restoreSelectedValues) {\n                        this.matSelect._onChange(values);\n                    }\n\n                    this.previousSelectedValues = values;\n                }\n            });\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { MatSelectSearchComponent } from './mat-select-search.component';\nimport { MatButtonModule, MatInputModule, MatIconModule } from '@angular/material';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatButtonModule,\n        MatIconModule,\n        MatInputModule\n    ],\n    declarations: [\n        MatSelectSearchComponent\n    ],\n    exports: [\n        MatButtonModule,\n        MatInputModule,\n        MatSelectSearchComponent\n    ]\n})\nexport class MatSelectSearchModule { }\n","\nexport enum GaugeType {\n    Gauge,\n    Donut,\n    Zones\n}\n\nexport class GaugeOptions {\n    minValue: number = 0;\n    maxValue: number = 3000;\n    animationSpeed: number = 40;\n    colorStart: string = '#6fadcf';\n    colorStop: string = '#6fadcf';\n    gradientType: string = '';\n    strokeColor?: string = '#e0e0e0';\n    pointer? = {\n        length: 0.5,\n        strokeWidth: 0.035,\n        iconScale: 1.0,\n        color: '#000000'\n    };\n    angle: number = 0;\n    lineWidth: number = 0.3;\n    radiusScale: number = 0.6;\n    fontSize: number = 18;\n    fontFamily: 'Sans-serif';\n    textFilePosition: number = 20;\n    limitMax: boolean = false;\n    limitMin: boolean = false;\n    highDpiSupport: boolean = true;\n    backgroundColor: string = 'rgba(255, 255, 255, 0)';\n    shadowColor?: string = '#d5d5d5';\n    \n    fractionDigits: number = 0;\n    ticksEnabled: boolean = true;\n    renderTicks = {\n        divisions: 5,\n        divWidth: 1.1,\n        divLength: 0.7,\n        divColor: '#333333',\n        subDivisions: 3,\n        subLength: 0.5,\n        subWidth: 0.6,\n        subColor: '#666666'\n    };\n\n    staticLabelsText: string = '200;500;2100;2800';\n    staticFontSize: number = 10;\n    staticFontColor: string = '#000000';\n    staticLabels? = {\n        font: '10px sans-serif',\n        labels: [200, 500, 2100, 2800],\n        fractionDigits: 0,\n        color: '#000000'\n    };\n    staticZones? = [\n         {strokeStyle: \"#F03E3E\", min: 0, max: 200},\n         {strokeStyle: \"#FFDD00\", min: 200, max: 500},\n         {strokeStyle: \"#30B32D\", min: 500, max: 2100},\n         {strokeStyle: \"#FFDD00\", min: 2100, max: 2800},\n         {strokeStyle: \"#F03E3E\", min: 2800, max: 3000}\n    ]\n}","module.exports = \"\\n.mygauge-container {\\n    z-index: 1;\\n    position: relative;\\n    width: 100%; \\n    height:100%;\\n    padding: 20;\\n}\\n\\n.mygauge-canvas {\\n    margin: 0;\\n    position: absolute;\\n    top: 50%;\\n    left: 50%;\\n    -webkit-transform: translate(-50%, -50%);\\n            transform: translate(-50%, -50%);\\n}\\n\\n.mygauge-value {\\n    text-align: center; \\n    font-size: 18px; \\n    font-weight: bold;\\n    color: black; \\n    font-family: 'Amaranth', sans-serif;\\n    position: absolute; \\n    top: 5px; \\n    left: 0; \\n    right: 0;\\n}\"","module.exports = \"<div (window:resize)=\\\"onResize($event)\\\" class=\\\"mygauge-container\\\" #panel>\\n    <div #gaugetext class=\\\"mygauge-value\\\"></div>\\n    <canvas #gauge id=\\\"myGauge\\\" width=\\\"180\\\" height=\\\"50\\\" class=\\\"mygauge-canvas\\\"></canvas>\\n</div>\"","import { Component, OnInit, AfterViewInit, OnChanges, ViewChild, HostListener, ElementRef, Input, SimpleChanges } from '@angular/core';\n\nimport { GaugeOptions, GaugeType } from './gaugeOptions';\n\ndeclare const Gauge: any;\ndeclare const Donut: any;\n\n@Component({\n    selector: 'ngx-gauge',\n    templateUrl: './ngx-gauge.component.html',\n    styleUrls: ['./ngx-gauge.component.css']\n})\nexport class NgxGaugeComponent implements OnInit, AfterViewInit, OnChanges {\n\n    @Input() public id: string;\n    @Input() public options: GaugeOptions;\n    @Input() public value: any;\n    @ViewChild('panel') public panel: ElementRef;\n    @ViewChild('gauge') public canvas: ElementRef;\n    @ViewChild('gaugetext') public gaugetext: ElementRef;\n\n    gauge: any;\n    type = GaugeType.Gauge;\n    defOptions = new GaugeOptions();\n    initialized = false;\n\n    constructor() { }\n\n    ngOnInit() {\n        this.options = Object.assign(this.defOptions, this.options);\n    }\n\n    ngAfterViewInit() {\n        setTimeout(() => {\n            this.onResize(null);\n        }, 500);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (this.gauge) {\n            if (changes) {\n                if (changes.value) {\n                    this.gauge.set(changes.value.currentValue);\n                }\n            }\n        }\n    }\n\n    @HostListener('window:resize', ['$event'])\n    onResize(event) {\n        let canvas = this.canvas.nativeElement;\n        let w = canvas.parentNode.clientWidth;\n        let h = canvas.parentNode.clientHeight;// - (canvas.parentNode.clientHeight / 4);\n        if (w < h) h = w;\n        this.canvas.nativeElement.height = h;\n        this.canvas.nativeElement.width = w;\n        if (this.gauge) {\n            this.render();\n        }\n        if (!this.initialized) {\n            this.init(this.type);\n        }\n    }\n\n    resize(height?, width?) {\n        this.onResize(null);\n    }\n\n    private render() {\n        this.gauge.setOptions(this.options);\n        this.gauge.ctx.clearRect(0, 0, this.gauge.ctx.canvas.width, this.gauge.ctx.canvas.height);\n        this.gauge.render();\n    }\n\n    setValue(value) {\n        let val = parseFloat(value);\n        if (Number.isNaN(val)) {\n            // maybe boolean\n            val = Number(value);\n        } else {\n            val = parseFloat(val.toFixed(5));\n        }\n        this.gauge.set(val);\n    }\n\n    setOptions(options: GaugeOptions) {\n        this.options = options;\n        // if (options.backgroundColor) {\n        //     this.panel.nativeElement.style.backgroundColor = options.backgroundColor;\n        // }\n        this.gauge.animationSpeed = options.animationSpeed;\n        this.gauge.minValue = options.minValue;\n        this.gauge.maxValue = options.maxValue;\n        this.gaugetext.nativeElement.style.fontSize = options.fontSize + 'px';\n        if (options.fontFamily) {\n            this.gaugetext.nativeElement.style.fontFamily = options.fontFamily;\n        }\n        if (options.pointer && options.pointer.color) {\n            this.gaugetext.nativeElement.style.color = options.pointer.color;\n        }\n        this.gaugetext.nativeElement.style.top = options.textFilePosition + '%';\n        this.render();\n    }\n\n    getOptions() {\n        return this.options;\n    }\n\n    init(type: GaugeType) {\n        this.type = type;\n        if (type === GaugeType.Gauge) {\n            this.gauge = new Gauge(this.canvas.nativeElement);        \n            this.gauge.setTextField(this.gaugetext.nativeElement);\n        } else if (type === GaugeType.Zones) {\n            this.gauge = new Gauge(this.canvas.nativeElement);        \n            this.gauge.setTextField(this.gaugetext.nativeElement);\n        } else if (type === GaugeType.Donut) {\n            this.gauge = new Donut(this.canvas.nativeElement);        \n            this.gauge.setTextField(this.gaugetext.nativeElement);\n        }\n        this.setOptions(this.options);\n        this.gauge.set(this.value);\n        this.initialized = true;\n    }\n}\n","module.exports = \".myslider-container {\\n    z-index: 1;\\n    margin: auto;\\n}\"","module.exports = \"<div style=\\\"margin: 40px 40px 40px 40px\\\" #panel>\\n    <div #slider id=\\\"mySlider\\\" class=\\\"myslider-container\\\"></div>\\n</div>\"","import { Component, OnInit, AfterViewInit, OnDestroy, ViewChild, HostListener, ElementRef, Input } from '@angular/core';\n\ndeclare const noUiSlider: any;\ndeclare const wNumb: any;\n\n@Component({\n    selector: 'ngx-nouislider',\n    templateUrl: './ngx-nouislider.component.html',\n    styleUrls: ['./ngx-nouislider.component.css']\n})\nexport class NgxNouisliderComponent implements OnInit, AfterViewInit, OnDestroy {\n\n    @Input() public id: string;\n    @ViewChild('panel') public panel: ElementRef;\n    @ViewChild('slider') public slider: ElementRef;\n    @Input() public options: NgxNouisliderOptions;\n\n    size = { w: 0, h: 0 };\n    padding = 40;\n    defOptions = new NgxNouisliderOptions();\n    uiSlider: any;\n    onUpdate: any;\n    uiWorking = false;\n    uiWorkingTimeout: any;\n\n    constructor() { }\n\n    ngOnInit() {\n        this.options = Object.assign(this.defOptions, this.options);\n    }\n\n    ngAfterViewInit() {\n        setTimeout(() => {\n            this.init();\n        }, 200);\n    }\n\n    resize(height?, width?) {\n        this.size.h = height - (2 * this.padding);\n        this.size.w = width - (2 * this.padding);\n        this.init();\n    }\n\n    ngOnDestroy() {\n        try {\n            this.slider.nativeElement.remove();\n            this.panel.nativeElement.remove();\n            if (this.uiWorkingTimeout) {\n                clearTimeout(this.uiWorkingTimeout);\n            }\n            if (this.uiSlider) {\n                this.uiSlider.off();\n                this.uiSlider.destroy();\n                delete this.uiSlider;\n                delete this.onUpdate;\n            }\n        } catch (e) {\n        }\n    }\n\n    setOptions(options: any): boolean {\n        let toInit = false;\n        if (this.options.orientation !== options.orientation || JSON.stringify(this.options.range) !== JSON.stringify(options.range) || \n            JSON.stringify(this.options.pips) !== JSON.stringify(options.pips) || JSON.stringify(this.options.marker) !== JSON.stringify(options.marker) ||\n            JSON.stringify(this.options.tooltip) !== JSON.stringify(options.tooltip)) {\n            toInit = true;\n        }\n        if (options.fontFamily) {\n            this.panel.nativeElement.style.fontFamily = options.fontFamily;\n        }\n        this.options = options;\n        if (toInit) {\n            this.init();\n            return true;\n        }\n        return false;\n    }\n\n    getOptions() {\n        return this.options;\n    }\n\n    init() {\n        if (this.options.orientation === 'vertical') {\n            this.slider.nativeElement.style.height = this.size.h + \"px\";\n            this.slider.nativeElement.style.width =  null;\n        } else {\n            this.slider.nativeElement.style.width = this.size.w + \"px\";\n            this.slider.nativeElement.style.height =  null;\n        }\n        let tooltip = [false];\n        if (this.options.tooltip.type === 'hide' || this.options.tooltip.type === 'show') {\n            tooltip =  [wNumb({decimals: this.options.tooltip.decimals})];\n        }\n        if (this.uiSlider) {\n            this.uiSlider.off();\n            this.uiSlider.destroy();\n        }\n        this.uiSlider = noUiSlider.create(this.slider.nativeElement, {\n            start: [this.options.range.min + Math.abs(this.options.range.max - this.options.range.min) / 2],\n            connect: [true, false],\n            orientation: this.options.orientation,\n            direction: this.options.direction,\n            tooltips: tooltip,\n            range: this.options.range,\n            step: this.options.step,\n            pips: {\n                mode: 'values',\n                values: this.options.pips.values,\n                density: this.options.pips.density,\n            },\n            shape: this.options.shape,\n            marker: this.options.marker,\n\n        });\n        // tooltip\n        if (this.options.tooltip.type === 'show') {\n            var tp = this.uiSlider.target.getElementsByClassName('noUi-tooltip');\n            if (tp && tp.length > 0)\n                tp[0].style.display = 'block';\n        } else if (this.options.tooltip.type === 'hide') {\n            var tp = this.uiSlider.target.getElementsByClassName('noUi-active noUi-tooltip');\n            if (tp && tp.length > 0)\n                tp[0].style.display = 'block';\n        }\n        if (this.options.tooltip.type !== 'none') {\n            var tp = this.uiSlider.target.getElementsByClassName('noUi-tooltip');\n            if (tp && tp.length > 0) {\n                tp[0].style.color = this.options.tooltip.color;\n                tp[0].style.background = this.options.tooltip.background;\n                tp[0].style.fontSize = this.options.tooltip.fontSize + 'px';\n            }    \n        }\n\n\t\tlet self = this;\n        this.uiSlider.on('slide', function (values, handle) {\n            if (self.onUpdate) {\n                self.resetWorkingTimeout();\n                self.onUpdate(values[handle]);\n            }\n        });\n    }\n\n    resetWorkingTimeout()\n    {\n        this.uiWorking = true;\n        if (this.uiWorkingTimeout) {\n            clearTimeout(this.uiWorkingTimeout);\n        }\n\t\tlet self = this;\n        this.uiWorkingTimeout = setTimeout(function() {\n            self.uiWorking = false;\n        }, 1000);\n    }\n\n    setValue(value: number) {\n        if (!this.uiWorking) {\n            this.uiSlider.set(value);\n        }\n    }\n\n    bindUpdate(calback: any) {\n        this.onUpdate = calback;\n    }\n\n    currentValue() {\n        return parseFloat(this.uiSlider.get());\n    }\n\n}\n\nexport class NgxNouisliderOptions {\n    orientation = 'vertical';//'horizontal';\n    direction = 'ltr';\n    fontFamily = 'Sans-serif';\n    shape = { baseColor: '#dcdcdc', connectColor: '#49b2ff', handleColor: '#018ef5' };\n    marker = { color: '#000', subWidth: 5, subHeight: 1, fontSize: 18, divHeight: 2, divWidth: 12 };\n    range = { min: 0, max: 100 };\n    step = 1;\n    pips = { mode: 'values', values: [0, 50, 100], density: 4 };\n    tooltip = { type: 'none', decimals: 0, background: '#FFF', color: '#000', fontSize: 12 }\n}","module.exports = \"\"","module.exports = \"<label class=\\\"md-switch\\\" [style.borderRadius]=\\\"options.radius + 'px'\\\">\\n    <div class=\\\"toggle-button\\\" #toggler>\\n        <input type=\\\"checkbox\\\" (change)=\\\"onClick()\\\" #switcher>\\n        <div class=\\\"inner-circle\\\" #slider style=\\\"text-align: center;line-height: inherit;\\\" [style.fontSize]=\\\"options.fontSize + 'px'\\\" [style.fontFamily]=\\\"options.fontFamily\\\">\\n        </div>\\n    </div>\\n</label>\\n\\n\"","import { Component, OnInit, Input, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\n\n@Component({\n    selector: 'ngx-switch',\n    templateUrl: './ngx-switch.component.html',\n    styleUrls: ['./ngx-switch.component.css']\n})\nexport class NgxSwitchComponent implements AfterViewInit {\n\n    @ViewChild('switcher') public switcher: ElementRef;\n    @ViewChild('slider') public slider: ElementRef;\n    @ViewChild('toggler') public toggler: ElementRef;\n    options: SwitchOptions = new SwitchOptions();\n    checked = false;\n    onUpdate: any;\n\n    constructor() { \n    }\n\n    ngAfterViewInit() {\n        this.onRefresh();\n    }\n\n    onClick() {\n        this.onRefresh();\n        if (this.onUpdate) {\n            this.onUpdate((this.checked) ? this.options.onValue.toString() : this.options.offValue.toString());\n        }\n    }\n\n    onRefresh() {\n        this.checked = this.switcher.nativeElement.checked;\n        this.toggler.nativeElement.classList.toggle('active', this.checked);\n        if (this.switcher.nativeElement.checked) {\n            this.toggler.nativeElement.style.backgroundColor = this.options.onBackground;\n            this.slider.nativeElement.style.backgroundColor = this.options.onSliderColor;\n            this.slider.nativeElement.style.color = this.options.onTextColor;\n            this.slider.nativeElement.innerHTML = this.options.onText;\n        } else {\n            this.toggler.nativeElement.style.backgroundColor = this.options.offBackground;\n            this.slider.nativeElement.style.backgroundColor = this.options.offSliderColor;\n            this.slider.nativeElement.style.color = this.options.offTextColor;\n            this.slider.nativeElement.innerHTML = this.options.offText;\n        }\n        this.slider.nativeElement.style.lineHeight = this.options.height + 'px';\n    }\n\n    setOptions(options: SwitchOptions, force = false): boolean {\n        if (force) {\n            this.options = options;\n            this.onRefresh();\n        } else {\n            setTimeout(() => {\n                this.options = options;\n                this.onRefresh();\n            }, 200);\n        }\n        return true;\n    }\n\n    setValue(value: number) {\n        this.switcher.nativeElement.checked = (value) ? true : false;\n        this.onRefresh();\n    }\n\n    bindUpdate(calback: any) {\n        this.onUpdate = calback;\n    }\n}\n\nexport class SwitchOptions {\n    offValue: number = 0;\n    onValue: number = 1;\n    offBackground: string = '#ccc';\n    onBackground: string = '#ccc';\n    offText: string = '';\n    onText: string = '';\n    offSliderColor: string = '#fff';\n    onSliderColor: string = '#0CC868';\n    offTextColor: string = '#000'\n    onTextColor: string = '#fff'\n    fontSize: number = 12\n    fontFamily: string = ''\n    radius: number = 0;\n    height: number;\n}\n","module.exports = \"\"","module.exports = \"<div #graph>\\n</div>\"","import { isNull } from '@angular/compiler/src/output/output_ast';\nimport { Component, OnInit, AfterViewInit, OnDestroy, ElementRef, ViewChild, Input } from '@angular/core';\n\nimport { Series, Options, Legend } from './uPlot';\n\ndeclare const uPlot: any;\ndeclare const placement: any;\n\n@Component({\n    selector: 'ngx-uplot',\n    templateUrl: './ngx-uplot.component.html',\n    styleUrls: ['./ngx-uplot.component.css']\n})\nexport class NgxUplotComponent implements OnInit, AfterViewInit, OnDestroy {\n\n    @Input() public id: string;\n    @Input() public options: NgxOptions;\n    @ViewChild('graph') public graph: ElementRef;\n\n    uplot: any;\n    data: number[][];\n    xtime = [new Date().getTime() / 1000 - 1, new Date().getTime() / 1000];     // start and sample x time\n    sampleData = [this.xtime, [35, 71]];\n\n    private getShortTimeFormat(min: boolean = true) {\n        if (this.options && this.options.timeFormat === 'hh_mm_ss_AA') {\n            if (min) return \"{h}:{mm} {AA}\";\n            return \"{h} {AA}\";\n        }\n        if (min) return \"{HH}:{mm}\";\n        return \"{HH}\";\n    }\n\n    private xTimeFormat = { hh_mm_ss: \"{HH}:{mm}:{ss}\", hh_mm_ss_AA: \"{h}:{mm}:{ss} {AA}\" };\n    private xDateFormat = { };\n\n    private checkDateFormat() {\n        this.xDateFormat = {\n            YYYY_MM_DD: { \n                legendDate: '{YYYY}/{MM}/{DD}',\n                values: [\n                    // tick incr default: year (3600 * 24 * 365), month(3600 * 24 * 28), day(3600 * 24), hour, min, sec, mode\n                    [31536000, \"{YYYY}\", null, null, null, null, null, null, 1],\n                    [2419200, \"{MMM}\", \"\\n{YYYY}\", null, null, null, null, null, 1],\n                    [86400, \"{DD}/{MM}\", \"\\n{YYYY}\", null, null, null, null, null, 1],\n                    [3600, \"\" + this.getShortTimeFormat(false), \"\\n{YYYY}/{MM}/{DD}\", null, \"\\n{DD}/{MM}\", null, null, null, 1],\n                    [60, \"\" + this.getShortTimeFormat(), \"\\n{YYYY}/{MM}/{DD}\", null, \"\\n{DD}/{MM}\", null, null, null, 1],\n                    [1, \":{ss}\", \"\\n{YYYY}/{MM}/{DD} \" + this.getShortTimeFormat(), null, \"\\n{DD}/{MM} \" + this.getShortTimeFormat(), null, \"\\n\" + this.getShortTimeFormat(), null, 1],\n                    [0.001, \":{ss}.{fff}\", \"\\n{YYYY}/{MM}/{DD} \" + this.getShortTimeFormat(), null, \"\\n{DD}/{MM} \" + this.getShortTimeFormat(), null, \"\\n\" + this.getShortTimeFormat(), null, 1]]\n            },\n            MM_DD_YYYY: {\n                legendDate: '{MM}/{DD}/{YYYY}',\n                values: [\n                    // tick incr default: year (3600 * 24 * 365), month(3600 * 24 * 28), day(3600 * 24), hour, min, sec, mode\n                    [31536000, \"{YYYY}\", null, null, null, null, null, null, 1],\n                    [2419200, \"{MMM}\", \"\\n{YYYY}\", null, null, null, null, null, 1],\n                    [86400, \"{MM}/{DD}\", \"\\n{YYYY}\", null, null, null, null, null, 1],\n                    [3600, \"\" + this.getShortTimeFormat(false), \"\\n{MM}/{DD}/{YYYY}\", null, \"\\n{MM}/{DD}\", null, null, null, 1],\n                    [60, \"\" + this.getShortTimeFormat(), \"\\n{MM}/{DD}/{YYYY}\", null, \"\\n{MM}/{DD}\", null, null, null, 1],\n                    [1, \":{ss}\", \"\\n{MM}/{DD}/{YYYY} \" + this.getShortTimeFormat(), null, \"\\n{MM}/{DD} \" + this.getShortTimeFormat(), null, \"\\n\" + this.getShortTimeFormat(), null, 1],\n                    [0.001, \":{ss}.{fff}\", \"\\n{MM}/{DD}/{YYYY} \" + this.getShortTimeFormat(), null, \"\\n{MM}/{DD} \" + this.getShortTimeFormat(), null, \"\\n\" + this.getShortTimeFormat(), null, 1]]\n            },\n            DD_MM_YYYY: {\n                legendDate: '{DD}/{MM}/{YYYY}',\n                values: [\n                    // tick incr default: year (3600 * 24 * 365), month(3600 * 24 * 28), day(3600 * 24), hour, min, sec, mode\n                    [31536000, \"{YYYY}\", null, null, null, null, null, null, 1],\n                    [2419200, \"{MMM}\", \"\\n{YYYY}\", null, null, null, null, null, 1],\n                    [86400, \"{DD}/{MM}\", \"\\n{YYYY}\", null, null, null, null, null, 1],\n                    [3600, \"\" + this.getShortTimeFormat(false), \"\\n{DD}/{MM}/{YYYY}\", null, \"\\n{DD}/{MM}\", null, null, null, 1],\n                    [60, \"\" + this.getShortTimeFormat(), \"\\n{DD}/{MM}/{YYYY}\", null, \"\\n{DD}/{MM}\", null, null, null, 1],\n                    [1, \":{ss}\", \"\\n{DD}/{MM}/{YYYY} \" + this.getShortTimeFormat(), null, \"\\n{DD}/{MM} \" + this.getShortTimeFormat(), null, \"\\n\" + this.getShortTimeFormat(), null, 1],\n                    [0.001, \":{ss}.{fff}\", \"\\n{DD}/{MM}/{YYYY} \" + this.getShortTimeFormat(), null, \"\\n{DD}/{MM} \" + this.getShortTimeFormat(), null, \"\\n\" + this.getShortTimeFormat(), null, 1]]\n            },\n            MM_DD_YY: {\n                legendDate: '{MM}/{DD}/{YY}',\n                values: [\n                    // tick incr default: year (3600 * 24 * 365), month(3600 * 24 * 28), day(3600 * 24), hour, min, sec, mode\n                    [31536000, \"{YYYY}\", null, null, null, null, null, null, 1],\n                    [2419200, \"{MMM}\", \"\\n{YYYY}\", null, null, null, null, null, 1],\n                    [86400, \"{MM}/{DD}\", \"\\n{YYYY}\", null, null, null, null, null, 1],\n                    [3600, \"\" + this.getShortTimeFormat(false), \"\\n{MM}/{DD}/{YY}\", null, \"\\n{MM}/{DD}\", null, null, null, 1],\n                    [60, \"\" + this.getShortTimeFormat(), \"\\n{MM}/{DD}/{YY}\", null, \"\\n{MM}/{DD}\", null, null, null, 1],\n                    [1, \":{ss}\", \"\\n{MM}/{DD}/{YY} \" + this.getShortTimeFormat(), null, \"\\n{MM}/{DD} \" + this.getShortTimeFormat(), null, \"\\n\" + this.getShortTimeFormat(), null, 1],\n                    [0.001, \":{ss}.{fff}\", \"\\n{MM}/{DD}/{YY} \" + this.getShortTimeFormat(), null, \"\\n{MM}/{DD} \" + this.getShortTimeFormat(), null, \"\\n\" + this.getShortTimeFormat(), null, 1]]\n            },\n            DD_MM_YY: {\n                legendDate: '{DD}/{MM}/{YY}',\n                values: [\n                    // tick incr default: year (3600 * 24 * 365), month(3600 * 24 * 28), day(3600 * 24), hour, min, sec, mode\n                    [31536000, \"{YYYY}\", null, null, null, null, null, null, 1],\n                    [2419200, \"{MMM}\", \"\\n{YYYY}\", null, null, null, null, null, 1],\n                    [86400, \"{DD}/{MM}\", \"\\n{YYYY}\", null, null, null, null, null, 1],\n                    [3600, \"\" + this.getShortTimeFormat(false), \"\\n{DD}/{MM}/{YY}\", null, \"\\n{DD}/{MM}\", null, null, null, 1],\n                    [60, \"\" + this.getShortTimeFormat(), \"\\n{DD}/{MM}/{YY}\", null, \"\\n{DD}/{MM}\", null, null, null, 1],\n                    [1, \":{ss}\", \"\\n{DD}/{MM}/{YY} \" + this.getShortTimeFormat(), null, \"\\n{DD}/{MM} \" + this.getShortTimeFormat(), null, \"\\n\" + this.getShortTimeFormat(), null, 1],\n                    [0.001, \":{ss}.{fff}\", \"\\n{DD}/{MM}/{YY} \" + this.getShortTimeFormat(), null, \"\\n{DD}/{MM} \" + this.getShortTimeFormat(), null, \"\\n\" + this.getShortTimeFormat(), null, 1]]\n            },\n        }\n    }\n\n    fmtDate = uPlot.fmtDate(\"{DD}/{MM}/{YY} {HH}:{mm}:{ss}\");\n\n    sampleSerie = [\n        {\n            value: (self, rawValue) => this.fmtDate(new Date(rawValue * 1e3))\n        },\n        {\n            // initial toggled state (optional)\n            show: true,\n            spanGaps: false,\n            // // in-legend display\n            label: \"Serie\",\n            value: (self, rawValue) => rawValue.toFixed(this.options.decimalsPrecision),\n            // // series style\n            stroke: \"red\",\n            width: 1,\n            fill: \"rgba(255, 0, 0, 0.3)\",\n            dash: [10, 5],\n        }\n    ];\n\n    defOptions: Options = {\n        title: \"Default Chart\",\n        id: \"defchart\",\n        class: \"my-chart\",\n        width: 800,\n        height: 600,\n        legend: { show: true, width: 1 },\n        scales: {\n            x: {\n                time: true,\n            },\n        },\n        series: this.sampleSerie,\n    };\n    languageLabels = { time: 'Time', serie: 'Serie', title: 'Title' };\n    constructor() { }\n\n    ngOnInit() {\n        this.options = this.defOptions;\n        this.uplot = new uPlot(this.defOptions, this.sampleData, this.graph.nativeElement);\n    }\n\n    ngAfterViewInit() {\n    }\n\n    ngOnDestroy() {\n        try {\n            this.uplot.destroy();\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    resize(height?, width?) {\n        let chart = this.graph.nativeElement;        \n        if (!height) { \n            height = chart.clientHeight;\n        }\n        if (!width) {\n            width = chart.clientWidth;\n        }\n        this.uplot.setSize({height: height, width: width});\n        // this.uplot.redraw(false, true);\n    }\n\n    init(options?: Options) {\n        this.data = [[]];\n        if (options) {\n            this.options = options;\n            if (!options.id) {\n                this.data = this.sampleData;\n                this.options.series = this.sampleSerie;\n            } else {\n                // this.data = this.sampleData;\n                this.data = [this.xtime];\n            }\n        }\n        let opt = this.options || this.defOptions;\n        if (this.uplot) {\n            this.uplot.destroy();\n        }\n        // set x axis format (date/time)\n        this.checkDateFormat();\n        if (this.options.dateFormat && this.xDateFormat[this.options.dateFormat] && this.options.timeFormat && this.xTimeFormat[this.options.timeFormat]) {\n            this.fmtDate = uPlot.fmtDate(this.xDateFormat[this.options.dateFormat].legendDate + ' ' + this.xTimeFormat[this.options.timeFormat]);\n            this.options.axes[0].values = this.xDateFormat[this.options.dateFormat].values;\n        }\n        this.sampleSerie[1].label = this.languageLabels.serie;\n        if (this.options.series.length > 0) {\n            this.options.series[0].value = (self, rawValue) => this.fmtDate(new Date(rawValue * 1e3));\n            this.options.series[0].label = this.languageLabels.time;\n        }\n        if (this.options.axes.length > 0) {\n            this.options.axes[0].label = this.languageLabels.time;\n        }\n        if (!this.options.title) {\n            this.options.title = this.languageLabels.title;\n        }\n        // set plugins\n        opt.plugins = (this.options.tooltip && this.options.tooltip.show) ? [this.tooltipPlugin()] : [];\n\n        this.uplot = new uPlot(opt, this.data, this.graph.nativeElement);\n    }\n\n    setOptions(options: Options) {\n        this.options = options;\n        this.init(this.options);\n    }\n\n    addSerie(index: string, attribute: Series) {\n        this.data.push([null,null]);\n        this.uplot.addSeries(attribute, index);\n        this.uplot.setData(this.data);\n    }\n\n    setSample() {\n        let sample = [this.xtime];\n        for (let i = 0; i < this.uplot.series.length; i++) {\n            sample.push([Math.floor(Math.random() * 20), Math.floor(Math.random() * 30)]);\n        }\n        this.setData(sample);\n    }\n\n    setData(data = [[]]) {\n        this.data = data;\n        this.uplot.setData(this.data);\n    }\n\n    setXScala(min: number, max: number) {\n        this.uplot.setScale('x', { min: min, max: max });\n    }\n\n\taddValue(index, x, y, size) {\n        let xpos = this.data[0].indexOf(x);\n        if (xpos < 0) {\n            this.data[0].push(x);\n            for (let i = 0; i < this.data.length; i++) {\n\n                if (i === index) {\n                    this.data[i].push(y);\n                } else if (i) {\n                    this.data[i].push(null);\n                }\n            }\n        } else {\n            this.data[index][xpos] = y;\n        }\n        // remove data out of size\n        let min = x - size;\n        if (this.data[0][0] < min) {\n            for (let i = 0; i < this.data.length; i++) {\n                this.data[i].shift();\n            }\n        }\n        this.uplot.setData(this.data);\n    }\n\n    redraw(flag: boolean = false) {\n        this.uplot.redraw(flag);\n    }\n\n    checkAxisOptions() {\n\n    }\n\n    tooltipPlugin(opts: any = null) {\n        let over, bound, bLeft, bTop;\n        function syncBounds() {\n            let bbox = over.getBoundingClientRect();\n            bLeft = bbox.left;\n            bTop = bbox.top;\n        }\n\n        const overlay = document.createElement(\"div\");\n        overlay.id = \"overlay\";\n        overlay.style.display = \"none\";\n        overlay.style.position = \"absolute\";\n        document.body.appendChild(overlay);\n\n        return {\n            hooks: {\n                init: u => {\n                    over = u.root.querySelector(\".u-over\");\n\n                    bound = over;\n                    //\tbound = document.body;\n\n                    over.onmouseenter = () => {\n                        overlay.style.display = \"block\";\n                    };\n\n                    over.onmouseleave = () => {\n                        overlay.style.display = \"none\";\n                    };\n                },\n                setSize: u => {\n                    syncBounds();\n                },\n                setCursor: u => {\n                    const { left, top, idx } = u.cursor;\n                    const x = u.data[0][idx];\n                    const anchor = { left: left + bLeft, top: top + bTop };\n                    const time = this.fmtDate(new Date(x * 1e3));\n                    const xdiv = `<div class=\"ut-head\">${u.series[0].label}: ${time}</div>`;\n                    let series = '';\n                    for (let i = 1; i < u.series.length; i++) {\n                        let value = '';\n                        try {\n                            if (!isNaN(u.data[i][idx])) {\n                                if (u.data[i][idx].toString().indexOf('.') != -1) {\n                                    value = u.data[i][idx].toFixed(this.options.decimalsPrecision);\n                                } else {\n                                    value = u.data[i][idx];\n                                }\n                            }\n                        } catch { }\n                        series = series + `<div class=\"ut-serie\"><div class=\"ut-marker\" style=\"border-color: ${u.series[i]._stroke}\"></div>${u.series[i].label}: <div class=\"ut-value\">${value}</div></div>`;\n                    }\n                    overlay.innerHTML = xdiv + series;// + `${x},${y} at ${Math.round(left)},${Math.round(top)}`;\n                    placement(overlay, anchor, \"right\", \"start\", { bound });\n                }\n            }\n        };\n    }\n}\n\nexport interface NgxOptions extends Options {\n\n    decimalsPrecision?: number;\n    tooltip?: Legend;\n    dateFormat?: string;\n    timeFormat?: string;\n}\n\nexport interface NgxSeries extends Series {\n}","module.exports = \"\"","module.exports = \"<mat-selection-list *ngIf=\\\"extSelected\\\" #extGroups [(ngModel)]=\\\"extSelected\\\" style=\\\"display: inline-block; width: 40px;padding-top: 0px; padding-bottom: 10px;\\\" [disabled]=\\\"disabled\\\">\\n\\t<mat-list-option *ngFor=\\\"let opt of options\\\" [selected]=\\\"opt.selected\\\" [value]=\\\"opt\\\" style=\\\"height: 26px;cursor: pointer;\\\" checkboxPosition=\\\"before\\\">\\n\\t</mat-list-option>\\t\\n</mat-selection-list>\\n<mat-selection-list #selGroups [(ngModel)]=\\\"selected\\\" style=\\\"display: inline-block; padding-top: 0px; padding-bottom: 10px;\\\" [disabled]=\\\"disabled\\\">\\n\\t<mat-list-option *ngFor=\\\"let opt of options\\\" [selected]=\\\"opt.selected\\\" [value]=\\\"opt\\\" style=\\\"font-size: 14px;height: 26px !important;cursor: pointer;\\\" checkboxPosition=\\\"before\\\">\\n\\t\\t{{opt.label}}\\n\\t</mat-list-option>\\n</mat-selection-list>\"","import { Component, OnInit, Input, Output, ViewChild, ElementRef, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'sel-options',\n    templateUrl: './sel-options.component.html',\n    styleUrls: ['./sel-options.component.css']\n})\nexport class SelOptionsComponent implements OnInit {\n\n    @Input() disabled: any;\n    @Input() selected = [];\n    @Input() options = [];\n    @Input() extSelected;\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n}\n","module.exports = \".container {\\n    overflow: auto;\\n}\\n\\n.item {\\n    width: 100%;\\n    height: 40px;\\n}\\n\\n.item:hover {\\n    background-color: rgba(0,0,0,0.1);\\n}\\n\\n.item-text {\\n    width: 500px;\\n    position: relative;\\n    display: inline-block;\\n    overflow: hidden; \\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n}\\n\\n.item-text div {\\n    display: inline-block;\\n    overflow-wrap: break-word;\\n    text-overflow: ellipsis;\\n    /* word-wrap: break-word; */\\n    white-space: nowrap;\\n}\\n\\n.item-property {\\n    position: relative;\\n    /* left: 400px; */\\n    width: 400px;\\n    display: inline-block;\\n    overflow: hidden; \\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n    line-height: 40px;\\n}\\n\\n.item-info {\\n    position: relative;\\n    /* left: 400px; */\\n    width: 200px;\\n    display: inline-block;\\n    overflow: hidden; \\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n    line-height: 40px;\\n}\\n\\n.item-check {\\n    float: right;\\n    margin-right: 20px;\\n    line-height: 32px;\\n    /* display: inline-block; */\\n}\\n\\n.item-waiting {\\n    /* -moz-transition: height .5s;\\n    -ms-transition: height .5s;\\n    -o-transition: height .5s;\\n    -webkit-transition: height .5s;\\n    transition: height .5s; */\\n    display:inline-block;\\n    height: 40;\\n    vertical-align: middle;\\n    /* width: 80%; */\\n    overflow: hidden;\\n}\\n   \"","module.exports = \"<div #treetable class=\\\"container\\\" [style.height]=\\\"containerProperty.height\\\" [style.width]=\\\"containerProperty.width\\\">\\n\\t<div *lazyFor=\\\"let node of list; index as i\\\" class=\\\"item\\\">\\n\\t\\t<div *ngIf=\\\"node.visible\\\" [ngSwitch]=\\\"treeType\\\">\\n\\t\\t\\t<div *ngSwitchCase=\\\"TypeOfTree.Standard\\\">\\n\\t\\t\\t\\t<div class=\\\"item-text\\\" [style.left.px]=\\\"node.childPos * 15\\\" [style.width.px]=\\\"500 - node.childPos * 15\\\">\\n\\t\\t\\t\\t\\t<button mat-icon-button (click)=\\\"onExpandToggle(node)\\\" [disabled]=\\\"!node.childs\\\">\\n\\t\\t\\t\\t\\t\\t<mat-icon *ngIf=\\\"node.expanded\\\">expand_more</mat-icon>\\n\\t\\t\\t\\t\\t\\t<mat-icon *ngIf=\\\"!node.expanded\\\">chevron_right</mat-icon>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"!node.childs.length\\\" class=\\\"item-waiting\\\" style=\\\"width:40px\\\" [ngStyle]=\\\"{'display': (node.expanded) ? 'inline-block' : 'none'}\\\">\\n\\t\\t\\t\\t\\t\\t<mat-spinner diameter=\\\"20\\\"></mat-spinner>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<button mat-icon-button enabled=\\\"false\\\" *ngIf=\\\"node.class === nodeType.Variable\\\">\\n\\t\\t\\t\\t\\t\\t<mat-icon>label</mat-icon>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t{{node.text}}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"item-property\\\" [style.left.px]=\\\"node.childPos * 15\\\">\\n\\t\\t\\t\\t\\t{{node.property}}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"item-check\\\">\\n\\t\\t\\t\\t\\t<mat-checkbox [(ngModel)]=\\\"node.checked\\\" *ngIf=\\\"node.class == nodeType.Variable\\\" [disabled]=\\\"!node.enabled\\\" (change)=\\\"changeStatus(node,$event)\\\"></mat-checkbox>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div *ngSwitchCase=\\\"TypeOfTree.ToDefine\\\">\\n\\t\\t\\t\\t<div class=\\\"item-text\\\" [style.left.px]=\\\"node.childPos * 15\\\" [style.width.px]=\\\"600 - node.childPos * 15\\\">\\n\\t\\t\\t\\t\\t<button mat-icon-button (click)=\\\"onExpandToggle(node)\\\" *ngIf=\\\"node.expandable\\\">\\n\\t\\t\\t\\t\\t\\t<mat-icon *ngIf=\\\"node.expanded\\\">expand_more</mat-icon>\\n\\t\\t\\t\\t\\t\\t<mat-icon *ngIf=\\\"!node.expanded\\\">chevron_right</mat-icon>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t<button mat-icon-button *ngIf=\\\"node.class === nodeType.Variable || node.class === nodeType.Item\\\">\\n\\t\\t\\t\\t\\t\\t<mat-icon>label</mat-icon>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t{{node.text}}\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"node.class === nodeType.Array\\\">\\n\\t\\t\\t\\t\\t\\t<span style=\\\"margin-left: 15px;margin-right: 5px;\\\">{{'device.tag-array-id' | translate}}</span>\\n\\t\\t\\t\\t\\t\\t<mat-select [(value)]=\\\"node.todefine.id\\\" style=\\\"width: 120px\\\">\\n\\t\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let key of node.todefine.options\\\" [value]=\\\"key\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{{ key }}\\n\\t\\t\\t\\t\\t\\t\\t</mat-option>\\n\\t\\t\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t\\t\\t\\t<span style=\\\"margin-left: 15px;margin-right: 5px;\\\">{{'device.tag-array-value' | translate}}</span>\\n\\t\\t\\t\\t\\t\\t<mat-select [(value)]=\\\"node.todefine.value\\\" style=\\\"width: 120px\\\">\\n\\t\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let key of node.todefine.options\\\" [value]=\\\"key\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{{ key }}\\n\\t\\t\\t\\t\\t\\t\\t</mat-option>\\n\\t\\t\\t\\t\\t\\t</mat-select>\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"item-info\\\" [style.left.px]=\\\"node.childPos * 15\\\">\\n\\t\\t\\t\\t\\t{{node.property}}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"item-check\\\">\\n\\t\\t\\t\\t\\t&nbsp;\\n\\t\\t\\t\\t\\t<mat-checkbox [(ngModel)]=\\\"node.checked\\\" *ngIf=\\\"node.text && (node.class == nodeType.Variable)\\\"\\n\\t\\t\\t\\t\\t\\t[disabled]=\\\"!node.enabled\\\" (change)=\\\"changeStatus(node,$event)\\\"></mat-checkbox>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\t\\t\\t\\n\\t\\t</div>\\n\\t</div>\\n</div>\"","import { Component, OnInit, Input, Output, ViewChild, ElementRef, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'ngx-treetable',\n    templateUrl: './treetable.component.html',\n    styleUrls: ['./treetable.component.css']\n})\nexport class TreetableComponent implements OnInit {\n\n    @Input() config: any;\n    @Output() expand = new EventEmitter();\n    @ViewChild('treetable') treetable: ElementRef;\n\n\n    TypeOfTree = TreeType;\n    treeType = TreeType.Standard;\n    nodeType = NodeType;\n\n    nodes = {};\n    list: any[] = [];\n\n    containerProperty = { width: '100%', height: '100%' };\n\n    constructor() { }\n\n    ngOnInit() {\n        if (this.config) {\n            if (this.config.width) {\n                this.containerProperty.width = this.config.width;\n            }\n            if (this.config.height) {\n                this.containerProperty.height = this.config.height;\n            }\n            if (this.config.type === TreeType.ToDefine) {\n                this.treeType = TreeType.ToDefine;\n            }\n        }\n    }\n\n    onExpandToggle(node: Node, event: any) {\n        const currentPosition = this.treetable.nativeElement.scrollTop;\n        node.expanded = (node.expanded) ? false : true;\n        if (node.expanded) {\n            if (!node.childs.length) {\n                this.expand.emit(node);\n            }\n            this.hideNode(node, true);\n        } else {\n            this.hideNode(node, false);\n        }\n        this.list = this.nodeToItems((this.treeType === TreeType.ToDefine) ? false : true);\n        setTimeout(() => { this.treetable.nativeElement.scrollTop = currentPosition; }, 1);\n    }\n\n    hideNode(node: Node, visible: boolean) {\n        Object.values(node.childs).forEach((n) => {\n            n.visible = visible;\n            this.hideNode(n, (visible) ? n.expanded : visible);\n        });\n    }\n\n    addNode(node: Node, parent: Node, enabled: boolean) {\n        if (parent) {\n            let refp = this.nodes[parent.id];\n            node.setParent(refp);\n            if (node.parent) {\n                node.parent.waiting = false;\n            }\n            node.enabled = enabled;\n            if (!enabled) {\n                node.checked = true;\n            }\n        }\n        if (Object.keys(this.nodes).indexOf(node.id) < 0) {\n            this.nodes[node.id] = node;\n        }\n    }\n\n    update(sort = true) {\n        this.list = this.nodeToItems(sort);\n    }\n\n    setNodeProperty(node: Node, pro: string) {\n        if (this.nodes[node.id]) {\n            this.nodes[node.id].property = pro;\n            this.nodes[node.id].type = node.type;\n        }\n    }\n\n    nodeToItems(sort = true): Array<Node> {\n        if (this.nodes && Object.values(this.nodes).length) {\n            let result = [];\n            Object.values(this.nodes).forEach((value: Node) => {\n                if (value.visible) {\n                    result.push(value);\n                }\n            });\n            if (sort) {\n                return result.sort((a, b) => (a.path > b.path) ? 1 : -1);\n            } else {\n                return result;\n            }\n        } else {\n            return [];\n        }\n    }\n\n    changeStatus(node: Node, $event) {\n    }\n\n    expandable(type: NodeType) {\n        if (type === NodeType.Object) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    getDefinedKey(todefine) {\n        return '';\n    }\n\n    getToDefineOptions(todefine) {\n        return Object.keys(todefine.options);\n    }\n}\n\nexport class Node {\n    static readonly SEPARATOR = '>';\n    id: string = '';\n    path: string = '';\n    text: string = '';\n    class: NodeType;\n    childPos: number = 0;\n    expandable: boolean = true;\n    expanded: boolean = false;\n    visible: boolean = true;\n    parent: Node = null;\n    property: string = '';\n    type: string = '';          // boolean, int ...\n    checked: boolean = false;\n    childs: Node[] = [];\n    waiting: boolean = true;\n    enabled: boolean = true;\n    todefine: any = null;\n\n    constructor(id: string, text: string) {\n        this.id = id;\n        this.text = text;\n        this.path = this.text;\n    }\n\n    setParent(parent: Node) {\n        if (parent) {\n            this.parent = parent;\n            this.path = parent.path + Node.SEPARATOR + this.text;\n            this.childPos = parent.childPos + 1;\n            this.parent.childs.push(this);\n        }\n    }\n\n    setToDefine() {\n        this.todefine = { options: [''], id: '', value: '' };\n    }\n\n    addToDefine(opt: string) {\n        if (this.todefine && this.todefine.options.indexOf(opt) === -1) {\n            this.todefine.options.push(opt);\n        }\n    }\n\n    static strToType(str: string): any {\n        if (NodeType[str]) {\n            return NodeType[str];\n        }\n        return str;\n    }\n}\n\nexport enum NodeType {\n    Unspecified = 0,    // \n    Object = 1,         // OPCUA 'Object',\n    Variable = 2,       // OPCUA 'Variable',\n    Methode = 4,        // OPCUA 'Methode'\n    ObjectType = 8,\n    VariableType = 16,\n    ReferenceType = 32,\n    DataType = 64,\n    View = 128,\n    Array = 256,        // JSON\n    Item = 512,         // JSON\n    Reference = 1024    // JSON\n}\n\nexport enum TreeType {\n    Standard = 'standard',  // ask expand, \n    ToDefine = 'todefine'   // property to define (key and value)\n}","module.exports = \"\\n.header-panel {\\n    z-index: 99 !important;\\n    position: fixed;\\n    top: 0px;\\n    left: 0px;\\n    background-color: var(--headerBackground);\\n    color: var(--headerColor);\\n    height: 36px;\\n    width: 200px;\\n}\\n\\n.header-right {\\n    z-index: 99 !important;\\n    position: fixed;\\n    top: 0px;\\n    right: 0px;\\n    background-color: var(--headerBackground);\\n    color: var(--headerColor);\\n    height: 36px;\\n    width: 120px;\\n}\\n\\n.header-help {\\n    float: right;\\n    height: 36px;\\n    width: 36px;\\n    margin-right: 20px;\\n}\\n\\n.header-theme {\\n    float: right;\\n    height: 36px;\\n    width: 36px;\\n    margin-right: 5px;\\n}\\n\\n.main-btn {\\n    height: 34px;\\n    width: 34px;\\n    min-width: unset !important;\\n    padding:unset !important;\\n    line-height: 34px;\\n    margin-left: 5px;\\n    margin-right: 5px;\\n  }\\n\\n.main-btn mat-icon {\\n    font-size: 24px;\\n    height: unset;\\n    width: unset;\\n  }\\n\\n.header-menu {\\n    box-shadow: 0 2px 2px 0 rgba(0,0,0,0.14), 0 3px 1px -2px rgba(0,0,0,0.12), 0 1px 5px 0 rgba(0,0,0,0.2); \\n}\\n\\n.header-icon {\\n    padding: 0 14px;\\n}\\n\\n.menu-separator {\\n    border-top-color: rgba(0,0,0,0.2);\\n}\\n\\n::ng-deep .mat-menu-item {\\n    font-size: 11px;\\n    height: 30px !important;\\n    line-height: unset !important;\\n  }\"","module.exports = \"<div class=\\\"header-panel\\\" *ngIf=\\\"ineditor\\\">\\n    <button mat-button title=\\\"{{'header.save-project' | translate}}\\\" [matMenuTriggerFor]=\\\"prjview\\\" #prjviewtrigger=\\\"matMenuTrigger\\\" class=\\\"main-btn\\\">\\n        <mat-icon aria-label=\\\"Save Project\\\">save</mat-icon>\\n    </button>\\n    <mat-menu #prjview=\\\"matMenu\\\" class=\\\"leftbar-item-menu header-menu\\\" yPosition=\\\"below\\\" [overlapTrigger]=\\\"false\\\">\\n        <button mat-menu-item (click)=\\\"onNewProject()\\\">{{'header.new-project' | translate}}</button>\\n        <mat-divider class=\\\"menu-separator\\\"></mat-divider>\\n        <button mat-menu-item (click)=\\\"onSaveProject()\\\">{{'header.save-project' | translate}}</button>\\n        <button mat-menu-item (click)=\\\"onSaveProjectAs()\\\">{{'header.saveas-project' | translate}}</button>\\n        <mat-divider class=\\\"menu-separator\\\"></mat-divider>\\n        <button mat-menu-item (click)=\\\"onOpenProject();$event.stopPropagation()\\\">{{'header.open-project' | translate}}</button>\\n        <!-- <button mat-menu-item (click)=\\\"onImportVariable();$event.stopPropagation()\\\">Import Variable</button> -->\\n        <input type=\\\"file\\\" #fileImportInput style=\\\"display: none\\\" id=\\\"projectFileUpload\\\" (change)=\\\"onFileChangeListener($event)\\\" accept=\\\".fuxap,.json\\\" />\\n    </mat-menu>\\n    <button mat-button title=\\\"{{'header.edit-project' | translate}}\\\" class=\\\"main-btn\\\" (click)=\\\"onSetup()\\\">\\n        <mat-icon aria-label=\\\"Edit Views\\\">settings</mat-icon>\\n    </button>\\n\\n</div>\\n\\n<div class=\\\"header-right\\\">\\n    <div class=\\\"header-help\\\" *ngIf=\\\"ineditor\\\">\\n        <button mat-button title=\\\"{{'header.help' | translate}}\\\" [matMenuTriggerFor]=\\\"helpmenu\\\" class=\\\"main-btn\\\">\\n            <mat-icon aria-label=\\\"HELP\\\">help_outline</mat-icon>\\n        </button>\\n        <mat-menu #helpmenu=\\\"matMenu\\\" class=\\\"leftbar-item-menu header-menu\\\" yPosition=\\\"below\\\" [overlapTrigger]=\\\"false\\\">\\n            <button mat-menu-item (click)=\\\"onShowHelp('help')\\\">{{'header.help-tutorial' | translate}}</button>\\n            <mat-divider class=\\\"menu-separator\\\"></mat-divider>\\n            <button mat-menu-item (click)=\\\"onShowHelp('info')\\\">{{'header.help-info' | translate}}</button>\\n        </mat-menu>\\n    </div>\\n    <div class=\\\"header-theme\\\" *ngIf=\\\"ineditor\\\">\\n        <button mat-button title=\\\"{{'header.theme' | translate}}\\\" class=\\\"main-btn\\\" (click)=\\\"onChangeTheme()\\\">\\n            <mat-icon>invert_colors</mat-icon>\\n        </button>\\n    </div>\\n</div>\\n<app-tutorial #tutorial></app-tutorial>\\n\"","import { Component, Inject, ViewChild, OnInit, AfterViewInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from \"rxjs\";\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\nimport { environment } from '../../environments/environment';\n\nimport { SetupComponent } from '../editor/setup/setup.component';\n\nimport { ProjectService, SaveMode } from '../_services/project.service';\nimport { ThemeService } from '../_services/theme.service';\n\nimport { HelpData } from '../_models/hmi';\nimport { TutorialComponent } from '../help/tutorial/tutorial.component';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n    moduleId: module.id,\n    selector: 'app-header',\n    templateUrl: 'header.component.html',\n    styleUrls: ['header.component.css']\n})\nexport class HeaderComponent implements OnInit, AfterViewInit, OnDestroy {\n\n    @ViewChild('sidenav')sidenav: any; \n    @ViewChild('tutorial') tutorial: TutorialComponent;\n    @ViewChild('fileImportInput') fileImportInput: any;\n\n    darkTheme = true;\n    ineditor = false;\n    savededitor = false;\n    private subscriptionShowHelp: Subscription;\n    private subscriptionLoad: Subscription;\n    \n    constructor(private router: Router,\n                public dialog: MatDialog,\n                private translateService: TranslateService,\n                private themeService: ThemeService,\n                private projectService: ProjectService){\n\n        this.router.events.subscribe(()=> {\n            this.ineditor = (this.router.url.indexOf('editor') >= 0 ||  this.router.url.indexOf('device') >= 0 ||\n            this.router.url.indexOf('users') >= 0 || this.router.url.indexOf('text') >= 0 || this.router.url.indexOf('messages') >= 0) ? true : false;\n            this.savededitor = (this.router.url.indexOf('device') >= 0 || this.router.url.indexOf('users') >= 0 || \n                                this.router.url.indexOf('text') >= 0 || this.router.url.indexOf('messages') >= 0) ? true : false;\n        });\n        this.themeService.setTheme(this.projectService.getLayoutTheme());\n    }\n\n    ngOnInit() {\n    }\n\n    ngAfterViewInit() {\n        this.subscriptionLoad = this.projectService.onLoadHmi.subscribe(load => {\n            let theme = this.projectService.getLayoutTheme();\n            this.darkTheme = (theme !== ThemeService.ThemeType.Default);\n            this.themeService.setTheme(this.projectService.getLayoutTheme());\n        }, error => {\n            console.error('Error loadHMI');\n        });\n    }\n\n    ngOnDestroy() {\n        try {\n            if (this.subscriptionShowHelp) {\n                this.subscriptionShowHelp.unsubscribe();\n            } \n            if (this.subscriptionLoad) {\n                this.subscriptionLoad.unsubscribe();\n            }\n        } catch (e) {\n        }\n      }\n\n    public onClick(targetElement) {\n        this.sidenav.close();\n    }\n\n    onShowHelp(page) {\n        let data = new HelpData();\n        data.page = page;\n        data.tag = 'device';\n        this.showHelp(data);\n    }\n\n    onSetup() {\n        this.projectService.saveProject(SaveMode.Current);\n        let dialogRef = this.dialog.open(SetupComponent, {\n            position: { top: '60px' },\n        });\n    }\n\n    showHelp(data: HelpData) {\n        if (data.page === 'help') {\n            this.tutorial.show = true;\n        } else if (data.page === 'info') {\n            this.showInfo();\n        }\n    }\n\n    showInfo() {\n        let dialogRef = this.dialog.open(DialogInfo, {\n            data: { name: 'Info', version: environment.version }\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n        });\n    }\n\n    goTo(destination:string) {\n        this.router.navigate([destination]);//, this.ID]);\n    }\n\n    onChangeTheme() {\n        this.darkTheme = !this.darkTheme;\n        let theme = ThemeService.ThemeType.Default;\n        if (this.darkTheme) {\n            theme = ThemeService.ThemeType.Dark;\n        }\n        this.themeService.setTheme(theme);\n        this.projectService.setLayoutTheme(theme);\n    }\n\n    //#region Project Events\n    onNewProject() {\n        try {\n            let msg = '';\n            this.translateService.get('msg.project-save-ask').subscribe((txt: string) => { msg = txt });\n            if (window.confirm(msg)) {\n                // this.projectService.saveProject(SaveMode.Save);\n                this.projectService.setNewProject();\n            }\n        } catch (e) {\n\n        }\n    }\n\n    /**\n     * Aave Project as JSON file and Download in Browser \n     */\n    onSaveProjectAs() {\n        try {\n            if (this.savededitor) {\n                this.projectService.saveAs();\n            } else {\n                this.projectService.saveProject(SaveMode.SaveAs);\n            }\n        } catch (e) {\n\n        }\n    }\n\n    onOpenProject() {\n        let ele = document.getElementById('projectFileUpload') as HTMLElement;\n        ele.click();\n    }\n\n    /**\n     * open Project event file loaded \n     * @param event file resource\n     */\n    onFileChangeListener(event) {\n        let text = [];\n        let files = event.srcElement.files;\n        let input = event.target;\n        let reader = new FileReader();\n        reader.onload = (data) => {\n            let prj = JSON.parse(reader.result.toString());\n            this.projectService.setProject(prj, true);\n        }\n\n        reader.onerror = function () {\n            let msg = 'Unable to read ' + input.files[0];\n            // this.translateService.get('msg.project-load-error', {value: input.files[0]}).subscribe((txt: string) => { msg = txt });\n            alert(msg);\n        };\n        reader.readAsText(input.files[0]);\n        this.fileImportInput.nativeElement.value = null;\n    }\n\n    /**\n     * save Project and Download in Browser \n     */\n    onSaveProject() {\n        try {\n            this.projectService.saveProject(SaveMode.Save);\n        } catch (e) {\n\n        }\n    }\n    //#endregion\n}\n\n\n@Component({\n    selector: 'dialog-info',\n    templateUrl: 'info.dialog.html',\n})\nexport class DialogInfo {\n    constructor(\n        public dialogRef: MatDialogRef<DialogInfo>,\n        @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n}","module.exports = \"<div style=\\\"width:280px\\\">\\n    <div mat-dialog-title style=\\\"display:inline-block\\\">\\n        <div class=\\\"logo\\\" style=\\\"display: inline-block\\\"></div>\\n        <div style=\\\"font-size: 18px;display: inline-block;vertical-align: super;padding-left: 5px;\\\">{{'dlg.info-title' | translate}}</div>\\n    </div>\\n    <div mat-dialog-content style=\\\"margin-bottom: 10px;\\\">\\n        <div style=\\\"display: block\\\">\\n            {{'header.info-version' | translate}} {{data.version}}\\n        </div>\\n        <div style=\\\"display: block; font-size: 13px;margin-top: 10px;\\\">\\n            powered by <span><b>frango</b>team</span>\\n        </div>\\n    </div>\\n    <div mat-dialog-actions class=\\\"dialog-action\\\">\\n        <button mat-raised-button [mat-dialog-close]=\\\"data\\\">{{'dlg.ok' | translate}}</button>\\n    </div>\\n</div>\"","module.exports = \".tutorial-panel {\\n    width: 460px;\\n    height: 720px;\\n    z-index: 99999 !important;\\n    position: absolute;\\n    right: 10px;\\n    top: 50px;\\n    background-color: rgb(240, 240, 240);\\n    /* background-color: rgb(250,250,250); */\\n    box-shadow: 0 2px 6px 0 rgba(0, 0, 0, 0.2),\\n        0 2px 6px 0 rgba(0, 0, 0, 0.188235); /*1px 2px 5px 1px rgba(0,0,0,.26);*/\\n    border: 0px !important;\\n}\\n\\n.tutorial-header {\\n    height: 36px;\\n    background-color: #212121;\\n    color: #ffffff;\\n    padding-left: 5px;\\n    cursor: move;\\n    line-height: 30px;\\n}\\n\\n.tutorial-title {\\n    padding: 5px 10px 5px 20px;\\n    font-size: 16px;\\n}\\n\\n.tutorial-close {\\n    font-size: 28px;\\n    /* float: right; */\\n    cursor: pointer;\\n    /* padding-right: 5px; */\\n    right: 5px;\\n    position: absolute;\\n    top: 0px;\\n}\\n\\n.my-expansion-panel {\\n    margin: 0px;\\n}\\n\\n.header mat-panel-title {\\n    font-size: 20px;\\n    font-weight: 100;\\n}\\n\"","module.exports = \"<div class=\\\"tutorial-panel\\\" *ngIf=\\\"show\\\" ngDraggable>\\n    <style>\\n        pre {\\n            white-space: pre-line;\\n        }\\n    </style>\\n    <div class=\\\"tutorial-header\\\">\\n        <div class=\\\"tutorial-title\\\">\\n            {{'tutorial.title' | translate}}\\n        </div>\\n        <div class=\\\"tutorial-close\\\" (click)=\\\"close()\\\">\\n            &times;\\n        </div>\\n    </div>\\n    <div class=\\\"tutorial-body\\\">\\n        <mat-accordion multi=\\\"true\\\">\\n            <mat-expansion-panel class=\\\"my-expansion-panel\\\">\\n                <mat-expansion-panel-header class=\\\"header\\\" [collapsedHeight]=\\\"'40px'\\\" [expandedHeight]=\\\"'40px'\\\">\\n                    <mat-panel-title>\\n                        Basic Layout\\n                    </mat-panel-title>\\n                    <mat-panel-description>\\n\\n                    </mat-panel-description>\\n                </mat-expansion-panel-header>\\n                Basic content\\n\\n            </mat-expansion-panel>\\n            <mat-expansion-panel class=\\\"my-expansion-panel\\\">\\n                <mat-expansion-panel-header class=\\\"header\\\" [collapsedHeight]=\\\"'40px'\\\" [expandedHeight]=\\\"'40px'\\\">\\n                    <mat-panel-title>\\n                        Page editor\\n                    </mat-panel-title>\\n                    <mat-panel-description>\\n\\n                    </mat-panel-description>\\n                </mat-expansion-panel-header>\\n                Page editor content\\n            </mat-expansion-panel>\\n            <mat-expansion-panel class=\\\"my-expansion-panel\\\">\\n                <mat-expansion-panel-header class=\\\"header\\\" [collapsedHeight]=\\\"'40px'\\\" [expandedHeight]=\\\"'40px'\\\">\\n                    <mat-panel-title>\\n                        Device\\n                    </mat-panel-title>\\n                    <mat-panel-description>\\n\\n                    </mat-panel-description>\\n                </mat-expansion-panel-header>\\n                Device content\\n            </mat-expansion-panel>\\n        </mat-accordion>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-tutorial',\n    templateUrl: './tutorial.component.html',\n    styleUrls: ['./tutorial.component.css']\n})\nexport class TutorialComponent implements OnInit {\n\n    show: boolean = false;\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n    close() {\n        this.show = false;\n    }\n}\n","module.exports = \"<div *ngIf=\\\"isLoading\\\" style=\\\"position:absolute;top:0px;left:0px;right:0px;bottom:0px;background-color:rgba(0,0,0,0.2); z-index: 99999;\\\">\\n\\t<mat-progress-bar mode=\\\"indeterminate\\\" color=\\\"warn\\\" style=\\\"position: absolute; top: 0px; left: 0px; right: 0px; z-index: 99999;\\\">\\n\\t</mat-progress-bar>\\n</div>\\n<mat-sidenav-container class=\\\"sidenav-container\\\" [hasBackdrop]=\\\"false\\\">\\n\\t<mat-sidenav #matsidenav *ngIf=\\\"showSidenav\\\" class=\\\"sidenav\\\" [mode]=\\\"showSidenav\\\">\\n\\t\\t<app-sidenav #sidenav [sidenav]=\\\"matsidenav\\\" (goToPage)=\\\"onGoToPage($event)\\\" (goToLink)=\\\"onGoToLink($event)\\\"></app-sidenav>\\n\\t</mat-sidenav>\\n\\t<mat-sidenav-content [style.background-color]=\\\"backgroudColor\\\" (click)=\\\"checkToCloseSideNav()\\\">\\n\\t\\t<div class=\\\"header\\\" [style.background-color]=\\\"layoutHeader.bkcolor\\\" [style.color]=\\\"layoutHeader.fgcolor\\\">\\n\\t\\t\\t<button mat-icon-button *ngIf=\\\"showSidenav && showSidenav !== 'side'\\\" \\n\\t\\t\\t\\t(click)=\\\"$event.stopPropagation(); (matsidenav.opened) ? matsidenav.close() : matsidenav.open()\\\" class=\\\"sidenav-toogle\\\">\\n\\t\\t\\t\\t<mat-icon aria-label=\\\"Menu\\\">menu</mat-icon>\\n\\t\\t\\t</button>\\n\\t\\t\\t<div class=\\\"header-title\\\">\\n\\t\\t\\t\\t{{title}}\\n\\t\\t\\t</div>\\n\\t\\t\\t<div *ngIf=\\\"securityEnabled\\\" class=\\\"header-login\\\">\\n\\t\\t\\t\\t<button mat-icon-button (click)=\\\"onLogin()\\\">\\n\\t\\t\\t\\t\\t<mat-icon aria-label=\\\"Login\\\" [style.color]=\\\"isLoggedIn() ? 'rgb(59, 144, 255)' : layoutHeader.fgcolor\\\">account_circle</mat-icon>\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"header-button\\\">\\n\\t\\t\\t\\t<div class=\\\"alarm-layout\\\" style=\\\"min-width: 40px;\\\">\\n\\t\\t\\t\\t\\t<button mat-icon-button *ngIf=\\\"alarms.show\\\" (click)=\\\"onAlarmsShowMode('collapse')\\\">\\n\\t\\t\\t\\t\\t\\t<mat-icon aria-label=\\\"Alarms\\\">notifications_none</mat-icon>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"button-counter alarm-color\\\" [style.opacity]=\\\"alarms.count?'':'0'\\\">{{alarms.count}}</div>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"info-layout\\\" style=\\\"min-width: 40px;\\\">\\n\\t\\t\\t\\t\\t<button mat-icon-button *ngIf=\\\"infos.show\\\" (click)=\\\"onAlarmsShowMode('collapse')\\\">\\n\\t\\t\\t\\t\\t\\t<mat-icon aria-label=\\\"Info\\\">error_outline</mat-icon>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"button-counter info-color\\\" [style.opacity]=\\\"infos.count?'':'0'\\\">{{infos.count}}</div>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div id=\\\"container\\\"  class=\\\"home-container\\\" #container (click)=\\\"checkToCloseSideNav()\\\">\\n\\t\\t\\t<app-cards-view *ngIf=\\\"!showHomeLink && homeView.type === cardViewType\\\" #cardsview [edit]=\\\"false\\\" [options]=\\\"gridOptions\\\" [view]=\\\"homeView\\\" [hmi]=\\\"hmi\\\" [gaugesManager]=\\\"gaugesManager\\\"></app-cards-view>\\n\\t\\t\\t<app-fuxa-view *ngIf=\\\"!showHomeLink && homeView.type !== cardViewType\\\" #fuxaview class=\\\"home-body\\\" id=\\\"home\\\" [view]=\\\"homeView\\\" [hmi]=\\\"hmi\\\" [gaugesManager]=\\\"gaugesManager\\\"></app-fuxa-view>\\n\\t\\t\\t<app-iframe *ngIf=\\\"showHomeLink\\\" [hidden]=\\\"isLoading || !showHomeLink\\\" #iframeview [link]=\\\"homeLink\\\" class=\\\"home-body\\\" style=\\\"width:100%; height:100%\\\"></app-iframe>\\n\\t\\t\\t<!-- <div [style.display]=\\\"(homeView.type === cardViewType || showHomeLink) ? 'none' : 'block' \\\" class=\\\"home-body home-info\\\">\\n\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t\\t{{'msg.home-welcome' | translate}}.\\n\\t\\t\\t\\t</p>\\n\\t\\t\\t</div> -->\\n\\t\\t\\t<div id=\\\"alarms-panel\\\">\\n\\t\\t\\t\\t<app-alarm-view #alarmsview [fullview]=\\\"false\\\" (showMode)=\\\"onAlarmsShowMode($event)\\\"></app-alarm-view>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</mat-sidenav-content>\\n\\n</mat-sidenav-container>\"","module.exports = \".home-body{display:table;margin:0 auto}.home-container{position:absolute;left:0px;top:48px;bottom:0px;right:0px;overflow:auto}.home-info{text-align:center}.header{display:block;z-index:9999 !important;box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2) !important;height:46px !important;padding-left:4px;padding-right:10px;background-color:#fff}.header-title{display:inline-block;margin-left:20px;min-width:200px;text-align:right;line-height:46px}.header-login{float:right;line-height:46px;border-left-width:1px;border-left-style:solid;padding-left:10px}.header-button{float:right;width:30%;line-height:46px;text-align:right;margin-right:10px;padding-right:50px}.header-button mat-icon{font-size:28px;width:28px;height:28px}.button-counter{display:inline-block;position:absolute;bottom:7px;right:1px;width:16px;height:16px;border-radius:50%;text-align:center;line-height:16px;font-size:12px;font-weight:bold}.alarm-layout{position:relative;right:45px;display:inline-block;width:40px}.info-layout{position:relative;right:20px;display:inline-block;width:40px}.sidenav{padding:0px 0px 0px 0px;background-color:#2c2c2c !important;color:#fff !important;display:inline-block !important;top:0px;box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2) !important}.sidenav-container{width:100%;height:100% !important;background-color:#FFFFFF}::ng-deep .mat-drawer-backdrop.mat-drawer-shown{background-color:transparent}::ng-deep #myuserinfo{padding:unset !important;box-shadow:0 2px 6px 0 rgba(0,0,0,0.2),0 2px 6px 0 rgba(0,0,0,0.18)}#alarms-panel{background:white;height:300px;transition:bottom 300ms;width:100%;position:fixed;bottom:-300px;overflow:auto}#alarms-panel.is-active{bottom:0px;transition:bottom 300ms;z-index:999}#alarms-panel.is-full-active{top:46px;height:100%;transition:top 300ms;z-index:999}\\n\"","import { Component, Inject, OnInit, AfterViewInit, OnDestroy, ViewChild, ChangeDetectorRef, ElementRef } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Subscription } from \"rxjs\";\nimport { MatSidenav } from '@angular/material';\nimport { Router } from '@angular/router';\n\nimport { SidenavComponent } from '../sidenav/sidenav.component';\nimport { FuxaViewComponent } from '../fuxa-view/fuxa-view.component';\nimport { IframeComponent } from '../iframe/iframe.component';\n\nimport { HmiService } from '../_services/hmi.service';\nimport { ProjectService } from '../_services/project.service';\nimport { AuthService } from '../_services/auth.service';\nimport { GaugesManager } from '../gauges/gauges.component';\nimport { Hmi, View, ViewType, NaviModeType, NotificationModeType, ZoomModeType, HeaderSettings } from '../_models/hmi';\nimport { LoginComponent } from '../login/login.component';\nimport { AlarmViewComponent } from '../alarms/alarm-view/alarm-view.component';\nimport { Utils } from '../_helpers/utils';\nimport { GridOptions } from '../cards-view/cards-view.component';\n\nimport { GridsterConfig, GridType, CompactType } from 'angular-gridster2';\n\nimport panzoom from 'panzoom';\n// declare var panzoom: any;\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit, AfterViewInit, OnDestroy {\n\n    @ViewChild('sidenav') sidenav: SidenavComponent;\n    @ViewChild('matsidenav') matsidenav: MatSidenav;\n    @ViewChild('fuxaview') fuxaview: FuxaViewComponent;\n    @ViewChild('alarmsview') alarmsview: AlarmViewComponent;\n    @ViewChild('container') container: ElementRef;\n\n    @ViewChild('iframeview') iframeview: IframeComponent;\n\n    isLoading = true;\n    homeView: View = new View();\n    hmi: Hmi = new Hmi();\n    showSidenav = 'over';\n    homeLink = '';\n    showHomeLink = false;\n    securityEnabled = false;\n    backgroudColor = 'unset';\n    title = '';\n    alarms = { show: false, count: 0, mode: '' };\n    infos = { show: false, count: 0, mode: '' };\n    headerButtonMode = NotificationModeType;\n    alarmsPanelOpen = false;\n    layoutHeader = new HeaderSettings();\n\n    cardViewType = Utils.getEnumKey(ViewType, ViewType.cards);\n    gridOptions = <GridsterConfig>new GridOptions();\n\n    private subscriptionLoad: Subscription;\n    private subscriptionAlarmsStatus: Subscription;\n\n    constructor(private projectService: ProjectService,\n        private changeDetector: ChangeDetectorRef,\n        public dialog: MatDialog,\n        private router: Router,\n        private hmiService: HmiService,\n        private authService: AuthService,\n        private gaugesManager: GaugesManager) {\n        this.gridOptions.draggable = { enabled: false };\n        this.gridOptions.resizable = { enabled: false };\n    }\n\n    ngOnInit() {\n    }\n\n    ngAfterViewInit() {\n        try {\n            let hmi = this.projectService.getHmi();\n            if (hmi) {\n                this.loadHmi();\n            }\n            this.subscriptionLoad = this.projectService.onLoadHmi.subscribe(load => {\n                this.loadHmi();\n            }, error => {\n                console.error('Error loadHMI');\n            });\n            this.subscriptionAlarmsStatus = this.hmiService.onAlarmsStatus.subscribe(event => {\n                this.setAlarmsStatus(event);\n            });\n            this.hmiService.askAlarmsStatus();\n            this.changeDetector.detectChanges();\n        }\n        catch (err) {\n            console.error(err);\n        }\n    }\n\n    ngOnDestroy() {\n        try {\n            if (this.subscriptionLoad) {\n                this.subscriptionLoad.unsubscribe();\n            }\n            if (this.subscriptionAlarmsStatus) {\n                this.subscriptionAlarmsStatus.unsubscribe();\n            }\n        } catch (e) {\n        }\n    }\n\n    onGoToPage(event: string) {\n        const view = this.hmi.views.find(x => x.id === event);\n        this.showHomeLink = false;\n        this.changeDetector.detectChanges();\n        if (view) {\n            this.homeView = view;\n            this.changeDetector.detectChanges();\n            this.setBackground();\n            if (this.homeView.type !== this.cardViewType) {\n                this.fuxaview.hmi.layout = this.hmi.layout;\n                this.fuxaview.loadHmi(this.homeView);\n            }\n        }\n        this.checkToCloseSideNav();\n    }\n\n    onGoToLink(event: string) {\n        if (event.indexOf('://') >= 0) {\n            this.showHomeLink = true;\n            this.changeDetector.detectChanges();\n            this.iframeview.loadLink(event);\n\n        } else {\n            this.router.navigate([event]).then(data => {\n            }).catch(err => {\n                console.error('Route ' + event + '  not found, redirection stopped with no error raised');\n                // try iframe link\n            });\n        }\n        this.checkToCloseSideNav();\n    }\n\n    checkToCloseSideNav() {\n        let nvoid = NaviModeType[this.hmi.layout.navigation.mode];\n        if (this.hmi.layout && nvoid !== NaviModeType.fix) {\n            this.matsidenav.close();\n        }\n    }\n\n    onLogin() {\n        let cuser = this.authService.getUser();\n        if (cuser) {\n            let dialogRef = this.dialog.open(DialogUserInfo, {\n                id: 'myuserinfo',\n                // minWidth: '250px',\n                position: { top: '50px', right: '15px' },\n                backdropClass: 'user-info',\n                data: cuser\n            });\n            dialogRef.afterClosed().subscribe(result => {\n                if (result) {\n                    this.authService.signOut();\n                    this.projectService.reload();\n                }\n            });\n        } else {\n            let dialogRef = this.dialog.open(LoginComponent, {\n                // minWidth: '250px',\n                data: {}\n            });\n            dialogRef.afterClosed().subscribe(result => {\n            });\n        }\n    }\n\n    askValue() {\n        this.hmiService.askDeviceValues();\n    }\n\n    askStatus() {\n        this.hmiService.askDeviceStatus();\n    }\n\n    isLoggedIn() {\n        return (this.authService.getUser()) ? true : false;\n    }\n\n    onAlarmsShowMode(mode: string) {\n        let ele = document.getElementById(\"alarms-panel\");\n        if (mode === 'expand') {\n            ele.classList.add(\"is-full-active\");\n            // ele.classList.remove('is-active');\t\t\t\n            this.alarmsPanelOpen = true;\n            this.alarmsview.startAskAlarmsValues();\n        } else if (mode === 'collapse') {\n            ele.classList.add('is-active');\n            ele.classList.remove('is-full-active');\n            this.alarmsPanelOpen = true;\n            this.alarmsview.startAskAlarmsValues();\n        } else {\n            // ele.classList.toggle(\"is-active\");\n            ele.classList.remove('is-active');\n            ele.classList.remove('is-full-active');\n            this.alarmsPanelOpen = false;\n        }\n    }\n\n    private goTo(destination: string) {\n        this.router.navigate([destination]);//, this.ID]);\n    }\n\n    private loadHmi() {\n        let hmi = this.projectService.getHmi();\n        if (hmi) {\n            this.hmi = hmi;\n        }\n        if (this.hmi && this.hmi.views && this.hmi.views.length > 0) {\n            if (this.hmi.layout && this.hmi.layout.start) {\n                const startView = this.hmi.views.find(x => x.id === this.hmi.layout.start);\n                if (startView) {\n                    this.homeView = startView;\n                }\n            } else {\n                this.homeView = this.hmi.views[0];\n            }\n            this.setBackground();\n            // check sidenav\n            this.showSidenav = null;\n            if (this.hmi.layout) {\n                let nvoid = NaviModeType[this.hmi.layout.navigation.mode];\n                if (this.hmi.layout && nvoid !== NaviModeType.void) {\n                    if (nvoid === NaviModeType.over) {\n                        this.showSidenav = 'over';\n                    } else if (nvoid === NaviModeType.fix) {\n                        this.showSidenav = 'side';\n                        this.matsidenav.open();\n                    } else if (nvoid === NaviModeType.push) {\n                        this.showSidenav = 'push';\n                    }\n                    this.sidenav.setLayout(this.hmi.layout);\n                }\n                if (this.hmi.layout.header) {\n                    this.title = this.hmi.layout.header.title;\n                    if (this.hmi.layout.header.alarms) {\n                        this.alarms.mode = this.hmi.layout.header.alarms;\n                    }\n                    if (this.hmi.layout.header.infos) {\n                        this.infos.mode = this.hmi.layout.header.infos;\n                    }\n                    this.checkHeaderButton();\n                    this.layoutHeader = this.hmi.layout.header;\n                }\n                if (this.hmi.layout.zoom && ZoomModeType[this.hmi.layout.zoom] === ZoomModeType.enabled) {\n                    setTimeout(() => {\n                        let element: HTMLElement = document.querySelector('#home');\n                        if (element && panzoom) {\n                            panzoom(element, {\n                                bounds: true,\n                                boundsPadding: 0.05,\n                            });\n                        }\n                        this.container.nativeElement.style.overflow = 'hidden';\n                    }, 1000);\n                }\n            }\n        }\n        if (this.homeView && this.fuxaview) {\n            this.fuxaview.hmi.layout = this.hmi.layout;\n            this.fuxaview.loadHmi(this.homeView);\n        }\n        this.isLoading = false;\n        this.securityEnabled = this.projectService.isSecurityEnabled();\n    }\n\n    private setBackground() {\n        if (this.homeView && this.homeView.profile) {\n            this.backgroudColor = this.homeView.profile.bkcolor;\n        }\n    }\n\n    private checkHeaderButton() {\n        let fix = <NotificationModeType>Object.keys(NotificationModeType)[Object.values(NotificationModeType).indexOf(NotificationModeType.fix)];\n        let float = <NotificationModeType>Object.keys(NotificationModeType)[Object.values(NotificationModeType).indexOf(NotificationModeType.float)];\n        if (this.alarms.mode === fix || (this.alarms.mode === float && this.alarms.count > 0)) {\n            this.alarms.show = true;\n        }\n        else {\n            this.alarms.show = false;\n        }\n        if (this.infos.mode === fix || (this.infos.mode === float && this.infos.count > 0)) {\n            this.infos.show = true;\n        } else {\n            this.infos.show = false;\n        }\n    }\n\n    private setAlarmsStatus(status: any) {\n        if (status) {\n            this.alarms.count = status.highhigh + status.high + status.low;\n            this.infos.count = status.info;\n            this.checkHeaderButton();\n        }\n    }\n\n}\n\n@Component({\n    selector: 'user-info',\n    templateUrl: 'userinfo.dialog.html',\n})\nexport class DialogUserInfo {\n    constructor(\n        public dialogRef: MatDialogRef<DialogUserInfo>,\n        @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n    onOkClick(): void {\n        this.dialogRef.close(true);\n    }\n}","module.exports = \"<div style=\\\"display:block; text-align: center;padding-top: 20px; padding-bottom: 10px;width: 220px\\\">\\n\\t<div style=\\\"display: block; margin: auto\\\">\\n\\t\\t<mat-icon [style.color]=\\\"'rgb(59, 144, 255)'\\\">account_circle</mat-icon>\\n\\t</div>\\n\\t<div style=\\\"font-size: 14px;display: block;padding-top: 10px;padding-bottom: 10px;\\\">\\n\\t\\t{{data.username}}\\n\\t</div>\\n\\t<div style=\\\"font-size: 14px;display: block;padding-top: 10px;padding-bottom: 10px;\\\">\\n\\t\\t{{data.fullname}}\\n\\t</div>\\n\\t<div style=\\\"display: block; padding-bottom:20px; padding-top: 20px; border-top: 1px solid rgba(0,0,0,0.1);\\\">\\n\\t\\t<button mat-raised-button [mat-dialog-close]=\\\"true\\\">{{'dlg.logout-btn' | translate}}</button>\\n\\t</div>\\n\\t<div style=\\\"display: block; font-size: 10px; padding-top: 10px; border-top: 1px solid rgba(0,0,0,0.1);\\\">\\n\\t\\tFUXA powered by <span><b>frango</b>team</span>\\n\\t</div>\\n</div>\"","module.exports = \"\"","module.exports = \"<iframe width=\\\"100%\\\" height=\\\"100%\\\" frameBorder=\\\"0\\\" [src]=\\\"urlSafe\\\"></iframe>\\n\"","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n    selector: 'app-iframe',\n    templateUrl: './iframe.component.html',\n    styleUrls: ['./iframe.component.css']\n})\nexport class IframeComponent implements OnInit, OnDestroy {\n\n    private subscription: any;\n    urlSafe: SafeResourceUrl;\n\n    @Input() link: string;\n\n    constructor(private activeroute: ActivatedRoute,\n        public sanitizer: DomSanitizer) { }\n\n    ngOnInit() {\n        if (this.link) {\n            // input\n            this.urlSafe = this.sanitizer.bypassSecurityTrustResourceUrl(this.link);\n        } else {\n            this.subscription = this.activeroute.params.subscribe(params => {\n                // routing\n                this.link = params['url'];\n                this.urlSafe = this.sanitizer.bypassSecurityTrustResourceUrl(this.link);\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n    loadLink(link: string) {\n        this.link = link;\n        if (this.link) {\n            this.urlSafe = this.sanitizer.bypassSecurityTrustResourceUrl(this.link);\n        }\n    }\n}\n","module.exports = \"\\n.lab-body {\\n    display: table;\\n    margin: 0 auto;\\n}\\n.box_shadow {\\n    box-shadow: 0px 2px 6px -1px #888888;\\n    -webkit-filter: \\n    drop-shadow( 3px 3px 2px rgba(0,0,0,.7) );\\n          filter: \\n    drop-shadow( 3px 3px 2px rgba(0,0,0,.7) );\\n}\\n.fab-btn {\\n    position: absolute;\\n    right: 10px;\\n    bottom: 10px;\\n}\"","module.exports = \"<div *ngIf=\\\"isLoading\\\" style=\\\"position:absolute;top:0px;left:0px;right:0px;bottom:0px;background-color:rgba(0,0,0,0.2); z-index: 99999;\\\">\\n    <mat-progress-bar mode=\\\"indeterminate\\\" color=\\\"warn\\\" style=\\\"position: absolute; top: 0px; left: 0px; right: 0px; z-index: 99999;\\\">\\n    </mat-progress-bar>\\n</div>\\n<div [style.background-color]=\\\"backgroudColor\\\" style=\\\"height: 100%\\\">\\n    <app-fuxa-view *ngIf=\\\"labView\\\" class=\\\"lab-body\\\" id=\\\"lab\\\" [view]=\\\"currentView\\\" [hmi]=\\\"hmi\\\" [gaugesManager]=\\\"gaugesManager\\\"></app-fuxa-view>\\n    <div *ngIf=\\\"!labView\\\">\\n        Loading...\\n    </div>\\n    <template #messagecontainer>\\n    </template>\\n    <button mat-mini-fab color=\\\"warn\\\" class=\\\"fab-btn\\\" (click)=\\\"onTest()\\\">Test</button>\\n    <app-tester #tester></app-tester>\\n</div>\"","import { Component, OnInit, AfterViewInit, OnDestroy, ViewChild, ViewContainerRef, ChangeDetectorRef  } from '@angular/core';\nimport { Subscription } from \"rxjs\";\n\nimport { ProjectService } from '../_services/project.service';\nimport { Hmi, View, GaugeSettings } from '../_models/hmi';\nimport { GaugesManager } from '../gauges/gauges.component';\nimport { TesterService } from '../tester/tester.service';\nimport { TesterComponent } from '../tester/tester.component';\n\ndeclare var SVG: any;\ndeclare var Raphael: any;\n\n@Component({\n    moduleId: module.id,\n    templateUrl: 'lab.component.html',\n    styleUrls: ['lab.component.css']\n})\n\nexport class LabComponent implements OnInit, AfterViewInit, OnDestroy {\n\n    @ViewChild('messagecontainer', { read: ViewContainerRef }) entry: ViewContainerRef;\n    @ViewChild('tester') tester: TesterComponent;\n\n    isLoading = true;\n    currentView: View = new View();\n    hmi: Hmi = new Hmi();\n    svgMain: any;\n    componentRef: any;\n    labView: View = null;\n\tbackgroudColor = 'unset';\n\n\tprivate subscriptionLoad: Subscription;\n\n    constructor(private projectService: ProjectService,\n        private gaugesManager: GaugesManager,\n        private changeDetector: ChangeDetectorRef,        \n        private testerService: TesterService) {\n    }\n\n    ngOnInit() {\n\n    }\n\n    ngAfterViewInit() {\n        try {\n            let hmi = this.projectService.getHmi();\n            if (!hmi) {\n                this.subscriptionLoad = this.projectService.onLoadHmi.subscribe(load => {\n                    this.loadHmi();\n                }, error => {\n                    console.error('Error loadHMI');\n                });\n            } else {\n                this.loadHmi();\n            }\n            this.changeDetector.detectChanges();\n        }\n        catch (err) {\n            console.error(err);\n        }\n    }\n\n    ngOnDestroy() {\n        try {\n            if (this.subscriptionLoad) {\n                this.subscriptionLoad.unsubscribe();\n            }\n        } catch (e) {\n        }\n    }\n\n    onTest() {\n        this.tester.setSignals(this.gaugesManager.getMappedGaugesSignals(true));\n        this.testerService.toggle(true);\n    }\n\n    private loadHmi() {\n        this.hmi = this.projectService.getHmi();\n        if (this.hmi && this.hmi.views && this.hmi.views.length > 0) {\n            this.currentView = this.hmi.views[0];\n            this.labView = this.hmi.views[0];\n            let oldsel = localStorage.getItem(\"@frango.webeditor.currentview\");\n            if (oldsel) {\n                for (let i = 0; i < this.hmi.views.length; i++) {\n                    if (this.hmi.views[i].name === oldsel) {\n                        this.currentView = this.hmi.views[i];\n                        this.setBackground();\n                        break;\n                    }\n                }\n            }\n        }\n        this.isLoading = false;\n    }\n\n    private setBackground() {\n\t\tif (this.currentView && this.currentView.profile) {\n\t\t\tthis.backgroudColor = this.currentView.profile.bkcolor;\n\t\t}\n\t}\n}\n","module.exports = \".error {\\n    display: block;\\n    font-size: 12px;\\n}\\n\\n.message-error {\\n    width: 100%;\\n    /* background-color: red;; */\\n    color: red;\\n    padding-bottom: 20px;\\n    font-size: 13px;\\n}\\n\\n.show-password {\\n    bottom: 2px;\\n    right: 0px;\\n    position: absolute;\\n}\\n\"","module.exports = \"<form>\\n\\t<div style=\\\"width: 250px;position: relative;padding-bottom: 40px\\\">\\n\\t\\t<h1 mat-dialog-title style=\\\"display:inline-block;margin-bottom: 14px !important;\\\">{{'dlg.login-title' | translate}}</h1>\\n\\t\\t<div mat-dialog-content>\\n\\t\\t\\t<div class=\\\"my-form-field\\\" style=\\\"display: block;margin-bottom: 10px;margin-right: 5px;\\\">\\n\\t\\t\\t\\t<span>{{'general.username' | translate}}</span>\\n\\t\\t\\t\\t<input cdkFocusInitial autocomplete=\\\"off\\\" [type]=\\\"'text'\\\" [formControl]=\\\"username\\\" style=\\\"width:100%;\\\">\\n\\t\\t\\t\\t<mat-error class=\\\"error\\\" *ngIf=\\\"errorEnabled && username.errors && username.errors.required\\\">{{'msg.login-username-required' | translate}}\\n\\t\\t\\t\\t</mat-error>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"my-form-field\\\" style=\\\"display: block;margin-bottom: 10px;margin-right: 5px;\\\">\\n\\t\\t\\t\\t<span>{{'general.password' | translate}}</span>\\n\\t\\t\\t\\t<input autocomplete=\\\"off\\\" [type]=\\\"showPassword ? 'text' : 'password'\\\" [formControl]=\\\"password\\\" style=\\\"width:100%;\\\">\\n\\t\\t\\t\\t<mat-icon matSuffix (click)=\\\"showPassword = !showPassword\\\" class=\\\"show-password\\\">{{showPassword ? 'visibility' : 'visibility_off'}}</mat-icon>\\n\\t\\t\\t\\t<mat-error class=\\\"error\\\" *ngIf=\\\"errorEnabled && password.errors && password.errors.required\\\">{{'msg.login-password-required' | translate}}\\n\\t\\t\\t\\t</mat-error>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div *ngIf=\\\"messageError\\\" class=\\\"message-error\\\">\\n\\t\\t\\t{{messageError}}\\n\\t\\t</div>\\n\\t\\t<div *ngIf=\\\"submitLoading\\\">\\n\\t\\t\\t<mat-spinner style=\\\"margin: auto\\\" diameter=\\\"20\\\"></mat-spinner>\\n\\t\\t</div>\\n\\t\\t<div mat-dialog-actions class=\\\"dialog-action\\\">\\n\\t\\t\\t<button mat-raised-button [mat-dialog-close]=\\\"\\\">{{'dlg.cancel' | translate}}</button>\\n\\t\\t\\t<button mat-raised-button color=\\\"primary\\\" (click)=\\\"onOkClick()\\\" [disabled]=\\\"!isValidate()\\\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\\n\\t\\t</div>\\n\\t</div>\\n</form>\"","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\nimport { AuthService } from '../_services/auth.service';\nimport { ProjectService } from '../_services/project.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n\tselector: 'app-login',\n\ttemplateUrl: './login.component.html',\n\tstyleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n\tloading = false;\n\tshowPassword = false;\n\tsubmitLoading = false;\n\tmessageError: string;\n\tusername: FormControl = new FormControl();\n\tpassword: FormControl = new FormControl();\n\terrorEnabled = false;\n\n\tconstructor(private authService: AuthService,\n\t\tprivate projectService: ProjectService,\n\t\tprivate translateService: TranslateService,\n\t\tprivate dialogRef: MatDialogRef<LoginComponent>,\n\t\t@Inject(MAT_DIALOG_DATA) private data: any) { }\n\n\tngOnInit() {\n\t}\n\n\tonNoClick(): void {\n\t\tthis.dialogRef.close();\n\t}\n\n\tonOkClick(): void {\n\t\tthis.errorEnabled = true;\n\t\tthis.messageError = '';\n\t\tthis.signIn();\n\t}\n\n\tisValidate() {\n\t\tif (this.username.value && this.password.value) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tsignIn() {\n\t\tthis.submitLoading = true;\n\t\tthis.authService.signIn(this.username.value, this.password.value).subscribe(result => {\n\t\t\t// \t\tthis.router.navigate([this.returnUrl]);\n\t\t\tthis.submitLoading = false;\n\t\t\tthis.dialogRef.close(this.data.user);\n\t\t\tthis.projectService.reload();\n\t\t}, error => {\n\t\t\tthis.submitLoading = false;\n\t\t\tthis.translateService.get('msg.signin-failed').subscribe((txt: string) => this.messageError = txt);\n\t\t});\n\t}\n}\n","import { NgModule } from '@angular/core';\n\nimport {\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatStepperModule,\n} from '@angular/material';\nimport { CdkTableModule } from '@angular/cdk/table';\n\n@NgModule({\n    imports: [\n        CdkTableModule,\n        MatAutocompleteModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatExpansionModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatNativeDateModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n    ],\n    exports: [\n        CdkTableModule,\n        MatAutocompleteModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatExpansionModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatNativeDateModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n    ]\n})\nexport class MaterialModule { }","module.exports = \" \"","module.exports = \"<div class=\\\"sidenav-menu\\\" *ngIf=\\\"showSidenav\\\" style=\\\"height: 100%\\\" [ngClass]=\\\"'sidenav-menu-' + layout.navigation.type\\\"\\n                        [style.background-color]=\\\"layoutNavigation.bkcolor\\\" [style.color]=\\\"layoutNavigation.fgcolor\\\">\\n    <mat-list >\\n        <mat-list-item style=\\\"height: 35px; font-weight: bold; padding-left: 10px;padding-bottom: 10px;margin-bottom: 10px\\\">\\n            {{'sidenav.title' | translate}}\\n        </mat-list-item>\\n        <mat-list-item *ngFor=\\\"let item of layout.navigation.items; let i = index\\\" [ngClass]=\\\"'menu-item-' + layout.navigation.type\\\">\\n            <button type=\\\"button\\\" mat-button class=\\\"sidenav-btn\\\" (click)=\\\"onGoTo(item)\\\" [ngSwitch]=\\\"layout.navigation.type\\\">\\n                <div *ngSwitchCase=\\\"'icon'\\\" class=\\\"menu-item-content-icon\\\">\\n                    <mat-icon>{{item.icon}}</mat-icon>\\n                </div>\\n                <div *ngSwitchCase=\\\"'text'\\\" class=\\\"menu-item-content-text\\\">\\n                    <span>{{item.text}}</span>\\n                </div>\\n                <div *ngSwitchCase=\\\"'block'\\\" class=\\\"menu-item-content-block\\\">\\n                    <mat-icon style=\\\"display: block;\\\">{{item.icon}}</mat-icon>\\n                    <span>{{item.text}}</span>\\n                </div>\\n                <div *ngSwitchCase=\\\"'inline'\\\" class=\\\"menu-item-content-inline\\\">\\n                    <mat-icon style=\\\"display: inline-block\\\">{{item.icon}}</mat-icon>\\n                    <span style=\\\"display: inline-block\\\">{{item.text}}</span>\\n                </div>\\n            </button>\\n        </mat-list-item>\\n    </mat-list>\\n</div>\"","import { Component, AfterViewInit, Input, Output, EventEmitter, ChangeDetectorRef, AfterContentChecked } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatSidenav } from '@angular/material';\n\nimport { LayoutSettings, NaviItem, NaviModeType, NavigationSettings } from '../_models/hmi';\n\n@Component({\n    selector: 'app-sidenav',\n    templateUrl: './sidenav.component.html',\n    styleUrls: ['./sidenav.component.css']\n})\nexport class SidenavComponent implements AfterViewInit, AfterContentChecked {\n\n    @Input() sidenav: MatSidenav;\n    @Output() goToPage: EventEmitter<string> = new EventEmitter();\n    @Output() goToLink: EventEmitter<string> = new EventEmitter();\n\n    layout = null;\n    showSidenav = false;\n    layoutNavigation = new NavigationSettings();\n\n    constructor(private router: Router,\n        private changeDetector: ChangeDetectorRef) { }\n\n    ngAfterViewInit() {\n    }\n\n    ngAfterContentChecked(): void {\n        this.showSidenav = (this.layout) ? true : false;\n        this.changeDetector.detectChanges();\n    }\n\n    onGoTo(item: NaviItem) {\n        if (item.view) {\n            this.goToPage.emit(item.view);\n        } else if (item.link) {\n            this.goToLink.emit(item.link);\n        }\n    }\n\n    public setLayout(ly: LayoutSettings) {\n        this.layout = ly;\n        if (this.layout.navigation) {\n            this.layoutNavigation = this.layout.navigation;\n        }\n    }\n}\n","module.exports = \".tester-panel {\\n    width: 300px;\\n    height: 563px;\\n    z-index: 99999 !important;\\n    position: absolute;\\n    right: 10px;\\n    top: 50px;\\n    color: rgb(240, 240, 240);\\n    background-color: rgb(46, 46, 48);\\n    box-shadow: 0 2px 6px 0 rgba(0, 0, 0, 0.2), 0 2px 6px 0 rgba(0, 0, 0, 0.18);\\n    border: 0px !important;\\n}\\n\\n.tester-header {\\n    height: 30px;\\n    color: rgb(230, 230, 230);\\n    padding-left: 10px;\\n    cursor: move;\\n    line-height: 30px;\\n    background-color: rgb(0, 0, 0);\\n}\\n\\n.tester-close {\\n    font-size: 28px;\\n    cursor: pointer;\\n    right: 5px;\\n    position: absolute;\\n    top: 0px;\\n}\\n\\n.tester-body {\\n    overflow-y: auto;\\n    height: 350px;\\n    color: rgb(230, 230, 230);\\n}\\n\\n.tester-output {\\n    overflow-y: auto;\\n    height: 180px;\\n    border-top: 1px solid gray;\\n    padding: 2px 2px 0px 2px;\\n    color: rgb(230, 230, 230);\\n    padding-left: 5px;\\n}\\n\\n.output-item {\\n    display: block;\\n    font-size: 12px;\\n}\\n\\n.svg-property {\\n    color: rgba(0, 0, 0, 0.75);\\n}\\n\\n.svg-property span {\\n    display: block;\\n    font-size: 12px;\\n    margin: 0px 5px 0px 10px;\\n    color: rgb(230, 230, 230);\\n}\\n\\n.svg-property input {\\n    width: 50%;\\n    display: inline-block;\\n    margin: 0px 10px 12px 10px;\\n    border: unset;\\n    background-color: inherit;\\n    color: rgb(230, 230, 230);\\n    background-color: rgb(66, 66, 66);\\n    height: 22px;\\n}\\n\\n.svg-property button {\\n    height: 26px;\\n}\\n\"","module.exports = \"<div class=\\\"tester-panel\\\" *ngIf=\\\"show\\\" ngDraggable>\\n    <style>\\n        pre {\\n            white-space: pre-line;\\n        }\\n    </style>\\n    <div name=\\\"dlgTesterForm\\\">\\n        <div class=\\\"tester-header\\\">\\n            <div class=\\\"tester-title\\\">\\n                {{'tester.title' | translate}}\\n            </div>\\n            <div class=\\\"tester-close\\\" (click)=\\\"close()\\\">\\n                &times;\\n            </div>\\n        </div>\\n        <div class=\\\"tester-body\\\">\\n            <div class=\\\"_svg-property\\\" mat-dialog-actions>\\n            </div>\\n            <br>\\n            <div *ngFor=\\\"let item of items\\\">\\n                <div class=\\\"svg-property\\\">\\n                    <span>{{item.source}} - {{item.name}} :</span>\\n                    <input id=\\\"item.name\\\" [(ngModel)]=\\\"item.value\\\" type=\\\"text\\\" class=\\\"no-spinners\\\" />\\n                    <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" class=\\\"\\\" (click)=\\\"setSignal(item)\\\">\\n                        {{'tester.send' | translate}}\\n                    </button>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"tester-output\\\">\\n            <span *ngFor=\\\"let item of output; index as i\\\" class=\\\"output-item\\\">\\n                {{item}}\\n            </span>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { GaugesManager } from '../gauges/gauges.component';\nimport { Subscription, Observable, timer } from \"rxjs\";\n\nimport { HmiService } from '../_services/hmi.service';\nimport { TesterService } from '../tester/tester.service';\nimport { GaugeSettings, Variable } from '../_models/hmi';\n\n\n@Component({\n    selector: 'app-tester',\n    templateUrl: './tester.component.html',\n    styleUrls: ['./tester.component.css']\n})\nexport class TesterComponent implements OnInit {\n\n    show: boolean = false;\n    items: Variable[] = [];\n    output: string[] = [];\n    subscription: Subscription;\n    demoSwitch = true;\n\n    // items: Map<string, GaugeSettings> = new Map<string, GaugeSettings>();\n\n\n    constructor(private hmiService: HmiService, private gaugesManager: GaugesManager,\n        private testerService: TesterService) { }\n\n    ngOnInit() {\n        this.testerService.change.subscribe(isOpen => {\n            this.show = isOpen;\n        });\n\n        this.gaugesManager.onevent.subscribe(event => {\n            if (event.dbg) {\n                this.addOutput(event.dbg);\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        this.stopDemo();\n    }\n\n    setSignal(sig: any) {\n        this.hmiService.setSignalValue(sig);\n        this.addOutput(' > ' + sig.source + ' - ' + sig.name + ' = ' + sig.value);\n    }\n\n    setSignals(items: any) {\n        this.items = items;\n    }\n\n    setDemo(flag) {\n        if (flag) {\n            // this.gaugesManager.startDemo();\n        } else {\n            // this.gaugesManager.stopDemo();\n        }\n    }\n\n    addOutput(item: string) {\n        this.output.unshift(item);\n    }\n\n    close() {\n        this.testerService.toggle(false);\n    }\n\n    startDemo() {\n        this.stopDemo();\n        let sourcetimer = timer(2000, 1500);\n        this.subscription = sourcetimer.subscribe(t => {\n            this.demoValue();\n        });\n    }\n\n    stopDemo() {\n        try {\n            if (this.subscription) {\n                this.subscription.unsubscribe();\n            }\n        } catch (e) {\n\n        }\n    }\n\n    demoValue() {\n    }\n}\n","\nimport { Injectable, Output, EventEmitter } from '@angular/core';\n\n@Injectable()\nexport class TesterService {\n\n    @Output() change: EventEmitter<boolean> = new EventEmitter();\n\n    toggle(flag: boolean) {\n        this.change.emit(flag);\n    }\n}","module.exports = \"<div style=\\\"width: 600px;\\\">\\n    <h1 mat-dialog-title style=\\\"display:inline-block;cursor:move;\\\" mat-dialog-draggable>{{'dlg.textproperty-title' | translate}}</h1>\\n    <mat-icon (click)=\\\"onNoClick()\\\" style=\\\"float:right;margin-right:-10px;margin-top:-10px;cursor:pointer;color:gray;\\\">clear</mat-icon>\\n    <div mat-dialog-content *ngIf=\\\"data.editmode < 0\\\">\\n\\t\\t{{'msg.text-remove' | translate}} ({{data.text.name}}) '{{data.text.value}}' ?\\n\\t</div>\\n    <div mat-dialog-content *ngIf=\\\"data.editmode >= 0\\\">\\n        <div class=\\\"my-form-field\\\" style=\\\"display: inline-block;margin-bottom: 10px;\\\">\\n            <span>{{'dlg.textproperty-id' | translate}}</span>\\n            <input [(ngModel)]=\\\"data.text.name\\\" type=\\\"text\\\" (change)=\\\"checkValid()\\\">\\n        </div>\\n        <div class=\\\"my-form-field\\\" style=\\\"margin-bottom: 10px;padding-left: 20px;float: right;\\\">\\n            <span>{{'dlg.textproperty-group' | translate}}</span>\\n            <input [(ngModel)]=\\\"data.text.group\\\" type=\\\"text\\\" (change)=\\\"checkValid()\\\" style=\\\"width:325px\\\">\\n        </div>\\n        <div class=\\\"my-form-field\\\" style=\\\"display: block;margin-bottom: 10px;width: 100%;\\\">\\n            <span>{{'dlg.textproperty-value' | translate}}</span>\\n            <input [(ngModel)]=\\\"data.text.value\\\" type=\\\"text\\\" (change)=\\\"checkValid()\\\" style=\\\"width: 545px;\\\">\\n        </div>\\n        <div style=\\\"height: 20px\\\">\\n            <div class=\\\"message-error\\\" *ngIf=\\\"errorExist\\\">\\n                <span>{{'msg.textproperty-error-exist' | translate}}</span>\\n            </div>\\n            <div class=\\\"message-error\\\" *ngIf=\\\"errorMissingValue\\\">\\n                <span>{{'msg.textproperty-missing-value' | translate}}</span>\\n            </div>\\n        </div>\\n    </div>\\n    <div mat-dialog-actions class=\\\"dialog-action\\\">\\n        <button mat-raised-button (click)=\\\"onNoClick()\\\">{{'dlg.cancel' | translate}}</button>\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onOkClick()\\\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\\n    </div>\\n</div>\"","module.exports = \".header-panel {\\n    /* z-index: 9999 !important; */\\n    position: fixed;\\n    top: 0px;\\n    left: 0px;\\n    background-color: rgba(33,33,33,1);\\n    /* background-color: rgba(33,33,33,0.92); */\\n    color: rgba(255,255,255,1);\\n    height: 40px;\\n    width: 100%;\\n    text-align: center;\\n    line-height: 40px;\\n}\\n\\n.work-panel {\\n    position: absolute;\\n    top: 40px;\\n    left: 0px;\\n    right: 0px;\\n    bottom: 0px;\\n}\\n\\n.filter {\\n    display: inline-block;\\n    min-height: 60px;\\n    padding: 8px 24px 0;\\n}\\n\\n.filter .mat-form-field {\\n    font-size: 14px;\\n    width: 100%;\\n}\\n\\n.table {\\n    height: 705px;\\n}\\n\\n.mat-table {\\n    overflow: auto;\\n    min-width: 1560px;\\n    /* margin: 5px; */\\n    /* max-height: 500px; */\\n}\\n\\n.mat-header-cell.mat-sort-header-sorted {\\n    color: black;\\n}\\n\\n.mat-header-row {\\n    top: 0;\\n    position: sticky;\\n    z-index: 1;\\n    background-color: rgba(76,76,76,1);\\n    color: white;\\n}\\n\\n.mat-header-cell {\\n    color: white;\\n    font-size: 14px;\\n}\\n\\n.mat-column-select {\\n    overflow: visible;\\n    flex: 0 0 100px;\\n}\\n\\n.mat-column-id {\\n    flex: 0 0 300px;\\n}\\n\\n.mat-column-group {\\n    flex: 0 0 200px;\\n}\\n\\n.mat-column-value {\\n    flex: 0 0 800px;\\n}\\n\\n.mat-column-remove {\\n    flex: 0 0 60px;\\n}\\n\\n.selectidthClass{\\n    flex: 0 0 50px;\\n }\\n\\n.message-error {\\n    display: inline-block;\\n    /* background-color: red;; */\\n    color:red;\\n}\"","module.exports = \"<div class=\\\"header-panel\\\">\\n    {{'texts.list-title' | translate}}\\n</div>\\n<div class=\\\"work-panel\\\">\\n    <!-- <div class=\\\"filter\\\">\\n        <div class=\\\"my-form-field\\\" style=\\\"padding-right: 10px;\\\">\\n            <span>{{'texts.list-filter-group' | translate}}</span>\\n            <mat-select [(value)]=\\\"groupSelected\\\" style=\\\"width: 300px\\\" (selectionChange)=\\\"onGroupChange($event.source)\\\">\\n                <mat-option *ngFor=\\\"let group of groups\\\" [value]=\\\"group\\\">\\n                    {{ group }}\\n                </mat-option>\\n            </mat-select>\\n        </div>\\n        <div class=\\\"my-form-field\\\" style=\\\"padding-right: 10px;\\\">\\n            <span>{{'texts.list-filter' | translate}}</span>\\n            <input (keyup)=\\\"applyFilter($event.target.value)\\\" style=\\\"width: 450px\\\" type=\\\"text\\\">\\n        </div>\\n    </div> -->\\n    <mat-table #table [dataSource]=\\\"dataSource\\\" matSort>\\n        <!-- Checkbox Column -->\\n        <ng-container matColumnDef=\\\"select\\\">\\n            <mat-header-cell *matHeaderCellDef [ngClass]=\\\"'selectidthClass'\\\">\\n                <button mat-icon-button (click)=\\\"onAddText()\\\" class=\\\"remove\\\">\\n                    <mat-icon>add</mat-icon>\\n                </button>\\n            </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\" [ngClass]=\\\"'selectidthClass'\\\">\\n                <button mat-icon-button (click)=\\\"onEditText(element)\\\" class=\\\"remove\\\">\\n                    <mat-icon>edit</mat-icon>\\n                </button>\\n            </mat-cell>\\n        </ng-container>\\n\\n        <!-- ID Column -->\\n        <ng-container matColumnDef=\\\"id\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header> {{'texts.list-id' | translate}} </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Group Column -->\\n        <ng-container matColumnDef=\\\"group\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header> {{'texts.list-group' | translate}} </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.group}} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Device Column -->\\n        <ng-container matColumnDef=\\\"value\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header> {{'texts.list-value' | translate}} </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.value}} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Button remove Column -->\\n        <ng-container matColumnDef=\\\"remove\\\">\\n            <mat-header-cell *matHeaderCellDef> </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\">\\n                <button mat-icon-button (click)=\\\"$event.stopPropagation();onRemoveText(element)\\\" class=\\\"remove\\\">\\n                    <mat-icon>clear</mat-icon>\\n                </button>\\n            </mat-cell>\\n        </ng-container>\\n\\n        <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n        <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" class=\\\"my-mat-row\\\"></mat-row>\\n    </mat-table>\\n</div>\\n<button mat-fab color=\\\"primary\\\" (click)=\\\"onAddText()\\\"\\n    style=\\\"position: absolute; right: 20px; bottom: 30px; z-index: 9999;\\\">\\n    <mat-icon class=\\\"\\\">add</mat-icon>\\n</button>\"","import { Component, OnInit, AfterViewInit, OnDestroy, Inject, ViewChild } from '@angular/core';\nimport { MatDialog, MatDialogRef, MatTable, MatTableDataSource, MAT_DIALOG_DATA, MatSort, MatMenuTrigger } from '@angular/material';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { Subscription } from \"rxjs\";\n\nimport { ProjectService } from '../_services/project.service';\nimport { Text } from '../_models/text';\n\n@Component({\n    selector: 'app-text-list',\n    templateUrl: './text-list.component.html',\n    styleUrls: ['./text-list.component.css']\n})\nexport class TextListComponent implements OnInit, AfterViewInit, OnDestroy {\n\n    displayedColumns = ['select', 'id', 'group', 'value', 'remove'];\n    dataSource = new MatTableDataSource([]);\n    selection = new SelectionModel<Element>(true, []);\n\n    private subscriptionLoad: Subscription;\n\n    @ViewChild(MatTable) table: MatTable<any>;\n    @ViewChild(MatSort) sort: MatSort;\n\n    constructor(public dialog: MatDialog,\n                private projectService: ProjectService) { }\n\n    ngOnInit() {\n        this.loadTexts();\n        this.subscriptionLoad = this.projectService.onLoadHmi.subscribe(res => {\n            this.loadTexts();\n\t\t});\n    }\n\n    ngAfterViewInit() {\n\t\tthis.dataSource.sort = this.sort;\n    }\n    \n    ngOnDestroy() {\n\t\ttry {\n\t\t\tif (this.subscriptionLoad) {\n\t\t\t\tthis.subscriptionLoad.unsubscribe();\n\t\t\t}\n\t\t} catch (e) {\n\t\t}\n    }\n    \n    onAddText() {\n\t\tlet text = new Text();\n\t\tthis.editText(text, 1);\n    }\n\n    onEditText(text: Text) {\n\t\tthis.editText(text, 0);\n    }\n\n    onRemoveText(text: Text) {\n\t\tthis.editText(text, -1);\n\t}\n    \n    editText(text: Text, toAdd: number) {\n\t\tlet mtext: Text = JSON.parse(JSON.stringify(text));\n        let dialogRef = this.dialog.open(DialogItemText, {\n            position: { top: '60px' },\n            data: { text: mtext, editmode: toAdd, texts: this.dataSource.data }\n        });\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                if (toAdd < 0) {\n\t\t\t\t\tthis.projectService.removeText(result);\n\t\t\t\t} else {\n                    this.projectService.setText(result, text);\n                }\n                this.loadTexts();\n            }\n        });\n    }\n\n    private loadTexts() {\n        this.dataSource.data = this.projectService.getTexts(); \n\t}\n}\n\n@Component({\n    selector: 'dialog-item-text',\n    templateUrl: './item-text.dialog.html',\n    styleUrls: ['./text-list.component.css']\n})\nexport class DialogItemText {\n\n    existtexts = [];\n    errorExist = false;\n    errorMissingValue = false;\n\n    constructor(\n        public dialogRef: MatDialogRef<DialogItemText>,\n        @Inject(MAT_DIALOG_DATA) public data: any) { \n            if (data.editmode > 0) {\n                data.text.name = this.getNextTextId();\n            }\n            if (data.texts) {\n                this.existtexts = data.texts.filter(t => t.name !== data.text.name);\n            }\n        }\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n\n    onOkClick(): void {\n        if (this.data.editmode < 0 || this.checkValid())\n            this.dialogRef.close(this.data.text);\n    }\n\n    checkValid() {\n        this.errorMissingValue = (!this.data.text.name || !this.data.text.value);\n        this.errorExist = (this.existtexts.find((tx) => tx.name === this.data.text.name)) ? true : false;\n        return !(this.errorMissingValue || this.errorExist);\n    }\n\n    private getNextTextId() {\n        let prefix = 'text_';\n        let num = 1;\n        if (this.data.texts) {\n            while (this.data.texts.find((tx) => tx.name === prefix + num)) {\n                num++;\n            }\n        }\n        return prefix + num;\n    }\n}\n","module.exports = \"<div>\\n    <h1 mat-dialog-title style=\\\"display:inline-block;cursor:move;\\\" mat-dialog-draggable>{{'dlg.userproperty-title' | translate}}</h1>\\n    <mat-icon (click)=\\\"onNoClick()\\\" style=\\\"float:right;margin-right:-10px;margin-top:-10px;cursor:pointer;color:gray;\\\">clear</mat-icon>\\n    <div mat-dialog-content *ngIf=\\\"!data.current\\\">\\n\\t\\t{{'msg.user-remove' | translate}} '{{data.user.username}}' ?\\n\\t</div>\\n    <div mat-dialog-content *ngIf=\\\"data.current\\\">\\n        <div class=\\\"my-form-field\\\" style=\\\"display: block;margin-bottom: 10px;\\\">\\n            <span>{{'general.username' | translate}}</span>\\n            <input [(ngModel)]=\\\"data.user.username\\\" type=\\\"text\\\" style=\\\"width: 125px\\\" [disabled]=\\\"isNewUser()\\\">\\n        </div>\\n        <div class=\\\"my-form-field\\\" style=\\\"display: block;margin-bottom: 10px;\\\">\\n            <span>{{'general.fullname' | translate}}</span>\\n            <input [(ngModel)]=\\\"data.user.fullname\\\" type=\\\"text\\\" style=\\\"width: 250px\\\">\\n        </div>\\n        <div class=\\\"my-form-field\\\" style=\\\"display: block;margin-bottom: 10px;\\\">\\n            <span>{{'general.password' | translate}}</span>\\n            <input autocomplete=\\\"off\\\" [(ngModel)]=\\\"data.user.password\\\" [type]=\\\"showPassword ? 'text' : 'password'\\\" placeholder=\\\"•••••••\\\" style=\\\"width: 250px\\\">\\n            <mat-icon matSuffix (click)=\\\"showPassword = !showPassword\\\" class=\\\"show-password\\\">{{showPassword ? 'visibility' : 'visibility_off'}}</mat-icon>\\n        </div>\\n        <div class=\\\"my-form-field\\\" style=\\\"display: block;margin-bottom: 10px;\\\">\\n            <span>{{'dlg.userproperty-groups' | translate}}</span>\\n            <sel-options #seloptions [selected]=\\\"selectedGroups\\\" [disabled]=\\\"isAdmin()\\\" [options]=\\\"groups\\\"></sel-options>\\n        </div>\\n    </div>\\n    <div mat-dialog-actions class=\\\"dialog-action\\\">\\n        <button mat-raised-button (click)=\\\"onNoClick()\\\">{{'dlg.cancel' | translate}}</button>\\n        <button mat-raised-button [disabled]=\\\"!isValid(data.user.username)\\\" color=\\\"primary\\\" (click)=\\\"onOkClick()\\\" cdkFocusInitial>{{'dlg.ok' | translate}}</button>\\n    </div>\\n</div>\"","module.exports = \".header-panel {\\n    /* z-index: 9999 !important; */\\n    background-color: var(--headerBackground);\\n    color: var(--headerColor);\\n    position: fixed;\\n    top: 0px;\\n    left: 0px;\\n    height: 36px;\\n    width: 100%;\\n    text-align: center;\\n    line-height: 36px;\\n    border-bottom: 1px solid var(--headerBorder);\\n}\\n\\n.work-panel {\\n    position: absolute;\\n    top: 37px;\\n    left: 0px;\\n    right: 0px;\\n    bottom: 0px;\\n    background-color: var(--workPanelBackground);\\n}\\n\\n.container {\\n    display: flex;\\n    flex-direction: column;\\n    min-width: 300px;\\n    position: absolute;\\n    bottom: 0px;\\n    top: 0px;\\n    left:0px;\\n    right:0px;\\n}\\n\\n.mat-table {\\n    overflow: auto;\\n    /* min-width: 1560px; */\\n}\\n\\n.mat-row {\\n    min-height: 40px;\\n    height: 43px;\\n}\\n\\n.mat-cell {\\n    font-size: 13px;\\n}\\n\\n.mat-header-row {\\n    top: 0;\\n    position: sticky;\\n    z-index: 1;\\n}\\n\\n.mat-header-cell {\\n    font-size: 15px;\\n}\\n\\n.mat-column-select {\\n    overflow: visible;\\n    flex: 0 0 100px;\\n}\\n\\n.mat-column-username {\\n    flex: 0 0 200px;\\n}\\n\\n.mat-column-fullname {\\n    flex: 0 0 250px;\\n}\\n\\n.mat-column-groups {\\n    flex: 0 0 750px;\\n}\\n\\n.mat-column-remove {\\n    flex: 0 0 60px;\\n}\\n\\n.selectidthClass{\\n    flex: 0 0 50px;\\n }\\n\\n.show-password {\\n    bottom: 2px;\\n    right: 8px;\\n    position: absolute;\\n}\\n\\n.my-header-filter /deep/ .mat-sort-header-button {\\n    display: block;\\n    text-align: left;\\n    margin-top: 5px;\\n}\\n\\n.my-header-filter /deep/ .mat-sort-header-arrow {\\n    top: -12px;\\n    right: 20px;\\n}\\n\\n.my-header-filter-input {\\n    display: block; \\n    margin-top: 4px;\\n    margin-bottom: 6px;\\n    padding: 3px 1px 3px 2px;\\n    border-radius: 2px;\\n}\"","module.exports = \"<div class=\\\"header-panel\\\">\\n\\t{{'users.list-title' | translate}}\\n</div>\\n<div class=\\\"work-panel\\\">\\n\\t<div class=\\\"container\\\">\\n\\t\\t<mat-table #table [dataSource]=\\\"dataSource\\\" matSort>\\n\\t\\t\\t<!-- Edit Column -->\\n\\t\\t\\t<ng-container matColumnDef=\\\"select\\\">\\n\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef [ngClass]=\\\"'selectidthClass'\\\">\\n\\t\\t\\t\\t\\t<button mat-icon-button (click)=\\\"onAddUser()\\\" class=\\\"remove\\\">\\n\\t\\t\\t\\t\\t\\t<mat-icon>add</mat-icon>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</mat-header-cell>\\n\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let element\\\" [ngClass]=\\\"'selectidthClass'\\\">\\n\\t\\t\\t\\t\\t<button mat-icon-button (click)=\\\"onEditUser(element)\\\" class=\\\"remove\\\">\\n\\t\\t\\t\\t\\t\\t<mat-icon>edit</mat-icon>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</mat-cell>\\n\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t<!-- Username Column -->\\n\\t\\t\\t<ng-container matColumnDef=\\\"username\\\">\\n\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef mat-sort-header> {{'users.list-name' | translate}} </mat-header-cell>\\n\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let element\\\"> {{element.username}} </mat-cell>\\n\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t<!-- Fullname Column -->\\n\\t\\t\\t<ng-container matColumnDef=\\\"fullname\\\">\\n\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef mat-sort-header> {{'users.list-fullname' | translate}} </mat-header-cell>\\n\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let element\\\"> {{element.fullname}} </mat-cell>\\n\\t\\t\\t</ng-container>\\n\\t\\t\\t\\n\\t\\t\\t<!-- Access Column -->\\n\\t\\t\\t<ng-container matColumnDef=\\\"groups\\\">\\n\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef mat-sort-header> {{'users.list-groups' | translate}} </mat-header-cell>\\n\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let element\\\"> {{groupValueToLabel(element.groups)}} </mat-cell>\\n\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t<!-- Button remove Column -->\\n\\t\\t\\t<ng-container matColumnDef=\\\"remove\\\">\\n\\t\\t\\t\\t<mat-header-cell *matHeaderCellDef> </mat-header-cell>\\n\\t\\t\\t\\t<mat-cell *matCellDef=\\\"let element\\\">\\n\\t\\t\\t\\t\\t<button mat-icon-button (click)=\\\"$event.stopPropagation();onRemoveUser(element)\\\" class=\\\"remove\\\" *ngIf=\\\"!isAdmin(element)\\\">\\n\\t\\t\\t\\t\\t\\t<mat-icon>clear</mat-icon>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</mat-cell>\\n\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t<mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n\\t\\t\\t<mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" class=\\\"my-mat-row\\\"></mat-row>\\n\\t\\t</mat-table>\\n\\t</div>\\n</div>\\n\\n<button mat-fab color=\\\"primary\\\" (click)=\\\"onAddUser()\\\" class=\\\"fab-add\\\">\\n\\t<mat-icon class=\\\"\\\">add</mat-icon>\\n</button>\"","import { Component, Inject, OnInit, AfterViewInit, ViewChild, Input, Output, EventEmitter } from '@angular/core';\nimport { MatTable, MatTableDataSource, MatSort, MatMenuTrigger } from '@angular/material';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\nimport { SelOptionsComponent } from '../gui-helpers/sel-options/sel-options.component';\n\nimport { UserService } from '../_services/user.service';\nimport { User, UserGroups } from '../_models/user';\n\n@Component({\n\tselector: 'app-users',\n\ttemplateUrl: './users.component.html',\n\tstyleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit, AfterViewInit {\n\n\tdisplayedColumns = ['select', 'username', 'fullname', 'groups', 'remove'];\n\tdataSource = new MatTableDataSource([]);\n\n\tusers: User[];\n\n\t@ViewChild(MatTable) table: MatTable<any>;\n\t@ViewChild(MatSort) sort: MatSort;\n\n\tconstructor(private dialog: MatDialog,\n\t\tprivate userService: UserService) { }\n\n\tngOnInit() {\n\t\tthis.loadUsers();\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.dataSource.sort = this.sort;\n\t}\n\n\tonAddUser() {\n\t\tlet user = new User();\n\t\tthis.editUser(user, user);\n\t}\n\n\tonEditUser(user: User) {\n\t\tthis.editUser(user, user);\n\t}\n\n\tonRemoveUser(user: User) {\n\t\tthis.editUser(user, null);\n\t}\n\n\tisAdmin(user: User): boolean {\n\t\tif (user && user.username === 'admin') {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgroupValueToLabel(grp: number): string {\n\t\treturn UserGroups.GroupToLabel(grp);\n\t}\n\n\tprivate loadUsers() {\n\t\tthis.users = [];\n\t\tthis.userService.getUsers(null).subscribe(result => {\n\t\t\tObject.values<User>(result).forEach(u => {\n\t\t\t\tthis.users.push(u);\n\t\t\t});\n\t\t\tthis.bindToTable(this.users);\n\t\t}, err => {\n\t\t\tconsole.error('get Users err: ' + err);\n\t\t});\n\t}\n\n\tprivate editUser(user: User, current: User) {\n\t\tlet muser: User = JSON.parse(JSON.stringify(user));\n\t\tmuser.password = '';\n\t\tlet dialogRef = this.dialog.open(DialogUser, {\n\t\t\tposition: { top: '60px' },\n\t\t\tdata: { user: muser, current: current, users: this.users.map((u: User) => { return u.username }) }\n\t\t});\n\t\tdialogRef.afterClosed().subscribe(result => {\n\t\t\tif (result) {\n\t\t\t\tif (!current) {\n\t\t\t\t\tthis.userService.removeUser(result).subscribe(result => {\n\t\t\t\t\t\tthis.users = this.users.filter(function (el) { return el.username !== muser.username; });\n\t\t\t\t\t\tthis.bindToTable(this.users);\n\t\t\t\t\t}, err => {\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.userService.setUser(result).subscribe(result => {\n\t\t\t\t\t\tthis.loadUsers();\n\t\t\t\t\t}, err => {\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}, err => {\n\t\t});\n\t}\n\n\tprivate bindToTable(users) {\n\t\tthis.dataSource.data = users;\n\t}\n}\n\n@Component({\n\tselector: 'dialog-user',\n\ttemplateUrl: './user.dialog.html',\n})\nexport class DialogUser {\n\tselectedGroups = [];\n\tgroups = UserGroups.Groups;\n\n\t@ViewChild(SelOptionsComponent) seloptions: SelOptionsComponent;\n\n\tconstructor(public dialogRef: MatDialogRef<DialogUser>,\n\t\t@Inject(MAT_DIALOG_DATA) public data: any) {\n\t\tthis.selectedGroups = UserGroups.ValueToGroups(this.data.user.groups);\n\t}\n\n\tonNoClick(): void {\n\t\tthis.dialogRef.close();\n\t}\n\n\tonOkClick(): void {\n\t\tif (this.seloptions) {\n\t\t\tthis.data.user.groups = UserGroups.GroupsToValue(this.seloptions.selected);\n\t\t}\n\t\tthis.dialogRef.close(this.data.user);\n\t}\n\n\tisValid(name): boolean {\n\t\tif (!this.data.current) {\t// to remove\n\t\t\treturn true;\n\t\t} else if (name) {\n\t\t\tlet editname = (this.data.user) ? this.data.user.username : null;\n\t\t\treturn (this.data.users.find((n) => n === name && n !== editname)) ? false : true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tisNewUser() {\n\t\treturn (this.data.current && this.data.current.username) ? true : false;\n\t}\n\n\tisAdmin(): boolean {\n\t\tif (this.data.user && this.data.user.username === 'admin') {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n}","module.exports = \".view-body {\\n    display: table;\\n    margin: 0 auto;\\n}\\n\\n.view-container {\\n    position: absolute;\\n\\tleft: 0px;\\n\\ttop: 0px;\\n\\tbottom: 0px;\\n\\tright: 0px;\\n\\toverflow: auto;\\n}\"","module.exports = \"<div id=\\\"container\\\"  class=\\\"view-container\\\" #container>\\n    <app-fuxa-view #fuxaview class=\\\"view-body\\\" id=\\\"view\\\" [view]=\\\"startView\\\" [hmi]=\\\"hmi\\\" [gaugesManager]=\\\"gaugesManager\\\"></app-fuxa-view>\\n</div>\\n\"","import { Component, OnInit, AfterViewInit, OnDestroy, ViewChild, ChangeDetectorRef, ElementRef } from '@angular/core';\nimport { Subscription } from \"rxjs\";\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ProjectService } from '../_services/project.service';\nimport { Hmi, View, ZoomModeType } from '../_models/hmi';\nimport { GaugesManager } from '../gauges/gauges.component';\nimport { FuxaViewComponent } from '../fuxa-view/fuxa-view.component';\n\nimport panzoom from 'panzoom';\n\n@Component({\n  selector: 'app-view',\n  templateUrl: './view.component.html',\n  styleUrls: ['./view.component.css']\n})\nexport class ViewComponent implements OnInit, AfterViewInit, OnDestroy {\n\n    @ViewChild('fuxaview') fuxaview: FuxaViewComponent;\n\t@ViewChild('container') container: ElementRef;\n\n    startView: View = new View();\n    hmi: Hmi = new Hmi();\n\n    private viewName: string;\n\n    private subscriptionLoad: Subscription;\n\n    constructor(private projectService: ProjectService,\n        private route: ActivatedRoute,\n        private changeDetector: ChangeDetectorRef,\n        public gaugesManager: GaugesManager) { }\n\n    ngOnInit() {\n        this.viewName = this.route.snapshot.queryParamMap.get('name');\n    }\n\n    ngAfterViewInit() {\n        try {\n            let hmi = this.projectService.getHmi();\n            if (hmi) {\n                this.loadHmi();\n            }\n            this.subscriptionLoad = this.projectService.onLoadHmi.subscribe(load => {\n                this.loadHmi();\n            }, error => {\n                console.error('Error loadHMI');\n            });\n            this.changeDetector.detectChanges();\n        }\n        catch (err) {\n            console.error(err);\n        }\n    }\n\n    ngOnDestroy() {\n        try {\n            if (this.subscriptionLoad) {\n                this.subscriptionLoad.unsubscribe();\n            }\n        } catch (e) {\n        }\n    }\n\n    private loadHmi() {\n        let hmi = this.projectService.getHmi();\n        if (hmi) {\n            this.hmi = hmi;\n        }\n        if (this.hmi && this.hmi.views && this.hmi.views.length > 0) {\n            this.startView = this.hmi.views.find(x => x.name === this.viewName);\n            this.setBackground();\n            if (this.startView && this.fuxaview) {\n                this.fuxaview.loadHmi(this.startView);\n            }\n            if (this.hmi.layout && this.hmi.layout.zoom && ZoomModeType[this.hmi.layout.zoom] === ZoomModeType.enabled) {\n                setTimeout(() => {\n                    let element: HTMLElement = document.querySelector('#view');\n                    if (element && panzoom) {\n                        panzoom(element, {\n                            bounds: true,\n                            boundsPadding: 0.05,\n                        });\t\t\n                        this.container.nativeElement.style.overflow = 'hidden';\n                    }\n                }, 1000);\n            }\n        }\n    }\n\n    private setBackground() {\n\t\tif (this.startView && this.startView.profile) {\n\t\t\tdocument.getElementById(\"main-container\").style.backgroundColor = this.startView.profile.bkcolor;\n\t\t}\n\t}\n}\n","declare function require(moduleName: string): any;\nexport const environment = {\n  version: require('../../package.json').version,\n  production: false,\n  apiEndpoint: null,\n  apiPort: 8080,\n  serverEnabled: true,\n  type: null\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */"],"sourceRoot":""}