{"remainingRequest":"/home/ubuntu/fuxa/client/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/ubuntu/fuxa/client/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--17-0!/home/ubuntu/fuxa/client/node_modules/@ngtools/webpack/src/index.js!/home/ubuntu/fuxa/client/src/app/gui-helpers/ngx-gauge/ngx-gauge.component.ngfactory.js","dependencies":[{"path":"/home/ubuntu/fuxa/client/src/app/gui-helpers/ngx-gauge/ngx-gauge.component.ngfactory.js","mtime":1633361180913},{"path":"/home/ubuntu/fuxa/client/src/app/gui-helpers/ngx-gauge/ngx-gauge.component.ts","mtime":1633361159267},{"path":"/home/ubuntu/fuxa/client/node_modules/@angular/core/core.d.ts","mtime":1633361158050},{"path":"/home/ubuntu/fuxa/client/src/app/gui-helpers/ngx-gauge/gaugeOptions.ts","mtime":1633361161500},{"path":"/home/ubuntu/fuxa/client/src/app/gui-helpers/ngx-gauge/ngx-gauge.component.html","mtime":1633360687829},{"path":"/home/ubuntu/fuxa/client/src/app/gui-helpers/ngx-gauge/ngx-gauge.component.css","mtime":1633360687829},{"path":"/home/ubuntu/fuxa/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ubuntu/fuxa/client/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1528256844000},{"path":"/home/ubuntu/fuxa/client/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1528256844000},{"path":"/home/ubuntu/fuxa/client/node_modules/@ngtools/webpack/src/index.js","mtime":1528256845000}],"contextDependencies":[],"result":["/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */\n/** PURE_IMPORTS_START _ngx_gauge.component.css.shim.ngstyle,_angular_core,_ngx_gauge.component PURE_IMPORTS_END */\n/** PURE_IMPORTS_START _ngx_gauge.component.css.shim.ngstyle,_angular_core,_ngx_gauge.component PURE_IMPORTS_END */\nimport * as i0 from \"./ngx-gauge.component.css.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"./ngx-gauge.component\";\nvar styles_NgxGaugeComponent = [i0.styles];\nvar RenderType_NgxGaugeComponent = /*@__PURE__*/ /*@__PURE__*/ i1.ɵcrt({ encapsulation: 0, styles: styles_NgxGaugeComponent, data: {} });\nexport { RenderType_NgxGaugeComponent as RenderType_NgxGaugeComponent };\nexport function View_NgxGaugeComponent_0(_l) {\n    return i1.ɵvid(0, [i1.ɵqud(402653184, 1, { panel: 0 }), i1.ɵqud(402653184, 2, { canvas: 0 }), i1.ɵqud(402653184, 3, { gaugetext: 0 }), (_l()(), i1.ɵeld(3, 0, [[1, 0], [\"panel\", 1]], null, 2, \"div\", [[\"class\", \"mygauge-container\"]], null, [[\"window\", \"resize\"]], function (_v, en, $event) {\n            var ad = true;\n            var _co = _v.component;\n            if ((\"window:resize\" === en)) {\n                var pd_0 = (_co.onResize($event) !== false);\n                ad = (pd_0 && ad);\n            }\n            return ad;\n        }, null, null)), (_l()(), i1.ɵeld(4, 0, [[3, 0], [\"gaugetext\", 1]], null, 0, \"div\", [[\"class\", \"mygauge-value\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(5, 0, [[2, 0], [\"gauge\", 1]], null, 0, \"canvas\", [[\"class\", \"mygauge-canvas\"], [\"height\", \"50\"], [\"id\", \"myGauge\"], [\"width\", \"180\"]], null, null, null, null, null))], null, null);\n}\nexport function View_NgxGaugeComponent_Host_0(_l) {\n    return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"ngx-gauge\", [], null, [[\"window\", \"resize\"]], function (_v, en, $event) {\n            var ad = true;\n            if ((\"window:resize\" === en)) {\n                var pd_0 = (i1.ɵnov(_v, 1).onResize($event) !== false);\n                ad = (pd_0 && ad);\n            }\n            return ad;\n        }, View_NgxGaugeComponent_0, RenderType_NgxGaugeComponent)), i1.ɵdid(1, 4833280, null, 0, i2.NgxGaugeComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null);\n}\nvar NgxGaugeComponentNgFactory = /*@__PURE__*/ /*@__PURE__*/ i1.ɵccf(\"ngx-gauge\", i2.NgxGaugeComponent, View_NgxGaugeComponent_Host_0, { id: \"id\", options: \"options\", value: \"value\" }, {}, []);\nexport { NgxGaugeComponentNgFactory as NgxGaugeComponentNgFactory };\n",null]}